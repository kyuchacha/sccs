/*
 * App URI: app/exam/dev/tabGrid
 * Source Location: app/exam/dev/tabGrid.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/exam/dev/tabGrid", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * tabGrid.js
			 * Created at 2021. 7. 21. 오후 5:38:13.
			 *
			 * @author kim su hyun
			 ************************************************/
			
			var util = createCommonUtil();
			
			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				util.Submit.send(app, "subOnload", function(pbSuccess){
					if(pbSuccess){
						
					}
				});
			}
			
			/*
			 * 사용자 정의 컨트롤에서 search 이벤트 발생 시 호출.
			 * 조회버튼 클릭시 이벤트
			 */
			function onCombtnsearch1Search(/* cpr.events.CUIEvent */ e){
				
				// 데이터 변경사항 체크
				if (util.Grid.isModified(app, "grdCmnTmpReg", "CRM")) {
					return false;
				}
				
				// 조회조건 유효성 체크
				if(!util.validate(app, "grpSearch")) return false;
				
				doList();
				
				
			}
			/**
			 * 메시지 목록데이터를 조회한다.
			 * @param psStatus - 조회 상태(저장 후 조회인 경우에는 'save' 구분값 넘김)
			 */
			function doList(psStatus){
			
				//조회 서브미션 호출
				util.Submit.send(app, "subList", function(pbSuccess){
					if(pbSuccess) {
						if(psStatus == "save"){
							//갱신된 데이터가 조회되었습니다.
							util.Msg.notify(app, "INF-M005");
						}else{
							//조회되었습니다.
							util.Msg.notify(app, "INF-M001");
						}
					}
				});
			}
			
			/*
			 * 사용자 정의 컨트롤에서 save 이벤트 발생 시 호출.
			 * 저장 클릭 이벤트
			 */
			function onCombutton2Save(/* cpr.event.CUIEvent */ e){
				
				if (!util.Grid.isModified(app, "grdCmnTmpReg", "MSG")) return false;
				
				if (!util.validate(app, "grdCmnTmpReg")) return false;
				
				util.Submit.send(app, "subSave", function(pbSuccess){
					if(pbSuccess){
						doList("save");
					}
				});
			}
			
			/*
			 * 탭 폴더에서 before-selection-change 이벤트 발생 시 호출.
			 * Tab Item을 선택하기 전 발생하는 이벤트. 다음 이벤트로 select 이벤트를 발생합니다.
			 */
			function onTabMainBeforeSelectionChange(/* cpr.events.CSelectionEvent */ e){
				/** 
				 * @type cpr.controls.TabFolder
				 */
				var tabMain = e.control;
				
				if (util.isAppModified(app, "CRM", app.getContainer())){
					return false;
				}
			}
			
			/*
			 * 그리드에서 selection-change 이벤트 발생 시 호출.
			 * detail의 cell 클릭하여 설정된 selectionunit에 해당되는 단위가 선택될 때 발생하는 이벤트.
			 */
			function onGrdCmnTmpRegSelectionChange(/* cpr.events.CSelectionEvent */ e){
				/** 
				 * @type cpr.controls.Grid
				 */
				var grdCmnTmpReg = e.control;
				
				if(util.Grid.getRowState(app, "grdCmnTmpReg") == cpr.data.tabledata.RowState.INSERTED){
					util.Grid.reset(app, "grdDetail");
				}
				
				doListDtl();	
			}
			
			/**
			 * @param psStatus - 조회 상태(저장 후 조회인 경우에는 'save' 구분값 넘김)
			 */
			function doListDtl(psStatus){
			     var vnStudNo = util.Grid.getCellValue(app, "grdCmnTmpReg", "STUD_NO");
			     util.DataMap.setValue(app, "dmParam", "strMstStudNo", vnStudNo);
			     
				//조회 서브미션 호출
				util.Submit.send(app, "subListDtl", function(pbSuccess){
					if(pbSuccess) {
						if(psStatus == "save"){
							//갱신된 데이터가 조회되었습니다.
							util.Msg.notify(app, "INF-M005");
						}else{
							//조회되었습니다.
							util.Msg.notify(app, "INF-M001");
						}
						
					}
				});
			}
			
			
			
			/*
			 * 사용자 정의 컨트롤에서 save 이벤트 발생 시 호출.
			 * 저장 클릭 이벤트
			 */
			function onCombutton2Save2(/* cpr.events.CUIEvent */ e){
				/** 
				 * @type udc.com.comButton
				 */
				var combutton2 = e.control;
				// 1. 데이터 변경사항 체크
				if (!util.Grid.isModified(app, "grdDetail", "MSG")) return false;
				
				// 2. 유효성 체크
				if (!util.validate(app, "grdDetail")) return false;
				
				// 3. 데이터 저장
				util.Submit.send(app, "subSaveDtl", function(pbSuccess){
					if(pbSuccess){
						doListDtl("save");
					}
				});
			}
			
			
			/*
			 * 그리드에서 update 이벤트 발생 시 호출.
			 * Grid의 행 데이터가 수정되었을 때 이벤트.
			 */
			function onGrdCmnTmpRegUpdate(/* cpr.events.CGridValueChangeEvent */ e){
				/** 
				 * @type cpr.controls.Grid
				 */
				var grdCmnTmpReg = e.control;
				
				util.Control.redraw(app, "grpCmnTmpReg");
			}
			
			
			/*
			 * 그리드에서 before-selection-change 이벤트 발생 시 호출.
			 * detail의 cell 클릭하여 설정된 selectionunit에 해당되는 단위가 선택되기 전에 발생하는 이벤트.
			 */
			function onGrdCmnTmpRegBeforeSelectionChange(/* cpr.events.CSelectionEvent */ e){
				/** 
				 * @type cpr.controls.Grid
				 */
				var grdCmnTmpReg = e.control;
				
				//  데이터 변경사항 체크
				if (util.Grid.isModified(app, "grdDetail", "CRM")) return false;
			}
			
			
			/*
			 * 탭 폴더에서 selection-change 이벤트 발생 시 호출.
			 * Tab Item을 선택한 후에 발생하는 이벤트.
			 */
			function onTabMainSelectionChange(/* cpr.events.CSelectionEvent */ e){
				/** 
				 * @type cpr.controls.TabFolder
				 */
				var tabMain = e.control;
				
				if (util.Grid.isModified(app, "grdDetail")) {
					util.Grid.revertAllData(app, "grdDetail");
				}
				
				if (util.Grid.isModified(app, "grdCmnTmpReg")) doList();
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsCmnTmpReg");
			dataSet_1.parseData({
				"info": "STUD_NO",
				"columns": [
					{
						"name": "PARTY_ID",
						"dataType": "string"
					},
					{
						"name": "STUD_NO",
						"dataType": "string"
					},
					{
						"name": "REP_NM",
						"dataType": "string"
					},
					{
						"name": "ENG_NM",
						"dataType": "string"
					},
					{
						"name": "CHA_NM",
						"dataType": "string"
					},
					{
						"name": "GENDER_RCD",
						"dataType": "string"
					},
					{
						"name": "SSN",
						"dataType": "string"
					},
					{
						"name": "STUD_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "DEPT_CD",
						"dataType": "string"
					},
					{
						"name": "DAY_NIGHT_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "NAT_RCD",
						"dataType": "string"
					},
					{
						"name": "ZIPCODE",
						"dataType": "string"
					},
					{
						"name": "ADDR1",
						"dataType": "string"
					},
					{
						"name": "ADDR2",
						"dataType": "string"
					},
					{
						"name": "CLP_NO",
						"dataType": "string"
					},
					{
						"name": "AEN",
						"dataType": "string"
					},
					{
						"name": "EMAIL",
						"dataType": "string"
					},
					{
						"name": "BANK_RCD",
						"dataType": "string"
					},
					{
						"name": "ACCT_NO",
						"dataType": "string"
					},
					{
						"name": "OWNER_NM",
						"dataType": "string"
					},
					{
						"name": "ATTC_FILE_NO",
						"dataType": "string"
					}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsGenderRcd");
			dataSet_2.parseData({
				"columns" : [
					{"name": "CD"},
					{"name": "CD_NM"}
				]
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsStudDivRcd");
			dataSet_3.parseData({
				"columns" : [
					{"name": "CD"},
					{"name": "CD_NM"}
				]
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsDayNightDivRcd");
			dataSet_4.parseData({
				"columns" : [
					{"name": "CD"},
					{"name": "CD_NM"}
				]
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsNatRcd");
			dataSet_5.parseData({
				"columns" : [
					{"name": "CD"},
					{"name": "CD_NM"}
				]
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsBankRcd");
			dataSet_6.parseData({
				"columns" : [
					{"name": "CD"},
					{"name": "CD_NM"}
				]
			});
			app.register(dataSet_6);
			
			var dataSet_7 = new cpr.data.DataSet("dsDetail");
			dataSet_7.parseData({
				"info": "SCH_YEAR,SMT_RCD,STUD_NO,REG_CLS_RCD",
				"columns": [
					{
						"name": "SCH_YEAR",
						"dataType": "string"
					},
					{
						"name": "SMT_RCD",
						"dataType": "string"
					},
					{
						"name": "STUD_NO",
						"dataType": "string"
					},
					{
						"name": "REG_CLS_RCD",
						"dataType": "string"
					},
					{
						"name": "IFR_DT",
						"dataType": "string"
					},
					{
						"name": "PAY_CLOSE_DT",
						"dataType": "string"
					},
					{
						"name": "DIV_PAY_REQ_DT",
						"dataType": "string"
					},
					{
						"name": "DIV_PAY_DESC",
						"dataType": "string"
					},
					{
						"name": "DIV_PAY_TYPE_CD",
						"dataType": "string"
					},
					{
						"name": "DIV_PAY_STAT_RCD",
						"dataType": "string"
					},
					{
						"name": "DIV_PAY_NO",
						"dataType": "string"
					},
					{
						"name": "BKG_PNT",
						"dataType": "decimal"
					},
					{
						"name": "BKG_TIME",
						"dataType": "decimal"
					},
					{
						"name": "REG_STUD_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "REMARK",
						"dataType": "string"
					},
					{
						"name": "REF_KEY",
						"dataType": "string"
					}
				]
			});
			app.register(dataSet_7);
			
			var dataSet_8 = new cpr.data.DataSet("dsSmtRcd");
			dataSet_8.parseData({
				"columns" : [
					{"name": "CD"},
					{"name": "CD_NM"}
				]
			});
			app.register(dataSet_8);
			
			var dataSet_9 = new cpr.data.DataSet("dsRegClsRcd");
			dataSet_9.parseData({
				"columns" : [
					{"name": "CD"},
					{"name": "CD_NM"}
				]
			});
			app.register(dataSet_9);
			
			var dataSet_10 = new cpr.data.DataSet("dsDivPayStatRcd");
			dataSet_10.parseData({
				"columns" : [
					{"name": "CD"},
					{"name": "CD_NM"}
				]
			});
			app.register(dataSet_10);
			
			var dataSet_11 = new cpr.data.DataSet("dsRegStudDivRcd");
			dataSet_11.parseData({
				"columns" : [
					{"name": "CD"},
					{"name": "CD_NM"}
				]
			});
			app.register(dataSet_11);
			var dataMap_1 = new cpr.data.DataMap("dmTime");
			dataMap_1.parseData({
				"columns" : [{"name": "strToday"}]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmParam");
			dataMap_2.parseData({
				"columns" : [
					{"name": "strStudNo"},
					{"name": "strMstStudNo"}
				]
			});
			app.register(dataMap_2);
			var submission_1 = new cpr.protocols.Submission("subOnload");
			submission_1.action = "/OneGrid/onLoad.do";
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataSet_4, false);
			submission_1.addResponseData(dataSet_5, false);
			submission_1.addResponseData(dataSet_6, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/OneGrid/list.do";
			submission_2.addRequestData(dataMap_2);
			submission_2.addResponseData(dataSet_1, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSave");
			submission_3.action = "/OneGrid/save.do";
			submission_3.addRequestData(dataSet_1);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subListDtl");
			submission_4.action = "/TwoGrid/listDtl.do";
			submission_4.addRequestData(dataMap_2);
			submission_4.addResponseData(dataSet_7, false);
			app.register(submission_4);
			
			var submission_5 = new cpr.protocols.Submission("subSaveDtl");
			submission_5.action = "/TwoGrid/saveDtl.do";
			submission_5.addRequestData(dataSet_7);
			app.register(submission_5);
			
			app.supportMedia("all and (min-width: 1320px)", "eXFrame");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1319px)", "default");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpHeader");
			group_1.style.setClasses(["header-box"]);
			// Layout
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_2.spacing = 0;
			group_1.setLayout(verticalLayout_2);
			(function(container){
				var userDefinedControl_1 = new udc.com.appHeader("appheader");
				userDefinedControl_1.searchBoxId = "grpSearch";
				container.addChild(userDefinedControl_1, {
					"width": "500px",
					"height": "30px"
				});
				var group_2 = new cpr.controls.Container("grpSearch");
				group_2.userAttr({
					"mobile-column-count": "2",
					"tablet-column-count": "2"
				});
				group_2.style.setClasses(["search-box"]);
				// Layout
				var formLayout_1 = new cpr.controls.layouts.FormLayout();
				formLayout_1.topMargin = "5px";
				formLayout_1.rightMargin = "5px";
				formLayout_1.bottomMargin = "5px";
				formLayout_1.leftMargin = "5px";
				formLayout_1.setColumns(["120px", "200px", "1fr", "60px"]);
				formLayout_1.setRows(["25px"]);
				formLayout_1.setRowAutoSizing(0, true);
				group_2.setLayout(formLayout_1);
				(function(container){
					var output_1 = new cpr.controls.Output();
					output_1.value = "학번";
					container.addChild(output_1, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var inputBox_1 = new cpr.controls.InputBox("ipb2");
					inputBox_1.tooltip = "학번";
					inputBox_1.userAttr({"autoKeydownSearch": "Y"});
					inputBox_1.bind("value").toDataMap(app.lookup("dmParam"), "strStudNo");
					container.addChild(inputBox_1, {
						"colIndex": 1,
						"rowIndex": 0
					});
					var group_3 = new cpr.controls.Container("grp1");
					// Layout
					var formLayout_2 = new cpr.controls.layouts.FormLayout();
					formLayout_2.setColumns(["3fr", "60px"]);
					formLayout_2.setRows(["25px"]);
					formLayout_2.setRowAutoSizing(0, true);
					group_3.setLayout(formLayout_2);
					(function(container){
						var userDefinedControl_2 = new udc.com.comBtnSearch("combtnsearch");
						if(typeof onCombtnsearch1Search == "function") {
							userDefinedControl_2.addEventListener("search", onCombtnsearch1Search);
						}
						container.addChild(userDefinedControl_2, {
							"colIndex": 1,
							"rowIndex": 0,
							"horizontalAlign": "right",
							"verticalAlign": "fill",
							"width": 60
						});
					})(group_3);
					container.addChild(group_3, {
						"colIndex": 2,
						"rowIndex": 0,
						"colSpan": 2,
						"rowSpan": 1
					});
				})(group_2);
				container.addChild(group_2, {
					"autoSize": "height",
					"width": "1320px",
					"height": "37px"
				});
			})(group_1);
			container.addChild(group_1, {
				"autoSize": "height",
				"width": "1320px",
				"height": "67px"
			});
			
			var group_4 = new cpr.controls.Container("grpData");
			group_4.userAttr({
				"mobile-column-count": "1",
				"tablet-column-count": "1"
			});
			// Layout
			var formLayout_3 = new cpr.controls.layouts.FormLayout();
			formLayout_3.userResizingMode = "standard";
			formLayout_3.setColumns(["500px", "1fr"]);
			formLayout_3.setRows(["1fr"]);
			group_4.setLayout(formLayout_3);
			(function(container){
				var group_5 = new cpr.controls.Container("grp3");
				// Layout
				var formLayout_4 = new cpr.controls.layouts.FormLayout();
				formLayout_4.horizontalSpacing = "5px";
				formLayout_4.verticalSpacing = "5px";
				formLayout_4.setColumns(["1fr"]);
				formLayout_4.setRows(["25px", "1fr"]);
				group_5.setLayout(formLayout_4);
				(function(container){
					var userDefinedControl_3 = linker.userDefinedControl_3 = new udc.com.comFormTitle("comformtitle1");
					container.addChild(userDefinedControl_3, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var tabFolder_1 = linker.tabFolder_1 = new cpr.controls.TabFolder("tabMain");
					tabFolder_1.fieldLabel = "학생 상세 탭";
					
					var tabItem_1 = (function(tabFolder){
						var tabItem_1 = new cpr.controls.TabItem();
						tabItem_1.text = "학생상세";
						tabItem_1.name = "tab1";
						var group_6 = new cpr.controls.Container("grpTpc1");
						// Layout
						var formLayout_5 = new cpr.controls.layouts.FormLayout();
						formLayout_5.topMargin = "5px";
						formLayout_5.rightMargin = "5px";
						formLayout_5.bottomMargin = "5px";
						formLayout_5.leftMargin = "5px";
						formLayout_5.setColumns(["1fr"]);
						formLayout_5.setRows(["25px", "1fr"]);
						group_6.setLayout(formLayout_5);
						(function(container){
							var group_7 = new cpr.controls.Container("grp7");
							// Layout
							var formLayout_6 = new cpr.controls.layouts.FormLayout();
							formLayout_6.verticalSpacing = "5px";
							formLayout_6.setColumns(["1fr", "260px"]);
							formLayout_6.setRows(["1fr"]);
							group_7.setLayout(formLayout_6);
							(function(container){
								var userDefinedControl_4 = linker.userDefinedControl_4 = new udc.com.comFormTitle("comformtitle2");
								container.addChild(userDefinedControl_4, {
									"colIndex": 0,
									"rowIndex": 0
								});
								var userDefinedControl_5 = linker.userDefinedControl_5 = new udc.com.comButton("combutton");
								userDefinedControl_5.focusColumnName = "STUD_NO";
								if(typeof onCombutton2Save == "function") {
									userDefinedControl_5.addEventListener("save", onCombutton2Save);
								}
								container.addChild(userDefinedControl_5, {
									"colIndex": 1,
									"rowIndex": 0
								});
							})(group_7);
							container.addChild(group_7, {
								"colIndex": 0,
								"rowIndex": 0
							});
							var group_8 = linker.group_8 = new cpr.controls.Container("grpCmnTmpReg");
							group_8.fieldLabel = "학생상세";
							group_8.style.setClasses(["form-box"]);
							// Layout
							var formLayout_7 = new cpr.controls.layouts.FormLayout();
							formLayout_7.topMargin = "5px";
							formLayout_7.rightMargin = "5px";
							formLayout_7.bottomMargin = "5px";
							formLayout_7.leftMargin = "5px";
							formLayout_7.setColumns(["100px", "1fr", "100px", "1fr"]);
							formLayout_7.setRows(["25px", "25px", "25px", "25px", "25px", "25px", "25px", "25px", "25px", "25px", "25px", "1fr"]);
							group_8.setLayout(formLayout_7);
							(function(container){
								var output_2 = new cpr.controls.Output();
								output_2.value = "학번";
								output_2.style.setClasses(["require"]);
								container.addChild(output_2, {
									"colIndex": 0,
									"rowIndex": 0
								});
								var output_3 = new cpr.controls.Output();
								output_3.value = "구성원ID";
								output_3.style.setClasses(["require"]);
								container.addChild(output_3, {
									"colIndex": 2,
									"rowIndex": 0
								});
								var output_4 = new cpr.controls.Output();
								output_4.value = "한자명";
								container.addChild(output_4, {
									"colIndex": 0,
									"rowIndex": 2
								});
								var output_5 = new cpr.controls.Output();
								output_5.value = "주민번호";
								container.addChild(output_5, {
									"colIndex": 0,
									"rowIndex": 3
								});
								var output_6 = new cpr.controls.Output();
								output_6.value = "학사부서";
								container.addChild(output_6, {
									"colIndex": 0,
									"rowIndex": 4
								});
								var inputBox_2 = new cpr.controls.InputBox("ipb3");
								inputBox_2.bind("value").toDataColumn("STUD_NO");
								container.addChild(inputBox_2, {
									"colIndex": 1,
									"rowIndex": 0
								});
								var inputBox_3 = new cpr.controls.InputBox("ipb4");
								inputBox_3.bind("value").toDataColumn("REP_NM");
								container.addChild(inputBox_3, {
									"colIndex": 1,
									"rowIndex": 1
								});
								var inputBox_4 = new cpr.controls.InputBox("ipb5");
								inputBox_4.bind("value").toDataColumn("CHA_NM");
								container.addChild(inputBox_4, {
									"colIndex": 1,
									"rowIndex": 2
								});
								var inputBox_5 = new cpr.controls.InputBox("ipb6");
								inputBox_5.bind("value").toDataColumn("SSN");
								container.addChild(inputBox_5, {
									"colIndex": 1,
									"rowIndex": 3
								});
								var inputBox_6 = new cpr.controls.InputBox("ipb7");
								inputBox_6.bind("value").toDataColumn("DEPT_CD");
								container.addChild(inputBox_6, {
									"colIndex": 1,
									"rowIndex": 4
								});
								var output_7 = new cpr.controls.Output();
								output_7.value = "영문명";
								container.addChild(output_7, {
									"colIndex": 2,
									"rowIndex": 1
								});
								var output_8 = new cpr.controls.Output();
								output_8.value = "성별";
								container.addChild(output_8, {
									"colIndex": 2,
									"rowIndex": 2
								});
								var output_9 = new cpr.controls.Output();
								output_9.value = "학생구분";
								container.addChild(output_9, {
									"colIndex": 2,
									"rowIndex": 3
								});
								var output_10 = new cpr.controls.Output();
								output_10.value = "주야구분";
								container.addChild(output_10, {
									"colIndex": 2,
									"rowIndex": 4
								});
								var output_11 = new cpr.controls.Output();
								output_11.value = "성명";
								output_11.style.setClasses(["require"]);
								container.addChild(output_11, {
									"colIndex": 0,
									"rowIndex": 1
								});
								var output_12 = new cpr.controls.Output();
								output_12.value = "국가";
								container.addChild(output_12, {
									"colIndex": 0,
									"rowIndex": 5
								});
								var output_13 = new cpr.controls.Output();
								output_13.value = "우편번호";
								container.addChild(output_13, {
									"colIndex": 2,
									"rowIndex": 5
								});
								var output_14 = new cpr.controls.Output();
								output_14.value = "주소1";
								container.addChild(output_14, {
									"colIndex": 0,
									"rowIndex": 6
								});
								var output_15 = new cpr.controls.Output();
								output_15.value = "주소2";
								container.addChild(output_15, {
									"colIndex": 2,
									"rowIndex": 6
								});
								var output_16 = new cpr.controls.Output();
								output_16.value = "휴대전화번호";
								container.addChild(output_16, {
									"colIndex": 0,
									"rowIndex": 7
								});
								var output_17 = new cpr.controls.Output();
								output_17.value = "내선번호";
								container.addChild(output_17, {
									"colIndex": 2,
									"rowIndex": 7
								});
								var output_18 = new cpr.controls.Output();
								output_18.value = "이메일";
								container.addChild(output_18, {
									"colIndex": 0,
									"rowIndex": 8
								});
								var output_19 = new cpr.controls.Output();
								output_19.value = "은행";
								container.addChild(output_19, {
									"colIndex": 2,
									"rowIndex": 8
								});
								var output_20 = new cpr.controls.Output();
								output_20.value = "계좌번호";
								container.addChild(output_20, {
									"colIndex": 0,
									"rowIndex": 9
								});
								var output_21 = new cpr.controls.Output();
								output_21.value = "소유자명";
								container.addChild(output_21, {
									"colIndex": 2,
									"rowIndex": 9
								});
								var output_22 = new cpr.controls.Output();
								output_22.value = "첨부파일";
								container.addChild(output_22, {
									"colIndex": 0,
									"rowIndex": 10
								});
								var inputBox_7 = new cpr.controls.InputBox("ipb9");
								inputBox_7.bind("value").toDataColumn("ADDR1");
								container.addChild(inputBox_7, {
									"colIndex": 1,
									"rowIndex": 6
								});
								var comboBox_1 = new cpr.controls.ComboBox("cmb1");
								comboBox_1.bind("value").toDataColumn("NAT_RCD");
								(function(comboBox_1){
									comboBox_1.setItemSet(app.lookup("dsNatRcd"), {
										"label": "CD_NM",
										"value": "CD"
									});
								})(comboBox_1);
								container.addChild(comboBox_1, {
									"colIndex": 1,
									"rowIndex": 5
								});
								var comboBox_2 = new cpr.controls.ComboBox("cmb2");
								comboBox_2.bind("value").toDataColumn("DAY_NIGHT_DIV_RCD");
								(function(comboBox_2){
									comboBox_2.setItemSet(app.lookup("dsDayNightDivRcd"), {
										"label": "CD_NM",
										"value": "CD"
									});
								})(comboBox_2);
								container.addChild(comboBox_2, {
									"colIndex": 3,
									"rowIndex": 4
								});
								var comboBox_3 = new cpr.controls.ComboBox("cmb3");
								comboBox_3.bind("value").toDataColumn("STUD_DIV_RCD");
								(function(comboBox_3){
									comboBox_3.setItemSet(app.lookup("dsStudDivRcd"), {
										"label": "CD_NM",
										"value": "CD"
									});
								})(comboBox_3);
								container.addChild(comboBox_3, {
									"colIndex": 3,
									"rowIndex": 3
								});
								var comboBox_4 = new cpr.controls.ComboBox("cmb4");
								comboBox_4.bind("value").toDataColumn("BANK_RCD");
								(function(comboBox_4){
									comboBox_4.setItemSet(app.lookup("dsBankRcd"), {
										"label": "CD_NM",
										"value": "CD"
									});
								})(comboBox_4);
								container.addChild(comboBox_4, {
									"colIndex": 3,
									"rowIndex": 8
								});
								var comboBox_5 = new cpr.controls.ComboBox("cmb5");
								comboBox_5.bind("value").toDataColumn("GENDER_RCD");
								(function(comboBox_5){
									comboBox_5.setItemSet(app.lookup("dsGenderRcd"), {
										"label": "CD_NM",
										"value": "CD"
									});
								})(comboBox_5);
								container.addChild(comboBox_5, {
									"colIndex": 3,
									"rowIndex": 2
								});
								var inputBox_8 = new cpr.controls.InputBox("ipb8");
								inputBox_8.bind("value").toDataColumn("PARTY_ID");
								container.addChild(inputBox_8, {
									"colIndex": 3,
									"rowIndex": 0
								});
								var inputBox_9 = new cpr.controls.InputBox("ipb10");
								inputBox_9.bind("value").toDataColumn("ENG_NM");
								container.addChild(inputBox_9, {
									"colIndex": 3,
									"rowIndex": 1
								});
								var inputBox_10 = new cpr.controls.InputBox("ipb11");
								inputBox_10.bind("value").toDataColumn("ZIPCODE");
								container.addChild(inputBox_10, {
									"colIndex": 3,
									"rowIndex": 5
								});
								var inputBox_11 = new cpr.controls.InputBox("ipb12");
								inputBox_11.bind("value").toDataColumn("ADDR2");
								container.addChild(inputBox_11, {
									"colIndex": 3,
									"rowIndex": 6
								});
								var inputBox_12 = new cpr.controls.InputBox("ipb13");
								inputBox_12.bind("value").toDataColumn("AEN");
								container.addChild(inputBox_12, {
									"colIndex": 3,
									"rowIndex": 7
								});
								var inputBox_13 = new cpr.controls.InputBox("ipb14");
								inputBox_13.bind("value").toDataColumn("CLP_NO");
								container.addChild(inputBox_13, {
									"colIndex": 1,
									"rowIndex": 7
								});
								var inputBox_14 = new cpr.controls.InputBox("ipb15");
								inputBox_14.bind("value").toDataColumn("EMAIL");
								container.addChild(inputBox_14, {
									"colIndex": 1,
									"rowIndex": 8
								});
								var inputBox_15 = new cpr.controls.InputBox("ipb16");
								inputBox_15.bind("value").toDataColumn("ACCT_NO");
								container.addChild(inputBox_15, {
									"colIndex": 1,
									"rowIndex": 9
								});
								var inputBox_16 = new cpr.controls.InputBox("ipb18");
								inputBox_16.bind("value").toDataColumn("OWNER_NM");
								container.addChild(inputBox_16, {
									"colIndex": 3,
									"rowIndex": 9
								});
								var userDefinedControl_6 = new udc.cmn.udcCmnPFileUpload("udccmnpfileupload1");
								userDefinedControl_6.bind("attcFileNo").toDataColumn("ATTC_FILE_NO");
								container.addChild(userDefinedControl_6, {
									"colIndex": 1,
									"rowIndex": 10
								});
								var output_23 = new cpr.controls.Output();
								output_23.value = "파일순번";
								container.addChild(output_23, {
									"colIndex": 2,
									"rowIndex": 10
								});
								var inputBox_17 = new cpr.controls.InputBox("ipb1");
								inputBox_17.bind("value").toDataColumn("ATTC_FILE_NO");
								container.addChild(inputBox_17, {
									"colIndex": 3,
									"rowIndex": 10
								});
							})(group_8);
							container.addChild(group_8, {
								"colIndex": 0,
								"rowIndex": 1
							});
						})(group_6);
						tabItem_1.content = group_6;
						return tabItem_1;
					})(tabFolder_1);
					tabFolder_1.addTabItem(tabItem_1);
					
					var tabItem_2 = (function(tabFolder){
						var tabItem_2 = new cpr.controls.TabItem();
						tabItem_2.text = "학생등록정보";
						tabItem_2.name = "tab2";
						var group_9 = new cpr.controls.Container("grpTpc2");
						// Layout
						var formLayout_8 = new cpr.controls.layouts.FormLayout();
						formLayout_8.topMargin = "5px";
						formLayout_8.rightMargin = "5px";
						formLayout_8.bottomMargin = "5px";
						formLayout_8.leftMargin = "5px";
						formLayout_8.setColumns(["1fr"]);
						formLayout_8.setRows(["25px", "1fr"]);
						formLayout_8.setRowAutoSizing(0, true);
						group_9.setLayout(formLayout_8);
						(function(container){
							var group_10 = new cpr.controls.Container("grp2");
							// Layout
							var formLayout_9 = new cpr.controls.layouts.FormLayout();
							formLayout_9.setColumns(["1fr", "260px"]);
							formLayout_9.setRows(["1fr"]);
							group_10.setLayout(formLayout_9);
							(function(container){
								var userDefinedControl_7 = linker.userDefinedControl_7 = new udc.com.comTitle("comtitle1");
								container.addChild(userDefinedControl_7, {
									"colIndex": 0,
									"rowIndex": 0
								});
								var userDefinedControl_8 = linker.userDefinedControl_8 = new udc.com.comButton("combutton2");
								userDefinedControl_8.focusColumnName = "SCH_YEAR";
								if(typeof onCombutton2Save2 == "function") {
									userDefinedControl_8.addEventListener("save", onCombutton2Save2);
								}
								container.addChild(userDefinedControl_8, {
									"colIndex": 1,
									"rowIndex": 0
								});
							})(group_10);
							container.addChild(group_10, {
								"colIndex": 0,
								"rowIndex": 0
							});
							var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdDetail");
							grid_1.fieldLabel = "학생등록정보";
							grid_1.init({
								"dataSet": app.lookup("dsDetail"),
								"columnMovable": true,
								"resizableColumns": "all",
								"columns": [
									{"width": "25px"},
									{"width": "25px"},
									{"width": "40px"},
									{"width": "100px"},
									{"width": "100px"},
									{
										"width": "100px",
										"visible": false
									},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"}
								],
								"header": {
									"rows": [{"height": "24px"}],
									"cells": [
										{
											"constraint": {"rowIndex": 0, "colIndex": 0},
											"configurator": function(cell){
												cell.filterable = false;
												cell.sortable = false;
												cell.columnType = "checkbox";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 2},
											"configurator": function(cell){
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "No";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 3},
											"configurator": function(cell){
												cell.targetColumnName = "SCH_YEAR";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "학년도";
												cell.style.setClasses(["require"]);
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 4},
											"configurator": function(cell){
												cell.targetColumnName = "SMT_RCD";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "학기";
												cell.style.setClasses(["require"]);
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 5},
											"configurator": function(cell){
												cell.targetColumnName = "STUD_NO";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "학번";
												cell.style.setClasses(["require"]);
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 6},
											"configurator": function(cell){
												cell.targetColumnName = "REG_CLS_RCD";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "등록분류";
												cell.style.setClasses(["require"]);
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 7},
											"configurator": function(cell){
												cell.targetColumnName = "IFR_DT";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "고지일자";
												cell.style.setClasses(["require"]);
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 8},
											"configurator": function(cell){
												cell.targetColumnName = "PAY_CLOSE_DT";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "납일일자";
												cell.style.setClasses(["require"]);
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 9},
											"configurator": function(cell){
												cell.targetColumnName = "DIV_PAY_REQ_DT";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "분납요청일자";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 10},
											"configurator": function(cell){
												cell.targetColumnName = "DIV_PAY_DESC";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "분납내역";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 11},
											"configurator": function(cell){
												cell.targetColumnName = "DIV_PAY_TYPE_CD";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "분납유형코드";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 12},
											"configurator": function(cell){
												cell.targetColumnName = "DIV_PAY_STAT_RCD";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "분납상태코드";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 13},
											"configurator": function(cell){
												cell.targetColumnName = "DIV_PAY_NO";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "분납번호";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 14},
											"configurator": function(cell){
												cell.targetColumnName = "BKG_PNT";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "수강신청학점";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 15},
											"configurator": function(cell){
												cell.targetColumnName = "BKG_TIME";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "수강신청시간";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 16},
											"configurator": function(cell){
												cell.targetColumnName = "REG_STUD_DIV_RCD";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "등록생구분";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 17},
											"configurator": function(cell){
												cell.targetColumnName = "REMARK";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "비고";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 18},
											"configurator": function(cell){
												cell.targetColumnName = "REF_KEY";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "참조키";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 1},
											"configurator": function(cell){
												cell.text = "F";
											}
										}
									]
								},
								"detail": {
									"rows": [{"height": "24px"}],
									"cells": [
										{
											"constraint": {"rowIndex": 0, "colIndex": 0},
											"configurator": function(cell){
												cell.columnType = "checkbox";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 2},
											"configurator": function(cell){
												cell.columnType = "rowindex";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 3},
											"configurator": function(cell){
												cell.columnName = "SCH_YEAR";
												cell.control = (function(){
													var numberEditor_1 = new cpr.controls.NumberEditor("nbe2");
													numberEditor_1.min = 1900.0;
													numberEditor_1.max = 9999.0;
													numberEditor_1.bind("value").toDataColumn("SCH_YEAR");
													return numberEditor_1;
												})();
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 4},
											"configurator": function(cell){
												cell.columnName = "SMT_RCD";
												cell.control = (function(){
													var comboBox_6 = new cpr.controls.ComboBox("cmb6");
													(function(comboBox_6){
														comboBox_6.setItemSet(app.lookup("dsSmtRcd"), {
															"label": "CD_NM",
															"value": "CD"
														});
													})(comboBox_6);
													comboBox_6.bind("value").toDataColumn("SMT_RCD");
													return comboBox_6;
												})();
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 5},
											"configurator": function(cell){
												cell.columnName = "STUD_NO";
												cell.control = (function(){
													var inputBox_18 = new cpr.controls.InputBox("ipb17");
													inputBox_18.bind("value").toDataColumn("STUD_NO");
													return inputBox_18;
												})();
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 6},
											"configurator": function(cell){
												cell.columnName = "REG_CLS_RCD";
												cell.control = (function(){
													var comboBox_7 = new cpr.controls.ComboBox("cmb7");
													(function(comboBox_7){
														comboBox_7.setItemSet(app.lookup("dsRegClsRcd"), {
															"label": "CD_NM",
															"value": "CD"
														});
													})(comboBox_7);
													comboBox_7.bind("value").toDataColumn("REG_CLS_RCD");
													return comboBox_7;
												})();
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 7},
											"configurator": function(cell){
												cell.columnName = "IFR_DT";
												cell.control = (function(){
													var dateInput_1 = new cpr.controls.DateInput("dti1");
													dateInput_1.bind("value").toDataColumn("IFR_DT");
													return dateInput_1;
												})();
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 8},
											"configurator": function(cell){
												cell.columnName = "PAY_CLOSE_DT";
												cell.control = (function(){
													var dateInput_2 = new cpr.controls.DateInput("dti2");
													dateInput_2.bind("value").toDataColumn("PAY_CLOSE_DT");
													return dateInput_2;
												})();
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 9},
											"configurator": function(cell){
												cell.columnName = "DIV_PAY_REQ_DT";
												cell.control = (function(){
													var dateInput_3 = new cpr.controls.DateInput("dti3");
													dateInput_3.bind("value").toDataColumn("DIV_PAY_REQ_DT");
													return dateInput_3;
												})();
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 10},
											"configurator": function(cell){
												cell.columnName = "DIV_PAY_DESC";
												cell.control = (function(){
													var inputBox_19 = new cpr.controls.InputBox("ipb19");
													inputBox_19.bind("value").toDataColumn("DIV_PAY_DESC");
													return inputBox_19;
												})();
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 11},
											"configurator": function(cell){
												cell.columnName = "DIV_PAY_TYPE_CD";
												cell.control = (function(){
													var inputBox_20 = new cpr.controls.InputBox("ipb27");
													inputBox_20.bind("value").toDataColumn("DIV_PAY_TYPE_CD");
													return inputBox_20;
												})();
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 12},
											"configurator": function(cell){
												cell.columnName = "DIV_PAY_STAT_RCD";
												cell.control = (function(){
													var comboBox_8 = new cpr.controls.ComboBox("cmb8");
													(function(comboBox_8){
														comboBox_8.setItemSet(app.lookup("dsDivPayStatRcd"), {
															"label": "CD_NM",
															"value": "CD"
														});
													})(comboBox_8);
													comboBox_8.bind("value").toDataColumn("DIV_PAY_STAT_RCD");
													return comboBox_8;
												})();
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 13},
											"configurator": function(cell){
												cell.columnName = "DIV_PAY_NO";
												cell.control = (function(){
													var inputBox_21 = new cpr.controls.InputBox("ipb28");
													inputBox_21.bind("value").toDataColumn("DIV_PAY_NO");
													return inputBox_21;
												})();
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 14},
											"configurator": function(cell){
												cell.columnName = "BKG_PNT";
												cell.control = (function(){
													var inputBox_22 = new cpr.controls.InputBox("ipb29");
													inputBox_22.bind("value").toDataColumn("BKG_PNT");
													return inputBox_22;
												})();
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 15},
											"configurator": function(cell){
												cell.columnName = "BKG_TIME";
												cell.control = (function(){
													var inputBox_23 = new cpr.controls.InputBox("ipb30");
													inputBox_23.bind("value").toDataColumn("BKG_TIME");
													return inputBox_23;
												})();
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 16},
											"configurator": function(cell){
												cell.columnName = "REG_STUD_DIV_RCD";
												cell.control = (function(){
													var comboBox_9 = new cpr.controls.ComboBox("cmb9");
													(function(comboBox_9){
														comboBox_9.setItemSet(app.lookup("dsRegStudDivRcd"), {
															"label": "CD_NM",
															"value": "CD"
														});
													})(comboBox_9);
													comboBox_9.bind("value").toDataColumn("REG_STUD_DIV_RCD");
													return comboBox_9;
												})();
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 17},
											"configurator": function(cell){
												cell.columnName = "REMARK";
												cell.control = (function(){
													var inputBox_24 = new cpr.controls.InputBox("ipb31");
													inputBox_24.bind("value").toDataColumn("REMARK");
													return inputBox_24;
												})();
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 18},
											"configurator": function(cell){
												cell.columnName = "REF_KEY";
												cell.control = (function(){
													var inputBox_25 = new cpr.controls.InputBox("ipb32");
													inputBox_25.bind("value").toDataColumn("REF_KEY");
													return inputBox_25;
												})();
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 1},
											"configurator": function(cell){
												cell.control = (function(){
													var output_24 = new cpr.controls.Output();
													return output_24;
												})();
											}
										}
									]
								}
							});
							container.addChild(grid_1, {
								"colIndex": 0,
								"rowIndex": 1
							});
						})(group_9);
						tabItem_2.content = group_9;
						return tabItem_2;
					})(tabFolder_1);
					tabFolder_1.addTabItem(tabItem_2);
					tabFolder_1.setSelectedTabItem(tabItem_1);
					if(typeof onTabMainBeforeSelectionChange == "function") {
						tabFolder_1.addEventListener("before-selection-change", onTabMainBeforeSelectionChange);
					}
					if(typeof onTabMainSelectionChange == "function") {
						tabFolder_1.addEventListener("selection-change", onTabMainSelectionChange);
					}
					container.addChild(tabFolder_1, {
						"colIndex": 0,
						"rowIndex": 1
					});
				})(group_5);
				container.addChild(group_5, {
					"colIndex": 1,
					"rowIndex": 0
				});
				var group_11 = new cpr.controls.Container("grp5");
				// Layout
				var formLayout_10 = new cpr.controls.layouts.FormLayout();
				formLayout_10.setColumns(["1fr", "260px"]);
				formLayout_10.setRows(["25px", "1fr"]);
				group_11.setLayout(formLayout_10);
				(function(container){
					var userDefinedControl_9 = linker.userDefinedControl_9 = new udc.com.comTitle("comtitle");
					container.addChild(userDefinedControl_9, {
						"colIndex": 0,
						"rowIndex": 0,
						"colSpan": 2,
						"rowSpan": 1
					});
					var grid_2 = linker.grid_2 = new cpr.controls.Grid("grdCmnTmpReg");
					grid_2.fieldLabel = "학생정보";
					grid_2.userAttr({"bindDataFormId": "grpCmnTmpReg"});
					grid_2.init({
						"dataSet": app.lookup("dsCmnTmpReg"),
						"columnMovable": true,
						"selectionMulti": "multi",
						"autoFit": "3, 4, 5, 6, 7",
						"resizableColumns": "all",
						"columns": [
							{"width": "25px"},
							{"width": "25px"},
							{"width": "40px"},
							{"width": "168px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"}
						],
						"header": {
							"rows": [{"height": "27"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.filterable = false;
										cell.sortable = false;
										cell.columnType = "checkbox";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "No";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3},
									"configurator": function(cell){
										cell.text = "구성원ID";
										cell.style.setClasses(["require"]);
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 4},
									"configurator": function(cell){
										cell.text = "학번";
										cell.style.setClasses(["require"]);
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 5},
									"configurator": function(cell){
										cell.text = "성명";
										cell.style.setClasses(["require"]);
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 6},
									"configurator": function(cell){
										cell.text = "영문명";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 7},
									"configurator": function(cell){
										cell.text = "한자명";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.text = "F";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 10},
									"configurator": function(cell){
										cell.text = "이메일";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 9},
									"configurator": function(cell){
										cell.text = "휴대폰번호";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 8},
									"configurator": function(cell){
										cell.text = "주민번호";
									}
								}
							]
						},
						"detail": {
							"rows": [{"height": "24px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.columnType = "checkbox";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.columnType = "rowindex";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3},
									"configurator": function(cell){
										cell.columnName = "PARTY_ID";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 4},
									"configurator": function(cell){
										cell.columnName = "STUD_NO";
										cell.control = (function(){
											var inputBox_26 = new cpr.controls.InputBox("ipb20");
											inputBox_26.readOnly = true;
											inputBox_26.userAttr({"required": "Y"});
											inputBox_26.bind("value").toDataColumn("STUD_NO");
											return inputBox_26;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 5},
									"configurator": function(cell){
										cell.columnName = "REP_NM";
										cell.control = (function(){
											var inputBox_27 = new cpr.controls.InputBox("ipb21");
											inputBox_27.readOnly = true;
											inputBox_27.userAttr({"required": "Y"});
											inputBox_27.bind("value").toDataColumn("REP_NM");
											return inputBox_27;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 6},
									"configurator": function(cell){
										cell.columnName = "ENG_NM";
										cell.control = (function(){
											var inputBox_28 = new cpr.controls.InputBox("ipb22");
											inputBox_28.readOnly = true;
											inputBox_28.bind("value").toDataColumn("ENG_NM");
											return inputBox_28;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 7},
									"configurator": function(cell){
										cell.columnName = "CHA_NM";
										cell.control = (function(){
											var inputBox_29 = new cpr.controls.InputBox("ipb23");
											inputBox_29.readOnly = true;
											inputBox_29.bind("value").toDataColumn("CHA_NM");
											return inputBox_29;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.control = (function(){
											var output_25 = new cpr.controls.Output();
											return output_25;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 10},
									"configurator": function(cell){
										cell.columnName = "EMAIL";
										cell.control = (function(){
											var inputBox_30 = new cpr.controls.InputBox("ipb26");
											inputBox_30.readOnly = true;
											inputBox_30.userAttr({"columnType": "email"});
											inputBox_30.bind("value").toDataColumn("EMAIL");
											return inputBox_30;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 9},
									"configurator": function(cell){
										cell.columnName = "CLP_NO";
										cell.control = (function(){
											var inputBox_31 = new cpr.controls.InputBox("ipb25");
											inputBox_31.readOnly = true;
											inputBox_31.userAttr({"columnType": "phone"});
											inputBox_31.bind("value").toDataColumn("CLP_NO");
											return inputBox_31;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 8},
									"configurator": function(cell){
										cell.columnName = "SSN";
										cell.control = (function(){
											var inputBox_32 = new cpr.controls.InputBox("ipb24");
											inputBox_32.readOnly = true;
											inputBox_32.userAttr({"columnType": "ssn"});
											inputBox_32.bind("value").toDataColumn("SSN");
											return inputBox_32;
										})();
									}
								}
							]
						}
					});
					if(typeof onGrdCmnTmpRegSelectionChange == "function") {
						grid_2.addEventListener("selection-change", onGrdCmnTmpRegSelectionChange);
					}
					if(typeof onGrdCmnTmpRegUpdate == "function") {
						grid_2.addEventListener("update", onGrdCmnTmpRegUpdate);
					}
					if(typeof onGrdCmnTmpRegBeforeSelectionChange == "function") {
						grid_2.addEventListener("before-selection-change", onGrdCmnTmpRegBeforeSelectionChange);
					}
					container.addChild(grid_2, {
						"colIndex": 0,
						"rowIndex": 1,
						"colSpan": 2,
						"rowSpan": 1
					});
				})(group_11);
				container.addChild(group_11, {
					"colIndex": 0,
					"rowIndex": 0
				});
			})(group_4);
			container.addChild(group_4, {
				"width": "1320px",
				"height": "608px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_3.ctrl = linker.tabFolder_1;
			linker.userDefinedControl_4.ctrl = linker.group_8;
			linker.userDefinedControl_5.grid = linker.grid_2;
			linker.group_8.setBindContext(new cpr.bind.GridSelectionContext(linker.grid_2));
			linker.userDefinedControl_7.ctrl = linker.grid_1;
			linker.userDefinedControl_8.grid = linker.grid_1;
			linker.userDefinedControl_9.ctrl = linker.grid_2;
		}
	});
	app.title = "템플릿(탭 + 그리드)";
	cpr.core.Platform.INSTANCE.register(app);
})();
