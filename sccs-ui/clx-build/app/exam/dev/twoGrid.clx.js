/*
 * App URI: app/exam/dev/twoGrid
 * Source Location: app/exam/dev/twoGrid.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/exam/dev/twoGrid", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * cmnCGrid.js
			 * Created at 2020. 3. 9. 오후 12:49:14.
			 *
			 * @author skyha
			 ************************************************/
			
			var util = createCommonUtil();
			
			/*
			 * Body에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
					
				util.Submit.send(app, "subOnload", function(pbSuccess){
					if(pbSuccess){
						
					}
				});
			}
			
			
			/**
			 * 메시지 목록데이터를 조회한다.
			 * @param psStatus - 조회 상태(저장 후 조회인 경우에는 'save' 구분값 넘김)
			 */
			function doList(psStatus){
				
				util.Grid.reset(app, "grdDetail");
				//조회 서브미션 호출
				util.Submit.send(app, "subListMst", function(pbSuccess){
					if(pbSuccess) {
						if(psStatus == "save"){
							//갱신된 데이터가 조회되었습니다.
							util.Msg.notify(app, "INF-M005");
						}else{
							//조회되었습니다.
							util.Msg.notify(app, "INF-M001");
						}
						util.Control.redraw(app, ["grpMst","grpDtl"]);
					}
				});
			}
			
			
			/**
			 * @param psStatus - 조회 상태(저장 후 조회인 경우에는 'save' 구분값 넘김)
			 */
			function doListDtl(psStatus){
			     
			     var vsStudNo = util.Grid.getCellValue(app, "grdMst", "STUD_NO");
			     util.DataMap.setValue(app, "dmParam", "strMstStudNo", vsStudNo);
			     
				//조회 서브미션 호출
				util.Submit.send(app, "subListDtl", function(pbSuccess){
					if(pbSuccess) {
						if(psStatus == "save"){
							//갱신된 데이터가 조회되었습니다.
							util.Msg.notify(app, "INF-M005");
						}else{
							//조회되었습니다.
							util.Msg.notify(app, "INF-M001");
						}
						util.Control.redraw(app, ["grpMst","grpDtl"]);
					}
				});
			}
			
			/*
			 * 사용자 정의 컨트롤에서 search 이벤트 발생 시 호출.
			 * 조회버튼 클릭시 이벤트
			 */
			function onCombtnsearch1Search(/* cpr.events.CUIEvent */ e){
				
				// 데이터 변경사항 체크
				if (util.Grid.isModified(app, "grdMst", "CRM")) {
					return false;
				}
				
				// 조회조건 유효성 체크
				if(!util.validate(app, "grpSearch")) return false;
				
				doList();
				
				
			}
			
			 
			/*
			 * 사용자 정의 컨트롤에서 save 이벤트 발생 시 호출.
			 * 저장 클릭 이벤트
			 */
			function onCombutton1Save(/* cpr.event.CUIEvent */ e){
				
				if (!util.Grid.isModified(app, "grdMst", "MSG")) return false;
				
				if (!util.validate(app, "grdMst")) return false;
				
				util.Submit.send(app, "subSaveMst", function(pbSuccess){
					if(pbSuccess){
						doList("save");
					}
				});
			}
			
			
			/*
			 * 그리드에서 selection-change 이벤트 발생 시 호출.
			 * detail의 cell 클릭하여 설정된 selectionunit에 해당되는 단위가 선택될 때 발생하는 이벤트.
			 */
			function onGrdMstSelectionChange(/* cpr.events.CSelectionEvent */ e){
			
				if(util.Grid.getRowState(app, "grdMst") == cpr.data.tabledata.RowState.INSERTED){
					util.Grid.reset(app, "grdDetail");
					return false;
				}
				
				doListDtl();	
			}
			
			
			/*
			 * 사용자 정의 컨트롤에서 insert 이벤트 발생 시 호출.
			 * 신규 클릭 이벤트
			 */
			function onCombutton2Insert(/* cpr.event.CUIEvent */ e){
				
				var vsToday = util.DataMap.getValue(app, "dmTime", "strToday");
				var vsStudNo = util.Grid.getCellValue(app, "grdMst", "STUD_NO");
				
				util.Grid.setCellValue(app, "grdDetail", "STUD_NO", vsStudNo);
				util.Grid.setCellValue(app, "grdDetail", "IFR_DT", vsToday);
				util.Grid.setCellValue(app, "grdDetail", "PAY_CLOSE_DT", vsToday);
				
			}
			
			
			
			
			
			/*
			 * 사용자 정의 컨트롤에서 save 이벤트 발생 시 호출.
			 * 저장 클릭 이벤트
			 */
			function onCombutton2Save(/* cpr.event.CUIEvent */ e){
				
				if (!util.Grid.isModified(app, "grdDetail", "MSG")) return false;
				
				if (!util.validate(app, "grdDetail")) return false;
				
				util.Submit.send(app, "subSaveDtl", function(pbSuccess){
					if(pbSuccess){
						doListDtl("save");
					}
				});
				
				
			}
			
			
			/*
			 * Body에서 init 이벤트 발생 시 호출.
			 * 앱이 최초 구성될 때 발생하는 이벤트 입니다.
			 */
			function onBodyInit(/* cpr.events.CEvent */ e){
				
			//마스터/디테일 그리드 각 작업시 반대되는 작업 영역 비활성화 제어 (각 그룹에 바인딩 처리함.)	
			//	var vsMstGrid = "grdMst";
			//	var vsDtlGrid = "grdDetail";
			//	
			//	var vsMstGrp = "grpMst";
			//	var vsDtlGrp = "grpDtl";
			//	
			//	var vcMstGrid = app.lookup(vsMstGrid);
			//	var vcDtlGrid = app.lookup(vsDtlGrid);
			//	var vcMstDataSet = vcMstGrid.dataSet;
			//	var vcDtlDataSet = vcDtlGrid.dataSet;
			//	
			//	var vcMstGrp = app.lookup(vsMstGrp);
			//	var vcDtlGrp = app.lookup(vsDtlGrp);
			//	
			//	vcMstGrp.bind("enabled").toExpression("#" + vcDtlDataSet.id + ".isModified() ? false : true");
			//	vcDtlGrp.bind("enabled").toExpression("(#" + vsMstGrid + ".getRowCount() < 1  || #" + vcMstDataSet.id + ".isModified()) ? false : true");
			//	
			//	vcMstGrid.addEventListener("update", function(e){
			//		vcDtlGrp.redraw();
			//	});
			//	
			//	vcDtlGrid.addEventListener("update", function(e){
			//		vcMstGrp.redraw();
			//	});
				
			}
			
			
			/*
			 * 사용자 정의 컨트롤에서 beforeDelete 이벤트 발생 시 호출.
			 * 삭제버튼 클릭전 호출 이벤트(행 삭제전에 체크할 비지니스 로직이 있는 경우 사용)
			 */
			function onCombutton1BeforeDelete(/* cpr.events.CUIEvent */ e){
				
				//상세내역이 존재하면... 삭제 불가
				var vnDtlRowCnt = util.Grid.getRowCount(app, "grdDetail");
				
				if(vnDtlRowCnt  > 0){
						util.Msg.alert("WRN-M054", [util.Grid.getIndex(app, "grdMst") + 1, 
								util.Control.getProperty(app, "grdMst", "fieldLabel"),
					                       util.Control.getProperty(app, "grdDetail", "fieldLabel")]);
					return false;
				}
				return true;
			}
			
			
			
			//마스터/디테일 그리드 각 작업시 반대되는 작업 영역 비활성화 제어
			/*
			 * 사용자 정의 컨트롤에서 commonEvent 이벤트 발생 시 호출.
			 * 신규, 삭제, 취소 클릭 공통 이벤트(e.status 로 구분가능)
			 */
			function onCombutton1CommonEvent(/* cpr.events.CUIEvent */ e){
				util.Control.redraw(app, ["grpDtl"]);
			}
			
			
			/*
			 * 사용자 정의 컨트롤에서 commonEvent 이벤트 발생 시 호출.
			 * 신규, 삭제, 취소 클릭 공통 이벤트(e.status 로 구분가능)
			 */
			function onCombutton2CommonEvent(/* cpr.events.CUIEvent */ e){
				util.Control.redraw(app, ["grpMst"]);
			}
			
			/*
			 * 그리드에서 update 이벤트 발생 시 호출.
			 * Grid의 행 데이터가 수정되었을 때 이벤트.
			 */
			function onGrdMstUpdate(/* cpr.events.CGridValueChangeEvent */ e){
				/** 
				 * @type cpr.controls.Grid
				 */
				var grdMst = e.control;
				util.Control.redraw(app, ["grpDtl"]);
			}
			
			/*
			 * 그리드에서 update 이벤트 발생 시 호출.
			 * Grid의 행 데이터가 수정되었을 때 이벤트.
			 */
			function onGrdDetailUpdate(/* cpr.events.CGridValueChangeEvent */ e){
				/** 
				 * @type cpr.controls.Grid
				 */
				var grdDetail = e.control;
				util.Control.redraw(app, ["grpMst"]);
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsMst");
			dataSet_1.parseData({
				"info": "STUD_NO",
				"columns": [
					{
						"name": "PARTY_ID",
						"dataType": "string"
					},
					{
						"name": "STUD_NO",
						"dataType": "string"
					},
					{
						"name": "REP_NM",
						"dataType": "string"
					},
					{
						"name": "ENG_NM",
						"dataType": "string"
					},
					{
						"name": "CHA_NM",
						"dataType": "string"
					},
					{
						"name": "GENDER_RCD",
						"dataType": "string"
					},
					{
						"name": "SSN",
						"dataType": "string"
					},
					{
						"name": "STUD_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "DEPT_CD",
						"dataType": "string"
					},
					{
						"name": "DAY_NIGHT_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "NAT_RCD",
						"dataType": "string"
					},
					{
						"name": "ZIPCODE",
						"dataType": "string"
					},
					{
						"name": "ADDR1",
						"dataType": "string"
					},
					{
						"name": "ADDR2",
						"dataType": "string"
					},
					{
						"name": "CLP_NO",
						"dataType": "string"
					},
					{
						"name": "AEN",
						"dataType": "string"
					},
					{
						"name": "EMAIL",
						"dataType": "string"
					},
					{
						"name": "BANK_RCD",
						"dataType": "string"
					},
					{
						"name": "ACCT_NO",
						"dataType": "string"
					},
					{
						"name": "OWNER_NM",
						"dataType": "string"
					},
					{
						"name": "FILE_SERIAL_NO",
						"dataType": "decimal"
					}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsDetail");
			dataSet_2.parseData({
				"info": "SCH_YEAR,SMT_RCD,STUD_NO,REG_CLS_RCD",
				"columns": [
					{
						"name": "SCH_YEAR",
						"dataType": "string"
					},
					{
						"name": "SMT_RCD",
						"dataType": "string"
					},
					{
						"name": "STUD_NO",
						"dataType": "string"
					},
					{
						"name": "REG_CLS_RCD",
						"dataType": "string"
					},
					{
						"name": "IFR_DT",
						"dataType": "string"
					},
					{
						"name": "PAY_CLOSE_DT",
						"dataType": "string"
					},
					{
						"name": "DIV_PAY_REQ_DT",
						"dataType": "string"
					},
					{
						"name": "DIV_PAY_DESC",
						"dataType": "string"
					},
					{
						"name": "DIV_PAY_TYPE_CD",
						"dataType": "string"
					},
					{
						"name": "DIV_PAY_STAT_RCD",
						"dataType": "string"
					},
					{
						"name": "DIV_PAY_NO",
						"dataType": "string"
					},
					{
						"name": "BKG_PNT",
						"dataType": "decimal"
					},
					{
						"name": "BKG_TIME",
						"dataType": "decimal"
					},
					{
						"name": "REG_STUD_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "REMARK",
						"dataType": "string"
					},
					{
						"name": "REF_KEY",
						"dataType": "string"
					}
				]
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsGenderRcd");
			dataSet_3.parseData({
				"columns" : [
					{"name": "CD"},
					{"name": "CD_NM"}
				]
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsStudDivRcd");
			dataSet_4.parseData({
				"columns" : [
					{"name": "CD"},
					{"name": "CD_NM"}
				]
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsDayNightDivRcd");
			dataSet_5.parseData({
				"columns" : [
					{"name": "CD"},
					{"name": "CD_NM"}
				]
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsNatRcd");
			dataSet_6.parseData({
				"columns" : [
					{"name": "CD"},
					{"name": "CD_NM"}
				]
			});
			app.register(dataSet_6);
			
			var dataSet_7 = new cpr.data.DataSet("dsBankRcd");
			dataSet_7.parseData({
				"columns" : [
					{"name": "CD"},
					{"name": "CD_NM"}
				]
			});
			app.register(dataSet_7);
			
			var dataSet_8 = new cpr.data.DataSet("dsSmtRcd");
			dataSet_8.parseData({
				"columns" : [
					{"name": "CD"},
					{"name": "CD_NM"}
				]
			});
			app.register(dataSet_8);
			
			var dataSet_9 = new cpr.data.DataSet("dsRegClsRcd");
			dataSet_9.parseData({
				"columns" : [
					{"name": "CD"},
					{"name": "CD_NM"}
				]
			});
			app.register(dataSet_9);
			
			var dataSet_10 = new cpr.data.DataSet("dsDivPayStatRcd");
			dataSet_10.parseData({
				"columns" : [
					{"name": "CD"},
					{"name": "CD_NM"}
				]
			});
			app.register(dataSet_10);
			
			var dataSet_11 = new cpr.data.DataSet("dsRegStudDivRcd");
			dataSet_11.parseData({
				"columns" : [
					{"name": "CD"},
					{"name": "CD_NM"}
				]
			});
			app.register(dataSet_11);
			var dataMap_1 = new cpr.data.DataMap("dmTime");
			dataMap_1.parseData({
				"columns" : [{"name": "strToday"}]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmParam");
			dataMap_2.parseData({
				"columns" : [
					{"name": "strStudNo"},
					{"name": "strMstStudNo"}
				]
			});
			app.register(dataMap_2);
			var submission_1 = new cpr.protocols.Submission("subOnload");
			submission_1.action = "/TwoGrid/onLoad.do";
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataSet_4, false);
			submission_1.addResponseData(dataSet_5, false);
			submission_1.addResponseData(dataSet_6, false);
			submission_1.addResponseData(dataSet_7, false);
			submission_1.addResponseData(dataSet_8, false);
			submission_1.addResponseData(dataSet_10, false);
			submission_1.addResponseData(dataSet_9, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subListMst");
			submission_2.action = "/TwoGrid/listMst.do";
			submission_2.addRequestData(dataMap_2);
			submission_2.addResponseData(dataSet_1, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSaveMst");
			submission_3.action = "/TwoGrid/saveMst.do";
			submission_3.addRequestData(dataSet_1);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subListDtl");
			submission_4.action = "/TwoGrid/listDtl.do";
			submission_4.addRequestData(dataMap_2);
			submission_4.addResponseData(dataSet_2, false);
			app.register(submission_4);
			
			var submission_5 = new cpr.protocols.Submission("subSaveDtl");
			submission_5.action = "/TwoGrid/saveDtl.do";
			submission_5.addRequestData(dataSet_2);
			app.register(submission_5);
			
			app.supportMedia("all and (min-width: 1320px)", "eXFrame");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1319px)", "default");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpHeader");
			group_1.style.setClasses(["header-box"]);
			// Layout
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_2.spacing = 0;
			group_1.setLayout(verticalLayout_2);
			(function(container){
				var userDefinedControl_1 = new udc.com.appHeader("appheader");
				container.addChild(userDefinedControl_1, {
					"width": "500px",
					"height": "30px"
				});
				var group_2 = new cpr.controls.Container("grpSearch");
				group_2.userAttr({
					"mobile-column-count": "2",
					"tablet-column-count": "2"
				});
				group_2.style.setClasses(["search-box"]);
				// Layout
				var formLayout_1 = new cpr.controls.layouts.FormLayout();
				formLayout_1.topMargin = "5px";
				formLayout_1.rightMargin = "5px";
				formLayout_1.bottomMargin = "5px";
				formLayout_1.leftMargin = "5px";
				formLayout_1.setColumns(["120px", "200px", "1fr", "60px"]);
				formLayout_1.setRows(["25px"]);
				formLayout_1.setRowAutoSizing(0, true);
				group_2.setLayout(formLayout_1);
				(function(container){
					var output_1 = new cpr.controls.Output();
					output_1.value = "학번";
					container.addChild(output_1, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var inputBox_1 = new cpr.controls.InputBox("ipb2");
					inputBox_1.tooltip = "학번";
					inputBox_1.userAttr({"autoKeydownSearch": "Y"});
					inputBox_1.bind("value").toDataMap(app.lookup("dmParam"), "strStudNo");
					container.addChild(inputBox_1, {
						"colIndex": 1,
						"rowIndex": 0
					});
					var group_3 = new cpr.controls.Container("grp1");
					// Layout
					var formLayout_2 = new cpr.controls.layouts.FormLayout();
					formLayout_2.setColumns(["3fr", "60px"]);
					formLayout_2.setRows(["25px"]);
					formLayout_2.setRowAutoSizing(0, true);
					group_3.setLayout(formLayout_2);
					(function(container){
						var output_2 = new cpr.controls.Output();
						output_2.value = "";
						container.addChild(output_2, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var userDefinedControl_2 = new udc.com.comBtnSearch("combtnsearch");
						if(typeof onCombtnsearch1Search == "function") {
							userDefinedControl_2.addEventListener("search", onCombtnsearch1Search);
						}
						container.addChild(userDefinedControl_2, {
							"colIndex": 1,
							"rowIndex": 0,
							"horizontalAlign": "right",
							"verticalAlign": "fill",
							"width": 60
						});
					})(group_3);
					container.addChild(group_3, {
						"colIndex": 2,
						"rowIndex": 0,
						"colSpan": 2,
						"rowSpan": 1
					});
				})(group_2);
				container.addChild(group_2, {
					"autoSize": "height",
					"width": "1320px",
					"height": "37px"
				});
			})(group_1);
			container.addChild(group_1, {
				"autoSize": "height",
				"width": "1320px",
				"height": "67px"
			});
			
			var group_4 = new cpr.controls.Container("grpData");
			// Layout
			var formLayout_3 = new cpr.controls.layouts.FormLayout();
			formLayout_3.setColumns(["1fr"]);
			formLayout_3.setRows(["1fr", "1fr"]);
			group_4.setLayout(formLayout_3);
			(function(container){
				var group_5 = new cpr.controls.Container("grpMst");
				group_5.bind("enabled").toExpression("#dsDetail.isModified() ? false : true");
				// Layout
				var formLayout_4 = new cpr.controls.layouts.FormLayout();
				formLayout_4.setColumns(["1fr"]);
				formLayout_4.setRows(["25px", "1fr"]);
				group_5.setLayout(formLayout_4);
				(function(container){
					var group_6 = new cpr.controls.Container("grp2");
					// Layout
					var formLayout_5 = new cpr.controls.layouts.FormLayout();
					formLayout_5.setColumns(["1fr", "260px"]);
					formLayout_5.setRows(["1fr"]);
					group_6.setLayout(formLayout_5);
					(function(container){
						var userDefinedControl_3 = linker.userDefinedControl_3 = new udc.com.comTitle("comtitle1");
						container.addChild(userDefinedControl_3, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var userDefinedControl_4 = linker.userDefinedControl_4 = new udc.com.comButton("combutton1");
						userDefinedControl_4.focusColumnName = "STUD_NO";
						if(typeof onCombutton1Save == "function") {
							userDefinedControl_4.addEventListener("save", onCombutton1Save);
						}
						if(typeof onCombutton1BeforeDelete == "function") {
							userDefinedControl_4.addEventListener("beforeDelete", onCombutton1BeforeDelete);
						}
						if(typeof onCombutton1CommonEvent == "function") {
							userDefinedControl_4.addEventListener("commonEvent", onCombutton1CommonEvent);
						}
						container.addChild(userDefinedControl_4, {
							"colIndex": 1,
							"rowIndex": 0
						});
					})(group_6);
					container.addChild(group_6, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdMst");
					grid_1.fieldLabel = "학생정보";
					grid_1.init({
						"dataSet": app.lookup("dsMst"),
						"columnMovable": true,
						"autoFit": "3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23",
						"resizableColumns": "all",
						"columns": [
							{
								"width": "25px",
								"visible": false
							},
							{"width": "25px"},
							{"width": "40px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"}
						],
						"header": {
							"rows": [{"height": "27"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.filterable = false;
										cell.sortable = false;
										cell.columnType = "checkbox";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "No";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3},
									"configurator": function(cell){
										cell.text = "구성원ID";
										cell.style.setClasses(["require"]);
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 4},
									"configurator": function(cell){
										cell.text = "학번";
										cell.style.setClasses(["require"]);
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 5},
									"configurator": function(cell){
										cell.text = "성명";
										cell.style.setClasses(["require"]);
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 6},
									"configurator": function(cell){
										cell.text = "영문명";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 7},
									"configurator": function(cell){
										cell.text = "한자명";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 8},
									"configurator": function(cell){
										cell.text = "성별";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 9},
									"configurator": function(cell){
										cell.text = "주민번호";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 10},
									"configurator": function(cell){
										cell.text = "학생상태";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 11},
									"configurator": function(cell){
										cell.text = "부서코드";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 12},
									"configurator": function(cell){
										cell.text = "주야구분";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 13},
									"configurator": function(cell){
										cell.text = "국가";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 14},
									"configurator": function(cell){
										cell.text = "우편번호";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 15},
									"configurator": function(cell){
										cell.text = "주소1";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 16},
									"configurator": function(cell){
										cell.text = "주소2";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 17},
									"configurator": function(cell){
										cell.text = "휴대폰번호";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 18},
									"configurator": function(cell){
										cell.text = "사무실번호";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 19},
									"configurator": function(cell){
										cell.text = "이메일";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 20},
									"configurator": function(cell){
										cell.text = "은행";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 21},
									"configurator": function(cell){
										cell.text = "계좌번호";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 22},
									"configurator": function(cell){
										cell.text = "소유주";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 23},
									"configurator": function(cell){
										cell.text = "파일순번";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.text = "F";
									}
								}
							]
						},
						"detail": {
							"rows": [{"height": "24px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.columnType = "checkbox";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.columnType = "rowindex";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3},
									"configurator": function(cell){
										cell.columnName = "PARTY_ID";
										cell.control = (function(){
											var userDefinedControl_5 = new udc.cmn.udcCmnPParty("udccmnpparty1");
											userDefinedControl_5.bind("oPartyId").toDataColumn("PARTY_ID");
											userDefinedControl_5.bind("oNmKor").toDataColumn("REP_NM");
											userDefinedControl_5.bind("value").toDataColumn("PARTY_ID");
											return userDefinedControl_5;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 4},
									"configurator": function(cell){
										cell.columnName = "STUD_NO";
										cell.control = (function(){
											var inputBox_2 = new cpr.controls.InputBox("ipb4");
											inputBox_2.userAttr({"required": "Y"});
											inputBox_2.bind("value").toDataColumn("STUD_NO");
											return inputBox_2;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 5},
									"configurator": function(cell){
										cell.columnName = "REP_NM";
										cell.control = (function(){
											var inputBox_3 = new cpr.controls.InputBox("ipb5");
											inputBox_3.userAttr({"required": "Y"});
											inputBox_3.bind("value").toDataColumn("REP_NM");
											return inputBox_3;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 6},
									"configurator": function(cell){
										cell.columnName = "ENG_NM";
										cell.control = (function(){
											var inputBox_4 = new cpr.controls.InputBox("ipb6");
											inputBox_4.bind("value").toDataColumn("ENG_NM");
											return inputBox_4;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 7},
									"configurator": function(cell){
										cell.columnName = "CHA_NM";
										cell.control = (function(){
											var inputBox_5 = new cpr.controls.InputBox("ipb7");
											inputBox_5.bind("value").toDataColumn("CHA_NM");
											return inputBox_5;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 8},
									"configurator": function(cell){
										cell.columnName = "GENDER_RCD";
										cell.control = (function(){
											var comboBox_1 = new cpr.controls.ComboBox("cmb1");
											(function(comboBox_1){
												comboBox_1.setItemSet(app.lookup("dsGenderRcd"), {
													"label": "CD_NM",
													"value": "CD"
												});
											})(comboBox_1);
											comboBox_1.bind("value").toDataColumn("GENDER_RCD");
											return comboBox_1;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 9},
									"configurator": function(cell){
										cell.columnName = "SSN";
										cell.control = (function(){
											var inputBox_6 = new cpr.controls.InputBox("ipb9");
											inputBox_6.userAttr({"columnType": "ssn"});
											inputBox_6.bind("value").toDataColumn("SSN");
											return inputBox_6;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 10},
									"configurator": function(cell){
										cell.columnName = "STUD_DIV_RCD";
										cell.control = (function(){
											var comboBox_2 = new cpr.controls.ComboBox("cmb2");
											(function(comboBox_2){
												comboBox_2.setItemSet(app.lookup("dsStudDivRcd"), {
													"label": "CD_NM",
													"value": "CD"
												});
											})(comboBox_2);
											comboBox_2.bind("value").toDataColumn("STUD_DIV_RCD");
											return comboBox_2;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 11},
									"configurator": function(cell){
										cell.columnName = "DEPT_CD";
										cell.control = (function(){
											var inputBox_7 = new cpr.controls.InputBox("ipb11");
											inputBox_7.bind("value").toDataColumn("DEPT_CD");
											return inputBox_7;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 12},
									"configurator": function(cell){
										cell.columnName = "DAY_NIGHT_DIV_RCD";
										cell.control = (function(){
											var comboBox_3 = new cpr.controls.ComboBox("cmb3");
											(function(comboBox_3){
												comboBox_3.setItemSet(app.lookup("dsDayNightDivRcd"), {
													"label": "CD_NM",
													"value": "CD"
												});
											})(comboBox_3);
											comboBox_3.bind("value").toDataColumn("DAY_NIGHT_DIV_RCD");
											return comboBox_3;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 13},
									"configurator": function(cell){
										cell.columnName = "NAT_RCD";
										cell.control = (function(){
											var comboBox_4 = new cpr.controls.ComboBox("cmb5");
											(function(comboBox_4){
												comboBox_4.setItemSet(app.lookup("dsNatRcd"), {
													"label": "CD_NM",
													"value": "CD"
												});
											})(comboBox_4);
											comboBox_4.bind("value").toDataColumn("NAT_RCD");
											return comboBox_4;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 14},
									"configurator": function(cell){
										cell.columnName = "ZIPCODE";
										cell.control = (function(){
											var inputBox_8 = new cpr.controls.InputBox("ipb14");
											inputBox_8.bind("value").toDataColumn("ZIPCODE");
											return inputBox_8;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 15},
									"configurator": function(cell){
										cell.columnName = "ADDR1";
										cell.control = (function(){
											var inputBox_9 = new cpr.controls.InputBox("ipb15");
											inputBox_9.bind("value").toDataColumn("ADDR1");
											return inputBox_9;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 16},
									"configurator": function(cell){
										cell.columnName = "ADDR2";
										cell.control = (function(){
											var inputBox_10 = new cpr.controls.InputBox("ipb16");
											inputBox_10.bind("value").toDataColumn("ADDR2");
											return inputBox_10;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 17},
									"configurator": function(cell){
										cell.columnName = "CLP_NO";
										cell.control = (function(){
											var inputBox_11 = new cpr.controls.InputBox("ipb17");
											inputBox_11.userAttr({"columnType": "phone"});
											inputBox_11.bind("value").toDataColumn("CLP_NO");
											return inputBox_11;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 18},
									"configurator": function(cell){
										cell.columnName = "AEN";
										cell.control = (function(){
											var inputBox_12 = new cpr.controls.InputBox("ipb18");
											inputBox_12.bind("value").toDataColumn("AEN");
											return inputBox_12;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 19},
									"configurator": function(cell){
										cell.columnName = "EMAIL";
										cell.control = (function(){
											var inputBox_13 = new cpr.controls.InputBox("ipb19");
											inputBox_13.userAttr({"columnType": "email"});
											inputBox_13.bind("value").toDataColumn("EMAIL");
											return inputBox_13;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 20},
									"configurator": function(cell){
										cell.columnName = "BANK_RCD";
										cell.control = (function(){
											var comboBox_5 = new cpr.controls.ComboBox("cmb4");
											(function(comboBox_5){
												comboBox_5.setItemSet(app.lookup("dsBankRcd"), {
													"label": "CD_NM",
													"value": "CD"
												});
											})(comboBox_5);
											comboBox_5.bind("value").toDataColumn("BANK_RCD");
											return comboBox_5;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 21},
									"configurator": function(cell){
										cell.columnName = "ACCT_NO";
										cell.control = (function(){
											var inputBox_14 = new cpr.controls.InputBox("ipb21");
											inputBox_14.bind("value").toDataColumn("ACCT_NO");
											return inputBox_14;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 22},
									"configurator": function(cell){
										cell.columnName = "OWNER_NM";
										cell.control = (function(){
											var inputBox_15 = new cpr.controls.InputBox("ipb22");
											inputBox_15.bind("value").toDataColumn("OWNER_NM");
											return inputBox_15;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 23},
									"configurator": function(cell){
										cell.columnName = "FILE_SERIAL_NO";
										cell.control = (function(){
											var numberEditor_1 = new cpr.controls.NumberEditor("nbe1");
											numberEditor_1.bind("value").toDataColumn("FILE_SERIAL_NO");
											return numberEditor_1;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.control = (function(){
											var output_3 = new cpr.controls.Output();
											return output_3;
										})();
									}
								}
							]
						}
					});
					if(typeof onGrdMstSelectionChange == "function") {
						grid_1.addEventListener("selection-change", onGrdMstSelectionChange);
					}
					if(typeof onGrdMstUpdate == "function") {
						grid_1.addEventListener("update", onGrdMstUpdate);
					}
					container.addChild(grid_1, {
						"colIndex": 0,
						"rowIndex": 1
					});
				})(group_5);
				container.addChild(group_5, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var group_7 = new cpr.controls.Container("grpDtl");
				group_7.bind("enabled").toExpression("(#grdMst.getRowCount() < 1  || #dsMst.isModified()) ? false : true");
				// Layout
				var formLayout_6 = new cpr.controls.layouts.FormLayout();
				formLayout_6.setColumns(["1fr"]);
				formLayout_6.setRows(["25px", "1fr"]);
				group_7.setLayout(formLayout_6);
				(function(container){
					var group_8 = new cpr.controls.Container("grp4");
					// Layout
					var formLayout_7 = new cpr.controls.layouts.FormLayout();
					formLayout_7.setColumns(["1fr", "260px"]);
					formLayout_7.setRows(["1fr"]);
					group_8.setLayout(formLayout_7);
					(function(container){
						var userDefinedControl_6 = linker.userDefinedControl_6 = new udc.com.comTitle("comtitle2");
						container.addChild(userDefinedControl_6, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var userDefinedControl_7 = linker.userDefinedControl_7 = new udc.com.comButton("combutton2");
						userDefinedControl_7.focusColumnName = "SCH_YEAR";
						if(typeof onCombutton2Insert == "function") {
							userDefinedControl_7.addEventListener("insert", onCombutton2Insert);
						}
						if(typeof onCombutton2Save == "function") {
							userDefinedControl_7.addEventListener("save", onCombutton2Save);
						}
						if(typeof onCombutton2CommonEvent == "function") {
							userDefinedControl_7.addEventListener("commonEvent", onCombutton2CommonEvent);
						}
						container.addChild(userDefinedControl_7, {
							"colIndex": 1,
							"rowIndex": 0
						});
					})(group_8);
					container.addChild(group_8, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var grid_2 = linker.grid_2 = new cpr.controls.Grid("grdDetail");
					grid_2.fieldLabel = "학생등록정보";
					grid_2.init({
						"dataSet": app.lookup("dsDetail"),
						"columnMovable": true,
						"resizableColumns": "all",
						"columns": [
							{"width": "25px"},
							{"width": "25px"},
							{"width": "40px"},
							{"width": "100px"},
							{"width": "100px"},
							{
								"width": "100px",
								"visible": false
							},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"}
						],
						"header": {
							"rows": [{"height": "24px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.filterable = false;
										cell.sortable = false;
										cell.columnType = "checkbox";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "No";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3},
									"configurator": function(cell){
										cell.targetColumnName = "SCH_YEAR";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "학년도";
										cell.style.setClasses(["require"]);
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 4},
									"configurator": function(cell){
										cell.targetColumnName = "SMT_RCD";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "학기";
										cell.style.setClasses(["require"]);
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 5},
									"configurator": function(cell){
										cell.targetColumnName = "STUD_NO";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "학번";
										cell.style.setClasses(["require"]);
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 6},
									"configurator": function(cell){
										cell.targetColumnName = "REG_CLS_RCD";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "등록분류";
										cell.style.setClasses(["require"]);
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 7},
									"configurator": function(cell){
										cell.targetColumnName = "IFR_DT";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "고지일자";
										cell.style.setClasses(["require"]);
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 8},
									"configurator": function(cell){
										cell.targetColumnName = "PAY_CLOSE_DT";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "납일일자";
										cell.style.setClasses(["require"]);
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 9},
									"configurator": function(cell){
										cell.targetColumnName = "DIV_PAY_REQ_DT";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "분납요청일자";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 10},
									"configurator": function(cell){
										cell.targetColumnName = "DIV_PAY_DESC";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "분납내역";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 11},
									"configurator": function(cell){
										cell.targetColumnName = "DIV_PAY_TYPE_CD";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "분납유형코드";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 12},
									"configurator": function(cell){
										cell.targetColumnName = "DIV_PAY_STAT_RCD";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "분납상태코드";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 13},
									"configurator": function(cell){
										cell.targetColumnName = "DIV_PAY_NO";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "분납번호";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 14},
									"configurator": function(cell){
										cell.targetColumnName = "BKG_PNT";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "수강신청학점";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 15},
									"configurator": function(cell){
										cell.targetColumnName = "BKG_TIME";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "수강신청시간";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 16},
									"configurator": function(cell){
										cell.targetColumnName = "REG_STUD_DIV_RCD";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "등록생구분";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 17},
									"configurator": function(cell){
										cell.targetColumnName = "REMARK";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "비고";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 18},
									"configurator": function(cell){
										cell.targetColumnName = "REF_KEY";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "참조키";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.text = "F";
									}
								}
							]
						},
						"detail": {
							"rows": [{"height": "24px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.columnType = "checkbox";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.columnType = "rowindex";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3},
									"configurator": function(cell){
										cell.columnName = "SCH_YEAR";
										cell.control = (function(){
											var numberEditor_2 = new cpr.controls.NumberEditor("nbe2");
											numberEditor_2.min = 1900.0;
											numberEditor_2.max = 9999.0;
											numberEditor_2.bind("value").toDataColumn("SCH_YEAR");
											return numberEditor_2;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 4},
									"configurator": function(cell){
										cell.columnName = "SMT_RCD";
										cell.control = (function(){
											var comboBox_6 = new cpr.controls.ComboBox("cmb6");
											(function(comboBox_6){
												comboBox_6.setItemSet(app.lookup("dsSmtRcd"), {
													"label": "CD_NM",
													"value": "CD"
												});
											})(comboBox_6);
											comboBox_6.bind("value").toDataColumn("SMT_RCD");
											return comboBox_6;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 5},
									"configurator": function(cell){
										cell.columnName = "STUD_NO";
										cell.control = (function(){
											var inputBox_16 = new cpr.controls.InputBox("ipb10");
											inputBox_16.bind("value").toDataColumn("STUD_NO");
											return inputBox_16;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 6},
									"configurator": function(cell){
										cell.columnName = "REG_CLS_RCD";
										cell.control = (function(){
											var comboBox_7 = new cpr.controls.ComboBox("cmb7");
											(function(comboBox_7){
												comboBox_7.setItemSet(app.lookup("dsRegClsRcd"), {
													"label": "CD_NM",
													"value": "CD"
												});
											})(comboBox_7);
											comboBox_7.bind("value").toDataColumn("REG_CLS_RCD");
											return comboBox_7;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 7},
									"configurator": function(cell){
										cell.columnName = "IFR_DT";
										cell.control = (function(){
											var dateInput_1 = new cpr.controls.DateInput("dti1");
											dateInput_1.bind("value").toDataColumn("IFR_DT");
											return dateInput_1;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 8},
									"configurator": function(cell){
										cell.columnName = "PAY_CLOSE_DT";
										cell.control = (function(){
											var dateInput_2 = new cpr.controls.DateInput("dti2");
											dateInput_2.bind("value").toDataColumn("PAY_CLOSE_DT");
											return dateInput_2;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 9},
									"configurator": function(cell){
										cell.columnName = "DIV_PAY_REQ_DT";
										cell.control = (function(){
											var dateInput_3 = new cpr.controls.DateInput("dti3");
											dateInput_3.bind("value").toDataColumn("DIV_PAY_REQ_DT");
											return dateInput_3;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 10},
									"configurator": function(cell){
										cell.columnName = "DIV_PAY_DESC";
										cell.control = (function(){
											var inputBox_17 = new cpr.controls.InputBox("ipb12");
											inputBox_17.bind("value").toDataColumn("DIV_PAY_DESC");
											return inputBox_17;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 11},
									"configurator": function(cell){
										cell.columnName = "DIV_PAY_TYPE_CD";
										cell.control = (function(){
											var inputBox_18 = new cpr.controls.InputBox("ipb13");
											inputBox_18.bind("value").toDataColumn("DIV_PAY_TYPE_CD");
											return inputBox_18;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 12},
									"configurator": function(cell){
										cell.columnName = "DIV_PAY_STAT_RCD";
										cell.control = (function(){
											var comboBox_8 = new cpr.controls.ComboBox("cmb8");
											(function(comboBox_8){
												comboBox_8.setItemSet(app.lookup("dsDivPayStatRcd"), {
													"label": "CD_NM",
													"value": "CD"
												});
											})(comboBox_8);
											comboBox_8.bind("value").toDataColumn("DIV_PAY_STAT_RCD");
											return comboBox_8;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 13},
									"configurator": function(cell){
										cell.columnName = "DIV_PAY_NO";
										cell.control = (function(){
											var inputBox_19 = new cpr.controls.InputBox("ipb20");
											inputBox_19.bind("value").toDataColumn("DIV_PAY_NO");
											return inputBox_19;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 14},
									"configurator": function(cell){
										cell.columnName = "BKG_PNT";
										cell.control = (function(){
											var inputBox_20 = new cpr.controls.InputBox("ipb23");
											inputBox_20.bind("value").toDataColumn("BKG_PNT");
											return inputBox_20;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 15},
									"configurator": function(cell){
										cell.columnName = "BKG_TIME";
										cell.control = (function(){
											var inputBox_21 = new cpr.controls.InputBox("ipb24");
											inputBox_21.bind("value").toDataColumn("BKG_TIME");
											return inputBox_21;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 16},
									"configurator": function(cell){
										cell.columnName = "REG_STUD_DIV_RCD";
										cell.control = (function(){
											var comboBox_9 = new cpr.controls.ComboBox("cmb9");
											(function(comboBox_9){
												comboBox_9.setItemSet(app.lookup("dsRegStudDivRcd"), {
													"label": "CD_NM",
													"value": "CD"
												});
											})(comboBox_9);
											comboBox_9.bind("value").toDataColumn("REG_STUD_DIV_RCD");
											return comboBox_9;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 17},
									"configurator": function(cell){
										cell.columnName = "REMARK";
										cell.control = (function(){
											var inputBox_22 = new cpr.controls.InputBox("ipb25");
											inputBox_22.bind("value").toDataColumn("REMARK");
											return inputBox_22;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 18},
									"configurator": function(cell){
										cell.columnName = "REF_KEY";
										cell.control = (function(){
											var inputBox_23 = new cpr.controls.InputBox("ipb26");
											inputBox_23.bind("value").toDataColumn("REF_KEY");
											return inputBox_23;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.control = (function(){
											var output_4 = new cpr.controls.Output();
											return output_4;
										})();
									}
								}
							]
						}
					});
					if(typeof onGrdDetailUpdate == "function") {
						grid_2.addEventListener("update", onGrdDetailUpdate);
					}
					container.addChild(grid_2, {
						"colIndex": 0,
						"rowIndex": 1
					});
				})(group_7);
				container.addChild(group_7, {
					"colIndex": 0,
					"rowIndex": 1
				});
			})(group_4);
			container.addChild(group_4, {
				"width": "1320px",
				"height": "608px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			if(typeof onBodyInit == "function"){
				app.addEventListener("init", onBodyInit);
			}
			// Linking
			linker.userDefinedControl_3.ctrl = linker.grid_1;
			linker.userDefinedControl_4.grid = linker.grid_1;
			linker.userDefinedControl_6.ctrl = linker.grid_2;
			linker.userDefinedControl_7.grid = linker.grid_2;
		}
	});
	app.title = "템플릿(그리드+그리드)";
	cpr.core.Platform.INSTANCE.register(app);
})();
