/*
 * App URI: app/exam/dev/egov/gridForm
 * Source Location: app/exam/dev/egov/gridForm.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/exam/dev/egov/gridForm", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * cmnCGrid.js
			 * Created at 2020. 3. 9. 오후 12:49:14.
			 *
			 * @author skyha
			 ************************************************/
			
			var util = createCommonUtil();
			
			/*
			 * Body에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
			
				util.Submit.send(app, "subOnload", function(pbSuccess){
					if(pbSuccess){
						
					}
				});
			}
			
			
			/**
			 * 메시지 목록데이터를 조회한다.
			 * @param psStatus - 조회 상태(저장 후 조회인 경우에는 'save' 구분값 넘김)
			 */
			function doList(psStatus){
			
				//조회 서브미션 호출
				util.Submit.send(app, "subList", function(pbSuccess){
					if(pbSuccess) {
						if(psStatus == "save"){
							//갱신된 데이터가 조회되었습니다.
							util.Msg.notify(app, "INF-M005");
						}else{
							//조회되었습니다.
							util.Msg.notify(app, "INF-M001");
						}
					}
				});
			}
			
			/*
			 * 사용자 정의 컨트롤에서 search 이벤트 발생 시 호출.
			 * 조회버튼 클릭시 이벤트
			 */
			function onCombtnsearch1Search(/* cpr.events.CUIEvent */ e){
				
				// 데이터 변경사항 체크
				if (util.Grid.isModified(app, "grdCmnTmpReg", "CRM")) {
					return false;
				}
				
				// 조회조건 유효성 체크
				if(!util.validate(app, "grpSearch")) return false;
				
				doList();
				
				
			}
			
			 
			
			
			/*
			 * 사용자 정의 컨트롤에서 save 이벤트 발생 시 호출.
			 * 저장 클릭 이벤트
			 */
			function onCombutton2Save(/* cpr.event.CUIEvent */ e){
				
				if (!util.Grid.isModified(app, "grdCmnTmpReg", "MSG")) return false;
				
				if (!util.validate(app, "grdCmnTmpReg")) return false;
				
				util.Submit.send(app, "subSave", function(pbSuccess){
					if(pbSuccess){
						doList("save");
					}
				});
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsSample");
			dataSet_1.parseData({
				"info": "ID",
				"columns": [
					{"name": "ID"},
					{"name": "NAME"},
					{"name": "DESCRIPTION"},
					{"name": "USE_YN"},
					{"name": "REG_USER"}
				]
			});
			app.register(dataSet_1);
			var dataMap_1 = new cpr.data.DataMap("dmParam");
			dataMap_1.parseData({
				"columns" : [{"name": "NAME"}]
			});
			app.register(dataMap_1);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/OneGrid/onLoad.do";
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/OneGrid/list.do";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataSet_1, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSave");
			submission_3.action = "/OneGrid/save.do";
			submission_3.addRequestData(dataSet_1);
			app.register(submission_3);
			
			app.supportMedia("all and (min-width: 1320px)", "eXFrame");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1319px)", "default");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.setColumns(["1fr"]);
			formLayout_1.setRows(["67px", "1fr"]);
			formLayout_1.setRowAutoSizing(0, true);
			container.setLayout(formLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpHeader");
			group_1.style.setClasses(["header-box"]);
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_1.spacing = 0;
			group_1.setLayout(verticalLayout_1);
			(function(container){
				var userDefinedControl_1 = new udc.com.appHeader("appheader");
				container.addChild(userDefinedControl_1, {
					"width": "500px",
					"height": "30px"
				});
				var group_2 = new cpr.controls.Container("grpSearch");
				group_2.userAttr({
					"mobile-column-count": "2",
					"tablet-column-count": "2"
				});
				group_2.style.setClasses(["search-box"]);
				// Layout
				var formLayout_2 = new cpr.controls.layouts.FormLayout();
				formLayout_2.topMargin = "5px";
				formLayout_2.rightMargin = "5px";
				formLayout_2.bottomMargin = "5px";
				formLayout_2.leftMargin = "5px";
				formLayout_2.setColumns(["120px", "200px", "1fr", "60px"]);
				formLayout_2.setRows(["25px"]);
				formLayout_2.setRowAutoSizing(0, true);
				group_2.setLayout(formLayout_2);
				(function(container){
					var output_1 = new cpr.controls.Output();
					output_1.value = "NAME";
					container.addChild(output_1, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var inputBox_1 = new cpr.controls.InputBox("ipb1");
					inputBox_1.fieldLabel = "학과";
					inputBox_1.tooltip = "학과";
					inputBox_1.userAttr({"required": ""});
					container.addChild(inputBox_1, {
						"colIndex": 1,
						"rowIndex": 0
					});
					var group_3 = new cpr.controls.Container("grp1");
					// Layout
					var formLayout_3 = new cpr.controls.layouts.FormLayout();
					formLayout_3.setColumns(["3fr", "60px"]);
					formLayout_3.setRows(["25px"]);
					formLayout_3.setRowAutoSizing(0, true);
					group_3.setLayout(formLayout_3);
					(function(container){
						var userDefinedControl_2 = new udc.com.comBtnSearch("combtnsearch");
						if(typeof onCombtnsearch1Search == "function") {
							userDefinedControl_2.addEventListener("search", onCombtnsearch1Search);
						}
						container.addChild(userDefinedControl_2, {
							"colIndex": 1,
							"rowIndex": 0,
							"horizontalAlign": "right",
							"verticalAlign": "fill",
							"width": 60
						});
					})(group_3);
					container.addChild(group_3, {
						"colIndex": 2,
						"rowIndex": 0,
						"colSpan": 2,
						"rowSpan": 1
					});
				})(group_2);
				container.addChild(group_2, {
					"autoSize": "height",
					"width": "1320px",
					"height": "37px"
				});
			})(group_1);
			container.addChild(group_1, {
				"colIndex": 0,
				"rowIndex": 0
			});
			
			var group_4 = new cpr.controls.Container("grpData");
			group_4.userAttr({
				"mobile-column-count": "1",
				"tablet-column-count": "1"
			});
			// Layout
			var formLayout_4 = new cpr.controls.layouts.FormLayout();
			formLayout_4.topMargin = "0px";
			formLayout_4.rightMargin = "0px";
			formLayout_4.bottomMargin = "0px";
			formLayout_4.leftMargin = "0px";
			formLayout_4.horizontalSpacing = "5px";
			formLayout_4.verticalSpacing = "5px";
			formLayout_4.setColumns(["1fr", "550px"]);
			formLayout_4.setRows(["1fr"]);
			group_4.setLayout(formLayout_4);
			(function(container){
				var group_5 = new cpr.controls.Container("grp2");
				// Layout
				var formLayout_5 = new cpr.controls.layouts.FormLayout();
				formLayout_5.setColumns(["1fr", "260px"]);
				formLayout_5.setRows(["25px", "1fr"]);
				group_5.setLayout(formLayout_5);
				(function(container){
					var userDefinedControl_3 = linker.userDefinedControl_3 = new udc.com.comTitle("comtitle1");
					container.addChild(userDefinedControl_3, {
						"colIndex": 0,
						"rowIndex": 0,
						"colSpan": 2,
						"rowSpan": 1
					});
					var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdCmnTmpReg");
					grid_1.fieldLabel = "학생정보";
					grid_1.userAttr({"bindDataFormId": "grpCmnTmpReg"});
					grid_1.init({
						"dataSet": app.lookup("dsSample"),
						"columnMovable": true,
						"selectionMulti": "multi",
						"autoFit": "3, 4, 5, 6, 7",
						"resizableColumns": "all",
						"columns": [
							{"width": "25px"},
							{"width": "25px"},
							{"width": "40px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"}
						],
						"header": {
							"rows": [{"height": "27"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.filterable = false;
										cell.sortable = false;
										cell.columnType = "checkbox";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "No";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3},
									"configurator": function(cell){
										cell.text = "ID";
										cell.style.setClasses(["require"]);
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 4},
									"configurator": function(cell){
										cell.text = "NAME";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 5},
									"configurator": function(cell){
										cell.text = "DESC";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 6},
									"configurator": function(cell){
										cell.text = "USE_YN";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 7},
									"configurator": function(cell){
										cell.text = "REG_USER";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.text = "F";
									}
								}
							]
						},
						"detail": {
							"rows": [{"height": "24px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.columnType = "checkbox";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.columnType = "rowindex";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3},
									"configurator": function(cell){
										cell.columnName = "ID";
										cell.control = (function(){
											var inputBox_2 = new cpr.controls.InputBox("ipb19");
											inputBox_2.readOnly = true;
											inputBox_2.userAttr({"required": "Y"});
											inputBox_2.bind("value").toDataColumn("ID");
											return inputBox_2;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 4},
									"configurator": function(cell){
										cell.columnName = "NAME";
										cell.control = (function(){
											var inputBox_3 = new cpr.controls.InputBox("ipb20");
											inputBox_3.readOnly = true;
											inputBox_3.bind("value").toDataColumn("NAME");
											return inputBox_3;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 5},
									"configurator": function(cell){
										cell.columnName = "DESCRIPTION";
										cell.control = (function(){
											var inputBox_4 = new cpr.controls.InputBox("ipb21");
											inputBox_4.readOnly = true;
											inputBox_4.bind("value").toDataColumn("DESCRIPTION");
											return inputBox_4;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 6},
									"configurator": function(cell){
										cell.columnName = "USE_YN";
										cell.control = (function(){
											var inputBox_5 = new cpr.controls.InputBox("ipb22");
											inputBox_5.readOnly = true;
											inputBox_5.bind("value").toDataColumn("USE_YN");
											return inputBox_5;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 7},
									"configurator": function(cell){
										cell.columnName = "REG_USER";
										cell.control = (function(){
											var inputBox_6 = new cpr.controls.InputBox("ipb23");
											inputBox_6.readOnly = true;
											inputBox_6.bind("value").toDataColumn("REG_USER");
											return inputBox_6;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.control = (function(){
											var output_2 = new cpr.controls.Output();
											return output_2;
										})();
									}
								}
							]
						}
					});
					container.addChild(grid_1, {
						"colIndex": 0,
						"rowIndex": 1,
						"colSpan": 2,
						"rowSpan": 1
					});
				})(group_5);
				container.addChild(group_5, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var group_6 = new cpr.controls.Container("grp3");
				// Layout
				var formLayout_6 = new cpr.controls.layouts.FormLayout();
				formLayout_6.setColumns(["1fr"]);
				formLayout_6.setRows(["25px", "1fr"]);
				group_6.setLayout(formLayout_6);
				(function(container){
					var group_7 = linker.group_7 = new cpr.controls.Container("grpCmnTmpReg");
					group_7.fieldLabel = "학생상세";
					group_7.style.setClasses(["form-box"]);
					// Layout
					var formLayout_7 = new cpr.controls.layouts.FormLayout();
					formLayout_7.topMargin = "5px";
					formLayout_7.rightMargin = "5px";
					formLayout_7.bottomMargin = "5px";
					formLayout_7.leftMargin = "5px";
					formLayout_7.setColumns(["100px", "1fr", "1px", "100px", "1fr"]);
					formLayout_7.setRows(["25px", "25px", "25px", "25px", "25px", "25px", "25px", "25px", "25px", "25px", "25px", "1fr"]);
					group_7.setLayout(formLayout_7);
					(function(container){
						var output_3 = new cpr.controls.Output();
						output_3.value = "ID";
						output_3.style.setClasses(["require"]);
						container.addChild(output_3, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var output_4 = new cpr.controls.Output();
						output_4.value = "NAME";
						container.addChild(output_4, {
							"colIndex": 3,
							"rowIndex": 0
						});
						var output_5 = new cpr.controls.Output();
						output_5.value = "REG_USER";
						container.addChild(output_5, {
							"colIndex": 0,
							"rowIndex": 2
						});
						var inputBox_7 = new cpr.controls.InputBox("ipb3");
						inputBox_7.bind("value").toDataColumn("ID");
						container.addChild(inputBox_7, {
							"colIndex": 1,
							"rowIndex": 0
						});
						var inputBox_8 = new cpr.controls.InputBox("ipb4");
						inputBox_8.bind("value").toDataColumn("DESCRIPTION");
						container.addChild(inputBox_8, {
							"colIndex": 1,
							"rowIndex": 1
						});
						var inputBox_9 = new cpr.controls.InputBox("ipb5");
						inputBox_9.bind("value").toDataColumn("REG_USER");
						container.addChild(inputBox_9, {
							"colIndex": 1,
							"rowIndex": 2
						});
						var output_6 = new cpr.controls.Output();
						output_6.value = "USE_YN";
						container.addChild(output_6, {
							"colIndex": 3,
							"rowIndex": 1
						});
						var output_7 = new cpr.controls.Output();
						output_7.value = "DESC";
						container.addChild(output_7, {
							"colIndex": 0,
							"rowIndex": 1
						});
						var inputBox_10 = new cpr.controls.InputBox("ipb8");
						inputBox_10.bind("value").toDataColumn("NAME");
						container.addChild(inputBox_10, {
							"colIndex": 4,
							"rowIndex": 0
						});
						var checkBox_1 = new cpr.controls.CheckBox("cbx1");
						checkBox_1.trueValue = "Y";
						checkBox_1.text = "Y";
						checkBox_1.bind("value").toDataColumn("USE_YN");
						container.addChild(checkBox_1, {
							"colIndex": 4,
							"rowIndex": 1
						});
					})(group_7);
					container.addChild(group_7, {
						"colIndex": 0,
						"rowIndex": 1
					});
					var group_8 = new cpr.controls.Container("grp4");
					// Layout
					var formLayout_8 = new cpr.controls.layouts.FormLayout();
					formLayout_8.verticalSpacing = "5px";
					formLayout_8.setColumns(["1fr", "260px"]);
					formLayout_8.setRows(["1fr"]);
					group_8.setLayout(formLayout_8);
					(function(container){
						var userDefinedControl_4 = linker.userDefinedControl_4 = new udc.com.comFormTitle("comformtitle1");
						container.addChild(userDefinedControl_4, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var userDefinedControl_5 = linker.userDefinedControl_5 = new udc.com.comButton("combutton2");
						userDefinedControl_5.focusColumnName = "STUD_NO";
						if(typeof onCombutton2Save == "function") {
							userDefinedControl_5.addEventListener("save", onCombutton2Save);
						}
						container.addChild(userDefinedControl_5, {
							"colIndex": 1,
							"rowIndex": 0
						});
					})(group_8);
					container.addChild(group_8, {
						"colIndex": 0,
						"rowIndex": 0
					});
				})(group_6);
				container.addChild(group_6, {
					"colIndex": 1,
					"rowIndex": 0
				});
			})(group_4);
			container.addChild(group_4, {
				"colIndex": 0,
				"rowIndex": 1
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_3.ctrl = linker.grid_1;
			linker.group_7.setBindContext(new cpr.bind.GridSelectionContext(linker.grid_1));
			linker.userDefinedControl_4.ctrl = linker.group_7;
			linker.userDefinedControl_5.grid = linker.grid_1;
		}
	});
	app.title = "템플릿(그리드+폼)";
	cpr.core.Platform.INSTANCE.register(app);
})();
