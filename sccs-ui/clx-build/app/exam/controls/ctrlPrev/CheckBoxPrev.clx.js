/*
 * App URI: app/exam/controls/ctrlPrev/CheckBoxPrev
 * Source Location: app/exam/controls/ctrlPrev/CheckBoxPrev.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/exam/controls/ctrlPrev/CheckBoxPrev", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": [
					{"CD": "10", "CD_NM": "서울"},
					{"CD": "20", "CD_NM": "수원"},
					{"CD": "30", "CD_NM": "울산광역시"},
					{"CD": "40", "CD_NM": "부산광역시"},
					{"CD": "50", "CD_NM": "광주광역시"}
				]
			});
			app.register(dataSet_1);
			
			app.supportMedia("all and (min-width: 1320px)", "eXFrame");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1319px)", "default");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpSearch");
			// Layout
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_2.spacing = 0;
			group_1.setLayout(verticalLayout_2);
			(function(container){
				var userDefinedControl_1 = new udc.com.appHeader("appheader1");
				userDefinedControl_1.initializeYn = "N";
				container.addChild(userDefinedControl_1, {
					"width": "500px",
					"height": "30px"
				});
			})(group_1);
			container.addChild(group_1, {
				"autoSize": "height",
				"width": "400px",
				"height": "30px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.scrollable = false;
			formLayout_1.topMargin = "0px";
			formLayout_1.rightMargin = "0px";
			formLayout_1.bottomMargin = "0px";
			formLayout_1.leftMargin = "0px";
			formLayout_1.horizontalSpacing = "0px";
			formLayout_1.verticalSpacing = "0px";
			formLayout_1.setColumns(["1fr"]);
			formLayout_1.setRows(["25px", "1fr"]);
			group_2.setLayout(formLayout_1);
			(function(container){
				var output_1 = new cpr.controls.Output("opt7");
				output_1.value = "체크박스(CheckBox)는 체크되거나 체크되지 않은 상태를 선택하는 컨트롤입니다.";
				container.addChild(output_1, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var group_3 = new cpr.controls.Container("grp2");
				group_3.style.setClasses(["cl-form-group"]);
				// Layout
				var formLayout_2 = new cpr.controls.layouts.FormLayout();
				formLayout_2.topMargin = "5px";
				formLayout_2.rightMargin = "5px";
				formLayout_2.bottomMargin = "5px";
				formLayout_2.leftMargin = "5px";
				formLayout_2.horizontalSpacing = "5px";
				formLayout_2.verticalSpacing = "5px";
				formLayout_2.horizontalSeparatorWidth = 1;
				formLayout_2.verticalSeparatorWidth = 1;
				formLayout_2.setColumns(["300px", "1fr"]);
				formLayout_2.setUseColumnShade(0, true);
				formLayout_2.setRows(["1fr", "1fr", "1fr", "1fr", "1fr", "1fr"]);
				group_3.setLayout(formLayout_2);
				(function(container){
					var checkBox_1 = new cpr.controls.CheckBox("ckb6");
					checkBox_1.value = "true";
					checkBox_1.text = "Check";
					container.addChild(checkBox_1, {
						"colIndex": 1,
						"rowIndex": 2
					});
					var output_2 = new cpr.controls.Output();
					output_2.value = "[value = true]\r\n1. 체크박스가 체크된 상태이다.\r\n";
					container.addChild(output_2, {
						"colIndex": 0,
						"rowIndex": 2
					});
					var output_3 = new cpr.controls.Output();
					output_3.value = "[readOnly = true]\r\n1. 체크박스를 체크한다.\r\n2. 체크가 되지 않는다.\r\n";
					container.addChild(output_3, {
						"colIndex": 0,
						"rowIndex": 3
					});
					var checkBox_2 = new cpr.controls.CheckBox("ckb9");
					checkBox_2.readOnly = true;
					checkBox_2.text = "Check";
					container.addChild(checkBox_2, {
						"colIndex": 1,
						"rowIndex": 3
					});
					var output_4 = new cpr.controls.Output();
					output_4.value = "[text = check]\r\n1. 체크박스 우측에 \"Check\"라고 표시된다.";
					container.addChild(output_4, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var checkBox_3 = new cpr.controls.CheckBox("ckb10");
					checkBox_3.trueValue = "Y";
					checkBox_3.text = "Check";
					container.addChild(checkBox_3, {
						"colIndex": 1,
						"rowIndex": 0
					});
					var output_5 = new cpr.controls.Output();
					output_5.value = "[iconAlign = right]\r\n1. 체크박스가 우측에 위치한다.";
					container.addChild(output_5, {
						"colIndex": 0,
						"rowIndex": 1
					});
					var checkBox_4 = new cpr.controls.CheckBox("ckb11");
					checkBox_4.trueValue = "Y";
					checkBox_4.text = "Check";
					checkBox_4.iconAlign = "right";
					container.addChild(checkBox_4, {
						"colIndex": 1,
						"rowIndex": 1
					});
					var output_6 = new cpr.controls.Output();
					output_6.value = "[fixedWidth = true]\r\n1. 아이템의 넓이가 고정되어있다.";
					container.addChild(output_6, {
						"colIndex": 0,
						"rowIndex": 5
					});
					var output_7 = new cpr.controls.Output();
					output_7.value = "[enabled = false]\r\n1. 체크박스를 클릭한다.\r\n2. 체크박스 자체가 선택되지 않는다.";
					container.addChild(output_7, {
						"colIndex": 0,
						"rowIndex": 4
					});
					var checkBox_5 = new cpr.controls.CheckBox("ckb2");
					checkBox_5.enabled = false;
					checkBox_5.text = "Check";
					container.addChild(checkBox_5, {
						"colIndex": 1,
						"rowIndex": 4
					});
					var group_4 = new cpr.controls.Container("grp1");
					// Layout
					var formLayout_3 = new cpr.controls.layouts.FormLayout();
					formLayout_3.horizontalSpacing = "5px";
					formLayout_3.verticalSpacing = "5px";
					formLayout_3.horizontalSeparatorWidth = 1;
					formLayout_3.verticalSeparatorWidth = 1;
					formLayout_3.setColumns(["80px", "1fr"]);
					formLayout_3.setRows(["30px", "1fr"]);
					group_4.setLayout(formLayout_3);
					(function(container){
						var checkBox_6 = new cpr.controls.CheckBox("cbx1");
						checkBox_6.text = "CheckBox";
						checkBox_6.fixedWidth = true;
						checkBox_6.style.setClasses(["text-ellipsis"]);
						container.addChild(checkBox_6, {
							"colIndex": 0,
							"rowIndex": 0,
							"horizontalAlign": "fill",
							"verticalAlign": "fill"
						});
						var output_8 = new cpr.controls.Output();
						output_8.value = "checkbox.part.less 에서 말줄임표 스타일 적용하기 위해서는 fixedWidth = true 로 설정해야한다.";
						output_8.style.css({
							"color" : "#757272"
						});
						container.addChild(output_8, {
							"colIndex": 0,
							"rowIndex": 1,
							"colSpan": 2,
							"rowSpan": 1
						});
						var hTMLSnippet_1 = new cpr.controls.HTMLSnippet("hspt1");
						hTMLSnippet_1.value = "<style>\r\n.text-ellipsis.cl-checkbox .cl-text{\r\n\ttext-overflow: ellipsis;\r\n\toverflow: hidden;\r\n\twhite-space : nowrap;\r\n}\r\n<\/style>";
						container.addChild(hTMLSnippet_1, {
							"colIndex": 1,
							"rowIndex": 0
						});
					})(group_4);
					container.addChild(group_4, {
						"colIndex": 1,
						"rowIndex": 5,
						"colSpan": 1,
						"rowSpan": 1
					});
				})(group_3);
				container.addChild(group_3, {
					"colIndex": 0,
					"rowIndex": 1
				});
			})(group_2);
			container.addChild(group_2, {
				"width": "400px",
				"height": "645px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "체크박스 관련 속성";
	cpr.core.Platform.INSTANCE.register(app);
})();
