/*
 * App URI: app/exam/controls/ctrlPrev/FileInputPrev
 * Source Location: app/exam/controls/ctrlPrev/FileInputPrev.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/exam/controls/ctrlPrev/FileInputPrev", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			
			// Header
			
			app.supportMedia("all and (min-width: 1320px)", "eXFrame");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1319px)", "default");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpSearch");
			// Layout
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_2.spacing = 0;
			group_1.setLayout(verticalLayout_2);
			(function(container){
				var userDefinedControl_1 = new udc.com.appHeader("appheader1");
				userDefinedControl_1.initializeYn = "N";
				container.addChild(userDefinedControl_1, {
					"width": "500px",
					"height": "30px"
				});
			})(group_1);
			container.addChild(group_1, {
				"autoSize": "height",
				"width": "400px",
				"height": "30px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.scrollable = false;
			formLayout_1.topMargin = "0px";
			formLayout_1.rightMargin = "0px";
			formLayout_1.bottomMargin = "0px";
			formLayout_1.leftMargin = "0px";
			formLayout_1.horizontalSpacing = "0px";
			formLayout_1.verticalSpacing = "0px";
			formLayout_1.setColumns(["1fr"]);
			formLayout_1.setRows(["25px", "1fr"]);
			group_2.setLayout(formLayout_1);
			(function(container){
				var output_1 = new cpr.controls.Output("opt7");
				output_1.value = "파일인풋(FileInput)은 사용자가 파일은 선택할 수 있도록 해주는 컨트롤입니다.";
				container.addChild(output_1, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var group_3 = new cpr.controls.Container("grp2");
				group_3.style.setClasses(["cl-form-group"]);
				// Layout
				var formLayout_2 = new cpr.controls.layouts.FormLayout();
				formLayout_2.topMargin = "5px";
				formLayout_2.rightMargin = "5px";
				formLayout_2.bottomMargin = "5px";
				formLayout_2.leftMargin = "5px";
				formLayout_2.horizontalSpacing = "5px";
				formLayout_2.verticalSpacing = "5px";
				formLayout_2.horizontalSeparatorWidth = 1;
				formLayout_2.verticalSeparatorWidth = 1;
				formLayout_2.setColumns(["300px", "1fr"]);
				formLayout_2.setUseColumnShade(0, true);
				formLayout_2.setRows(["1fr", "1fr", "1fr", "1fr", "1fr", "1fr"]);
				group_3.setLayout(formLayout_2);
				(function(container){
					var output_2 = new cpr.controls.Output();
					output_2.value = "[placeholder = \"파일을 첨부 해주세요\"]\r\n1. 파일 선택 전에 \"파일을 첨부 해주세요\"라는 텍스트가 보인다.";
					container.addChild(output_2, {
						"colIndex": 0,
						"rowIndex": 0,
						"colSpan": 1,
						"rowSpan": 1
					});
					var fileInput_1 = new cpr.controls.FileInput("fit3");
					fileInput_1.limitFileSizeUnit = "kb";
					fileInput_1.limitFileSize = 100;
					container.addChild(fileInput_1, {
						"colIndex": 1,
						"rowIndex": 1
					});
					var fileInput_2 = new cpr.controls.FileInput("fit4");
					fileInput_2.multiple = true;
					container.addChild(fileInput_2, {
						"colIndex": 1,
						"rowIndex": 3
					});
					var fileInput_3 = new cpr.controls.FileInput("fit5");
					fileInput_3.droppableFile = false;
					container.addChild(fileInput_3, {
						"colIndex": 1,
						"rowIndex": 4
					});
					var output_3 = new cpr.controls.Output();
					output_3.value = "[multiple = true]\r\n1. 파일인풋을 클릭한다.\r\n2. 여러 파일을 클릭한다.\r\n3. 동시에 여러 파일이 선택된다.";
					container.addChild(output_3, {
						"colIndex": 0,
						"rowIndex": 3
					});
					var output_4 = new cpr.controls.Output();
					output_4.value = "[droppableFile = false]\r\n1. 파일을 드래그한다.\r\n2. 우측 파일인풋창에 드롭한다.\r\n3. 파일인풋에 파일명이 출력되지 않는다.";
					container.addChild(output_4, {
						"colIndex": 0,
						"rowIndex": 4
					});
					var output_5 = new cpr.controls.Output();
					output_5.value = "[limitSize = 100]\r\n[limitFileSizeUnit = kb]\r\n1. 파일인풋을 클릭한다.\r\n2. 100kb 이상의 파일을 선택한다.\r\n3. 파일인풋에 파일명이 출력되지 않는다.";
					container.addChild(output_5, {
						"colIndex": 0,
						"rowIndex": 1
					});
					var output_6 = new cpr.controls.Output();
					output_6.value = "[acceptFile = .png]\r\n1. 파일인풋을 클릭한다.\r\n2. 파일인풋 창 우측 하단에 확장자가 PNG로 표시된다.";
					container.addChild(output_6, {
						"colIndex": 0,
						"rowIndex": 2
					});
					var output_7 = new cpr.controls.Output();
					output_7.value = "[showClearButton = true]\r\n1. 파일인풋을 클릭하고 파일을 추가한다.\r\n2. 파일인풋 우측에 x 표시가 나타난다.\r\n3. x 표시를 클릭한다.\r\n4. 파일인풋에 파일명이 사라진다.";
					container.addChild(output_7, {
						"colIndex": 0,
						"rowIndex": 5
					});
					var fileInput_4 = new cpr.controls.FileInput("fit6");
					fileInput_4.acceptFile = ".png";
					container.addChild(fileInput_4, {
						"colIndex": 1,
						"rowIndex": 2
					});
					var fileInput_5 = new cpr.controls.FileInput("fit7");
					fileInput_5.showClearButton = true;
					container.addChild(fileInput_5, {
						"colIndex": 1,
						"rowIndex": 5
					});
					var fileInput_6 = new cpr.controls.FileInput("fit1");
					fileInput_6.placeholder = "파일을 첨부 해주세요";
					container.addChild(fileInput_6, {
						"colIndex": 1,
						"rowIndex": 0
					});
				})(group_3);
				container.addChild(group_3, {
					"colIndex": 0,
					"rowIndex": 1
				});
			})(group_2);
			container.addChild(group_2, {
				"width": "400px",
				"height": "647px"
			});
		}
	});
	app.title = "파일인풋 관련 속성";
	cpr.core.Platform.INSTANCE.register(app);
})();
