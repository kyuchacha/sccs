/*
 * App URI: app/exam/controls/ctrlPrev/ButtonPrev
 * Source Location: app/exam/controls/ctrlPrev/ButtonPrev.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/exam/controls/ctrlPrev/ButtonPrev", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			
			// Header
			
			app.supportMedia("all and (min-width: 1320px)", "eXFrame");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1319px)", "default");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpSearch");
			// Layout
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_2.spacing = 0;
			group_1.setLayout(verticalLayout_2);
			(function(container){
				var userDefinedControl_1 = new udc.com.appHeader("appheader1");
				userDefinedControl_1.initializeYn = "N";
				container.addChild(userDefinedControl_1, {
					"width": "500px",
					"height": "30px"
				});
			})(group_1);
			container.addChild(group_1, {
				"autoSize": "height",
				"width": "400px",
				"height": "30px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.scrollable = false;
			formLayout_1.topMargin = "0px";
			formLayout_1.rightMargin = "0px";
			formLayout_1.bottomMargin = "0px";
			formLayout_1.leftMargin = "0px";
			formLayout_1.horizontalSpacing = "0px";
			formLayout_1.verticalSpacing = "0px";
			formLayout_1.setColumns(["1fr"]);
			formLayout_1.setRows(["25px", "1fr"]);
			group_2.setLayout(formLayout_1);
			(function(container){
				var output_1 = new cpr.controls.Output("opt7");
				output_1.value = "버튼(Button)은 마우스 클릭이 가능한 컨트롤입니다.";
				container.addChild(output_1, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var group_3 = new cpr.controls.Container("grp7");
				group_3.style.setClasses(["cl-form-group"]);
				// Layout
				var formLayout_2 = new cpr.controls.layouts.FormLayout();
				formLayout_2.topMargin = "5px";
				formLayout_2.rightMargin = "5px";
				formLayout_2.bottomMargin = "5px";
				formLayout_2.leftMargin = "5px";
				formLayout_2.horizontalSpacing = "5px";
				formLayout_2.verticalSpacing = "5px";
				formLayout_2.horizontalSeparatorWidth = 1;
				formLayout_2.verticalSeparatorWidth = 1;
				formLayout_2.setColumns(["300px", "1fr"]);
				formLayout_2.setUseColumnShade(0, true);
				formLayout_2.setRows(["1fr", "1fr", "1fr", "1fr", "1fr"]);
				group_3.setLayout(formLayout_2);
				(function(container){
					var button_1 = new cpr.controls.Button("btn2");
					button_1.visible = false;
					button_1.value = "버튼";
					container.addChild(button_1, {
						"colIndex": 1,
						"rowIndex": 1,
						"horizontalAlign": "left",
						"verticalAlign": "center"
					});
					var button_2 = new cpr.controls.Button("btn4");
					button_2.value = "Button";
					if(typeof onBtn5Focus == "function") {
						button_2.addEventListener("focus", onBtn5Focus);
					}
					container.addChild(button_2, {
						"colIndex": 1,
						"rowIndex": 3,
						"horizontalAlign": "left",
						"verticalAlign": "center"
					});
					var button_3 = new cpr.controls.Button("btn1");
					button_3.enabled = false;
					button_3.value = "버튼";
					container.addChild(button_3, {
						"colIndex": 1,
						"rowIndex": 0,
						"horizontalAlign": "left",
						"verticalAlign": "center"
					});
					var button_4 = new cpr.controls.Button("btn3");
					button_4.tooltip = "Button";
					button_4.value = "버튼";
					container.addChild(button_4, {
						"colIndex": 1,
						"rowIndex": 2,
						"horizontalAlign": "left",
						"verticalAlign": "center"
					});
					var output_2 = new cpr.controls.Output();
					output_2.value = "[visible = false]\r\n1. 버튼이 보이지 않는다.\r\n";
					container.addChild(output_2, {
						"colIndex": 0,
						"rowIndex": 1
					});
					var output_3 = new cpr.controls.Output();
					output_3.value = "[value = \"Button\"]\r\n1. 버튼 안에 텍스트가 \"Button\"으로 표시된다.\r\n";
					container.addChild(output_3, {
						"colIndex": 0,
						"rowIndex": 3
					});
					var output_4 = new cpr.controls.Output();
					output_4.value = "[tooltip = \"Button\"]\r\n1. 버튼 위에 마우스 커서를 올린다.\r\n2. \"Button\"이라는 힌트가 표시된다.\r\n";
					container.addChild(output_4, {
						"colIndex": 0,
						"rowIndex": 2
					});
					var output_5 = new cpr.controls.Output();
					output_5.value = "[enabled = false]\r\n1. 버튼을 클릭한다.\r\n2. 클릭되지 않는다.\r\n";
					container.addChild(output_5, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var button_5 = new cpr.controls.Button("btn6");
					button_5.value = "버튼";
					button_5.icon = "app/theme/common/images/icon/flag/001-south-korea.svg";
					button_5.iconAlign = "right";
					container.addChild(button_5, {
						"colIndex": 1,
						"rowIndex": 4,
						"horizontalAlign": "left",
						"verticalAlign": "center"
					});
					var output_6 = new cpr.controls.Output();
					output_6.value = "[iconAlign = right]\r\n1. 아이콘 이미지가 버튼 우측에 표시된다.\r\n";
					container.addChild(output_6, {
						"colIndex": 0,
						"rowIndex": 4
					});
				})(group_3);
				container.addChild(group_3, {
					"colIndex": 0,
					"rowIndex": 1
				});
			})(group_2);
			container.addChild(group_2, {
				"width": "400px",
				"height": "644px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "버튼 관련 속성";
	cpr.core.Platform.INSTANCE.register(app);
})();
