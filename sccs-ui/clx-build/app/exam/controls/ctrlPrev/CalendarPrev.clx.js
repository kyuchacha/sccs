/*
 * App URI: app/exam/controls/ctrlPrev/CalendarPrev
 * Source Location: app/exam/controls/ctrlPrev/CalendarPrev.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/exam/controls/ctrlPrev/CalendarPrev", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns": [
					{"name": "label"},
					{
						"name": "start",
						"dataType": "string"
					},
					{"name": "end"},
					{"name": "tooltip"},
					{"name": "color"}
				],
				"rows": [
					{"label": "W11", "start": "2021-07-01", "end": "2021-07-01", "tooltip": "test1", "color": "red"},
					{"label": "W12", "start": "2021-07-05", "end": "2021-07-05", "tooltip": "test2", "color": "pink"},
					{"label": "W13", "start": "2021-07-10", "end": "2021-07-10", "tooltip": "test3", "color": "skyblue"}
				]
			});
			app.register(dataSet_1);
			
			app.supportMedia("all and (min-width: 1320px)", "eXFrame");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1319px)", "default");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpSearch");
			// Layout
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_2.spacing = 0;
			group_1.setLayout(verticalLayout_2);
			(function(container){
				var userDefinedControl_1 = new udc.com.appHeader("appheader1");
				userDefinedControl_1.initializeYn = "N";
				container.addChild(userDefinedControl_1, {
					"width": "500px",
					"height": "30px"
				});
			})(group_1);
			container.addChild(group_1, {
				"autoSize": "height",
				"width": "400px",
				"height": "30px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.scrollable = false;
			formLayout_1.topMargin = "0px";
			formLayout_1.rightMargin = "0px";
			formLayout_1.bottomMargin = "0px";
			formLayout_1.leftMargin = "0px";
			formLayout_1.horizontalSpacing = "0px";
			formLayout_1.verticalSpacing = "0px";
			formLayout_1.setColumns(["1fr"]);
			formLayout_1.setRows(["25px", "1fr"]);
			group_2.setLayout(formLayout_1);
			(function(container){
				var output_1 = new cpr.controls.Output("opt7");
				output_1.value = "캘린더(Calendar)는 날짜를 입력하는 컨트롤입니다.";
				container.addChild(output_1, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var group_3 = new cpr.controls.Container("grp7");
				group_3.style.setClasses(["cl-form-group"]);
				// Layout
				var formLayout_2 = new cpr.controls.layouts.FormLayout();
				formLayout_2.topMargin = "5px";
				formLayout_2.rightMargin = "5px";
				formLayout_2.bottomMargin = "5px";
				formLayout_2.leftMargin = "5px";
				formLayout_2.horizontalSpacing = "5px";
				formLayout_2.verticalSpacing = "5px";
				formLayout_2.horizontalSeparatorWidth = 1;
				formLayout_2.verticalSeparatorWidth = 1;
				formLayout_2.setColumns(["300px", "1fr"]);
				formLayout_2.setUseColumnShade(0, true);
				formLayout_2.setRows(["2fr", "2fr", "2fr", "2fr"]);
				group_3.setLayout(formLayout_2);
				(function(container){
					var calendar_1 = new cpr.controls.Calendar("cal3");
					calendar_1.headerVisible = false;
					calendar_1.footerVisible = false;
					calendar_1.selectionType = "multiple";
					(function(calendar_1){
					})(calendar_1);
					container.addChild(calendar_1, {
						"colIndex": 1,
						"rowIndex": 2
					});
					var calendar_2 = new cpr.controls.Calendar("cal7");
					calendar_2.defaultDate = new Date(2021, 0, 1);
					calendar_2.minDate = new Date(2021, 0, 1);
					calendar_2.maxDate = new Date(2021, 11, 31);
					(function(calendar_2){
					})(calendar_2);
					container.addChild(calendar_2, {
						"colIndex": 1,
						"rowIndex": 0
					});
					var output_2 = new cpr.controls.Output();
					output_2.value = "[headerVisible = false]\r\n1. 헤더가 보이지 않는다.\r\n\r\n[footerVisible = false]\r\n1. 푸터가 보이지 않는다.\r\n\r\n[selectionType = multiple]\r\n1. calendar 의 임의의 날짜를 클릭한다.\r\n2. 1과 다른 날짜를 클릭한다.\r\n3. 동시에 1과 2가 모두 선택된다.";
					container.addChild(output_2, {
						"colIndex": 0,
						"rowIndex": 2
					});
					var output_3 = new cpr.controls.Output();
					output_3.value = "[defaultDate = 2021-01-01]\r\n1. 기본 날짜가 21년 1월 1일이다.\r\n\r\n[minDate = 2021-01-01]\r\n1. 최소 날짜가 21년 1월 1일이다.\r\n\r\n[maxDate = 2021-12-31]\r\n1. 최대 날짜가 21년 12월 31이다.";
					container.addChild(output_3, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var output_4 = new cpr.controls.Output();
					output_4.visible = true;
					output_4.value = "[locale = \"en\"]\r\n1. 요일이 영어로 표현된다.\r\n\r\n[headerFormat = YYYY/MM]\r\n[footerFormat = L]\r\n1. 헤더에 날짜가 YYYY/MM 포맷으로 표시된다.\r\n2. 푸터에 날짜가 MM/DD/YYYY 포맷으로 표시된다.\r\n";
					container.addChild(output_4, {
						"colIndex": 0,
						"rowIndex": 1
					});
					var output_5 = new cpr.controls.Output();
					output_5.value = "[showAnniversary = true]\r\n1. 기념일이 표시된다.\r\n\r\n[enabledDateExp = \"getDate() != 15\"]\r\n1. 15일을 클릭한다.\r\n2. 클릭이 되지 않는다.\r\n";
					container.addChild(output_5, {
						"colIndex": 0,
						"rowIndex": 3
					});
					var calendar_3 = new cpr.controls.Calendar("cal10");
					calendar_3.enabledDateExp = "getDate() != 15";
					calendar_3.showAnniversary = true;
					(function(calendar_3){
						calendar_3.setItemSet(app.lookup("ds1"), {
							"label": "label",
							"tooltip": "tooltip",
							"start": "start",
							"end": "end",
							"parseFormat": "YYYY-MM-DD"
						});
					})(calendar_3);
					container.addChild(calendar_3, {
						"colIndex": 1,
						"rowIndex": 3
					});
					var calendar_4 = new cpr.controls.Calendar("cal2");
					calendar_4.locale = "en";
					calendar_4.headerFormat = "YYYY/MM";
					calendar_4.footerFormat = "L";
					(function(calendar_4){
					})(calendar_4);
					container.addChild(calendar_4, {
						"colIndex": 1,
						"rowIndex": 1
					});
				})(group_3);
				container.addChild(group_3, {
					"colIndex": 0,
					"rowIndex": 1
				});
			})(group_2);
			container.addChild(group_2, {
				"width": "400px",
				"height": "648px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "캘린더 관련 속성";
	cpr.core.Platform.INSTANCE.register(app);
})();
