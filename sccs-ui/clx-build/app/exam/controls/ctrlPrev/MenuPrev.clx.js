/*
 * App URI: app/exam/controls/ctrlPrev/MenuPrev
 * Source Location: app/exam/controls/ctrlPrev/MenuPrev.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/exam/controls/ctrlPrev/MenuPrev", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds_list");
			dataSet_1.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"},
					{"name": "parent"},
					{"name": "checked"},
					{"name": "icon"},
					{"name": "tooltip"}
				],
				"rows": [
					{"label": "File", "value": "File", "parent": "root"},
					{"label": "Edit", "value": "Edit", "parent": "root"},
					{"label": "Navigate", "value": "Navigate", "parent": "root"},
					{"label": "Search", "value": "Search", "parent": "root"},
					{"label": "Project", "value": "Project", "parent": "root"},
					{"label": "Run", "value": "Run", "parent": "root"},
					{"label": "Window", "value": "Window", "parent": "root"},
					{"label": "Help", "value": "Help", "parent": "root"},
					{"label": "New Window", "value": "Window1", "parent": "Window"},
					{"label": "Editor", "value": "Window2", "parent": "Window"},
					{"label": "Hide Toolbar", "value": "Window3", "parent": "Window"},
					{"label": "Show View", "value": "Window4", "parent": "Window"},
					{"label": "Perspective", "value": "Window5", "parent": "Window"},
					{"label": "Navigation", "value": "Window6", "parent": "Window"},
					{"label": "Preferences", "value": "Window7", "parent": "Window"},
					{"label": "Toggle Split Editor", "value": "Editor1", "parent": "Window2"},
					{"label": "Toggle Split Editor", "value": "Editor2", "parent": "Window2"},
					{"label": "Clone", "value": "Editor3", "parent": "Window2"},
					{"label": "Other...", "value": "ShowView1", "parent": "Window4"},
					{"label": "Open Perspective", "value": "Perspective1", "parent": "Window5"},
					{"label": "Customize Perspective", "value": "Perspective2", "parent": "Window5"},
					{"label": "Save Perspective As", "value": "Perspective3", "parent": "Window5"},
					{"label": "Reset Perspective", "value": "Perspective4", "parent": "Window5"},
					{"label": "Close Perspective", "value": "Perspective5", "parent": "Window5"},
					{"label": "Close All Perspectives", "value": "Perspective6", "parent": "Window5"},
					{"label": "Other...", "value": "OpenPerspective1", "parent": "Perspective1"},
					{"label": "Show System Menu", "value": "Navigation1", "parent": "Window6"},
					{"label": "Show View Menu", "value": "Navigation2", "parent": "Window6"},
					{"label": "Quick Access", "value": "Navigation3", "parent": "Window6"},
					{"label": "Maximize Active View or Editor", "value": "Navigation4", "parent": "Window6"},
					{"label": "Minimize Active View or Editor", "value": "Navigation5", "parent": "Window6"},
					{"label": "Activate Editor", "value": "Navigation6", "parent": "Window6"},
					{"label": "Next Editor", "value": "Navigation7", "parent": "Window6"},
					{"label": "Previous Editor", "value": "Navigation8", "parent": "Window6"},
					{"label": "Switch to Editor", "value": "Navigation9", "parent": "Window6"},
					{"label": "Next View", "value": "Navigation10", "parent": "Window6"},
					{"label": "Previous View", "value": "Navigation11", "parent": "Window6"},
					{"label": "Next Perspective", "value": "Navigation12", "parent": "Window6"},
					{"label": "Previous Perspective", "value": "Navigation13", "parent": "Window6"},
					{"label": "New File", "value": "File1", "parent": "File"},
					{"label": "New Project", "value": "File2", "parent": "File"},
					{"label": "Save", "value": "File3", "parent": "File"},
					{"label": "Import", "value": "File4", "parent": "File"},
					{"label": "Undo", "value": "Edit1", "parent": "Edit"},
					{"label": "Redo", "value": "Edit2", "parent": "Edit"},
					{"label": "Copy", "value": "Edit3", "parent": "Edit"},
					{"label": "Cut", "value": "Edit4", "parent": "Edit"}
				]
			});
			app.register(dataSet_1);
			
			app.supportMedia("all and (min-width: 1320px)", "eXFrame");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1319px)", "default");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpSearch");
			// Layout
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_2.spacing = 0;
			group_1.setLayout(verticalLayout_2);
			(function(container){
				var userDefinedControl_1 = new udc.com.appHeader("appheader1");
				userDefinedControl_1.initializeYn = "N";
				container.addChild(userDefinedControl_1, {
					"width": "500px",
					"height": "30px"
				});
			})(group_1);
			container.addChild(group_1, {
				"autoSize": "height",
				"width": "400px",
				"height": "30px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.scrollable = false;
			formLayout_1.topMargin = "0px";
			formLayout_1.rightMargin = "0px";
			formLayout_1.bottomMargin = "0px";
			formLayout_1.leftMargin = "0px";
			formLayout_1.horizontalSpacing = "0px";
			formLayout_1.verticalSpacing = "0px";
			formLayout_1.setColumns(["1fr"]);
			formLayout_1.setRows(["25px", "1fr"]);
			group_2.setLayout(formLayout_1);
			(function(container){
				var output_1 = new cpr.controls.Output("opt7");
				output_1.value = "자주 사용되는 메뉴 속성 지정 방법입니다.";
				container.addChild(output_1, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var group_3 = new cpr.controls.Container("grp2");
				group_3.style.setClasses(["cl-form-group"]);
				// Layout
				var formLayout_2 = new cpr.controls.layouts.FormLayout();
				formLayout_2.topMargin = "5px";
				formLayout_2.rightMargin = "5px";
				formLayout_2.bottomMargin = "5px";
				formLayout_2.leftMargin = "5px";
				formLayout_2.horizontalSpacing = "5px";
				formLayout_2.verticalSpacing = "5px";
				formLayout_2.horizontalSeparatorWidth = 1;
				formLayout_2.verticalSeparatorWidth = 1;
				formLayout_2.setColumns(["300px", "1fr"]);
				formLayout_2.setUseColumnShade(0, true);
				formLayout_2.setRows(["1fr", "1fr", "1fr", "1fr", "1fr"]);
				group_3.setLayout(formLayout_2);
				(function(container){
					var menu_1 = new cpr.controls.Menu();
					menu_1.direction = "rtl";
					(function(menu_1){
						menu_1.setItemSet(app.lookup("ds_list"), {
							"label": "label",
							"value": "value",
							"parentValue": "parent"
						});
					})(menu_1);
					container.addChild(menu_1, {
						"colIndex": 1,
						"rowIndex": 3,
						"horizontalAlign": "left",
						"width": 200
					});
					var output_2 = new cpr.controls.Output();
					output_2.value = "[direction = rtl (right to left)]\r\n1. 메뉴를 펼친다.\r\n2. 메뉴가 왼쪽으로 펼쳐진다.";
					container.addChild(output_2, {
						"colIndex": 0,
						"rowIndex": 3
					});
					var output_3 = new cpr.controls.Output();
					output_3.value = "[enabledItemExp : value != \"File\"]\r\n1. File 아이템을 클릭한다.\r\n2. 클릭 되지 않는다.";
					container.addChild(output_3, {
						"colIndex": 0,
						"rowIndex": 1
					});
					var output_4 = new cpr.controls.Output();
					output_4.value = "[displayExp : label + \"[\"+value+\"]\"]\r\n1. 메뉴의 아이템들이 File[File] 포맷으로 보인다.";
					container.addChild(output_4, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var output_5 = new cpr.controls.Output();
					output_5.value = "[expandTrigger = click]\r\n1. 우측에 화살표가 있는 항목에 마우스를 가져간다.\r\n2. 메뉴가 펼쳐지지 않는다.\r\n3. 아이템을 클릭한다.\r\n4. 메뉴가 펼쳐진다.";
					container.addChild(output_5, {
						"colIndex": 0,
						"rowIndex": 4
					});
					var output_6 = new cpr.controls.Output();
					output_6.value = "[filterExp : parent != \"File\"]\r\n1. File 아이템에 \">\"아이콘이 보이지 않는다.";
					container.addChild(output_6, {
						"colIndex": 0,
						"rowIndex": 2
					});
					var menu_2 = new cpr.controls.Menu();
					menu_2.enabledItemExp = "value != \"File\"";
					(function(menu_2){
						menu_2.setItemSet(app.lookup("ds_list"), {
							"label": "label",
							"value": "value",
							"parentValue": "parent"
						});
					})(menu_2);
					container.addChild(menu_2, {
						"colIndex": 1,
						"rowIndex": 1,
						"horizontalAlign": "left",
						"width": 200
					});
					var menu_3 = new cpr.controls.Menu();
					menu_3.value = "aa";
					menu_3.displayExp = "label + \"[\"+value+\"]\"";
					(function(menu_3){
						menu_3.setItemSet(app.lookup("ds_list"), {
							"label": "label",
							"value": "value",
							"parentValue": "parent"
						});
					})(menu_3);
					container.addChild(menu_3, {
						"colIndex": 1,
						"rowIndex": 0,
						"horizontalAlign": "left",
						"width": 200
					});
					var menu_4 = new cpr.controls.Menu();
					menu_4.filterExp = "parent != \"File\"";
					(function(menu_4){
						menu_4.setItemSet(app.lookup("ds_list"), {
							"label": "label",
							"value": "value",
							"parentValue": "parent"
						});
					})(menu_4);
					container.addChild(menu_4, {
						"colIndex": 1,
						"rowIndex": 2,
						"horizontalAlign": "left",
						"width": 200
					});
					var menu_5 = new cpr.controls.Menu();
					menu_5.expandTrigger = "click";
					(function(menu_5){
						menu_5.setItemSet(app.lookup("ds_list"), {
							"label": "label",
							"value": "value",
							"parentValue": "parent"
						});
					})(menu_5);
					container.addChild(menu_5, {
						"colIndex": 1,
						"rowIndex": 4,
						"horizontalAlign": "left",
						"width": 200
					});
				})(group_3);
				container.addChild(group_3, {
					"colIndex": 0,
					"rowIndex": 1
				});
			})(group_2);
			container.addChild(group_2, {
				"width": "400px",
				"height": "644px"
			});
		}
	});
	app.title = "메뉴 관련 속성";
	cpr.core.Platform.INSTANCE.register(app);
})();
