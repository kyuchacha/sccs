/*
 * App URI: app/exam/controls/ctrlPrev/DateInputPrev
 * Source Location: app/exam/controls/ctrlPrev/DateInputPrev.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/exam/controls/ctrlPrev/DateInputPrev", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			
			// Header
			var dataMap_1 = new cpr.data.DataMap("dm1");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "column1",
						"defaultValue": "202102"
					},
					{
						"name": "column2",
						"defaultValue": "20210201"
					},
					{
						"name": "column3",
						"defaultValue": "20210228"
					},
					{
						"name": "column4",
						"defaultValue": "20210201"
					},
					{
						"name": "column5",
						"defaultValue": "20210301"
					}
				]
			});
			app.register(dataMap_1);
			
			app.supportMedia("all and (min-width: 1320px)", "eXFrame");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1319px)", "default");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpSearch");
			// Layout
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_2.spacing = 0;
			group_1.setLayout(verticalLayout_2);
			(function(container){
				var userDefinedControl_1 = new udc.com.appHeader("appheader1");
				userDefinedControl_1.initializeYn = "N";
				container.addChild(userDefinedControl_1, {
					"width": "500px",
					"height": "30px"
				});
			})(group_1);
			container.addChild(group_1, {
				"autoSize": "height",
				"width": "400px",
				"height": "30px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.scrollable = false;
			formLayout_1.topMargin = "0px";
			formLayout_1.rightMargin = "0px";
			formLayout_1.bottomMargin = "0px";
			formLayout_1.leftMargin = "0px";
			formLayout_1.horizontalSpacing = "0px";
			formLayout_1.verticalSpacing = "0px";
			formLayout_1.setColumns(["1fr"]);
			formLayout_1.setRows(["25px", "1fr"]);
			group_2.setLayout(formLayout_1);
			(function(container){
				var output_1 = new cpr.controls.Output();
				output_1.value = "데이트인풋(DateInput)은 날짜를 입력하는 컨트롤입니다.";
				container.addChild(output_1, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var group_3 = new cpr.controls.Container("grp1");
				group_3.style.setClasses(["cl-form-group"]);
				// Layout
				var formLayout_2 = new cpr.controls.layouts.FormLayout();
				formLayout_2.topMargin = "5px";
				formLayout_2.rightMargin = "5px";
				formLayout_2.bottomMargin = "5px";
				formLayout_2.leftMargin = "5px";
				formLayout_2.horizontalSpacing = "5px";
				formLayout_2.verticalSpacing = "5px";
				formLayout_2.horizontalSeparatorWidth = 1;
				formLayout_2.verticalSeparatorWidth = 1;
				formLayout_2.setColumns(["300px", "1fr"]);
				formLayout_2.setUseColumnShade(0, true);
				formLayout_2.setRows(["75px", "40px", "55px", "25px", "60px", "40px", "40px", "30px", "40px", "60px"]);
				formLayout_2.setRowAutoSizing(0, true);
				formLayout_2.setRowAutoSizing(1, true);
				formLayout_2.setRowAutoSizing(2, true);
				formLayout_2.setRowAutoSizing(3, true);
				formLayout_2.setRowAutoSizing(4, true);
				formLayout_2.setRowAutoSizing(5, true);
				formLayout_2.setRowAutoSizing(6, true);
				formLayout_2.setRowAutoSizing(7, true);
				formLayout_2.setRowAutoSizing(8, true);
				formLayout_2.setRowAutoSizing(9, true);
				group_3.setLayout(formLayout_2);
				(function(container){
					var output_2 = new cpr.controls.Output("opt1");
					output_2.value = "[calendarType = yearmonth]\r\n[format = YYYYMM]\r\n[mask = YYYY-MM]\r\n1. 달력 버튼을 클릭한다.\r\n2. 연월 달력이 펼쳐진다.\r\n3. 날짜 포맷이 YYYY-MM 포맷으로 표시된다.";
					container.addChild(output_2, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var output_3 = new cpr.controls.Output("opt3");
					output_3.value = "[hideButton = true]\r\n1. 달력 버튼이 보이지 않는다.";
					container.addChild(output_3, {
						"colIndex": 0,
						"rowIndex": 1
					});
					var output_4 = new cpr.controls.Output("opt4");
					output_4.value = "[mask = YYYY/MM/DD]\r\n1. 날짜가 YYYY/MM/DD 포맷으로 표시된다.";
					container.addChild(output_4, {
						"colIndex": 0,
						"rowIndex": 2
					});
					var output_5 = new cpr.controls.Output("opt5");
					output_5.value = "[readOnly = true]\r\n1. 달력 버튼를 클릭한다.\r\n2. 캘린더가 펼쳐지지 않는다.";
					container.addChild(output_5, {
						"colIndex": 0,
						"rowIndex": 3
					});
					var dateInput_1 = new cpr.controls.DateInput("dip4");
					dateInput_1.hideButton = true;
					dateInput_1.bind("value").toDataMap(app.lookup("dm1"), "column2");
					container.addChild(dateInput_1, {
						"colIndex": 1,
						"rowIndex": 1,
						"horizontalAlign": "left",
						"verticalAlign": "center",
						"width": 150
					});
					var dateInput_2 = new cpr.controls.DateInput("dip6");
					dateInput_2.readOnly = true;
					dateInput_2.bind("value").toDataMap(app.lookup("dm1"), "column2");
					container.addChild(dateInput_2, {
						"colIndex": 1,
						"rowIndex": 3,
						"horizontalAlign": "left",
						"verticalAlign": "center",
						"width": 150
					});
					var group_4 = new cpr.controls.Container("grp3");
					// Layout
					var formLayout_3 = new cpr.controls.layouts.FormLayout();
					formLayout_3.topMargin = "0px";
					formLayout_3.rightMargin = "0px";
					formLayout_3.bottomMargin = "0px";
					formLayout_3.leftMargin = "0px";
					formLayout_3.horizontalSpacing = "5px";
					formLayout_3.verticalSpacing = "5px";
					formLayout_3.horizontalSeparatorWidth = 1;
					formLayout_3.verticalSeparatorWidth = 1;
					formLayout_3.setColumns(["1fr"]);
					formLayout_3.setRows(["25px", "1fr"]);
					group_4.setLayout(formLayout_3);
					(function(container){
						var dateInput_3 = new cpr.controls.DateInput("dip1");
						dateInput_3.calendarType = "yearmonth";
						dateInput_3.mask = "YYYY-MM";
						dateInput_3.format = "YYYYMM";
						dateInput_3.bind("value").toDataMap(app.lookup("dm1"), "column1");
						container.addChild(dateInput_3, {
							"colIndex": 0,
							"rowIndex": 0,
							"horizontalAlign": "left",
							"verticalAlign": "center",
							"width": 150
						});
						var output_6 = new cpr.controls.Output("opt9");
						output_6.value = "mask, format 속성을 '년월' 포맷으로 지정하고, calendarType을 yearmonth를 지정한다.";
						output_6.style.css({
							"color" : "#757272"
						});
						container.addChild(output_6, {
							"colIndex": 0,
							"rowIndex": 1
						});
					})(group_4);
					container.addChild(group_4, {
						"colIndex": 1,
						"rowIndex": 0
					});
					var group_5 = new cpr.controls.Container("grp5");
					// Layout
					var formLayout_4 = new cpr.controls.layouts.FormLayout();
					formLayout_4.topMargin = "0px";
					formLayout_4.rightMargin = "0px";
					formLayout_4.bottomMargin = "0px";
					formLayout_4.leftMargin = "0px";
					formLayout_4.horizontalSpacing = "5px";
					formLayout_4.verticalSpacing = "5px";
					formLayout_4.horizontalSeparatorWidth = 1;
					formLayout_4.verticalSeparatorWidth = 1;
					formLayout_4.setColumns(["1fr"]);
					formLayout_4.setRows(["25px", "1fr"]);
					group_5.setLayout(formLayout_4);
					(function(container){
						var dateInput_4 = new cpr.controls.DateInput("dip5");
						dateInput_4.mask = "YYYY/MM/DD";
						dateInput_4.bind("value").toDataMap(app.lookup("dm1"), "column4");
						container.addChild(dateInput_4, {
							"colIndex": 0,
							"rowIndex": 0,
							"horizontalAlign": "left",
							"verticalAlign": "center",
							"width": 150
						});
						var output_7 = new cpr.controls.Output("opt6");
						output_7.value = "날짜를 입력 및 표시하는 포맷변경시 mask 속성을 통해 지정한다.";
						output_7.style.css({
							"color" : "#757272"
						});
						container.addChild(output_7, {
							"colIndex": 0,
							"rowIndex": 1
						});
					})(group_5);
					container.addChild(group_5, {
						"colIndex": 1,
						"rowIndex": 2
					});
					var output_8 = new cpr.controls.Output();
					output_8.value = "[spinButton = true]\r\n[spinLoop = true]\r\n1. 날짜에 월을 클릭한다.\r\n2. 우측에 화살표로 월을 변경한다.\r\n3. 1보다 작거나 12보다 커지면 숫자가 순환한다.";
					container.addChild(output_8, {
						"colIndex": 0,
						"rowIndex": 4,
						"colSpan": 1,
						"rowSpan": 1
					});
					var output_9 = new cpr.controls.Output();
					output_9.value = "[preventeInput = true]\r\n1. 날짜를 클릭한다.\r\n2. 숫자를 입력한다.\r\n3. 입력되지 않는다.";
					container.addChild(output_9, {
						"colIndex": 0,
						"rowIndex": 7
					});
					var dateInput_5 = new cpr.controls.DateInput("dti2");
					dateInput_5.preventInput = true;
					dateInput_5.bind("value").toDataMap(app.lookup("dm1"), "column2");
					container.addChild(dateInput_5, {
						"colIndex": 1,
						"rowIndex": 7,
						"horizontalAlign": "left",
						"verticalAlign": "center",
						"width": 150
					});
					var dateInput_6 = new cpr.controls.DateInput("dti3");
					dateInput_6.mask = "YYYY/MM/DD";
					dateInput_6.enabledInputMask = false;
					dateInput_6.bind("value").toDataMap(app.lookup("dm1"), "column2");
					container.addChild(dateInput_6, {
						"colIndex": 1,
						"rowIndex": 8,
						"horizontalAlign": "left",
						"verticalAlign": "center",
						"width": 150
					});
					var output_10 = new cpr.controls.Output();
					output_10.value = "[enabledInputMask = false]\r\n1. 날짜를 클릭한다.\r\n2. 한글이나 영어를 입력한다.\r\n3. 입력이 된다.";
					container.addChild(output_10, {
						"colIndex": 0,
						"rowIndex": 8
					});
					var output_11 = new cpr.controls.Output();
					output_11.value = "[showClearButton = true]\r\n[ButtonFoucsable = true (tab키로 버튼이동)]\r\n1. 달력 버튼 왼쪽에 x 표시가 보인다.\r\n2. x 표시를 클릭한다.\r\n3. 날짜가 초기화된다.";
					container.addChild(output_11, {
						"colIndex": 0,
						"rowIndex": 9
					});
					var dateInput_7 = new cpr.controls.DateInput("dti4");
					dateInput_7.value = "2021-07-14";
					dateInput_7.showClearButton = true;
					dateInput_7.buttonFocusable = true;
					container.addChild(dateInput_7, {
						"colIndex": 1,
						"rowIndex": 9,
						"horizontalAlign": "left",
						"verticalAlign": "center",
						"width": 150
					});
					var output_12 = new cpr.controls.Output();
					output_12.value = "[buttonPosition = left]\r\n1. 달력 버튼이 왼쪽에 보인다.";
					container.addChild(output_12, {
						"colIndex": 0,
						"rowIndex": 5
					});
					var dateInput_8 = new cpr.controls.DateInput("dip7");
					dateInput_8.buttonPosition = "left";
					dateInput_8.bind("value").toDataMap(app.lookup("dm1"), "column2");
					container.addChild(dateInput_8, {
						"colIndex": 1,
						"rowIndex": 5,
						"horizontalAlign": "left",
						"verticalAlign": "center",
						"width": 150
					});
					var output_13 = new cpr.controls.Output();
					output_13.value = "[popupPosition = top]\r\n1. 달력 버튼을 클릭한다.\r\n2. 달력 팝업이 위 쪽으로 펼쳐진다.";
					container.addChild(output_13, {
						"colIndex": 0,
						"rowIndex": 6
					});
					var dateInput_9 = new cpr.controls.DateInput("dip8");
					dateInput_9.popupPosition = "top";
					dateInput_9.bind("value").toDataMap(app.lookup("dm1"), "column2");
					container.addChild(dateInput_9, {
						"colIndex": 1,
						"rowIndex": 6,
						"horizontalAlign": "left",
						"verticalAlign": "center",
						"width": 150
					});
					var group_6 = new cpr.controls.Container("grp6");
					// Layout
					var formLayout_5 = new cpr.controls.layouts.FormLayout();
					formLayout_5.horizontalSpacing = "5px";
					formLayout_5.verticalSpacing = "5px";
					formLayout_5.horizontalSeparatorWidth = 1;
					formLayout_5.verticalSeparatorWidth = 1;
					formLayout_5.setColumns(["1fr"]);
					formLayout_5.setRows(["30px", "25px"]);
					group_6.setLayout(formLayout_5);
					(function(container){
						var output_14 = new cpr.controls.Output();
						output_14.value = "spinLoop = true 인 경우 날짜가 순환한다.";
						output_14.style.css({
							"color" : "#757272"
						});
						container.addChild(output_14, {
							"colIndex": 0,
							"rowIndex": 1
						});
						var dateInput_10 = new cpr.controls.DateInput("dti1");
						dateInput_10.spinButton = true;
						dateInput_10.bind("value").toDataMap(app.lookup("dm1"), "column3");
						container.addChild(dateInput_10, {
							"colIndex": 0,
							"rowIndex": 0,
							"horizontalAlign": "left",
							"verticalAlign": "center",
							"width": 150
						});
					})(group_6);
					container.addChild(group_6, {
						"colIndex": 1,
						"rowIndex": 4,
						"colSpan": 1,
						"rowSpan": 1
					});
				})(group_3);
				container.addChild(group_3, {
					"colIndex": 0,
					"rowIndex": 1
				});
			})(group_2);
			container.addChild(group_2, {
				"width": "400px",
				"height": "644px"
			});
		}
	});
	app.title = "데이트인풋 관련 속성";
	cpr.core.Platform.INSTANCE.register(app);
})();
