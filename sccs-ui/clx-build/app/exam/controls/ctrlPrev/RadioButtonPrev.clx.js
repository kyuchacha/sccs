/*
 * App URI: app/exam/controls/ctrlPrev/RadioButtonPrev
 * Source Location: app/exam/controls/ctrlPrev/RadioButtonPrev.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/exam/controls/ctrlPrev/RadioButtonPrev", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": [
					{"CD": "10", "CD_NM": "서울"},
					{"CD": "20", "CD_NM": "수원"},
					{"CD": "30", "CD_NM": "울산광역시"},
					{"CD": "40", "CD_NM": "부산광역시"},
					{"CD": "50", "CD_NM": "광주광역시"}
				]
			});
			app.register(dataSet_1);
			
			app.supportMedia("all and (min-width: 1320px)", "eXFrame");
			app.supportMedia("all and (min-width: 1235px) and (max-width: 1319px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpSearch");
			// Layout
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_2.spacing = 0;
			group_1.setLayout(verticalLayout_2);
			(function(container){
				var userDefinedControl_1 = new udc.com.appHeader("appheader1");
				userDefinedControl_1.initializeYn = "N";
				container.addChild(userDefinedControl_1, {
					"width": "500px",
					"height": "30px"
				});
			})(group_1);
			container.addChild(group_1, {
				"autoSize": "height",
				"width": "400px",
				"height": "30px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.scrollable = false;
			formLayout_1.topMargin = "0px";
			formLayout_1.rightMargin = "0px";
			formLayout_1.bottomMargin = "0px";
			formLayout_1.leftMargin = "0px";
			formLayout_1.horizontalSpacing = "0px";
			formLayout_1.verticalSpacing = "0px";
			formLayout_1.setColumns(["1fr"]);
			formLayout_1.setRows(["25px", "1fr"]);
			group_2.setLayout(formLayout_1);
			(function(container){
				var output_1 = new cpr.controls.Output("opt7");
				output_1.value = "라디오버튼(RadioButton)은 여러 가지 선택 사항 중 한 가지 만 선택하는 컨트롤입니다.";
				container.addChild(output_1, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var group_3 = new cpr.controls.Container("grp2");
				group_3.style.setClasses(["cl-form-group"]);
				// Layout
				var formLayout_2 = new cpr.controls.layouts.FormLayout();
				formLayout_2.topMargin = "5px";
				formLayout_2.rightMargin = "5px";
				formLayout_2.bottomMargin = "5px";
				formLayout_2.leftMargin = "5px";
				formLayout_2.horizontalSpacing = "5px";
				formLayout_2.verticalSpacing = "5px";
				formLayout_2.horizontalSeparatorWidth = 1;
				formLayout_2.verticalSeparatorWidth = 1;
				formLayout_2.setColumns(["300px", "1fr"]);
				formLayout_2.setUseColumnShade(0, true);
				formLayout_2.setRows(["1fr", "1fr", "1fr", "1fr", "2fr", "1fr", "1fr"]);
				group_3.setLayout(formLayout_2);
				(function(container){
					var output_2 = new cpr.controls.Output("opt3");
					output_2.value = "[fixedWidth = true]\r\n1. 아이템의 넓이가 고정되어 있다.";
					container.addChild(output_2, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var radioButton_1 = new cpr.controls.RadioButton("rdb1");
					(function(radioButton_1){
						radioButton_1.setItemSet(app.lookup("ds1"), {
							"label": "CD_NM",
							"value": "CD"
						})
					})(radioButton_1);
					container.addChild(radioButton_1, {
						"colIndex": 1,
						"rowIndex": 0
					});
					var output_3 = new cpr.controls.Output("opt4");
					output_3.value = "[fixedWidth = false]\r\n1. 아이템의 길이에 따라 각각 넓이가 조절되었다.";
					container.addChild(output_3, {
						"colIndex": 0,
						"rowIndex": 1
					});
					var group_4 = new cpr.controls.Container("grp1");
					// Layout
					var formLayout_3 = new cpr.controls.layouts.FormLayout();
					formLayout_3.topMargin = "0px";
					formLayout_3.rightMargin = "0px";
					formLayout_3.bottomMargin = "0px";
					formLayout_3.leftMargin = "0px";
					formLayout_3.horizontalSpacing = "5px";
					formLayout_3.verticalSpacing = "5px";
					formLayout_3.setColumns(["1fr"]);
					formLayout_3.setRows(["25px", "1fr"]);
					group_4.setLayout(formLayout_3);
					(function(container){
						var radioButton_2 = new cpr.controls.RadioButton("rdb2");
						radioButton_2.fixedWidth = false;
						(function(radioButton_2){
							radioButton_2.setItemSet(app.lookup("ds1"), {
								"label": "CD_NM",
								"value": "CD"
							})
						})(radioButton_2);
						container.addChild(radioButton_2, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var output_4 = new cpr.controls.Output("opt9");
						output_4.value = "fixedWidth 속성을 false로 지정하면, 각 아이템 넓이에 맞게 아이템간의 간격이 조정된다.";
						output_4.style.css({
							"color" : "#757272"
						});
						container.addChild(output_4, {
							"colIndex": 0,
							"rowIndex": 1
						});
					})(group_4);
					container.addChild(group_4, {
						"colIndex": 1,
						"rowIndex": 1
					});
					var output_5 = new cpr.controls.Output("opt5");
					output_5.value = "[colCount = 3]\r\n1. 한 줄에 3개 아이템만 표시된다.";
					container.addChild(output_5, {
						"colIndex": 0,
						"rowIndex": 2
					});
					var radioButton_3 = new cpr.controls.RadioButton("rdb3");
					radioButton_3.colCount = 3;
					(function(radioButton_3){
						radioButton_3.setItemSet(app.lookup("ds1"), {
							"label": "CD_NM",
							"value": "CD"
						})
					})(radioButton_3);
					container.addChild(radioButton_3, {
						"colIndex": 1,
						"rowIndex": 2
					});
					var output_6 = new cpr.controls.Output();
					output_6.value = "[iconAlign = right]\r\n1. 아이콘이 오른쪽에 위치한다.";
					container.addChild(output_6, {
						"colIndex": 0,
						"rowIndex": 3
					});
					var radioButton_4 = new cpr.controls.RadioButton("rdb8");
					radioButton_4.iconAlign = "right";
					(function(radioButton_4){
						radioButton_4.setItemSet(app.lookup("ds1"), {
							"label": "CD_NM",
							"value": "CD"
						})
					})(radioButton_4);
					container.addChild(radioButton_4, {
						"colIndex": 1,
						"rowIndex": 3
					});
					var output_7 = new cpr.controls.Output();
					output_7.value = "[itemSpacing = 30]\r\n1. 아이템 간격이 30px이다.\r\n\r\n[displayExp = CD_NM +[CD]]\r\n1. 아이템이 서울[10] 포맷으로 표시된다.";
					container.addChild(output_7, {
						"colIndex": 0,
						"rowIndex": 4
					});
					var radioButton_5 = new cpr.controls.RadioButton("rdb5");
					radioButton_5.colCount = 3;
					radioButton_5.horizontalSpacing = 30;
					radioButton_5.verticalSpacing = 30;
					radioButton_5.displayExp = "CD_NM + \"[\"+CD+\"]\"";
					(function(radioButton_5){
						radioButton_5.setItemSet(app.lookup("ds1"), {
							"label": "CD_NM",
							"value": "CD"
						})
					})(radioButton_5);
					container.addChild(radioButton_5, {
						"colIndex": 1,
						"rowIndex": 4
					});
					var output_8 = new cpr.controls.Output("opt6");
					output_8.value = "[enabledItemExp = (value == '20' || value == '30') ? false : true]\r\n1. 2, 3번째 값은 비활성화 되어있다.";
					container.addChild(output_8, {
						"colIndex": 0,
						"rowIndex": 5
					});
					var group_5 = new cpr.controls.Container("grp3");
					// Layout
					var formLayout_4 = new cpr.controls.layouts.FormLayout();
					formLayout_4.topMargin = "0px";
					formLayout_4.rightMargin = "0px";
					formLayout_4.bottomMargin = "0px";
					formLayout_4.leftMargin = "0px";
					formLayout_4.horizontalSpacing = "5px";
					formLayout_4.verticalSpacing = "5px";
					formLayout_4.setColumns(["1fr"]);
					formLayout_4.setRows(["25px", "1fr"]);
					group_5.setLayout(formLayout_4);
					(function(container){
						var radioButton_6 = new cpr.controls.RadioButton("rdb4");
						radioButton_6.enabledItemExp = "(value == '20' || value == '30') ? false : true";
						(function(radioButton_6){
							radioButton_6.setItemSet(app.lookup("ds1"), {
								"label": "CD_NM",
								"value": "CD"
							})
						})(radioButton_6);
						container.addChild(radioButton_6, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var output_9 = new cpr.controls.Output("opt10");
						output_9.value = "enabledItemExp 속성을 사용하여, 특정 아이템들의 활성/비활성 상태를 지정할 수 있다.";
						output_9.style.css({
							"color" : "#757272"
						});
						container.addChild(output_9, {
							"colIndex": 0,
							"rowIndex": 1
						});
					})(group_5);
					container.addChild(group_5, {
						"colIndex": 1,
						"rowIndex": 5
					});
					var output_10 = new cpr.controls.Output();
					output_10.value = "[filterExp = CD_NM == \"서울\"]\r\n1. 서울을 제외한 다른 값들은 표시되지 않는다.";
					container.addChild(output_10, {
						"colIndex": 0,
						"rowIndex": 6
					});
					var radioButton_7 = new cpr.controls.RadioButton("rdb6");
					radioButton_7.filterExp = "CD_NM == \"서울\"";
					radioButton_7.colCount = 3;
					(function(radioButton_7){
						radioButton_7.setItemSet(app.lookup("ds1"), {
							"label": "CD_NM",
							"value": "CD"
						})
					})(radioButton_7);
					container.addChild(radioButton_7, {
						"colIndex": 1,
						"rowIndex": 6
					});
				})(group_3);
				container.addChild(group_3, {
					"colIndex": 0,
					"rowIndex": 1
				});
			})(group_2);
			container.addChild(group_2, {
				"width": "400px",
				"height": "647px"
			});
		}
	});
	app.title = "라디오버튼 관련 속성";
	cpr.core.Platform.INSTANCE.register(app);
})();
