/*
 * App URI: app/exam/controls/ctrlPrev/InputBoxPrev
 * Source Location: app/exam/controls/ctrlPrev/InputBoxPrev.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/exam/controls/ctrlPrev/InputBoxPrev", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			
			// Header
			
			app.supportMedia("all and (min-width: 1320px)", "eXFrame");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1319px)", "default");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpSearch");
			// Layout
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_2.spacing = 0;
			group_1.setLayout(verticalLayout_2);
			(function(container){
				var userDefinedControl_1 = new udc.com.appHeader("appheader1");
				userDefinedControl_1.initializeYn = "N";
				container.addChild(userDefinedControl_1, {
					"width": "500px",
					"height": "30px"
				});
			})(group_1);
			container.addChild(group_1, {
				"autoSize": "height",
				"width": "400px",
				"height": "30px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.scrollable = false;
			formLayout_1.topMargin = "0px";
			formLayout_1.rightMargin = "0px";
			formLayout_1.bottomMargin = "0px";
			formLayout_1.leftMargin = "0px";
			formLayout_1.horizontalSpacing = "0px";
			formLayout_1.verticalSpacing = "0px";
			formLayout_1.setColumns(["1fr"]);
			formLayout_1.setRows(["25px", "1fr"]);
			group_2.setLayout(formLayout_1);
			(function(container){
				var output_1 = new cpr.controls.Output("opt7");
				output_1.value = "인풋박스(inputBox)는 데이터를 입력할 수 있는 컨트롤입니다.";
				container.addChild(output_1, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var group_3 = new cpr.controls.Container("grp2");
				group_3.style.setClasses(["cl-form-group"]);
				// Layout
				var formLayout_2 = new cpr.controls.layouts.FormLayout();
				formLayout_2.topMargin = "5px";
				formLayout_2.rightMargin = "5px";
				formLayout_2.bottomMargin = "5px";
				formLayout_2.leftMargin = "5px";
				formLayout_2.horizontalSpacing = "5px";
				formLayout_2.verticalSpacing = "5px";
				formLayout_2.horizontalSeparatorWidth = 1;
				formLayout_2.verticalSeparatorWidth = 1;
				formLayout_2.setColumns(["300px", "1fr"]);
				formLayout_2.setUseColumnShade(0, true);
				formLayout_2.setRows(["100px", "100px", "100px", "100px", "100px", "100px", "100px", "100px"]);
				formLayout_2.setRowAutoSizing(0, true);
				formLayout_2.setRowAutoSizing(1, true);
				formLayout_2.setRowAutoSizing(2, true);
				formLayout_2.setRowAutoSizing(3, true);
				formLayout_2.setRowAutoSizing(4, true);
				formLayout_2.setRowAutoSizing(5, true);
				formLayout_2.setRowAutoSizing(6, true);
				formLayout_2.setRowAutoSizing(7, true);
				group_3.setLayout(formLayout_2);
				(function(container){
					var output_2 = new cpr.controls.Output("opt1");
					output_2.value = "[placeholder = '여기에 입력하세요']\r\n1. 인풋박스에 '여기에 입력하세요'라는 텍스트가 보인다.";
					container.addChild(output_2, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var inputBox_1 = new cpr.controls.InputBox("ipb1");
					inputBox_1.placeholder = "여기에 입력하세요.";
					container.addChild(inputBox_1, {
						"colIndex": 1,
						"rowIndex": 0,
						"horizontalAlign": "left",
						"verticalAlign": "center",
						"width": 200
					});
					var output_3 = new cpr.controls.Output("opt2");
					output_3.value = "[secret = true]\r\n1. 인풋박스에 텍스트를 입력한다.\r\n2. 비공개되서 입력된다.";
					container.addChild(output_3, {
						"colIndex": 0,
						"rowIndex": 1
					});
					var inputBox_2 = new cpr.controls.InputBox("ipb2");
					inputBox_2.secret = true;
					container.addChild(inputBox_2, {
						"colIndex": 1,
						"rowIndex": 1,
						"horizontalAlign": "left",
						"verticalAlign": "center"
					});
					var output_4 = new cpr.controls.Output("opt3");
					output_4.value = "[maxLength = 20]\r\n1. 인풋박스에 텍스트를 입력한다.\r\n2. 20자 이후에는 입력되지 않는다.";
					container.addChild(output_4, {
						"colIndex": 0,
						"rowIndex": 2
					});
					var group_4 = new cpr.controls.Container("grp3");
					// Layout
					var formLayout_3 = new cpr.controls.layouts.FormLayout();
					formLayout_3.topMargin = "0px";
					formLayout_3.rightMargin = "0px";
					formLayout_3.bottomMargin = "0px";
					formLayout_3.leftMargin = "0px";
					formLayout_3.horizontalSpacing = "5px";
					formLayout_3.verticalSpacing = "5px";
					formLayout_3.setColumns(["1fr"]);
					formLayout_3.setRows(["25px", "30px"]);
					group_4.setLayout(formLayout_3);
					(function(container){
						var inputBox_3 = new cpr.controls.InputBox("ipb3");
						inputBox_3.maxLength = 20;
						container.addChild(inputBox_3, {
							"colIndex": 0,
							"rowIndex": 0,
							"horizontalAlign": "left",
							"width": 200
						});
						var output_5 = new cpr.controls.Output("opt9");
						output_5.value = "DB의 문자셋에 따라 lengthUnit 값이 달라질 수 있다. 해당값은 일반적으로 매칭되는 DB 컬럼 사이즈를 지정한다.";
						output_5.style.css({
							"color" : "#757272"
						});
						container.addChild(output_5, {
							"colIndex": 0,
							"rowIndex": 1
						});
					})(group_4);
					container.addChild(group_4, {
						"colIndex": 1,
						"rowIndex": 2,
						"verticalAlign": "center",
						"height": 60
					});
					var output_6 = new cpr.controls.Output("opt4");
					output_6.value = "[inputFilter = ^[0-9]*$]\r\n1. 인풋박스에 숫자만 입력된다.";
					container.addChild(output_6, {
						"colIndex": 0,
						"rowIndex": 3
					});
					var group_5 = new cpr.controls.Container("grp4");
					// Layout
					var formLayout_4 = new cpr.controls.layouts.FormLayout();
					formLayout_4.topMargin = "0px";
					formLayout_4.rightMargin = "0px";
					formLayout_4.bottomMargin = "0px";
					formLayout_4.leftMargin = "0px";
					formLayout_4.horizontalSpacing = "5px";
					formLayout_4.verticalSpacing = "5px";
					formLayout_4.setColumns(["1fr"]);
					formLayout_4.setRows(["25px", "30px"]);
					group_5.setLayout(formLayout_4);
					(function(container){
						var inputBox_4 = new cpr.controls.InputBox("ipb4");
						inputBox_4.inputFilter = "^[0-9]*$";
						container.addChild(inputBox_4, {
							"colIndex": 0,
							"rowIndex": 0,
							"horizontalAlign": "left",
							"width": 200
						});
						var output_7 = new cpr.controls.Output("opt8");
						output_7.value = "인풋박스에 입력될 수 있는 문자열의 값을 정규표현식을 사용하여 제한할 수 있다.";
						output_7.style.css({
							"color" : "#757272"
						});
						container.addChild(output_7, {
							"colIndex": 0,
							"rowIndex": 1
						});
					})(group_5);
					container.addChild(group_5, {
						"colIndex": 1,
						"rowIndex": 3,
						"verticalAlign": "center",
						"height": 60
					});
					var output_8 = new cpr.controls.Output("opt5");
					output_8.value = "[inputFilter = ^[0-9\\-]*$]\r\n1. 인풋박스에 숫자와 하이픈만 입력된다.";
					container.addChild(output_8, {
						"colIndex": 0,
						"rowIndex": 4
					});
					var inputBox_5 = new cpr.controls.InputBox("ipb5");
					inputBox_5.inputFilter = "^[0-9\\-]*$";
					container.addChild(inputBox_5, {
						"colIndex": 1,
						"rowIndex": 4,
						"horizontalAlign": "left",
						"verticalAlign": "center"
					});
					var output_9 = new cpr.controls.Output("opt6");
					output_9.value = "inputFilter = ^[a-zA-Z]*$\r\n1. 인풋박스에 영어 대문자와 소문자만 입력된다.";
					container.addChild(output_9, {
						"colIndex": 0,
						"rowIndex": 5
					});
					var inputBox_6 = new cpr.controls.InputBox("ipb6");
					inputBox_6.inputFilter = "^[a-zA-Z]*$";
					container.addChild(inputBox_6, {
						"colIndex": 1,
						"rowIndex": 5,
						"horizontalAlign": "left",
						"verticalAlign": "center"
					});
					var output_10 = new cpr.controls.Output();
					output_10.value = "[autoSkip = true]\r\n1. 인풋박스에 포커스를 둔다.\r\n2. Enter키를 입력한다.\r\n3. 포커스가 다음 컨트롤로 이동한다.";
					container.addChild(output_10, {
						"colIndex": 0,
						"rowIndex": 6
					});
					var group_6 = new cpr.controls.Container("grp5");
					// Layout
					var formLayout_5 = new cpr.controls.layouts.FormLayout();
					formLayout_5.topMargin = "0px";
					formLayout_5.rightMargin = "0px";
					formLayout_5.bottomMargin = "0px";
					formLayout_5.leftMargin = "0px";
					formLayout_5.horizontalSpacing = "5px";
					formLayout_5.verticalSpacing = "5px";
					formLayout_5.setColumns(["1fr"]);
					formLayout_5.setRows(["25px", "30px"]);
					group_6.setLayout(formLayout_5);
					(function(container){
						var inputBox_7 = new cpr.controls.InputBox("ipb9");
						inputBox_7.maxLength = 10;
						inputBox_7.autoSkip = true;
						container.addChild(inputBox_7, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var output_11 = new cpr.controls.Output();
						output_11.value = "maxLength만큼 입력했거나 enter키를 눌렀을 때 다음 컨트롤로 포커스 이동 설정";
						output_11.style.css({
							"color" : "#757272"
						});
						container.addChild(output_11, {
							"colIndex": 0,
							"rowIndex": 1
						});
					})(group_6);
					container.addChild(group_6, {
						"colIndex": 1,
						"rowIndex": 6,
						"verticalAlign": "center",
						"height": 60
					});
					var output_12 = new cpr.controls.Output();
					output_12.value = "[showClearButton = true]\r\n[buttonFocusable = true]\r\n1. 인풋박스에 포커스를 둔다.\r\n2. Tab 키를 입력한다.\r\n3. 인풋박스 우측에 x 표시가 포커스 된다.\r\n4. x 표시 클릭 시 인풋박스 값이 지워진다.";
					container.addChild(output_12, {
						"colIndex": 0,
						"rowIndex": 7
					});
					var inputBox_8 = new cpr.controls.InputBox("ipb7");
					inputBox_8.value = "가나다라";
					inputBox_8.showClearButton = true;
					inputBox_8.buttonFocusable = true;
					container.addChild(inputBox_8, {
						"colIndex": 1,
						"rowIndex": 7,
						"horizontalAlign": "left",
						"verticalAlign": "center"
					});
				})(group_3);
				container.addChild(group_3, {
					"colIndex": 0,
					"rowIndex": 1
				});
			})(group_2);
			container.addChild(group_2, {
				"width": "400px",
				"height": "648px"
			});
		}
	});
	app.title = "인풋박스 관련 속성";
	cpr.core.Platform.INSTANCE.register(app);
})();
