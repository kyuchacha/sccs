/*
 * App URI: app/exam/controls/ctrlPrev/GridPrev
 * Source Location: app/exam/controls/ctrlPrev/GridPrev.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/exam/controls/ctrlPrev/GridPrev", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			
			
			
			
			
			/*
			 * 루트 컨테이너에서 init 이벤트 발생 시 호출.
			 * 앱이 최초 구성될 때 발생하는 이벤트 입니다.
			 */
			function onBodyInit(/* cpr.events.CEvent */ e){
				var vcGrd1 = app.lookup("grd1");
				var vcGrd2 = app.lookup("grd2");
				var vcGrd3 = app.lookup("grd3");
				var vcGrd4 = app.lookup("grd4");
				
				vcGrd1.clickMode = 'select';
				vcGrd2.clickMode = 'select';
				vcGrd3.clickMode = 'select';
				vcGrd4.clickMode = 'select';
				
				for (var i = 0; i <= 4; i++) {
					vcGrd1.header.getColumn(i).sortable = false;
					vcGrd2.header.getColumn(i).sortable = false;
					vcGrd3.header.getColumn(i).sortable = false;
					vcGrd4.header.getColumn(i).sortable = false;
				}
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns": [
					{"name": "Alpabet"},
					{"name": "Number"},
					{"name": "Hangul"},
					{"name": "Characters"}
				],
				"rows": [
					{"Alpabet": "A", "Number": "1", "Hangul": "가", "Characters": "!"},
					{"Alpabet": "B", "Number": "2", "Hangul": "나", "Characters": "@"},
					{"Alpabet": "C", "Number": "3", "Hangul": "가", "Characters": "#"},
					{"Alpabet": "D", "Number": "4", "Hangul": "라", "Characters": "$"},
					{"Alpabet": "E", "Number": "5", "Hangul": "라", "Characters": "%"},
					{"Alpabet": "F", "Number": "6", "Hangul": "다", "Characters": "^"},
					{"Alpabet": "G", "Number": "7", "Hangul": "사", "Characters": "&"},
					{"Alpabet": "H", "Number": "8", "Hangul": "나", "Characters": "*"},
					{"Alpabet": "I", "Number": "9", "Hangul": "다", "Characters": "("},
					{"Alpabet": "J", "Number": "0", "Hangul": "가", "Characters": ")"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("ds2");
			dataSet_2.parseData({
				"columns": [
					{"name": "productGroup"},
					{
						"name": "productName",
						"dataType": "string"
					},
					{
						"name": "price",
						"dataType": "number"
					},
					{
						"name": "rate",
						"dataType": "number"
					},
					{
						"name": "ratedprice",
						"dataType": "expression",
						"displayOnly": true,
						"expression": "price * (100 - rate) / 100"
					}
				],
				"rows": [
					{"productName": "TV", "price": "1000000", "rate": "10", "productGroup": "가전제품"},
					{"productName": "냉장고", "price": "1500000", "rate": "20", "productGroup": "가전제품"},
					{"productName": "전자렌지", "price": "100000", "rate": "0", "productGroup": "가전제품"},
					{"productName": "에어컨", "price": "1800000", "rate": "30", "productGroup": "가전제품"},
					{"productGroup": "생활용품", "productName": "세제", "price": "13000", "rate": "10"},
					{"productGroup": "생활용품", "productName": "휴지", "price": "20000", "rate": "20"},
					{"productGroup": "생활용품", "productName": "샴푸", "price": "10000", "rate": "10"},
					{"productGroup": "생활용품", "productName": "비누", "price": "5000", "rate": "0"}
				]
			});
			app.register(dataSet_2);
			
			app.supportMedia("all and (min-width: 1320px)", "eXFrame");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1319px)", "default");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpSearch");
			// Layout
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_2.spacing = 0;
			group_1.setLayout(verticalLayout_2);
			(function(container){
				var userDefinedControl_1 = new udc.com.appHeader("appheader1");
				userDefinedControl_1.initializeYn = "N";
				container.addChild(userDefinedControl_1, {
					"width": "500px",
					"height": "30px"
				});
			})(group_1);
			container.addChild(group_1, {
				"autoSize": "height",
				"width": "400px",
				"height": "30px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var verticalLayout_3 = new cpr.controls.layouts.VerticalLayout();
			group_2.setLayout(verticalLayout_3);
			(function(container){
				var output_1 = new cpr.controls.Output("opt7");
				output_1.value = "그리드(Grid)는 테이블 형태의 컨트롤입니다.";
				container.addChild(output_1, {
					"width": "1320px",
					"height": "25px"
				});
				var group_3 = new cpr.controls.Container("grp2");
				group_3.style.setClasses(["cl-form-group"]);
				// Layout
				var formLayout_1 = new cpr.controls.layouts.FormLayout();
				formLayout_1.topMargin = "5px";
				formLayout_1.rightMargin = "5px";
				formLayout_1.bottomMargin = "5px";
				formLayout_1.leftMargin = "5px";
				formLayout_1.horizontalSpacing = "10px";
				formLayout_1.verticalSpacing = "10px";
				formLayout_1.horizontalSeparatorWidth = 1;
				formLayout_1.verticalSeparatorWidth = 1;
				formLayout_1.setColumns(["300px", "1fr"]);
				formLayout_1.setUseColumnShade(0, true);
				formLayout_1.setRows(["250px", "200px", "250px", "250px", "250px"]);
				formLayout_1.setRowAutoSizing(0, true);
				formLayout_1.setRowAutoSizing(1, true);
				formLayout_1.setRowAutoSizing(2, true);
				formLayout_1.setRowAutoSizing(3, true);
				formLayout_1.setRowAutoSizing(4, true);
				group_3.setLayout(formLayout_1);
				(function(container){
					var grid_1 = new cpr.controls.Grid("grd1");
					grid_1.init({
						"dataSet": app.lookup("ds2"),
						"columnMovable": true,
						"selectionUnit": "cell",
						"selectionMulti": "multi",
						"leftSplit": 2,
						"leftSplitWidth": 200,
						"resizableColumns": "all",
						"columns": [
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"}
						],
						"header": {
							"rows": [{"height": "24px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.targetColumnName = "productGroup";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "상품그룹";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.targetColumnName = "productName";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "상품명";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.targetColumnName = "price";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "가격";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3},
									"configurator": function(cell){
										cell.targetColumnName = "rate";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "할인율";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 4},
									"configurator": function(cell){
										cell.targetColumnName = "ratedprice";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "할인된가격";
									}
								}
							]
						},
						"detail": {
							"rows": [{"height": "24px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.columnName = "productGroup";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.columnName = "productName";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.columnName = "price";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3},
									"configurator": function(cell){
										cell.columnName = "rate";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 4},
									"configurator": function(cell){
										cell.columnName = "ratedprice";
									}
								}
							]
						}
					});
					container.addChild(grid_1, {
						"colIndex": 1,
						"rowIndex": 0
					});
					var output_2 = new cpr.controls.Output();
					output_2.value = "[selectionUnit = cell]\r\n[selectionMulti = multi]\r\n1. 그리드를 선택한다.\r\n2. 셀 하나가 선택된다.\r\n3. 셀을 드래그한다.\r\n4. 셀들이 다중선택 된다.\r\n\r\n[resizableColumn = all]\r\n[columnMovable = true]\r\n1. 그리드 헤더에 칼럼 사이를 드래그한다.\r\n2. 칼럼크기가 변경된다.\r\n3. 그리드 헤더를 옆 헤더로 드래그 앤 드롭한다.\r\n4. 칼럼 위치가 변경된다.\r\n\r\n[leftSplit = 2]\r\n[leftSplitWidth = 200]\r\n1. 왼쪽 2개 칼럼의 크기가 200px이다.";
					container.addChild(output_2, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var grid_2 = new cpr.controls.Grid("grd2");
					grid_2.init({
						"dataSet": app.lookup("ds2"),
						"collapsible": true,
						"columns": [
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"}
						],
						"header": {
							"rows": [{"height": "24px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.targetColumnName = "productName";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "상품명";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.targetColumnName = "price";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "가격";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3},
									"configurator": function(cell){
										cell.targetColumnName = "rate";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "할인율";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 4},
									"configurator": function(cell){
										cell.targetColumnName = "ratedprice";
										cell.text = "할인된가격";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.targetColumnName = "productGroup";
										cell.text = "상품그룹";
									}
								}
							]
						},
						"detail": {
							"rows": [{"height": "24px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.columnName = "productName";
										cell.control = (function(){
											var output_3 = new cpr.controls.Output();
											output_3.value = "Output";
											output_3.style.css({
												"text-align" : "center"
											});
											output_3.bind("value").toDataColumn("productName");
											return output_3;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.columnName = "price";
										cell.control = (function(){
											var output_4 = new cpr.controls.Output();
											output_4.value = "Output";
											output_4.dataType = "number";
											output_4.format = "s#,##0";
											output_4.displayExp = "text + \"원\"";
											output_4.style.css({
												"text-align" : "center"
											});
											output_4.bind("value").toDataColumn("price");
											return output_4;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3},
									"configurator": function(cell){
										cell.columnName = "rate";
										cell.control = (function(){
											var output_5 = new cpr.controls.Output();
											output_5.value = "Output";
											output_5.dataType = "number";
											output_5.displayExp = "text + \"%\"";
											output_5.style.css({
												"text-align" : "center"
											});
											output_5.bind("value").toDataColumn("rate");
											return output_5;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 4},
									"configurator": function(cell){
										cell.columnName = "ratedprice";
										cell.control = (function(){
											var output_6 = new cpr.controls.Output();
											output_6.value = "Output";
											output_6.dataType = "number";
											output_6.format = "s#,##0";
											output_6.displayExp = "text + \"원\"";
											output_6.style.css({
												"text-align" : "center"
											});
											output_6.bind("value").toDataColumn("ratedprice");
											return output_6;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.columnName = "productGroup";
									}
								}
							]
						},
						"footer": {
							"rows": [{"height": "20px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 2, "rowSpan": 1, "colSpan": 1},
									"configurator": function(cell){
										cell.expr = "getSum(\"price\")";
										cell.control = (function(){
											var output_7 = new cpr.controls.Output();
											output_7.value = "Output";
											output_7.dataType = "number";
											output_7.format = "s#,##0";
											output_7.displayExp = "text + \"원\"";
											return output_7;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 4, "rowSpan": 1, "colSpan": 1},
									"configurator": function(cell){
										cell.expr = "getSum(\"ratedprice\")";
										cell.control = (function(){
											var output_8 = new cpr.controls.Output();
											output_8.value = "Output";
											output_8.dataType = "number";
											output_8.format = "s#,##0";
											output_8.displayExp = "text + \"원\"";
											return output_8;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.expr = "\"\"";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3},
									"configurator": function(cell){
										cell.expr = "\"\"";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.expr = "\"\"";
									}
								}
							]
						},
						"rowGroup": [{
							"groupCondition": "productGroup",
							"gheader": {
								"rows": [{"height": "24px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.expr = "productGroup";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.expr = "\"\"";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.expr = "\"\"";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.expr = "\"\"";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.expr = "\"\"";
										}
									}
								]
							},
							"gfooter": {
								"visibleExpr": "false",
								"rows": [{"height": "24px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.expr = "\"\"";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.expr = "\"\"";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.expr = "\"\"";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.expr = "\"\"";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.expr = "\"\"";
										}
									}
								]
							}
						}]
					});
					container.addChild(grid_2, {
						"colIndex": 1,
						"rowIndex": 1
					});
					var output_9 = new cpr.controls.Output();
					output_9.value = "[getSum(\"컬럼이름\")]\r\n1. 푸터의 좌측 숫자는 가격의 총합이다.\r\n2. 푸터의 우측 숫자는 할인된 가격의 총합이다.\r\n\r\n[collapsible = true]\r\n[startCollapsible = true]\r\n1. 그리드가 펼쳐져있다.\r\n2. 상품그룹 좌측에 화살표 아이콘을 클릭한다.\r\n3. 해당 로우가 접혀진다.";
					container.addChild(output_9, {
						"colIndex": 0,
						"rowIndex": 1
					});
					var output_10 = new cpr.controls.Output();
					output_10.value = "[clickMode = edit (편집모드)]\r\n1. 그리드를 클릭한다.\r\n2. 해당 셀을 수정할 수 있다.\r\n\r\n[filterable = true]\r\n1. 그리드 헤더 중 숫자 칼럼에 필터 아이콘이 보인다.\r\n\r\n[filterDialogButtons = [cancel, okay]]\r\n1. 그리드 헤더 중 숫자 우측에 필터 아이콘을 클릭한다.\r\n2. 필터 창 우측 하단에 버튼의 순서가 취소, 확인이다.\r\n\r\n[sortable = true]\r\n1. 그리드 헤더를 클릭한다.\r\n2. 행들이 정렬된다.";
					container.addChild(output_10, {
						"colIndex": 0,
						"rowIndex": 2
					});
					var grid_3 = new cpr.controls.Grid("grd5");
					grid_3.init({
						"dataSet": app.lookup("ds1"),
						"selectionMulti": "single",
						"clickMode": "edit",
						"filterDialogButtons": [
							"cancel",
							"okay"
						],
						"columns": [
							{
								"width": "100px",
								"visible": true
							},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"}
						],
						"header": {
							"rows": [{"height": "24px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.targetColumnName = "Alpabet";
										cell.filterable = false;
										cell.sortable = true;
										cell.text = "알파벳";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.targetColumnName = "Number";
										cell.filterable = true;
										cell.sortable = true;
										cell.text = "숫자";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.targetColumnName = "Hangul";
										cell.filterable = false;
										cell.sortable = true;
										cell.text = "한글";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3},
									"configurator": function(cell){
										cell.targetColumnName = "Characters";
										cell.filterable = false;
										cell.sortable = true;
										cell.text = "특수문자";
									}
								}
							]
						},
						"detail": {
							"rows": [{"height": "24px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.columnName = "Alpabet";
										cell.control = (function(){
											var inputBox_1 = new cpr.controls.InputBox("ipb5");
											inputBox_1.bind("value").toDataColumn("Alpabet");
											return inputBox_1;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.columnName = "Number";
										cell.control = (function(){
											var inputBox_2 = new cpr.controls.InputBox("ipb6");
											inputBox_2.bind("value").toDataColumn("Number");
											return inputBox_2;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.columnName = "Hangul";
										cell.control = (function(){
											var inputBox_3 = new cpr.controls.InputBox("ipb7");
											inputBox_3.bind("value").toDataColumn("Hangul");
											return inputBox_3;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3},
									"configurator": function(cell){
										cell.columnName = "Characters";
										cell.control = (function(){
											var inputBox_4 = new cpr.controls.InputBox("ipb8");
											inputBox_4.bind("value").toDataColumn("Characters");
											return inputBox_4;
										})();
									}
								}
							]
						}
					});
					container.addChild(grid_3, {
						"colIndex": 1,
						"rowIndex": 2
					});
					var output_11 = new cpr.controls.Output();
					output_11.value = "[suppressedCellType = merged]\r\n[mergedToIndexExpr : rate == 0 ? 4 : 2]\r\n1. 1, 5 번째 칼럼이 가격부터 할인된 가격까지 병합되어 있다.";
					container.addChild(output_11, {
						"colIndex": 0,
						"rowIndex": 3
					});
					var grid_4 = new cpr.controls.Grid("grd4");
					grid_4.init({
						"dataSet": app.lookup("ds2"),
						"suppressedCellType": "merged",
						"columns": [
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"}
						],
						"header": {
							"rows": [{"height": "24px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.targetColumnName = "productName";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "상품명";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.targetColumnName = "price";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "가격";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3},
									"configurator": function(cell){
										cell.targetColumnName = "rate";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "할인율";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 4},
									"configurator": function(cell){
										cell.targetColumnName = "ratedprice";
										cell.text = "할인된가격";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.targetColumnName = "productGroup";
										cell.text = "상품그룹";
									}
								}
							]
						},
						"detail": {
							"rows": [{"height": "24px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.columnName = "productName";
										cell.control = (function(){
											var output_12 = new cpr.controls.Output();
											output_12.value = "Output";
											output_12.style.css({
												"text-align" : "center"
											});
											output_12.bind("value").toDataColumn("productName");
											return output_12;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.columnName = "price";
										cell.mergeToIndexExpr = "rate ==0 ? 4 : 2";
										cell.control = (function(){
											var output_13 = new cpr.controls.Output();
											output_13.value = "Output";
											output_13.dataType = "number";
											output_13.format = "s#,##0";
											output_13.displayExp = "text + \"원\"";
											output_13.style.css({
												"text-align" : "center"
											});
											output_13.bind("value").toDataColumn("price");
											return output_13;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3},
									"configurator": function(cell){
										cell.columnName = "rate";
										cell.control = (function(){
											var output_14 = new cpr.controls.Output();
											output_14.value = "Output";
											output_14.dataType = "number";
											output_14.displayExp = "text + \"%\"";
											output_14.style.css({
												"text-align" : "center"
											});
											output_14.bind("value").toDataColumn("rate");
											return output_14;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 4},
									"configurator": function(cell){
										cell.columnName = "ratedprice";
										cell.mergeToIndexExpr = "rate ==0 ? 4:3";
										cell.control = (function(){
											var output_15 = new cpr.controls.Output();
											output_15.value = "Output";
											output_15.dataType = "number";
											output_15.format = "s#,##0";
											output_15.displayExp = "text + \"원\"";
											output_15.style.css({
												"text-align" : "center"
											});
											output_15.bind("value").toDataColumn("ratedprice");
											return output_15;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.columnName = "productGroup";
										cell.control = (function(){
											var output_16 = new cpr.controls.Output();
											output_16.value = "Output";
											output_16.bind("value").toDataColumn("productGroup");
											return output_16;
										})();
									}
								}
							]
						}
					});
					container.addChild(grid_4, {
						"colIndex": 1,
						"rowIndex": 3
					});
					var grid_5 = new cpr.controls.Grid("grd3");
					grid_5.init({
						"dataSet": app.lookup("ds2"),
						"suppressedCellType": "merged",
						"columns": [
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"}
						],
						"header": {
							"rows": [{"height": "24px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.targetColumnName = "productName";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "상품명";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.targetColumnName = "price";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "가격";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3},
									"configurator": function(cell){
										cell.targetColumnName = "rate";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "할인율";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 4},
									"configurator": function(cell){
										cell.targetColumnName = "ratedprice";
										cell.text = "할인된가격";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.targetColumnName = "productGroup";
										cell.text = "상품그룹";
									}
								}
							]
						},
						"detail": {
							"rows": [{"height": "24px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.columnName = "productName";
										cell.control = (function(){
											var output_17 = new cpr.controls.Output();
											output_17.value = "Output";
											output_17.style.css({
												"text-align" : "center"
											});
											output_17.bind("value").toDataColumn("productName");
											return output_17;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.columnName = "price";
										cell.control = (function(){
											var output_18 = new cpr.controls.Output();
											output_18.value = "Output";
											output_18.dataType = "number";
											output_18.format = "s#,##0";
											output_18.displayExp = "text + \"원\"";
											output_18.style.css({
												"text-align" : "center"
											});
											output_18.bind("value").toDataColumn("price");
											return output_18;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3},
									"configurator": function(cell){
										cell.columnName = "rate";
										cell.control = (function(){
											var output_19 = new cpr.controls.Output();
											output_19.value = "Output";
											output_19.dataType = "number";
											output_19.displayExp = "text + \"%\"";
											output_19.style.css({
												"text-align" : "center"
											});
											output_19.bind("value").toDataColumn("rate");
											return output_19;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 4},
									"configurator": function(cell){
										cell.columnName = "ratedprice";
										cell.mergeToIndexExpr = "rate ==0 ? 4:3";
										cell.control = (function(){
											var output_20 = new cpr.controls.Output();
											output_20.value = "Output";
											output_20.dataType = "number";
											output_20.format = "s#,##0";
											output_20.displayExp = "text + \"원\"";
											output_20.style.css({
												"text-align" : "center"
											});
											output_20.bind("value").toDataColumn("ratedprice");
											return output_20;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.columnName = "productGroup";
										cell.suppressible = true;
										cell.control = (function(){
											var output_21 = new cpr.controls.Output();
											output_21.value = "Output";
											output_21.bind("value").toDataColumn("productGroup");
											return output_21;
										})();
									}
								}
							]
						}
					});
					container.addChild(grid_5, {
						"colIndex": 1,
						"rowIndex": 4
					});
					var output_22 = new cpr.controls.Output();
					output_22.value = "[suppressedCellType = merged]\r\n[suppressible = true]\r\n1. 상품그룹에 생활용품과 가전제품이 4개 행씩 병합되어 있다.";
					container.addChild(output_22, {
						"colIndex": 0,
						"rowIndex": 4
					});
				})(group_3);
				container.addChild(group_3, {
					"autoSize": "height",
					"width": "1320px",
					"height": "1250px"
				});
			})(group_2);
			container.addChild(group_2, {
				"autoSize": "height",
				"width": "400px",
				"height": "1260px"
			});
			if(typeof onBodyInit == "function"){
				app.addEventListener("init", onBodyInit);
			}
		}
	});
	app.title = "그리드 관련 속성";
	cpr.core.Platform.INSTANCE.register(app);
})();
