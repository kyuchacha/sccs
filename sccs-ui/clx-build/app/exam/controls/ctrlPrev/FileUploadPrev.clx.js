/*
 * App URI: app/exam/controls/ctrlPrev/FileUploadPrev
 * Source Location: app/exam/controls/ctrlPrev/FileUploadPrev.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/exam/controls/ctrlPrev/FileUploadPrev", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsFileInfo");
			dataSet_1.parseData({
				"columns": [
					{"name": "name"},
					{"name": "size"},
					{
						"name": "url",
						"dataType": "expression",
						"displayOnly": true,
						"expression": "\"../export/\"+name + \".pdf\""
					}
				],
				"rows": [
					{"name": "fileUpload1", "size": "1500"},
					{"name": "fileUpload2", "size": "1500"}
				]
			});
			app.register(dataSet_1);
			var submission_1 = new cpr.protocols.Submission("subDownLoad");
			submission_1.action = "";
			submission_1.responseType = "filedownload";
			app.register(submission_1);
			
			app.supportMedia("all and (min-width: 1320px)", "eXFrame");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1319px)", "default");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpSearch");
			// Layout
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_2.spacing = 0;
			group_1.setLayout(verticalLayout_2);
			(function(container){
				var userDefinedControl_1 = new udc.com.appHeader("appheader1");
				userDefinedControl_1.initializeYn = "N";
				container.addChild(userDefinedControl_1, {
					"width": "500px",
					"height": "30px"
				});
			})(group_1);
			container.addChild(group_1, {
				"autoSize": "height",
				"width": "400px",
				"height": "30px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.scrollable = false;
			formLayout_1.topMargin = "0px";
			formLayout_1.rightMargin = "0px";
			formLayout_1.bottomMargin = "0px";
			formLayout_1.leftMargin = "0px";
			formLayout_1.horizontalSpacing = "0px";
			formLayout_1.verticalSpacing = "0px";
			formLayout_1.setColumns(["1fr"]);
			formLayout_1.setRows(["25px", "1fr"]);
			group_2.setLayout(formLayout_1);
			(function(container){
				var output_1 = new cpr.controls.Output();
				output_1.value = "파일업로드(FileUplad)는 다수의 파일을 동시에 업로드 할 수 있는 컨트롤입니다.";
				container.addChild(output_1, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var group_3 = new cpr.controls.Container("grp3");
				group_3.style.setClasses(["cl-form-group"]);
				// Layout
				var formLayout_2 = new cpr.controls.layouts.FormLayout();
				formLayout_2.topMargin = "5px";
				formLayout_2.rightMargin = "5px";
				formLayout_2.bottomMargin = "5px";
				formLayout_2.leftMargin = "5px";
				formLayout_2.horizontalSpacing = "5px";
				formLayout_2.verticalSpacing = "5px";
				formLayout_2.horizontalSeparatorWidth = 1;
				formLayout_2.verticalSeparatorWidth = 1;
				formLayout_2.setColumns(["300px", "1fr"]);
				formLayout_2.setUseColumnShade(0, true);
				formLayout_2.setRows(["118px", "118px", "118px", "118px", "118px"]);
				formLayout_2.setRowAutoSizing(0, true);
				formLayout_2.setRowAutoSizing(1, true);
				formLayout_2.setRowAutoSizing(2, true);
				formLayout_2.setRowAutoSizing(3, true);
				formLayout_2.setRowAutoSizing(4, true);
				group_3.setLayout(formLayout_2);
				(function(container){
					var output_2 = new cpr.controls.Output();
					output_2.value = "[extensions = .jpg]\r\n1. 추가 버튼을 클릭한다.\r\n2. 파일 업로드 창 우측 하단에 확장자가 JPEG이다.";
					container.addChild(output_2, {
						"colIndex": 0,
						"rowIndex": 3
					});
					var output_3 = new cpr.controls.Output();
					output_3.value = "[limitFileSize = 1]\r\n[limitFileSizeUnit = mb]\r\n1. 업로드된 파일 용량의 전체 합이 1mb이상이 되도록 업로드한다.\r\n2. 업로드가 되지 않는다.";
					container.addChild(output_3, {
						"colIndex": 0,
						"rowIndex": 1
					});
					var output_4 = new cpr.controls.Output();
					output_4.value = "[limitSizePerFile = 50]\r\n[limitSizePerFileUnit = kb]\r\n1. 추가버튼을 클릭한다.\r\n2. 50kb가 넘는 파일을 업로드한다.\r\n3. 업로드 되지 않는다.";
					container.addChild(output_4, {
						"colIndex": 0,
						"rowIndex": 2
					});
					var output_5 = new cpr.controls.Output();
					output_5.value = "[emptyMessage = \"더블 클릭이나 드래그 앤 드롭으로 추가하세요\"]\r\n1. 파일업로드 창에 \"더블 클릭이나 드래그 앤 드롭으로 추가하세요\"라는 텍스트가 표시된다.\r\n\r\n[buttons = [send, add]]\r\n1. 파일업로드 우측 하단에 버튼이 보내기, 추가 순서로 표시된다.";
					container.addChild(output_5, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var fileUpload_1 = new cpr.controls.FileUpload("fid1");
					fileUpload_1.limitFileSizeUnit = "mb";
					fileUpload_1.limitFileSize = 1;
					if(typeof onFid1DownloadClick == "function") {
						fileUpload_1.addEventListener("download-click", onFid1DownloadClick);
					}
					container.addChild(fileUpload_1, {
						"colIndex": 1,
						"rowIndex": 1
					});
					var fileUpload_2 = new cpr.controls.FileUpload("fid3");
					fileUpload_2.limitFileSizeUnit = "kb";
					fileUpload_2.limitSizePerFile = 50;
					container.addChild(fileUpload_2, {
						"colIndex": 1,
						"rowIndex": 2
					});
					var fileUpload_3 = new cpr.controls.FileUpload("fid4");
					fileUpload_3.extensions = ".jpg";
					container.addChild(fileUpload_3, {
						"colIndex": 1,
						"rowIndex": 3
					});
					var fileUpload_4 = new cpr.controls.FileUpload("fid5");
					fileUpload_4.buttons = ["send", "add"];
					fileUpload_4.emptyMessage = "더블 클릭이나 드래그 앤 드롭으로 추가하세요";
					container.addChild(fileUpload_4, {
						"colIndex": 1,
						"rowIndex": 0
					});
					var output_6 = new cpr.controls.Output();
					output_6.value = "[maxFileCount = 3]\r\n1. 파일 4개를 업로드 한다.\r\n2. 파일이 3개까지 업로드 된다.\r\n\r\n[droppableFile = false]\r\n1. 파일을 드래그한다.\r\n2. 파일 업로드 창에 드롭한다.\r\n3. 파일이 업로드 되지 않는다.";
					container.addChild(output_6, {
						"colIndex": 0,
						"rowIndex": 4
					});
					var fileUpload_5 = new cpr.controls.FileUpload("fid2");
					fileUpload_5.maxFileCount = 3;
					fileUpload_5.droppableFile = false;
					container.addChild(fileUpload_5, {
						"colIndex": 1,
						"rowIndex": 4
					});
				})(group_3);
				container.addChild(group_3, {
					"colIndex": 0,
					"rowIndex": 1,
					"colSpan": 1,
					"rowSpan": 1
				});
			})(group_2);
			container.addChild(group_2, {
				"autoSize": "height",
				"width": "400px",
				"height": "645px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "파일업로드 관련 속성";
	cpr.core.Platform.INSTANCE.register(app);
})();
