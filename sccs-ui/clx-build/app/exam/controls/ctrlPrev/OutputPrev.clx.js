/*
 * App URI: app/exam/controls/ctrlPrev/OutputPrev
 * Source Location: app/exam/controls/ctrlPrev/OutputPrev.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/exam/controls/ctrlPrev/OutputPrev", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			
			// Header
			var dataMap_1 = new cpr.data.DataMap("dm1");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "column1",
						"defaultValue": "1234567891234"
					},
					{
						"name": "column2",
						"defaultValue": "20200301"
					},
					{
						"name": "column3",
						"dataType": "number",
						"defaultValue": "320000500100"
					},
					{
						"name": "column4",
						"dataType": "number",
						"defaultValue": "32.52"
					}
				]
			});
			app.register(dataMap_1);
			
			app.supportMedia("all and (min-width: 1320px)", "eXFrame");
			app.supportMedia("all and (min-width: 1235px) and (max-width: 1319px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpSearch");
			// Layout
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_2.spacing = 0;
			group_1.setLayout(verticalLayout_2);
			(function(container){
				var userDefinedControl_1 = new udc.com.appHeader("appheader1");
				userDefinedControl_1.initializeYn = "N";
				container.addChild(userDefinedControl_1, {
					"width": "500px",
					"height": "30px"
				});
			})(group_1);
			container.addChild(group_1, {
				"autoSize": "height",
				"width": "400px",
				"height": "30px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.scrollable = false;
			formLayout_1.topMargin = "0px";
			formLayout_1.rightMargin = "0px";
			formLayout_1.bottomMargin = "0px";
			formLayout_1.leftMargin = "0px";
			formLayout_1.horizontalSpacing = "0px";
			formLayout_1.verticalSpacing = "0px";
			formLayout_1.setColumns(["1fr"]);
			formLayout_1.setRows(["25px", "1fr"]);
			group_2.setLayout(formLayout_1);
			(function(container){
				var output_1 = new cpr.controls.Output("opt7");
				output_1.value = "아웃풋(Output)은 결과로부터 오는 값을 출력하는 컨트롤입니다.";
				container.addChild(output_1, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var group_3 = new cpr.controls.Container("grp1");
				group_3.style.setClasses(["cl-form-group"]);
				// Layout
				var formLayout_2 = new cpr.controls.layouts.FormLayout();
				formLayout_2.topMargin = "5px";
				formLayout_2.rightMargin = "5px";
				formLayout_2.bottomMargin = "5px";
				formLayout_2.leftMargin = "5px";
				formLayout_2.horizontalSpacing = "5px";
				formLayout_2.verticalSpacing = "5px";
				formLayout_2.horizontalSeparatorWidth = 1;
				formLayout_2.verticalSeparatorWidth = 1;
				formLayout_2.setColumns(["300px", "1fr"]);
				formLayout_2.setUseColumnShade(0, true);
				formLayout_2.setRows(["1fr", "1fr", "1fr", "1fr", "1fr", "1fr"]);
				group_3.setLayout(formLayout_2);
				(function(container){
					var output_2 = new cpr.controls.Output("opt1");
					output_2.value = "[format = 000000-0000000]\r\n1. 아웃풋에 출력되는 값이 주민등록번호 포맷이다.";
					container.addChild(output_2, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var output_3 = new cpr.controls.Output("opt2");
					output_3.value = "[dataType = date]\r\n[format = YYYY-MM-DD]\r\n1. 아웃풋에 출력되는 값이 YYYY-MM-DD 포맷이다.";
					container.addChild(output_3, {
						"colIndex": 0,
						"rowIndex": 1
					});
					var output_4 = new cpr.controls.Output("opt3");
					output_4.value = "[dataType = number]\r\n[format = s#,##0]\r\n[displayExp = \"$\" + text]\r\n1. 아웃풋에 출력되는 값이 천자리 마다 콤마가 찍혔고 $가 붙어있다.";
					container.addChild(output_4, {
						"colIndex": 0,
						"rowIndex": 3
					});
					var group_4 = new cpr.controls.Container("grp2");
					// Layout
					var formLayout_3 = new cpr.controls.layouts.FormLayout();
					formLayout_3.topMargin = "0px";
					formLayout_3.rightMargin = "0px";
					formLayout_3.bottomMargin = "0px";
					formLayout_3.leftMargin = "0px";
					formLayout_3.horizontalSpacing = "5px";
					formLayout_3.verticalSpacing = "5px";
					formLayout_3.horizontalSeparatorWidth = 1;
					formLayout_3.verticalSeparatorWidth = 1;
					formLayout_3.setColumns(["1fr"]);
					formLayout_3.setRows(["25px", "1fr"]);
					group_4.setLayout(formLayout_3);
					(function(container){
						var output_5 = new cpr.controls.Output("opt10");
						output_5.format = "000000-0000000";
						output_5.unselectable = false;
						output_5.bind("value").toDataMap(app.lookup("dm1"), "column1");
						container.addChild(output_5, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var output_6 = new cpr.controls.Output("opt8");
						output_6.value = "dataType=string인 경우 format 속성을 지정하여 특정 문자열 데이터에 대한 마스킹 처리를 할 수 있습니다.";
						output_6.style.css({
							"color" : "#757272"
						});
						container.addChild(output_6, {
							"colIndex": 0,
							"rowIndex": 1
						});
					})(group_4);
					container.addChild(group_4, {
						"colIndex": 1,
						"rowIndex": 0
					});
					var group_5 = new cpr.controls.Container("grp3");
					// Layout
					var formLayout_4 = new cpr.controls.layouts.FormLayout();
					formLayout_4.topMargin = "0px";
					formLayout_4.rightMargin = "0px";
					formLayout_4.bottomMargin = "0px";
					formLayout_4.leftMargin = "0px";
					formLayout_4.horizontalSpacing = "5px";
					formLayout_4.verticalSpacing = "5px";
					formLayout_4.horizontalSeparatorWidth = 1;
					formLayout_4.verticalSeparatorWidth = 1;
					formLayout_4.setColumns(["1fr"]);
					formLayout_4.setRows(["25px", "1fr"]);
					group_5.setLayout(formLayout_4);
					(function(container){
						var output_7 = new cpr.controls.Output("opt11");
						output_7.dataType = "date";
						output_7.format = "YYYY-MM-DD";
						output_7.bind("value").toDataMap(app.lookup("dm1"), "column2");
						container.addChild(output_7, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var output_8 = new cpr.controls.Output("opt4");
						output_8.value = "데이터 유형이 날짜인 경우에 dataType=date로 지정하여 날짜 포맷으로 데이터를 표시할 수 있습니다.";
						output_8.style.css({
							"color" : "#757272"
						});
						container.addChild(output_8, {
							"colIndex": 0,
							"rowIndex": 1
						});
					})(group_5);
					container.addChild(group_5, {
						"colIndex": 1,
						"rowIndex": 1
					});
					var group_6 = new cpr.controls.Container("grp4");
					// Layout
					var formLayout_5 = new cpr.controls.layouts.FormLayout();
					formLayout_5.topMargin = "0px";
					formLayout_5.rightMargin = "0px";
					formLayout_5.bottomMargin = "0px";
					formLayout_5.leftMargin = "0px";
					formLayout_5.horizontalSpacing = "5px";
					formLayout_5.verticalSpacing = "5px";
					formLayout_5.horizontalSeparatorWidth = 1;
					formLayout_5.verticalSeparatorWidth = 1;
					formLayout_5.setColumns(["1fr"]);
					formLayout_5.setRows(["25px", "1fr"]);
					group_6.setLayout(formLayout_5);
					(function(container){
						var output_9 = new cpr.controls.Output("opt12");
						output_9.dataType = "number";
						output_9.format = "s#,##0";
						output_9.displayExp = "\"$\" + text";
						output_9.bind("value").toDataMap(app.lookup("dm1"), "column3");
						container.addChild(output_9, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var output_10 = new cpr.controls.Output("opt5");
						output_10.value = "데이터 유형이 숫자인 경우에 dataType=number로 지정하며, format 속성을 통해 숫자(금액, 소수점) 포맷으로 데이터를 표시할 수 있습니다.";
						output_10.style.css({
							"color" : "#757272"
						});
						container.addChild(output_10, {
							"colIndex": 0,
							"rowIndex": 1
						});
					})(group_6);
					container.addChild(group_6, {
						"colIndex": 1,
						"rowIndex": 3
					});
					var output_11 = new cpr.controls.Output();
					output_11.value = "[ellipsis = true]\r\n1. 아웃풋에 출력되는 값에 말줄임 표시가 되어 있다.";
					container.addChild(output_11, {
						"colIndex": 0,
						"rowIndex": 5
					});
					var group_7 = new cpr.controls.Container("grp5");
					// Layout
					var formLayout_6 = new cpr.controls.layouts.FormLayout();
					formLayout_6.topMargin = "0px";
					formLayout_6.rightMargin = "0px";
					formLayout_6.bottomMargin = "0px";
					formLayout_6.leftMargin = "0px";
					formLayout_6.horizontalSpacing = "5px";
					formLayout_6.verticalSpacing = "5px";
					formLayout_6.setColumns(["100px", "1fr"]);
					formLayout_6.setRows(["1fr"]);
					group_7.setLayout(formLayout_6);
					(function(container){
						var output_12 = new cpr.controls.Output();
						output_12.value = "가나다라마바사아자차카타파하";
						output_12.ellipsis = true;
						container.addChild(output_12, {
							"colIndex": 0,
							"rowIndex": 0
						});
					})(group_7);
					container.addChild(group_7, {
						"colIndex": 1,
						"rowIndex": 5
					});
					var output_13 = new cpr.controls.Output();
					output_13.value = "[dataType = number]\r\n[decimalSeparator = ?]\r\n[digitGroupSeparator = !]\r\n1. 아웃풋에 출력되는 값이 정수 구분은 !, 소수 구분은 ?로 되어 있다.";
					container.addChild(output_13, {
						"colIndex": 0,
						"rowIndex": 4
					});
					var output_14 = new cpr.controls.Output();
					output_14.value = "[dataType = date]\r\n[dateValueFormat = DD/MM/YYYY]\r\n[format = YYYY-MM-DD]\r\n1. 아웃풋에 출력되는 값이 YYYY-MM-DD 포맷이다.";
					container.addChild(output_14, {
						"colIndex": 0,
						"rowIndex": 2
					});
					var group_8 = new cpr.controls.Container("grp6");
					// Layout
					var formLayout_7 = new cpr.controls.layouts.FormLayout();
					formLayout_7.horizontalSpacing = "5px";
					formLayout_7.verticalSpacing = "5px";
					formLayout_7.horizontalSeparatorWidth = 1;
					formLayout_7.verticalSeparatorWidth = 1;
					formLayout_7.setColumns(["1fr"]);
					formLayout_7.setRows(["25px", "1fr"]);
					group_8.setLayout(formLayout_7);
					(function(container){
						var output_15 = new cpr.controls.Output();
						output_15.value = "아웃풋의 value가 dateValueFormat의 형식을 분석후 설정한 format형식으로 반환합니다";
						output_15.style.css({
							"color" : "#757272"
						});
						container.addChild(output_15, {
							"colIndex": 0,
							"rowIndex": 1
						});
						var output_16 = new cpr.controls.Output("opt20");
						output_16.value = "05/05/2021";
						output_16.dataType = "date";
						output_16.dateValueFormat = "DD/MM/YYYY";
						output_16.format = "YYYY-MM-DD";
						container.addChild(output_16, {
							"colIndex": 0,
							"rowIndex": 0
						});
					})(group_8);
					container.addChild(group_8, {
						"colIndex": 1,
						"rowIndex": 2
					});
					var group_9 = new cpr.controls.Container("grp7");
					// Layout
					var formLayout_8 = new cpr.controls.layouts.FormLayout();
					formLayout_8.topMargin = "0px";
					formLayout_8.rightMargin = "0px";
					formLayout_8.bottomMargin = "0px";
					formLayout_8.leftMargin = "0px";
					formLayout_8.horizontalSpacing = "5px";
					formLayout_8.verticalSpacing = "5px";
					formLayout_8.horizontalSeparatorWidth = 1;
					formLayout_8.verticalSeparatorWidth = 1;
					formLayout_8.setColumns(["1fr"]);
					formLayout_8.setRows(["25px", "1fr"]);
					group_9.setLayout(formLayout_8);
					(function(container){
						var output_17 = new cpr.controls.Output();
						output_17.value = "123456789.123";
						output_17.dataType = "number";
						output_17.format = "s#,##0.#";
						output_17.decimalSeparator = "?";
						output_17.digitGroupSeparator = "!";
						container.addChild(output_17, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var output_18 = new cpr.controls.Output();
						output_18.value = "데이터 유형이 숫자인 경우에 dataType=number로 지정하며, digitSeparator, digitGroupSeperator를 통해 정수, 소수 구분자 표시 방법을 설정할 수 있습니다.";
						output_18.style.css({
							"color" : "#757272"
						});
						container.addChild(output_18, {
							"colIndex": 0,
							"rowIndex": 1
						});
					})(group_9);
					container.addChild(group_9, {
						"colIndex": 1,
						"rowIndex": 4
					});
				})(group_3);
				container.addChild(group_3, {
					"colIndex": 0,
					"rowIndex": 1,
					"colSpan": 1,
					"rowSpan": 1
				});
			})(group_2);
			container.addChild(group_2, {
				"width": "400px",
				"height": "645px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "아웃풋 관련 속성";
	cpr.core.Platform.INSTANCE.register(app);
})();
