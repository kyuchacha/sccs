/*
 * App URI: app/exam/controls/ctrlPrev/ComboBoxPrev
 * Source Location: app/exam/controls/ctrlPrev/ComboBoxPrev.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/exam/controls/ctrlPrev/ComboBoxPrev", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "ICON"}
				],
				"rows": [
					{"CD": "01", "CD_NM": "서울", "ICON": "app/exam/controls/001-south-korea.svg"},
					{"CD": "02", "CD_NM": "부산", "ICON": "app/exam/controls/001-south-korea.svg"},
					{"CD": "03", "CD_NM": "대구", "ICON": "app/exam/controls/001-south-korea.svg"},
					{"CD": "04", "CD_NM": "수원", "ICON": "app/exam/controls/001-south-korea.svg"},
					{"CD": "05", "CD_NM": "고양", "ICON": "app/exam/controls/001-south-korea.svg"},
					{"CD": "06", "CD_NM": "대전", "ICON": "app/exam/controls/001-south-korea.svg"},
					{"CD": "07", "CD_NM": "부여", "ICON": "app/exam/controls/001-south-korea.svg"},
					{"CD": "08", "CD_NM": "광주", "ICON": "app/exam/controls/001-south-korea.svg"},
					{"CD": "09", "CD_NM": "함평", "ICON": "app/exam/controls/001-south-korea.svg"},
					{"CD": "10", "CD_NM": "제주", "ICON": "app/exam/controls/001-south-korea.svg"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("ds2");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD_NM"},
					{"name": "CD"}
				],
				"rows": [
					{"CD_NM": "경기도", "CD": "10"},
					{"CD_NM": "전라도", "CD": "20"},
					{"CD_NM": "경상도", "CD": "30"}
				]
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("ds3");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD_NM"},
					{"name": "CD"},
					{"name": "P_VAL"}
				],
				"rows": [
					{"CD_NM": "천안", "CD": "100", "P_VAL": "10"},
					{"CD_NM": "수원", "CD": "200", "P_VAL": "10"},
					{"CD_NM": "안산", "CD": "300", "P_VAL": "10"},
					{"CD_NM": "광주시", "CD": "400", "P_VAL": "20"},
					{"CD_NM": "여수", "CD": "500", "P_VAL": "20"},
					{"CD_NM": "나주", "CD": "600", "P_VAL": "20"},
					{"CD_NM": "대구", "CD": "700", "P_VAL": "30"},
					{"CD_NM": "부산", "CD": "800", "P_VAL": "30"}
				]
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("ds4");
			dataSet_4.parseData({
				"columns": [
					{"name": "column1"},
					{"name": "column2"},
					{"name": "column3"},
					{"name": "column4"},
					{"name": "column5"},
					{"name": "column6"}
				],
				"rows": [
					{"column1": "", "column2": "", "column3": "", "column4": "", "column5": "", "column6": ""},
					{"column1": "", "column2": "", "column3": "", "column4": "", "column5": "", "column6": ""},
					{"column1": "", "column2": "", "column3": "", "column4": "", "column5": "", "column6": ""}
				]
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("ds_list");
			dataSet_5.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"},
					{"name": "parent"}
				],
				"rows": [
					{"label": "File", "value": "File", "parent": "root"},
					{"label": "Edit", "value": "Edit", "parent": "root"},
					{"label": "Navigate", "value": "Navigate", "parent": "root"},
					{"label": "Search", "value": "Search", "parent": "root"},
					{"label": "Project", "value": "Project", "parent": "root"},
					{"label": "Run", "value": "Run", "parent": "root"},
					{"label": "Window", "value": "Window", "parent": "root"},
					{"label": "Help", "value": "Help", "parent": "root"},
					{"label": "New Window", "value": "Window1", "parent": "Window"},
					{"label": "Editor", "value": "Window2", "parent": "Window"},
					{"label": "Hide Toolbar", "value": "Window3", "parent": "Window"},
					{"label": "Show View", "value": "Window4", "parent": "Window"},
					{"label": "Perspective", "value": "Window5", "parent": "Window"},
					{"label": "Navigation", "value": "Window6", "parent": "Window"},
					{"label": "Preferences", "value": "Window7", "parent": "Window"},
					{"label": "Toggle Split Editor", "value": "Editor1", "parent": "Window2"},
					{"label": "Toggle Split Editor", "value": "Editor2", "parent": "Window2"},
					{"label": "Clone", "value": "Editor3", "parent": "Window2"},
					{"label": "Other...", "value": "ShowView1", "parent": "Window4"},
					{"label": "Open Perspective", "value": "Perspective1", "parent": "Window5"},
					{"label": "Customize Perspective", "value": "Perspective2", "parent": "Window5"},
					{"label": "Save Perspective As", "value": "Perspective3", "parent": "Window5"},
					{"label": "Reset Perspective", "value": "Perspective4", "parent": "Window5"},
					{"label": "Close Perspective", "value": "Perspective5", "parent": "Window5"},
					{"label": "Close All Perspectives", "value": "Perspective6", "parent": "Window5"},
					{"label": "Other...", "value": "OpenPerspective1", "parent": "Perspective1"},
					{"label": "Show System Menu", "value": "Navigation1", "parent": "Window6"},
					{"label": "Show View Menu", "value": "Navigation2", "parent": "Window6"},
					{"label": "Quick Access", "value": "Navigation3", "parent": "Window6"},
					{"label": "Maximize Active View or Editor", "value": "Navigation4", "parent": "Window6"},
					{"label": "Minimize Active View or Editor", "value": "Navigation5", "parent": "Window6"},
					{"label": "Activate Editor", "value": "Navigation6", "parent": "Window6"},
					{"label": "Next Editor", "value": "Navigation7", "parent": "Window6"},
					{"label": "Previous Editor", "value": "Navigation8", "parent": "Window6"},
					{"label": "Switch to Editor", "value": "Navigation9", "parent": "Window6"},
					{"label": "Next View", "value": "Navigation10", "parent": "Window6"},
					{"label": "Previous View", "value": "Navigation11", "parent": "Window6"},
					{"label": "Next Perspective", "value": "Navigation12", "parent": "Window6"},
					{"label": "Previous Perspective", "value": "Navigation13", "parent": "Window6"},
					{"label": "New File", "value": "File1", "parent": "File"},
					{"label": "New Project", "value": "File2", "parent": "File"},
					{"label": "Save", "value": "File3", "parent": "File"},
					{"label": "Import", "value": "File4", "parent": "File"},
					{"label": "Undo", "value": "Edit1", "parent": "Edit"},
					{"label": "Redo", "value": "Edit2", "parent": "Edit"},
					{"label": "Copy", "value": "Edit3", "parent": "Edit"},
					{"label": "Cut", "value": "Edit4", "parent": "Edit"}
				]
			});
			app.register(dataSet_5);
			var dataMap_1 = new cpr.data.DataMap("dm1");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strValue1",
						"defaultValue": ""
					},
					{
						"name": "strValue2",
						"defaultValue": ""
					},
					{
						"name": "strValue3",
						"defaultValue": ""
					},
					{"name": "strValue4"}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dm2");
			dataMap_2.parseData({
				"columns" : [
					{"name": "strVal1"},
					{"name": "strVal2"}
				]
			});
			app.register(dataMap_2);
			
			app.supportMedia("all and (min-width: 1320px)", "eXFrame");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1319px)", "default");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpSearch");
			// Layout
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_2.spacing = 0;
			group_1.setLayout(verticalLayout_2);
			(function(container){
				var userDefinedControl_1 = new udc.com.appHeader("appheader1");
				userDefinedControl_1.initializeYn = "N";
				container.addChild(userDefinedControl_1, {
					"width": "500px",
					"height": "30px"
				});
			})(group_1);
			container.addChild(group_1, {
				"autoSize": "height",
				"width": "400px",
				"height": "30px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.scrollable = false;
			formLayout_1.topMargin = "0px";
			formLayout_1.rightMargin = "0px";
			formLayout_1.bottomMargin = "0px";
			formLayout_1.leftMargin = "0px";
			formLayout_1.horizontalSpacing = "0px";
			formLayout_1.verticalSpacing = "0px";
			formLayout_1.setColumns(["1fr"]);
			formLayout_1.setRows(["25px", "1fr"]);
			group_2.setLayout(formLayout_1);
			(function(container){
				var output_1 = new cpr.controls.Output("opt7");
				output_1.value = "콤보박스(ComboBox)는 미리 정해진 값들 중에서 단일 값을 선택하는 컨트롤입니다.";
				container.addChild(output_1, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var group_3 = new cpr.controls.Container("grp1");
				group_3.style.setClasses(["cl-form-group"]);
				// Layout
				var formLayout_2 = new cpr.controls.layouts.FormLayout();
				formLayout_2.topMargin = "5px";
				formLayout_2.rightMargin = "5px";
				formLayout_2.bottomMargin = "5px";
				formLayout_2.leftMargin = "5px";
				formLayout_2.horizontalSpacing = "5px";
				formLayout_2.verticalSpacing = "5px";
				formLayout_2.horizontalSeparatorWidth = 1;
				formLayout_2.verticalSeparatorWidth = 1;
				formLayout_2.setColumns(["300px", "1fr"]);
				formLayout_2.setUseColumnShade(0, true);
				formLayout_2.setRows(["60px", "60px", "60px", "100px", "60px", "100px", "60px", "90px", "90px"]);
				formLayout_2.setRowAutoSizing(0, true);
				formLayout_2.setRowAutoSizing(1, true);
				formLayout_2.setRowAutoSizing(2, true);
				formLayout_2.setRowAutoSizing(3, true);
				formLayout_2.setRowAutoSizing(4, true);
				formLayout_2.setRowAutoSizing(5, true);
				formLayout_2.setRowAutoSizing(6, true);
				formLayout_2.setRowAutoSizing(7, true);
				formLayout_2.setRowAutoSizing(8, true);
				group_3.setLayout(formLayout_2);
				(function(container){
					var output_2 = new cpr.controls.Output("opt5");
					output_2.value = "[preventInput = true]\r\n1. 콤보박스를 클릭한다.\r\n2. 타이핑이 쳐지지 않는다.";
					container.addChild(output_2, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var comboBox_1 = new cpr.controls.ComboBox("cbb12");
					comboBox_1.preventInput = true;
					(function(comboBox_1){
						comboBox_1.setItemSet(app.lookup("ds1"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_1);
					container.addChild(comboBox_1, {
						"colIndex": 1,
						"rowIndex": 0,
						"horizontalAlign": "left",
						"verticalAlign": "center"
					});
					var output_3 = new cpr.controls.Output("opt1");
					output_3.value = "[hideButton = true]\r\n1. 버튼이 보이지 않는다.";
					container.addChild(output_3, {
						"colIndex": 0,
						"rowIndex": 1
					});
					var comboBox_2 = new cpr.controls.ComboBox("cbb5");
					comboBox_2.hideButton = true;
					(function(comboBox_2){
						comboBox_2.setItemSet(app.lookup("ds1"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_2);
					container.addChild(comboBox_2, {
						"colIndex": 1,
						"rowIndex": 1,
						"horizontalAlign": "left",
						"verticalAlign": "center"
					});
					var output_4 = new cpr.controls.Output("opt2");
					output_4.value = "[maxVisibleItmes = 5]\r\n1. 콤보박스 [∨] 아이콘을 클릭한다.\r\n2. 리스트가 5개씩 보인다.";
					container.addChild(output_4, {
						"colIndex": 0,
						"rowIndex": 2
					});
					var comboBox_3 = new cpr.controls.ComboBox("cbb6");
					comboBox_3.maxVisibleItems = 5;
					(function(comboBox_3){
						comboBox_3.setItemSet(app.lookup("ds1"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_3);
					container.addChild(comboBox_3, {
						"colIndex": 1,
						"rowIndex": 2,
						"horizontalAlign": "left",
						"verticalAlign": "center"
					});
					var output_5 = new cpr.controls.Output("opt4");
					output_5.value = "[multiple = true]\r\n1. 콤보박스 [∨] 아이콘을 클릭한다.\r\n2. 리스트 중 한 아이템을 클릭한다.\r\n3. 2와 다른 아이템을 클릭한다.\r\n4. 둘 다 선택된다.";
					container.addChild(output_5, {
						"colIndex": 0,
						"rowIndex": 3
					});
					var comboBox_4 = new cpr.controls.ComboBox("cbb11");
					comboBox_4.maxVisibleItems = 0;
					comboBox_4.multiple = true;
					comboBox_4.bind("value").toDataMap(app.lookup("dm1"), "strValue4");
					(function(comboBox_4){
						comboBox_4.setItemSet(app.lookup("ds1"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_4);
					container.addChild(comboBox_4, {
						"colIndex": 1,
						"rowIndex": 3,
						"horizontalAlign": "left",
						"verticalAlign": "center"
					});
					var output_6 = new cpr.controls.Output();
					output_6.value = "[showIcon = true]\r\n1. 콤보박스 [∨] 아이콘을 클릭한다.\r\n2. 리스트에 아이콘이 표시되있다.";
					container.addChild(output_6, {
						"colIndex": 0,
						"rowIndex": 4
					});
					var comboBox_5 = new cpr.controls.ComboBox("cbb14");
					comboBox_5.showIcon = true;
					comboBox_5.maxVisibleItems = 0;
					comboBox_5.bind("value").toDataMap(app.lookup("dm1"), "strValue4");
					(function(comboBox_5){
						comboBox_5.setItemSet(app.lookup("ds1"), {
							"label": "CD_NM",
							"value": "CD",
							"icon": "ICON"
						});
					})(comboBox_5);
					container.addChild(comboBox_5, {
						"colIndex": 1,
						"rowIndex": 4,
						"horizontalAlign": "left",
						"verticalAlign": "center"
					});
					var output_7 = new cpr.controls.Output("opt6");
					output_7.value = "[enabledItemExp = (value == '02' || value == '03') ? false : true ]\r\n1. 콤보박스 [∨] 아이콘을 클릭한다.\r\n2. 2, 3번째 아이템은 클릭되지 않는다.";
					container.addChild(output_7, {
						"colIndex": 0,
						"rowIndex": 5
					});
					var group_4 = new cpr.controls.Container("grp3");
					// Layout
					var formLayout_3 = new cpr.controls.layouts.FormLayout();
					formLayout_3.topMargin = "0px";
					formLayout_3.rightMargin = "0px";
					formLayout_3.bottomMargin = "0px";
					formLayout_3.leftMargin = "0px";
					formLayout_3.horizontalSpacing = "5px";
					formLayout_3.verticalSpacing = "5px";
					formLayout_3.horizontalSeparatorWidth = 1;
					formLayout_3.verticalSeparatorWidth = 1;
					formLayout_3.setColumns(["1fr"]);
					formLayout_3.setRows(["25px", "1fr"]);
					group_4.setLayout(formLayout_3);
					(function(container){
						var comboBox_6 = new cpr.controls.ComboBox("cbb10");
						comboBox_6.enabledItemExp = "(value == '02' || value == '03') ? false : true ";
						(function(comboBox_6){
							comboBox_6.setItemSet(app.lookup("ds1"), {
								"label": "CD_NM",
								"value": "CD"
							});
						})(comboBox_6);
						container.addChild(comboBox_6, {
							"colIndex": 0,
							"rowIndex": 0,
							"horizontalAlign": "left",
							"verticalAlign": "center"
						});
						var output_8 = new cpr.controls.Output("opt10");
						output_8.value = "enabledItemExp 속성을 사용하여, 특정 아이템들의 활성/비활성 상태를 지정할 수 있다.";
						output_8.style.css({
							"color" : "#757272"
						});
						container.addChild(output_8, {
							"colIndex": 0,
							"rowIndex": 1
						});
					})(group_4);
					container.addChild(group_4, {
						"colIndex": 1,
						"rowIndex": 5
					});
					var output_9 = new cpr.controls.Output();
					output_9.value = "[dropDownType = tree]\r\n1. 콤보박스 [∨] 아이콘을 클릭한다.\r\n2. 리스트가 트리형태로 보인다.";
					container.addChild(output_9, {
						"colIndex": 0,
						"rowIndex": 6
					});
					var comboBox_7 = new cpr.controls.ComboBox("cmb1");
					comboBox_7.maxVisibleItems = 10;
					comboBox_7.dropDownType = "tree";
					comboBox_7.wheelRowCount = 3;
					(function(comboBox_7){
						comboBox_7.setItemSet(app.lookup("ds_list"), {
							"label": "label",
							"value": "value",
							"parentValue": "parent"
						});
					})(comboBox_7);
					container.addChild(comboBox_7, {
						"colIndex": 1,
						"rowIndex": 6,
						"horizontalAlign": "left",
						"verticalAlign": "center"
					});
					var group_5 = new cpr.controls.Container("grp5");
					// Layout
					var formLayout_4 = new cpr.controls.layouts.FormLayout();
					formLayout_4.horizontalSpacing = "5px";
					formLayout_4.verticalSpacing = "5px";
					formLayout_4.horizontalSeparatorWidth = 1;
					formLayout_4.verticalSeparatorWidth = 1;
					formLayout_4.setColumns(["1fr"]);
					formLayout_4.setUseColumnShade(0, true);
					formLayout_4.setRows(["25px", "1fr"]);
					group_5.setLayout(formLayout_4);
					(function(container){
						var output_10 = new cpr.controls.Output("opt9");
						output_10.value = "콤보박스 필터링 예제 1";
						container.addChild(output_10, {
							"colIndex": 0,
							"rowIndex": 0,
							"colSpan": 1,
							"rowSpan": 1
						});
						var output_11 = new cpr.controls.Output();
						output_11.value = "[(CD == \"\" || P_VAL == #cbb1.value)]\r\n1. 첫번째 콤보박스 리스트 중 경기도를 선택한다.\r\n2. 두번째 콤보박스 리스트가 경기도의 도시로 표시된다.\r\n3. 첫번째 콤보박스 리스트 중 전라도를 선택한다.\r\n4. 두번째 콤보박스 리스트가 전라도의 도시로 표시된다.";
						container.addChild(output_11, {
							"colIndex": 0,
							"rowIndex": 1
						});
					})(group_5);
					container.addChild(group_5, {
						"colIndex": 0,
						"rowIndex": 7,
						"colSpan": 1,
						"rowSpan": 1
					});
					var group_6 = new cpr.controls.Container("grp4");
					// Layout
					var xYLayout_1 = new cpr.controls.layouts.XYLayout();
					group_6.setLayout(xYLayout_1);
					(function(container){
						var comboBox_8 = new cpr.controls.ComboBox("cbb1");
						comboBox_8.bind("value").toDataMap(app.lookup("dm2"), "strVal1");
						(function(comboBox_8){
							comboBox_8.addItem(new cpr.controls.Item("선택", ""));
							comboBox_8.setItemSet(app.lookup("ds2"), {
								"label": "CD_NM",
								"value": "CD"
							});
						})(comboBox_8);
						container.addChild(comboBox_8, {
							"top": "0px",
							"left": "0px",
							"width": "100px",
							"height": "25px"
						});
						var comboBox_9 = new cpr.controls.ComboBox("cbb2");
						comboBox_9.filterExp = "(CD == \"\" || P_VAL == #cbb1.value)";
						comboBox_9.bind("value").toDataMap(app.lookup("dm2"), "strVal2");
						(function(comboBox_9){
							comboBox_9.addItem(new cpr.controls.Item("선택", ""));
							comboBox_9.setItemSet(app.lookup("ds3"), {
								"label": "CD_NM",
								"value": "CD"
							});
						})(comboBox_9);
						container.addChild(comboBox_9, {
							"top": "0px",
							"left": "110px",
							"width": "146px",
							"height": "25px"
						});
					})(group_6);
					container.addChild(group_6, {
						"colIndex": 1,
						"rowIndex": 7
					});
					var group_7 = new cpr.controls.Container("grp6");
					// Layout
					var formLayout_5 = new cpr.controls.layouts.FormLayout();
					formLayout_5.horizontalSpacing = "5px";
					formLayout_5.verticalSpacing = "5px";
					formLayout_5.horizontalSeparatorWidth = 1;
					formLayout_5.verticalSeparatorWidth = 1;
					formLayout_5.setColumns(["1fr"]);
					formLayout_5.setUseColumnShade(0, true);
					formLayout_5.setRows(["25px", "1fr"]);
					group_7.setLayout(formLayout_5);
					(function(container){
						var output_12 = new cpr.controls.Output("opt8");
						output_12.value = "콤보박스 필터링 예제 2(그리드)";
						container.addChild(output_12, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var output_13 = new cpr.controls.Output();
						output_13.value = "[(CD == \"\" || CD == null || P_VAL == column1)]\r\n1. 그리드 첫번째 행 지역(도) 컬럼에 콤보박스 리스트 중 경기도를 선택한다.\r\n2. 그리드 첫번째 행 시/군 컬럼에 콤보박스 리스트가 경기도의 도시로 표시된다.\r\n3. 그리드 두번째 행 지역(도) 컬럼에 콤보박스 리스트 중 전라도를 선택한다.\r\n4. 그리드 두번째 행 시/군 컬럼에 콤보박스 리스트가 전라도의 도시로 표시된다.";
						container.addChild(output_13, {
							"colIndex": 0,
							"rowIndex": 1
						});
					})(group_7);
					container.addChild(group_7, {
						"colIndex": 0,
						"rowIndex": 8,
						"colSpan": 1,
						"rowSpan": 1
					});
					var grid_1 = new cpr.controls.Grid("grx1");
					grid_1.init({
						"dataSet": app.lookup("ds4"),
						"columns": [
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"}
						],
						"header": {
							"rows": [{"height": "24px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.targetColumnName = "column1";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "지역(도)";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.targetColumnName = "column2";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "시군";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.targetColumnName = "column3";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "column3";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3},
									"configurator": function(cell){
										cell.targetColumnName = "column4";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "column4";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 4},
									"configurator": function(cell){
										cell.targetColumnName = "column5";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "column5";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 5},
									"configurator": function(cell){
										cell.targetColumnName = "column6";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "column6";
									}
								}
							]
						},
						"detail": {
							"rows": [{"height": "24px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.columnName = "column1";
										cell.control = (function(){
											var comboBox_10 = new cpr.controls.ComboBox("cbb3");
											(function(comboBox_10){
												comboBox_10.addItem(new cpr.controls.Item("선택", ""));
												comboBox_10.setItemSet(app.lookup("ds2"), {
													"label": "CD_NM",
													"value": "CD"
												});
											})(comboBox_10);
											comboBox_10.bind("value").toDataColumn("column1");
											return comboBox_10;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.columnName = "column2";
										cell.control = (function(){
											var comboBox_11 = new cpr.controls.ComboBox("cbb4");
											comboBox_11.filterExp = "(CD == \"\" || CD == null || P_VAL == column1)";
											(function(comboBox_11){
												comboBox_11.addItem(new cpr.controls.Item("선택", ""));
												comboBox_11.setItemSet(app.lookup("ds3"), {
													"label": "CD_NM",
													"value": "CD"
												});
											})(comboBox_11);
											comboBox_11.bind("value").toDataColumn("column2");
											return comboBox_11;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.columnName = "column3";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3},
									"configurator": function(cell){
										cell.columnName = "column4";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 4},
									"configurator": function(cell){
										cell.columnName = "column5";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 5},
									"configurator": function(cell){
										cell.columnName = "column6";
									}
								}
							]
						}
					});
					container.addChild(grid_1, {
						"colIndex": 1,
						"rowIndex": 8
					});
				})(group_3);
				container.addChild(group_3, {
					"colIndex": 0,
					"rowIndex": 1,
					"colSpan": 1,
					"rowSpan": 1
				});
			})(group_2);
			container.addChild(group_2, {
				"width": "400px",
				"height": "645px"
			});
		}
	});
	app.title = "콤보박스 관련 속성";
	cpr.core.Platform.INSTANCE.register(app);
})();
