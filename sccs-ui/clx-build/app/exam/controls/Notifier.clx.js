/*
 * App URI: app/exam/controls/Notifier
 * Source Location: app/exam/controls/Notifier.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/exam/controls/Notifier", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * Notifier.js
			 * Created at 2022. 3. 10. 오전 9:52:12.
			 *
			 * @author 1amthomas
			 ************************************************/
			
			/*
			 * "정보" 버튼(btn2)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn2Click(e){
				app.lookup("ntf").info("알림");	
			}
			
			/*
			 * "성공" 버튼(btn3)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn3Click(e){
				app.lookup("ntf").success("성공 알림");	
			}
			
			/*
			 * "위험" 버튼(btn4)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn4Click(e){
				app.lookup("ntf").danger("위험 알림");	
			}
			
			/*
			 * "경고" 버튼(btn5)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn5Click(e){
				app.lookup("ntf").warning("경고 알림");
			}
			
			/*
			 * "사용자 정의" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click(e){
				app.lookup("ntf").notify("알림");
			}
			
			/*
			 * "다이얼로그 버튼" 버튼(btn7)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn7Click(e){
				
				app.openDialog("app/exam/controls/Notifier", {
					left : 100,
					top : 100,
					width: 1000,
					height: 700
				});
			}
			
			/*
			 * "알림 버튼" 버튼(btn6)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn6Click(e){
				app.lookup("ntf2").notify("알림");
			};
			// End - User Script
			
			// Header
			
			app.supportMedia("all and (min-width: 1320px)", "eXFrame");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1319px)", "default");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpHeader");
			// Layout
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_2.spacing = 0;
			group_1.setLayout(verticalLayout_2);
			(function(container){
				var userDefinedControl_1 = new udc.com.appHeader("appheader1");
				userDefinedControl_1.initializeYn = "N";
				userDefinedControl_1.searchBoxId = "grpHeader";
				container.addChild(userDefinedControl_1, {
					"width": "500px",
					"height": "30px"
				});
			})(group_1);
			container.addChild(group_1, {
				"autoSize": "height",
				"width": "400px",
				"height": "30px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var verticalLayout_3 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_3.spacing = 20;
			verticalLayout_3.leftMargin = 50;
			verticalLayout_3.rightMargin = 50;
			verticalLayout_3.topMargin = 20;
			verticalLayout_3.bottomMargin = 60;
			group_2.setLayout(verticalLayout_3);
			(function(container){
				var group_3 = new cpr.controls.Container();
				// Layout
				var verticalLayout_4 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_4.spacing = 30;
				verticalLayout_4.leftMargin = 0;
				verticalLayout_4.rightMargin = 0;
				verticalLayout_4.topMargin = 20;
				verticalLayout_4.bottomMargin = 40;
				group_3.setLayout(verticalLayout_4);
				(function(container){
					var output_1 = new cpr.controls.Output();
					output_1.value = "알림";
					output_1.style.css({
						"font-weight" : "700",
						"font-size" : "2.5rem",
						"font-family" : "sans-serif , 'Malgun Gothic' , 'Noto Sans KR'"
					});
					container.addChild(output_1, {
						"autoSize": "height",
						"width": "100px",
						"height": "45px"
					});
					var output_2 = new cpr.controls.Output();
					output_2.value = "알림 표현하는 컨트롤입니다.\r\n\r\n사용자의 특정 상태나 동작에 따라 화면에 해당 내용을 전달하고자 할 때 알림 컨트롤을 사용합니다.\r\n\r\n알림의 종류에는 default, success, info, warning, danger가 있습니다. 전달하고자 하는 메시지의 내용에 따라 분류하여 해당 알림을 사용하실 수 있습니다.\r\n\r\nAPI나 NotificationCenter를 통해 알림이 와야지만 해당 알림에 맞는 메시지가 나타납니다.";
					output_2.style.setClasses(["opt-tmpl"]);
					output_2.style.css({
						"font-family" : "sans-serif , 'Malgun Gothic' , 'Noto Sans KR'"
					});
					container.addChild(output_2, {
						"autoSize": "height",
						"width": "100px",
						"height": "150px"
					});
					var group_4 = new cpr.controls.Container();
					group_4.style.css({
						"background-color" : "#FFF5EF"
					});
					// Layout
					var verticalLayout_5 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_5.leftMargin = 30;
					verticalLayout_5.rightMargin = 30;
					verticalLayout_5.topMargin = 20;
					verticalLayout_5.bottomMargin = 20;
					group_4.setLayout(verticalLayout_5);
					(function(container){
						var output_3 = new cpr.controls.Output();
						output_3.value = "\u203b 알림 위치 주의사항";
						output_3.style.css({
							"color" : "#FF9149",
							"font-weight" : "bolder"
						});
						container.addChild(output_3, {
							"width": "100px",
							"height": "25px"
						});
						var output_4 = new cpr.controls.Output();
						output_4.value = "알림 컨트롤의 메시지는 알림 컨트롤이 보이는 위치를 기준으로 나타나기 때문에 알림 컨트롤은 항상 보이는 위치에 있어야 합니다.\r\n보이지 않는 탭 아이템 내부 또는 visible=false인 컨테이너 내부 등과 같은 곳에 알림 컨트롤이 포함될 경우 메시지는 출력되지 않습니다.";
						output_4.style.css({
							"color" : "#FF9149"
						});
						container.addChild(output_4, {
							"autoSize": "height",
							"width": "100px",
							"height": "25px"
						});
					})(group_4);
					container.addChild(group_4, {
						"autoSize": "height",
						"width": "1220px",
						"height": "100px"
					});
					var group_5 = new cpr.controls.Container();
					group_5.style.setClasses(["attach-box"]);
					group_5.style.css({
						"border-right-style" : "solid",
						"border-top-width" : "1px",
						"border-bottom-color" : "#babfc7",
						"border-right-width" : "1px",
						"border-left-color" : "#babfc7",
						"border-right-color" : "#babfc7",
						"border-left-width" : "1px",
						"border-top-style" : "solid",
						"background-color" : "#e9e9e9",
						"border-left-style" : "solid",
						"border-bottom-width" : "1px",
						"border-top-color" : "#babfc7",
						"border-bottom-style" : "solid"
					});
					// Layout
					var verticalLayout_6 = new cpr.controls.layouts.VerticalLayout();
					group_5.setLayout(verticalLayout_6);
					(function(container){
						var group_6 = new cpr.controls.Container();
						// Layout
						var flowLayout_1 = new cpr.controls.layouts.FlowLayout();
						group_6.setLayout(flowLayout_1);
						(function(container){
							var button_1 = new cpr.controls.Button("btn1");
							button_1.value = "사용자 정의";
							if(typeof onBtn1Click == "function") {
								button_1.addEventListener("click", onBtn1Click);
							}
							container.addChild(button_1, {
								"autoSize": "none",
								"width": "102px",
								"height": "25px"
							});
							var button_2 = new cpr.controls.Button("btn2");
							button_2.value = "정보";
							if(typeof onBtn2Click == "function") {
								button_2.addEventListener("click", onBtn2Click);
							}
							container.addChild(button_2, {
								"autoSize": "none",
								"width": "60px",
								"height": "25px"
							});
							var button_3 = new cpr.controls.Button("btn3");
							button_3.value = "성공";
							if(typeof onBtn3Click == "function") {
								button_3.addEventListener("click", onBtn3Click);
							}
							container.addChild(button_3, {
								"autoSize": "none",
								"width": "60px",
								"height": "25px"
							});
							var button_4 = new cpr.controls.Button("btn4");
							button_4.value = "위험";
							if(typeof onBtn4Click == "function") {
								button_4.addEventListener("click", onBtn4Click);
							}
							container.addChild(button_4, {
								"autoSize": "none",
								"width": "60px",
								"height": "25px"
							});
							var button_5 = new cpr.controls.Button("btn5");
							button_5.value = "경고";
							if(typeof onBtn5Click == "function") {
								button_5.addEventListener("click", onBtn5Click);
							}
							container.addChild(button_5, {
								"autoSize": "none",
								"width": "60px",
								"height": "25px"
							});
						})(group_6);
						container.addChild(group_6, {
							"autoSize": "none",
							"width": "1003px",
							"height": "30px"
						});
						var group_7 = new cpr.controls.Container();
						// Layout
						var formLayout_1 = new cpr.controls.layouts.FormLayout();
						formLayout_1.topMargin = "0px";
						formLayout_1.rightMargin = "0px";
						formLayout_1.bottomMargin = "0px";
						formLayout_1.leftMargin = "0px";
						formLayout_1.horizontalSpacing = "5px";
						formLayout_1.verticalSpacing = "5px";
						formLayout_1.setColumns(["1fr"]);
						formLayout_1.setRows(["1fr", "20px"]);
						group_7.setLayout(formLayout_1);
						(function(container){
							var output_5 = new cpr.controls.Output();
							output_5.value = "위 버튼을 클릭하여 기본 알림 설정을 확인하세요";
							output_5.style.setClasses(["text-center"]);
							container.addChild(output_5, {
								"colIndex": 0,
								"rowIndex": 1
							});
							var notifier_1 = new cpr.controls.Notifier("ntf");
							container.addChild(notifier_1, {
								"colIndex": 0,
								"rowIndex": 0
							});
						})(group_7);
						container.addChild(group_7, {
							"width": "200px",
							"height": "50px"
						});
						var group_8 = new cpr.controls.Container();
						// Layout
						var formLayout_2 = new cpr.controls.layouts.FormLayout();
						formLayout_2.scrollable = true;
						formLayout_2.topMargin = "30px";
						formLayout_2.rightMargin = "0px";
						formLayout_2.bottomMargin = "0px";
						formLayout_2.leftMargin = "0px";
						formLayout_2.horizontalSpacing = "5px";
						formLayout_2.verticalSpacing = "5px";
						formLayout_2.setColumns(["1fr"]);
						formLayout_2.setRows(["1fr", "20px"]);
						group_8.setLayout(formLayout_2);
						(function(container){
							var output_6 = new cpr.controls.Output();
							output_6.value = "<컨트롤 동적 생성 코드>";
							output_6.style.setClasses(["text-center"]);
							container.addChild(output_6, {
								"colIndex": 0,
								"rowIndex": 1
							});
							var userDefinedControl_2 = new udc.tmp.Ace("ace1");
							userDefinedControl_2.value = "var notifier = new cpr.controls.Notifier(\"ntf1\");\r\nnotifier.style.css({\r\n\twidth: \"200px\",\r\n\theight: \"30px\",\r\n\tright: \"20px\",\r\n\tbottom: \"10px\"\r\n});\r\n// 알림 컨트롤의 표시할 수 있는 아이템의 최대 개수를 설정합니다.\r\nnotifier.maxNotifyCount = 1;";
							container.addChild(userDefinedControl_2, {
								"colIndex": 0,
								"rowIndex": 0
							});
						})(group_8);
						container.addChild(group_8, {
							"autoSize": "both",
							"width": "450px",
							"height": "300px"
						});
					})(group_5);
					container.addChild(group_5, {
						"autoSize": "height",
						"width": "1220px",
						"height": "300px"
					});
				})(group_3);
				container.addChild(group_3, {
					"autoSize": "height",
					"width": "400px",
					"height": "800px"
				});
				var group_9 = new cpr.controls.Container();
				group_9.style.setClasses(["card-inner"]);
				// Layout
				var verticalLayout_7 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_7.spacing = 30;
				verticalLayout_7.leftMargin = 0;
				verticalLayout_7.rightMargin = 0;
				verticalLayout_7.topMargin = 20;
				verticalLayout_7.bottomMargin = 40;
				group_9.setLayout(verticalLayout_7);
				(function(container){
					var output_7 = new cpr.controls.Output();
					output_7.value = "자주 사용되는 속성";
					output_7.style.setClasses(["h1", "pl-3", "bg-primary", "text-white"]);
					output_7.style.css({
						"font-weight" : "700",
						"font-size" : "26px",
						"font-family" : "sans-serif , 'Malgun Gothic' , 'Noto Sans KR'"
					});
					container.addChild(output_7, {
						"autoSize": "none",
						"width": "1220px",
						"height": "38px"
					});
					var output_8 = new cpr.controls.Output();
					output_8.value = "자주 사용되는 속성과 시나리오를 통한 예제를 확인할 수 있습니다. 자세한 사항은 Help Contents를 참조하시기 바랍니다.";
					container.addChild(output_8, {
						"autoSize": "height",
						"width": "100px",
						"height": "141px"
					});
					var group_10 = new cpr.controls.Container();
					group_10.style.setClasses(["card-inner"]);
					// Layout
					var verticalLayout_8 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_8.spacing = 15;
					verticalLayout_8.leftMargin = 40;
					verticalLayout_8.rightMargin = 40;
					verticalLayout_8.topMargin = 20;
					verticalLayout_8.bottomMargin = 40;
					group_10.setLayout(verticalLayout_8);
					(function(container){
						var output_9 = new cpr.controls.Output();
						output_9.value = "maxNotifyCount";
						output_9.style.css({
							"color" : "#2263b3",
							"font-weight" : "700",
							"font-size" : "20px",
							"font-family" : "sans-serif , 'Malgun Gothic' , 'Noto Sans KR'"
						});
						container.addChild(output_9, {
							"autoSize": "none",
							"width": "1220px",
							"height": "38px"
						});
						var group_11 = new cpr.controls.Container();
						group_11.style.css({
							"background-color" : "#e9eff7",
							"background-image" : "none"
						});
						// Layout
						var verticalLayout_9 = new cpr.controls.layouts.VerticalLayout();
						verticalLayout_9.leftMargin = 30;
						verticalLayout_9.rightMargin = 30;
						verticalLayout_9.topMargin = 20;
						verticalLayout_9.bottomMargin = 20;
						group_11.setLayout(verticalLayout_9);
						(function(container){
							var output_10 = new cpr.controls.Output();
							output_10.value = "최대로 표시할 수 있는 알림의 숫자를 설정하는 속성입니다.";
							output_10.style.setClasses(["opt-tmpl"]);
							output_10.style.css({
								"font-weight" : "700"
							});
							container.addChild(output_10, {
								"autoSize": "height",
								"width": "100px",
								"height": "40px"
							});
						})(group_11);
						container.addChild(group_11, {
							"autoSize": "height",
							"width": "1140px",
							"height": "80px"
						});
						var output_11 = new cpr.controls.Output();
						output_11.value = "delay";
						output_11.style.css({
							"color" : "#2263b3",
							"font-weight" : "700",
							"font-size" : "20px",
							"font-family" : "sans-serif , 'Malgun Gothic' , 'Noto Sans KR'"
						});
						container.addChild(output_11, {
							"autoSize": "none",
							"width": "1220px",
							"height": "38px"
						});
						var group_12 = new cpr.controls.Container();
						group_12.style.css({
							"background-color" : "#e9eff7",
							"background-image" : "none"
						});
						// Layout
						var verticalLayout_10 = new cpr.controls.layouts.VerticalLayout();
						verticalLayout_10.leftMargin = 30;
						verticalLayout_10.rightMargin = 30;
						verticalLayout_10.topMargin = 20;
						verticalLayout_10.bottomMargin = 20;
						group_12.setLayout(verticalLayout_10);
						(function(container){
							var output_12 = new cpr.controls.Output();
							output_12.value = "알림 창이 표시되는 시간을 설정하는 속성입니다.";
							output_12.style.setClasses(["opt-tmpl"]);
							output_12.style.css({
								"font-weight" : "700"
							});
							container.addChild(output_12, {
								"autoSize": "height",
								"width": "100px",
								"height": "40px"
							});
						})(group_12);
						container.addChild(group_12, {
							"autoSize": "height",
							"width": "1220px",
							"height": "80px"
						});
						var output_13 = new cpr.controls.Output();
						output_13.value = "scope";
						output_13.style.css({
							"color" : "#2263b3",
							"font-weight" : "700",
							"font-size" : "20px",
							"font-family" : "sans-serif , 'Malgun Gothic' , 'Noto Sans KR'"
						});
						container.addChild(output_13, {
							"autoSize": "none",
							"width": "1220px",
							"height": "38px"
						});
						var group_13 = new cpr.controls.Container();
						group_13.style.css({
							"background-color" : "#e9eff7",
							"background-image" : "none"
						});
						// Layout
						var verticalLayout_11 = new cpr.controls.layouts.VerticalLayout();
						verticalLayout_11.leftMargin = 30;
						verticalLayout_11.rightMargin = 30;
						verticalLayout_11.topMargin = 20;
						verticalLayout_11.bottomMargin = 20;
						group_13.setLayout(verticalLayout_11);
						(function(container){
							var output_14 = new cpr.controls.Output();
							output_14.value = "알림이 표시될 범위를 결정하는 속성입니다. 기본값은 system이며, app으로 변경 시 앱 영역 내에만 알림이 출력되게 됩니다.";
							output_14.style.setClasses(["opt-tmpl"]);
							output_14.style.css({
								"font-weight" : "700"
							});
							if(typeof onOutputValueChange == "function") {
								output_14.addEventListener("value-change", onOutputValueChange);
							}
							container.addChild(output_14, {
								"autoSize": "height",
								"width": "100px",
								"height": "40px"
							});
						})(group_13);
						container.addChild(group_13, {
							"autoSize": "height",
							"width": "1220px",
							"height": "80px"
						});
						var output_15 = new cpr.controls.Output();
						output_15.value = "icon";
						output_15.style.css({
							"color" : "#2263b3",
							"font-weight" : "700",
							"font-size" : "20px",
							"font-family" : "sans-serif , 'Malgun Gothic' , 'Noto Sans KR'"
						});
						container.addChild(output_15, {
							"autoSize": "none",
							"width": "1220px",
							"height": "38px"
						});
						var group_14 = new cpr.controls.Container();
						group_14.style.css({
							"background-color" : "#e9eff7",
							"background-image" : "none"
						});
						// Layout
						var verticalLayout_12 = new cpr.controls.layouts.VerticalLayout();
						verticalLayout_12.leftMargin = 30;
						verticalLayout_12.rightMargin = 30;
						verticalLayout_12.topMargin = 20;
						verticalLayout_12.bottomMargin = 20;
						group_14.setLayout(verticalLayout_12);
						(function(container){
							var output_16 = new cpr.controls.Output();
							output_16.value = "알림창에 아이콘을 설정하는 기능입니다.";
							output_16.style.setClasses(["opt-tmpl"]);
							output_16.style.css({
								"font-weight" : "700"
							});
							container.addChild(output_16, {
								"autoSize": "height",
								"width": "100px",
								"height": "40px"
							});
						})(group_14);
						container.addChild(group_14, {
							"autoSize": "height",
							"width": "1220px",
							"height": "80px"
						});
						var group_15 = new cpr.controls.Container();
						group_15.style.setClasses(["form-box", "vertical"]);
						// Layout
						var formLayout_3 = new cpr.controls.layouts.FormLayout();
						formLayout_3.topMargin = "5px";
						formLayout_3.rightMargin = "5px";
						formLayout_3.bottomMargin = "5px";
						formLayout_3.leftMargin = "5px";
						formLayout_3.horizontalSpacing = "10px";
						formLayout_3.verticalSpacing = "10px";
						formLayout_3.horizontalSeparatorWidth = 1;
						formLayout_3.verticalSeparatorWidth = 1;
						formLayout_3.setColumns(["1fr", "300px", "80px"]);
						formLayout_3.setRows(["30px", "30px"]);
						formLayout_3.setCustomRowShade(0, "#edeff6");
						formLayout_3.setRowAutoSizing(1, true);
						group_15.setLayout(formLayout_3);
						(function(container){
							var output_17 = new cpr.controls.Output();
							output_17.value = "시나리오";
							output_17.style.setClasses(["label"]);
							output_17.style.css({
								"border-right-style" : "none",
								"background-color" : "transparent",
								"border-left-style" : "none",
								"padding-left" : "15px",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "left"
							});
							container.addChild(output_17, {
								"colIndex": 0,
								"rowIndex": 0
							});
							var output_18 = new cpr.controls.Output();
							output_18.value = "입력값";
							output_18.style.setClasses(["label"]);
							output_18.style.css({
								"border-right-style" : "none",
								"background-color" : "transparent",
								"border-left-style" : "none",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "center"
							});
							container.addChild(output_18, {
								"colIndex": 1,
								"rowIndex": 0
							});
							var output_19 = new cpr.controls.Output();
							output_19.value = "기능확인";
							output_19.style.setClasses(["label"]);
							output_19.style.css({
								"border-right-style" : "none",
								"background-color" : "transparent",
								"border-left-style" : "none",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "center"
							});
							container.addChild(output_19, {
								"colIndex": 2,
								"rowIndex": 0
							});
							var output_20 = new cpr.controls.Output();
							output_20.value = "1) 하단의 알림 버튼을 클릭합니다.\r\n2) 알림이 3개까지 띄워지고, 알림이 10초간 표시되는 것을 확인합니다.\r\n3) 알림 버튼을 클릭한 뒤 다이얼로그 버튼을 클릭합니다.\r\n4) 다이얼로그 창 위로 알림 버튼이 보이는 것을 확인할 수 있습니다.";
							output_20.style.setClasses(["opt-tmpl"]);
							output_20.style.css({
								"background-color" : "transparent",
								"border-right-style" : "none",
								"border-left-style" : "none",
								"padding-left" : "15px",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "left"
							});
							container.addChild(output_20, {
								"colIndex": 0,
								"rowIndex": 1
							});
							var button_6 = new cpr.controls.Button("btnInit");
							button_6.value = "실행";
							button_6.style.setClasses(["btn-primary"]);
							container.addChild(button_6, {
								"colIndex": 2,
								"rowIndex": 1,
								"verticalAlign": "center",
								"height": 30
							});
							var output_21 = new cpr.controls.Output();
							output_21.value = "maxNotifyCount = 3\r\ndelay = 10000(10초)\r\nscope = system";
							output_21.style.setClasses(["opt-tmpl"]);
							output_21.style.css({
								"background-color" : "transparent",
								"border-right-style" : "none",
								"border-left-style" : "none",
								"padding-left" : "15px",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "left"
							});
							container.addChild(output_21, {
								"colIndex": 1,
								"rowIndex": 1
							});
						})(group_15);
						container.addChild(group_15, {
							"autoSize": "height",
							"width": "1220px",
							"height": "80px"
						});
						var group_16 = new cpr.controls.Container();
						group_16.style.setClasses(["attach-box"]);
						group_16.style.css({
							"border-right-style" : "solid",
							"border-top-width" : "1px",
							"border-bottom-color" : "#babfc7",
							"border-right-width" : "1px",
							"border-left-color" : "#babfc7",
							"border-right-color" : "#babfc7",
							"border-left-width" : "1px",
							"border-top-style" : "solid",
							"background-color" : "#e9e9e9",
							"border-left-style" : "solid",
							"border-bottom-width" : "1px",
							"border-top-color" : "#babfc7",
							"border-bottom-style" : "solid",
							"background-image" : "none"
						});
						// Layout
						var verticalLayout_13 = new cpr.controls.layouts.VerticalLayout();
						group_16.setLayout(verticalLayout_13);
						(function(container){
							var button_7 = new cpr.controls.Button("btn7");
							button_7.value = "다이얼로그 버튼";
							if(typeof onBtn7Click == "function") {
								button_7.addEventListener("click", onBtn7Click);
							}
							container.addChild(button_7, {
								"autoSize": "none",
								"width": "1003px",
								"height": "25px"
							});
							var button_8 = new cpr.controls.Button("btn6");
							button_8.value = "알림 버튼";
							if(typeof onBtn6Click == "function") {
								button_8.addEventListener("click", onBtn6Click);
							}
							container.addChild(button_8, {
								"autoSize": "none",
								"width": "1003px",
								"height": "25px"
							});
							var group_17 = new cpr.controls.Container();
							// Layout
							var formLayout_4 = new cpr.controls.layouts.FormLayout();
							formLayout_4.topMargin = "0px";
							formLayout_4.rightMargin = "0px";
							formLayout_4.bottomMargin = "0px";
							formLayout_4.leftMargin = "0px";
							formLayout_4.horizontalSpacing = "5px";
							formLayout_4.verticalSpacing = "5px";
							formLayout_4.setColumns(["1fr"]);
							formLayout_4.setRows(["1fr", "20px"]);
							group_17.setLayout(formLayout_4);
							(function(container){
								var notifier_2 = new cpr.controls.Notifier("ntf2");
								notifier_2.maxNotifyCount = 3;
								notifier_2.delay = 10000;
								notifier_2.icon = "app/exam/controls/001-south-korea.svg";
								notifier_2.close = true;
								container.addChild(notifier_2, {
									"colIndex": 0,
									"rowIndex": 0,
									"verticalAlign": "top",
									"height": 50
								});
								var output_22 = new cpr.controls.Output();
								output_22.value = "<기능 확인 컨트롤>";
								output_22.style.setClasses(["text-center"]);
								container.addChild(output_22, {
									"colIndex": 0,
									"rowIndex": 1
								});
							})(group_17);
							container.addChild(group_17, {
								"autoSize": "both",
								"width": "200px",
								"height": "50px"
							});
						})(group_16);
						container.addChild(group_16, {
							"autoSize": "height",
							"width": "1220px",
							"height": "337px"
						});
					})(group_10);
					container.addChild(group_10, {
						"autoSize": "height",
						"width": "1220px",
						"height": "1500px"
					});
				})(group_9);
				container.addChild(group_9, {
					"autoSize": "height",
					"width": "1100px",
					"height": "2000px"
				});
			})(group_2);
			container.addChild(group_2, {
				"autoSize": "height",
				"width": "400px",
				"height": "3000px"
			});
		}
	});
	app.title = "알림 관련 속성";
	cpr.core.Platform.INSTANCE.register(app);
})();
