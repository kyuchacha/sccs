/*
 * App URI: app/exam/controls/Grid
 * Source Location: app/exam/controls/Grid.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/exam/controls/Grid", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * Grid.js
			 * Created at 2022. 3. 8. 오전 10:19:28.
			 *
			 * @author 1amthomas
			 ************************************************/
			
			/*
			 * "실행" 버튼(btnInit3)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnInit3Click(e){
				var select = app.lookup("sampleCmb1").value;
				if(select == null){
					alert("입력값을 먼저 선택하세요");
					return false;
				}
				app.lookup("defaultGrid2").autoRowHeight = select;
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsList");
			dataSet_1.parseData({
				"columns": [
					{"name": "empId"},
					{"name": "empNm"},
					{"name": "email"},
					{"name": "phone"},
					{"name": "address"},
					{"name": "rgstDt"}
				],
				"rows": [
					{"empId": "594-38-4655", "empNm": "Lane Considine", "email": "rbissell0@de.vu", "phone": "010-1886-6554", "address": "12 Burning Wood Avenue", "rgstDt": "20200920"},
					{"empId": "314-39-2150", "empNm": "Selma Fay", "email": "lairton1@amazon.de", "phone": "010-2043-2275", "address": "36 Darwin Avenue", "rgstDt": "20200912"},
					{"empId": "164-62-6156", "empNm": "Neal Zieme", "email": "mjindra2@so-net.ne.jp", "phone": "010-6299-8957", "address": "98 Drewry Junction", "rgstDt": "20200615"},
					{"empId": "484-19-2604", "empNm": "Meggan Auer", "email": "skennet3@dropbox.com", "phone": "010-3187-3090", "address": "9 Montana Terrace", "rgstDt": "20200312"},
					{"empId": "559-13-4942", "empNm": "Araceli Smith", "email": "dhocking4@t.co", "phone": "010-1622-5856", "address": "40863 Scofield Circle", "rgstDt": "20200128"},
					{"empId": "840-42-2888", "empNm": "Mickey Erdman", "email": "hcollins5@stanford.edu", "phone": "010-2768-3424", "address": "556 West Court", "rgstDt": "20200901"},
					{"empId": "144-26-0513", "empNm": "Rosalva Jerde", "email": "olettsom6@addtoany.com", "phone": "010-6745-6895", "address": "20858 Center Parkway", "rgstDt": "20200806"},
					{"empId": "450-28-5237", "empNm": "Teodoro Sanford", "email": "pclampett7@twitpic.com", "phone": "010-8681-1087", "address": "8 Oak Hill", "rgstDt": "20200430"},
					{"empId": "748-53-9610", "empNm": "Shaquana Murazik", "email": "sglaum8@moonfruit.com", "phone": "010-4246-2969", "address": "19885 4th Terrace", "rgstDt": "20191204"},
					{"empId": "437-25-7106", "empNm": "Cliff Green", "email": "mdrever9@adobe.com", "phone": "010-8757-3058", "address": "355 Hanover Hill", "rgstDt": "20200627"},
					{"empId": "203-62-7094", "empNm": "Roberto Padberg", "email": "csisslanda@bizjournals.com", "phone": "010-4603-1770", "address": "7 Texas Center", "rgstDt": "20200809"},
					{"empId": "560-52-8330", "empNm": "Danielle Fisher", "email": "ameadusb@columbia.edu", "phone": "010-7703-5098", "address": "88244 Gerald Point", "rgstDt": "20191215"},
					{"empId": "880-25-8413", "empNm": "Ambrose Senger", "email": "kbeelsc@ezinearticles.com", "phone": "010-0806-5101", "address": "09 Bobwhite Lane", "rgstDt": "20200911"},
					{"empId": "782-76-2048", "empNm": "Demarcus Brown", "email": "dblakeyd@51.la", "phone": "010-4239-8279", "address": "94917 Delladonna Drive", "rgstDt": "20200327"},
					{"empId": "883-93-1783", "empNm": "Johnathan Quigley", "email": "wpaule@networkadvertising.org", "phone": "010-5475-6965", "address": "95647 Erie Lane", "rgstDt": "20200223"},
					{"empId": "359-94-5504", "empNm": "Elias Leannon", "email": "jgilmourf@bandcamp.com", "phone": "010-6736-0761", "address": "21161 Stoughton Center", "rgstDt": "20200906"},
					{"empId": "873-47-4854", "empNm": "Brande Jast", "email": "mmowlamg@seattletimes.com", "phone": "010-4977-3504", "address": "476 Havey Road", "rgstDt": "20200709"},
					{"empId": "807-57-5913", "empNm": "Sebastian Walsh", "email": "gtrobeh@hibu.com", "phone": "010-4218-0433", "address": "85 Novick Pass", "rgstDt": "20200318"},
					{"empId": "702-08-3511", "empNm": "Hortensia Kuvalis", "email": "psnoadi@cnet.com", "phone": "010-7493-6305", "address": "18 Shoshone Street", "rgstDt": "20200321"},
					{"empId": "165-52-8840", "empNm": "Claris Mills", "email": "gswindonj@mlb.com", "phone": "010-1040-8459", "address": "7722 Warrior Plaza", "rgstDt": "20200528"},
					{"empId": "141-30-3913", "empNm": "Renna Labadie", "email": "agunnk@nbcnews.com", "phone": "010-0081-4172", "address": "5 Canary Pass", "rgstDt": "20200408"},
					{"empId": "131-64-7984", "empNm": "Janetta Gorczany", "email": "wkobierzyckil@springer.com", "phone": "010-4318-5862", "address": "171 Caliangt Point", "rgstDt": "20191128"},
					{"empId": "363-53-6686", "empNm": "Claude White", "email": "lsivillsm@shop-pro.jp", "phone": "010-6589-5906", "address": "612 Troy Center", "rgstDt": "20200509"},
					{"empId": "164-58-0443", "empNm": "Jaime Fay", "email": "wabrahamoffn@wikispaces.com", "phone": "010-6049-3853", "address": "47 Merchant Plaza", "rgstDt": "20200726"},
					{"empId": "833-09-3725", "empNm": "Yasmine Towne", "email": "wchallenoro@engadget.com", "phone": "010-6497-9056", "address": "61 Grasskamp Place", "rgstDt": "20201029"},
					{"empId": "253-63-2956", "empNm": "Raymundo Howe", "email": "kbarterp@mediafire.com", "phone": "010-4545-3584", "address": "941 Leroy Way", "rgstDt": "20200612"},
					{"empId": "726-08-0595", "empNm": "Russell Paucek", "email": "tnottleq@hatena.ne.jp", "phone": "010-9167-2117", "address": "0 Charing Cross Road", "rgstDt": "20201121"},
					{"empId": "879-74-5236", "empNm": "Wilfred Greenfelder", "email": "tlafayer@comcast.net", "phone": "010-4639-7552", "address": "14 Maryland Plaza", "rgstDt": "20191203"},
					{"empId": "837-27-0001", "empNm": "Jacinto Wilkinson", "email": "kwalass@ovh.net", "phone": "010-6138-0842", "address": "76123 Cordelia Terrace", "rgstDt": "20200204"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("ds1");
			dataSet_2.parseData({
				"columns": [
					{"name": "Alpabet"},
					{"name": "Number"},
					{"name": "Hangul"},
					{"name": "Characters"}
				],
				"rows": [
					{"Alpabet": "A", "Number": "1", "Hangul": "가", "Characters": "!"},
					{"Alpabet": "B", "Number": "2", "Hangul": "나", "Characters": "@"},
					{"Alpabet": "C", "Number": "3", "Hangul": "가", "Characters": "#"},
					{"Alpabet": "D", "Number": "4", "Hangul": "라", "Characters": "$"},
					{"Alpabet": "E", "Number": "5", "Hangul": "라", "Characters": "%"},
					{"Alpabet": "F", "Number": "6", "Hangul": "다", "Characters": "^"},
					{"Alpabet": "G", "Number": "7", "Hangul": "사", "Characters": "&"},
					{"Alpabet": "H", "Number": "8", "Hangul": "나", "Characters": "*"},
					{"Alpabet": "I", "Number": "9", "Hangul": "다", "Characters": "("},
					{"Alpabet": "J", "Number": "0", "Hangul": "가", "Characters": ")"}
				]
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("ds2");
			dataSet_3.parseData({
				"columns": [
					{"name": "productGroup"},
					{
						"name": "productName",
						"dataType": "string"
					},
					{
						"name": "price",
						"dataType": "number"
					},
					{
						"name": "rate",
						"dataType": "number"
					},
					{
						"name": "ratedprice",
						"dataType": "expression",
						"displayOnly": true,
						"expression": "price * (100 - rate) / 100"
					}
				],
				"rows": [
					{"productName": "TV", "price": "1000000", "rate": "10", "productGroup": "가전제품"},
					{"productName": "냉장고", "price": "1500000", "rate": "20", "productGroup": "가전제품"},
					{"productName": "전자렌지", "price": "100000", "rate": "0", "productGroup": "가전제품"},
					{"productName": "에어컨", "price": "1800000", "rate": "30", "productGroup": "가전제품"},
					{"productGroup": "생활용품", "productName": "세제", "price": "13000", "rate": "10"},
					{"productGroup": "생활용품", "productName": "휴지", "price": "20000", "rate": "20"},
					{"productGroup": "생활용품", "productName": "샴푸", "price": "10000", "rate": "10"},
					{"productGroup": "생활용품", "productName": "비누", "price": "5000", "rate": "0"}
				]
			});
			app.register(dataSet_3);
			
			app.supportMedia("all and (min-width: 1320px)", "eXFrame");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1319px)", "default");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpHeader");
			// Layout
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_2.spacing = 0;
			group_1.setLayout(verticalLayout_2);
			(function(container){
				var userDefinedControl_1 = new udc.com.appHeader("appheader1");
				userDefinedControl_1.initializeYn = "N";
				userDefinedControl_1.searchBoxId = "grpHeader";
				container.addChild(userDefinedControl_1, {
					"width": "500px",
					"height": "30px"
				});
			})(group_1);
			container.addChild(group_1, {
				"autoSize": "height",
				"width": "400px",
				"height": "30px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var verticalLayout_3 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_3.spacing = 20;
			verticalLayout_3.leftMargin = 50;
			verticalLayout_3.rightMargin = 50;
			verticalLayout_3.topMargin = 20;
			verticalLayout_3.bottomMargin = 60;
			group_2.setLayout(verticalLayout_3);
			(function(container){
				var group_3 = new cpr.controls.Container();
				// Layout
				var verticalLayout_4 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_4.spacing = 30;
				verticalLayout_4.leftMargin = 0;
				verticalLayout_4.rightMargin = 0;
				verticalLayout_4.topMargin = 20;
				verticalLayout_4.bottomMargin = 40;
				group_3.setLayout(verticalLayout_4);
				(function(container){
					var output_1 = new cpr.controls.Output();
					output_1.value = "그리드";
					output_1.style.css({
						"font-weight" : "700",
						"font-size" : "2.5rem",
						"font-family" : "sans-serif , 'Malgun Gothic' , 'Noto Sans KR'"
					});
					container.addChild(output_1, {
						"autoSize": "height",
						"width": "100px",
						"height": "45px"
					});
					var output_2 = new cpr.controls.Output();
					output_2.value = "테이블 형태의 컨트롤입니다.\r\n\r\n반복 구조로 만들어진 데이터 구조체를 테이블 형태로 보여줍니다. DataSet, DataView와 연동되어 Grid에 데이터와 데이터의 상태를 표현할 수 있습니다. 디테일 영역에는 일반 컨트롤을 배치하여 다양하게 디자인할 수 있습니다. ";
					output_2.style.setClasses(["opt-tmpl"]);
					container.addChild(output_2, {
						"autoSize": "height",
						"width": "100px",
						"height": "150px"
					});
					var group_4 = new cpr.controls.Container();
					group_4.style.setClasses(["attach-box"]);
					group_4.style.css({
						"border-right-style" : "solid",
						"border-top-width" : "1px",
						"border-bottom-color" : "#babfc7",
						"border-right-width" : "1px",
						"border-left-color" : "#babfc7",
						"border-right-color" : "#babfc7",
						"border-left-width" : "1px",
						"border-top-style" : "solid",
						"background-color" : "#e9e9e9",
						"border-left-style" : "solid",
						"border-bottom-width" : "1px",
						"border-top-color" : "#babfc7",
						"border-bottom-style" : "solid"
					});
					// Layout
					var flowLayout_1 = new cpr.controls.layouts.FlowLayout();
					flowLayout_1.scrollable = false;
					flowLayout_1.horizontalSpacing = 40;
					flowLayout_1.verticalSpacing = 20;
					flowLayout_1.horizontalAlign = "center";
					flowLayout_1.verticalAlign = "middle";
					flowLayout_1.leftMargin = 20;
					flowLayout_1.rightMargin = 20;
					flowLayout_1.topMargin = 20;
					flowLayout_1.bottomMargin = 20;
					group_4.setLayout(flowLayout_1);
					(function(container){
						var group_5 = new cpr.controls.Container();
						// Layout
						var formLayout_1 = new cpr.controls.layouts.FormLayout();
						formLayout_1.topMargin = "0px";
						formLayout_1.rightMargin = "0px";
						formLayout_1.bottomMargin = "0px";
						formLayout_1.leftMargin = "0px";
						formLayout_1.horizontalSpacing = "5px";
						formLayout_1.verticalSpacing = "5px";
						formLayout_1.setColumns(["1fr"]);
						formLayout_1.setRows(["1fr", "20px"]);
						group_5.setLayout(formLayout_1);
						(function(container){
							var output_3 = new cpr.controls.Output();
							output_3.value = "<기본 그리드 컨트롤>";
							output_3.style.setClasses(["text-center"]);
							container.addChild(output_3, {
								"colIndex": 0,
								"rowIndex": 1
							});
							var grid_1 = new cpr.controls.Grid("defaultGrid");
							grid_1.init({
								"dataSet": app.lookup("dsList"),
								"columns": [
									{"width": "50px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"}
								],
								"header": {
									"rows": [{"height": "24px"}],
									"cells": [
										{
											"constraint": {"rowIndex": 0, "colIndex": 0},
											"configurator": function(cell){
												cell.filterable = false;
												cell.sortable = false;
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 1},
											"configurator": function(cell){
												cell.targetColumnName = "empId";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "empId";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 2},
											"configurator": function(cell){
												cell.targetColumnName = "empNm";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "empNm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 3},
											"configurator": function(cell){
												cell.targetColumnName = "email";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "email";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 4},
											"configurator": function(cell){
												cell.targetColumnName = "phone";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "phone";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 5},
											"configurator": function(cell){
												cell.targetColumnName = "address";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "address";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 6},
											"configurator": function(cell){
												cell.targetColumnName = "rgstDt";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "rgstDt";
											}
										}
									]
								},
								"detail": {
									"rows": [{"height": "24px"}],
									"cells": [
										{
											"constraint": {"rowIndex": 0, "colIndex": 0},
											"configurator": function(cell){
												cell.columnType = "rowindex";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 1},
											"configurator": function(cell){
												cell.columnName = "empId";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 2},
											"configurator": function(cell){
												cell.columnName = "empNm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 3},
											"configurator": function(cell){
												cell.columnName = "email";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 4},
											"configurator": function(cell){
												cell.columnName = "phone";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 5},
											"configurator": function(cell){
												cell.columnName = "address";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 6},
											"configurator": function(cell){
												cell.columnName = "rgstDt";
											}
										}
									]
								}
							});
							container.addChild(grid_1, {
								"colIndex": 0,
								"rowIndex": 0
							});
						})(group_5);
						container.addChild(group_5, {
							"autoSize": "none",
							"width": "700px",
							"height": "300px"
						});
					})(group_4);
					container.addChild(group_4, {
						"autoSize": "height",
						"width": "1220px",
						"height": "700px"
					});
				})(group_3);
				container.addChild(group_3, {
					"autoSize": "height",
					"width": "400px",
					"height": "1200px"
				});
				var group_6 = new cpr.controls.Container();
				group_6.style.setClasses(["card-inner"]);
				// Layout
				var verticalLayout_5 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_5.spacing = 30;
				verticalLayout_5.leftMargin = 0;
				verticalLayout_5.rightMargin = 0;
				verticalLayout_5.topMargin = 20;
				verticalLayout_5.bottomMargin = 40;
				group_6.setLayout(verticalLayout_5);
				(function(container){
					var output_4 = new cpr.controls.Output();
					output_4.value = "자주 사용되는 속성";
					output_4.style.setClasses(["h1", "pl-3", "bg-primary", "text-white"]);
					output_4.style.css({
						"font-weight" : "700",
						"font-size" : "26px",
						"font-family" : "sans-serif , 'Malgun Gothic' , 'Noto Sans KR'"
					});
					container.addChild(output_4, {
						"autoSize": "none",
						"width": "1220px",
						"height": "38px"
					});
					var output_5 = new cpr.controls.Output();
					output_5.value = "자주 사용되는 속성과 시나리오를 통한 예제를 확인할 수 있습니다. 자세한 사항은 Help Contents를 참조하시기 바랍니다.";
					container.addChild(output_5, {
						"autoSize": "height",
						"width": "100px",
						"height": "141px"
					});
					var group_7 = new cpr.controls.Container();
					group_7.style.setClasses(["card-inner"]);
					// Layout
					var verticalLayout_6 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_6.spacing = 25;
					verticalLayout_6.leftMargin = 40;
					verticalLayout_6.rightMargin = 40;
					verticalLayout_6.topMargin = 20;
					verticalLayout_6.bottomMargin = 40;
					group_7.setLayout(verticalLayout_6);
					(function(container){
						var output_6 = new cpr.controls.Output();
						output_6.value = "selectionUnit, selectionMulti";
						output_6.style.css({
							"color" : "#2263b3",
							"font-weight" : "700",
							"font-size" : "20px",
							"font-family" : "sans-serif , 'Malgun Gothic' , 'Noto Sans KR'"
						});
						container.addChild(output_6, {
							"autoSize": "none",
							"width": "1220px",
							"height": "38px"
						});
						var group_8 = new cpr.controls.Container();
						group_8.style.css({
							"background-color" : "#e9eff7",
							"background-image" : "none"
						});
						// Layout
						var verticalLayout_7 = new cpr.controls.layouts.VerticalLayout();
						verticalLayout_7.leftMargin = 30;
						verticalLayout_7.rightMargin = 30;
						verticalLayout_7.topMargin = 20;
						verticalLayout_7.bottomMargin = 20;
						group_8.setLayout(verticalLayout_7);
						(function(container){
							var output_7 = new cpr.controls.Output();
							output_7.value = "selectionUnit : 그리드를 선택할 수 있는 단위를 설정하는 속성입니다. 기본값은 row이며 cell, column 단위로 변경할 수 있습니다.\r\n\r\nselectionMulti : 그리드의 다중 선택 여부를 설정하는 속성입니다. 기본값은 sing이며 none, multi로 변경할 수 있습니다.";
							output_7.style.setClasses(["opt-tmpl"]);
							output_7.style.css({
								"font-weight" : "700"
							});
							container.addChild(output_7, {
								"autoSize": "height",
								"width": "100px",
								"height": "40px"
							});
						})(group_8);
						container.addChild(group_8, {
							"autoSize": "height",
							"width": "1140px",
							"height": "80px"
						});
						var output_8 = new cpr.controls.Output();
						output_8.value = "resizableColumn, columnMovable";
						output_8.style.css({
							"color" : "#2263b3",
							"font-weight" : "700",
							"font-size" : "20px",
							"font-family" : "sans-serif , 'Malgun Gothic' , 'Noto Sans KR'"
						});
						container.addChild(output_8, {
							"autoSize": "none",
							"width": "1140px",
							"height": "38px"
						});
						var group_9 = new cpr.controls.Container();
						group_9.style.css({
							"background-color" : "#e9eff7",
							"background-image" : "none"
						});
						// Layout
						var verticalLayout_8 = new cpr.controls.layouts.VerticalLayout();
						verticalLayout_8.leftMargin = 30;
						verticalLayout_8.rightMargin = 30;
						verticalLayout_8.topMargin = 20;
						verticalLayout_8.bottomMargin = 20;
						group_9.setLayout(verticalLayout_8);
						(function(container){
							var output_9 = new cpr.controls.Output();
							output_9.value = "resizableColumn : 그리드 헤더의 사이즈 조절 가능 여부를 설정하는 속성입니다. 기본값은 none이며 all, columnIndex로 변경이 가능합니다.\r\n- none : 모든 컬럼의 크기 변경할 수 없습니다.\r\n- all : 모든 컬럼의 크기 변경이 가능합니다.\r\n- columnindex : 특정 컬럼 인덱스를 지정 시, 해당 컬럼만 크기 조절이 가능합니다.\r\n\r\ncolumnMovable : 그리드 헤더의 이동 가능 여부를 설정하는 속성입니다. 기본값은 false이며 true로 변경 시 그리드 헤더의 위치 변경이 가능합니다.";
							output_9.style.setClasses(["opt-tmpl"]);
							output_9.style.css({
								"font-weight" : "700"
							});
							container.addChild(output_9, {
								"autoSize": "height",
								"width": "100px",
								"height": "40px"
							});
						})(group_9);
						container.addChild(group_9, {
							"autoSize": "height",
							"width": "1140px",
							"height": "80px"
						});
						var output_10 = new cpr.controls.Output();
						output_10.value = "leftSplit, leftSplitWidth";
						output_10.style.css({
							"color" : "#2263b3",
							"font-weight" : "700",
							"font-size" : "20px",
							"font-family" : "sans-serif , 'Malgun Gothic' , 'Noto Sans KR'"
						});
						container.addChild(output_10, {
							"autoSize": "none",
							"width": "1140px",
							"height": "38px"
						});
						var group_10 = new cpr.controls.Container();
						group_10.style.css({
							"background-color" : "#e9eff7",
							"background-image" : "none"
						});
						// Layout
						var verticalLayout_9 = new cpr.controls.layouts.VerticalLayout();
						verticalLayout_9.leftMargin = 30;
						verticalLayout_9.rightMargin = 30;
						verticalLayout_9.topMargin = 20;
						verticalLayout_9.bottomMargin = 20;
						group_10.setLayout(verticalLayout_9);
						(function(container){
							var output_11 = new cpr.controls.Output();
							output_11.value = "leftSplit/rightSplit : 그리드의 왼쪽(오른쪽)으로 셀을 고정할 수 있게 설정하는 속성입니다. 그리드의 모든 셀을 leftSplit 또는 rightSplit으로 설정하는 경우 세로 스크롤이 보이지 않고, 그리드 내에 방향 키를 통한 이동 및 스크롤이 동작하지 않습니다.\r\n\r\nleftSplitWidth/rightSplitWidth : 그리드의 leftSplit 또는 rightSplit으로 고정된 영역의 너비를 지정하는 속성입니다.";
							output_11.style.setClasses(["opt-tmpl"]);
							output_11.style.css({
								"font-weight" : "700"
							});
							container.addChild(output_11, {
								"autoSize": "height",
								"width": "100px",
								"height": "40px"
							});
						})(group_10);
						container.addChild(group_10, {
							"autoSize": "height",
							"width": "1140px",
							"height": "80px"
						});
						var group_11 = new cpr.controls.Container();
						group_11.style.setClasses(["form-box", "vertical"]);
						// Layout
						var formLayout_2 = new cpr.controls.layouts.FormLayout();
						formLayout_2.topMargin = "5px";
						formLayout_2.rightMargin = "5px";
						formLayout_2.bottomMargin = "5px";
						formLayout_2.leftMargin = "5px";
						formLayout_2.horizontalSpacing = "10px";
						formLayout_2.verticalSpacing = "10px";
						formLayout_2.horizontalSeparatorWidth = 1;
						formLayout_2.verticalSeparatorWidth = 1;
						formLayout_2.setColumns(["1fr", "200px", "80px"]);
						formLayout_2.setRows(["30px", "80px", "80px", "80px"]);
						formLayout_2.setCustomRowShade(0, "#edeff6");
						formLayout_2.setRowAutoSizing(1, true);
						formLayout_2.setRowAutoSizing(2, true);
						formLayout_2.setRowAutoSizing(3, true);
						group_11.setLayout(formLayout_2);
						(function(container){
							var output_12 = new cpr.controls.Output();
							output_12.value = "시나리오";
							output_12.style.setClasses(["label"]);
							output_12.style.css({
								"border-right-style" : "none",
								"background-color" : "transparent",
								"border-left-style" : "none",
								"padding-left" : "15px",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "left"
							});
							container.addChild(output_12, {
								"colIndex": 0,
								"rowIndex": 0
							});
							var output_13 = new cpr.controls.Output();
							output_13.value = "입력값";
							output_13.style.setClasses(["label"]);
							output_13.style.css({
								"border-right-style" : "none",
								"background-color" : "transparent",
								"border-left-style" : "none",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "center"
							});
							container.addChild(output_13, {
								"colIndex": 1,
								"rowIndex": 0
							});
							var output_14 = new cpr.controls.Output();
							output_14.value = "기능확인";
							output_14.style.setClasses(["label"]);
							output_14.style.css({
								"border-right-style" : "none",
								"background-color" : "transparent",
								"border-left-style" : "none",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "center"
							});
							container.addChild(output_14, {
								"colIndex": 2,
								"rowIndex": 0
							});
							var output_15 = new cpr.controls.Output();
							output_15.value = "1) 하단의 그리드를 선택합니다.\r\n2) 셀 하나가 선택됩니다.\r\n3) 셀을 드래그합니다.\r\n4) 셀들이 다중 선택되는 것을 확인할 수 있습니다.";
							output_15.style.setClasses(["opt-tmpl"]);
							output_15.style.css({
								"background-color" : "transparent",
								"border-right-style" : "none",
								"border-left-style" : "none",
								"padding-left" : "15px",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "left"
							});
							container.addChild(output_15, {
								"colIndex": 0,
								"rowIndex": 1
							});
							var button_1 = new cpr.controls.Button("btnInit");
							button_1.value = "실행";
							button_1.style.setClasses(["btn-primary"]);
							container.addChild(button_1, {
								"colIndex": 2,
								"rowIndex": 1,
								"verticalAlign": "center",
								"height": 30
							});
							var output_16 = new cpr.controls.Output();
							output_16.value = "selectionUnit = \"cell\"\r\nselectionMulti = \"multi\"";
							output_16.style.css({
								"background-color" : "transparent",
								"border-right-style" : "none",
								"border-left-style" : "none",
								"padding-left" : "15px",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "left"
							});
							container.addChild(output_16, {
								"colIndex": 1,
								"rowIndex": 1
							});
							var output_17 = new cpr.controls.Output();
							output_17.value = "1) 하단의 그리드 헤더 컬럼 사이를 드래그합니다.\r\n2) 컬럼의 크기가 변경됩니다.\r\n3) 그리드 헤더를 옆 헤더로 드래그 앤 드롭합니다.\r\n4) 컬럼의 위치가 변경됩니다.";
							output_17.style.setClasses(["opt-tmpl"]);
							output_17.style.css({
								"background-color" : "transparent",
								"border-right-style" : "none",
								"border-left-style" : "none",
								"padding-left" : "15px",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "left"
							});
							container.addChild(output_17, {
								"colIndex": 0,
								"rowIndex": 2
							});
							var output_18 = new cpr.controls.Output();
							output_18.value = "1) 하단의 그리드에서 왼쪽 컬럼 2개가 고정되어 있습니다.\r\n2) 왼쪽 컬럼 2개의 크기가 200px입니다.";
							output_18.style.setClasses(["opt-tmpl"]);
							output_18.style.css({
								"background-color" : "transparent",
								"border-right-style" : "none",
								"border-left-style" : "none",
								"padding-left" : "15px",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "left"
							});
							container.addChild(output_18, {
								"colIndex": 0,
								"rowIndex": 3
							});
							var output_19 = new cpr.controls.Output();
							output_19.value = "resizableColumns = \"all\"\r\ncolumnMovable = true";
							output_19.style.css({
								"background-color" : "transparent",
								"border-right-style" : "none",
								"border-left-style" : "none",
								"padding-left" : "15px",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "left"
							});
							container.addChild(output_19, {
								"colIndex": 1,
								"rowIndex": 2
							});
							var output_20 = new cpr.controls.Output();
							output_20.value = "leftSplit = 2\r\nleftSplitWidth = 200";
							output_20.style.css({
								"background-color" : "transparent",
								"border-right-style" : "none",
								"border-left-style" : "none",
								"padding-left" : "15px",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "left"
							});
							container.addChild(output_20, {
								"colIndex": 1,
								"rowIndex": 3
							});
							var button_2 = new cpr.controls.Button("btnInit6");
							button_2.value = "실행";
							button_2.style.setClasses(["btn-primary"]);
							container.addChild(button_2, {
								"colIndex": 2,
								"rowIndex": 2,
								"verticalAlign": "center"
							});
							var button_3 = new cpr.controls.Button("btnInit7");
							button_3.value = "실행";
							button_3.style.setClasses(["btn-primary"]);
							container.addChild(button_3, {
								"colIndex": 2,
								"rowIndex": 3,
								"verticalAlign": "center"
							});
						})(group_11);
						container.addChild(group_11, {
							"autoSize": "height",
							"width": "1220px",
							"height": "320px"
						});
						var group_12 = new cpr.controls.Container();
						group_12.style.setClasses(["attach-box"]);
						group_12.style.css({
							"border-right-style" : "solid",
							"border-top-width" : "1px",
							"border-bottom-color" : "#babfc7",
							"border-right-width" : "1px",
							"border-left-color" : "#babfc7",
							"border-right-color" : "#babfc7",
							"border-left-width" : "1px",
							"border-top-style" : "solid",
							"background-color" : "#e9e9e9",
							"border-left-style" : "solid",
							"border-bottom-width" : "1px",
							"border-top-color" : "#babfc7",
							"border-bottom-style" : "solid",
							"background-image" : "none"
						});
						// Layout
						var flowLayout_2 = new cpr.controls.layouts.FlowLayout();
						flowLayout_2.scrollable = false;
						flowLayout_2.horizontalSpacing = 20;
						flowLayout_2.verticalSpacing = 20;
						flowLayout_2.horizontalAlign = "center";
						flowLayout_2.verticalAlign = "middle";
						flowLayout_2.leftMargin = 20;
						flowLayout_2.rightMargin = 20;
						flowLayout_2.topMargin = 20;
						flowLayout_2.bottomMargin = 20;
						group_12.setLayout(flowLayout_2);
						(function(container){
							var group_13 = new cpr.controls.Container();
							// Layout
							var formLayout_3 = new cpr.controls.layouts.FormLayout();
							formLayout_3.topMargin = "0px";
							formLayout_3.rightMargin = "0px";
							formLayout_3.bottomMargin = "0px";
							formLayout_3.leftMargin = "0px";
							formLayout_3.horizontalSpacing = "5px";
							formLayout_3.verticalSpacing = "5px";
							formLayout_3.setColumns(["1fr"]);
							formLayout_3.setRows(["1fr", "20px"]);
							group_13.setLayout(formLayout_3);
							(function(container){
								var output_21 = new cpr.controls.Output();
								output_21.value = "<기능확인 컨트롤>";
								output_21.style.setClasses(["text-center"]);
								container.addChild(output_21, {
									"colIndex": 0,
									"rowIndex": 1
								});
								var grid_2 = new cpr.controls.Grid("sampleGrd1");
								grid_2.init({
									"dataSet": app.lookup("ds2"),
									"columnMovable": true,
									"selectionUnit": "cell",
									"selectionMulti": "multi",
									"leftSplit": 2,
									"leftSplitWidth": 200,
									"resizableColumns": "all",
									"columns": [
										{"width": "100px"},
										{"width": "100px"},
										{"width": "100px"},
										{"width": "100px"},
										{"width": "100px"}
									],
									"header": {
										"rows": [{"height": "24px"}],
										"cells": [
											{
												"constraint": {"rowIndex": 0, "colIndex": 0},
												"configurator": function(cell){
													cell.targetColumnName = "productGroup";
													cell.filterable = false;
													cell.sortable = false;
													cell.text = "상품그룹";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 1},
												"configurator": function(cell){
													cell.targetColumnName = "productName";
													cell.filterable = false;
													cell.sortable = false;
													cell.text = "상품명";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 2},
												"configurator": function(cell){
													cell.targetColumnName = "price";
													cell.filterable = false;
													cell.sortable = false;
													cell.text = "가격";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 3},
												"configurator": function(cell){
													cell.targetColumnName = "rate";
													cell.filterable = false;
													cell.sortable = false;
													cell.text = "할인율";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 4},
												"configurator": function(cell){
													cell.targetColumnName = "ratedprice";
													cell.filterable = false;
													cell.sortable = false;
													cell.text = "할인된가격";
												}
											}
										]
									},
									"detail": {
										"rows": [{"height": "24px"}],
										"cells": [
											{
												"constraint": {"rowIndex": 0, "colIndex": 0},
												"configurator": function(cell){
													cell.columnName = "productGroup";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 1},
												"configurator": function(cell){
													cell.columnName = "productName";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 2},
												"configurator": function(cell){
													cell.columnName = "price";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 3},
												"configurator": function(cell){
													cell.columnName = "rate";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 4},
												"configurator": function(cell){
													cell.columnName = "ratedprice";
												}
											}
										]
									}
								});
								container.addChild(grid_2, {
									"colIndex": 0,
									"rowIndex": 0
								});
							})(group_13);
							container.addChild(group_13, {
								"autoSize": "none",
								"width": "700px",
								"height": "300px"
							});
						})(group_12);
						container.addChild(group_12, {
							"autoSize": "height",
							"width": "1220px",
							"height": "337px"
						});
					})(group_7);
					container.addChild(group_7, {
						"autoSize": "height",
						"width": "1220px",
						"height": "1247px"
					});
					var group_14 = new cpr.controls.Container();
					group_14.style.setClasses(["card-inner"]);
					// Layout
					var verticalLayout_10 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_10.spacing = 25;
					verticalLayout_10.leftMargin = 40;
					verticalLayout_10.rightMargin = 40;
					verticalLayout_10.topMargin = 20;
					verticalLayout_10.bottomMargin = 40;
					group_14.setLayout(verticalLayout_10);
					(function(container){
						var output_22 = new cpr.controls.Output();
						output_22.value = "getSum";
						output_22.style.css({
							"color" : "#2263b3",
							"font-weight" : "700",
							"font-size" : "20px",
							"font-family" : "sans-serif , 'Malgun Gothic' , 'Noto Sans KR'"
						});
						container.addChild(output_22, {
							"autoSize": "none",
							"width": "1220px",
							"height": "38px"
						});
						var group_15 = new cpr.controls.Container();
						group_15.style.css({
							"background-color" : "#e9eff7",
							"background-image" : "none"
						});
						// Layout
						var verticalLayout_11 = new cpr.controls.layouts.VerticalLayout();
						verticalLayout_11.leftMargin = 30;
						verticalLayout_11.rightMargin = 30;
						verticalLayout_11.topMargin = 20;
						verticalLayout_11.bottomMargin = 20;
						group_15.setLayout(verticalLayout_11);
						(function(container){
							var output_23 = new cpr.controls.Output();
							output_23.value = "그리드의 그룹 및 푸터 영역에서 총합을 계산하는 함수입니다. getSum(\"컬럼명\") 으로 사용이 가능합니다.";
							output_23.style.setClasses(["opt-tmpl"]);
							output_23.style.css({
								"font-weight" : "700"
							});
							container.addChild(output_23, {
								"autoSize": "height",
								"width": "100px",
								"height": "40px"
							});
						})(group_15);
						container.addChild(group_15, {
							"autoSize": "height",
							"width": "1140px",
							"height": "80px"
						});
						var output_24 = new cpr.controls.Output();
						output_24.value = "collapsible";
						output_24.style.css({
							"color" : "#2263b3",
							"font-weight" : "700",
							"font-size" : "20px",
							"font-family" : "sans-serif , 'Malgun Gothic' , 'Noto Sans KR'"
						});
						container.addChild(output_24, {
							"autoSize": "none",
							"width": "1140px",
							"height": "38px"
						});
						var group_16 = new cpr.controls.Container();
						group_16.style.css({
							"background-color" : "#e9eff7",
							"background-image" : "none"
						});
						// Layout
						var verticalLayout_12 = new cpr.controls.layouts.VerticalLayout();
						verticalLayout_12.leftMargin = 30;
						verticalLayout_12.rightMargin = 30;
						verticalLayout_12.topMargin = 20;
						verticalLayout_12.bottomMargin = 20;
						group_16.setLayout(verticalLayout_12);
						(function(container){
							var output_25 = new cpr.controls.Output();
							output_25.value = "그리드에서 rowgroup 사용 시 해당 그룹을 접을 수 있도록 설정할 수 있는 속성입니다. 기본값은 false이며, true로 변경 시 그룹을 접을 수 있게 됩니다.";
							output_25.style.setClasses(["opt-tmpl"]);
							output_25.style.css({
								"font-weight" : "700"
							});
							container.addChild(output_25, {
								"autoSize": "height",
								"width": "100px",
								"height": "40px"
							});
						})(group_16);
						container.addChild(group_16, {
							"autoSize": "height",
							"width": "1140px",
							"height": "80px"
						});
						var group_17 = new cpr.controls.Container();
						group_17.style.setClasses(["form-box", "vertical"]);
						// Layout
						var formLayout_4 = new cpr.controls.layouts.FormLayout();
						formLayout_4.topMargin = "5px";
						formLayout_4.rightMargin = "5px";
						formLayout_4.bottomMargin = "5px";
						formLayout_4.leftMargin = "5px";
						formLayout_4.horizontalSpacing = "10px";
						formLayout_4.verticalSpacing = "10px";
						formLayout_4.horizontalSeparatorWidth = 1;
						formLayout_4.verticalSeparatorWidth = 1;
						formLayout_4.setColumns(["1fr", "2fr"]);
						formLayout_4.setCustomColumnShade(0, "#edeff6");
						formLayout_4.setRows(["30px", "30px", "30px"]);
						formLayout_4.setRowAutoSizing(1, true);
						formLayout_4.setRowAutoSizing(2, true);
						group_17.setLayout(formLayout_4);
						(function(container){
							var output_26 = new cpr.controls.Output();
							output_26.value = "type";
							output_26.style.setClasses(["label"]);
							output_26.style.css({
								"border-right-style" : "none",
								"background-color" : "transparent",
								"border-left-style" : "none",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "center"
							});
							container.addChild(output_26, {
								"colIndex": 0,
								"rowIndex": 0
							});
							var output_27 = new cpr.controls.Output();
							output_27.value = "get";
							output_27.style.setClasses(["label"]);
							output_27.style.css({
								"border-right-style" : "none",
								"background-color" : "transparent",
								"border-left-style" : "none",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "center"
							});
							container.addChild(output_27, {
								"colIndex": 0,
								"rowIndex": 1
							});
							var output_28 = new cpr.controls.Output();
							output_28.value = "set";
							output_28.style.setClasses(["label"]);
							output_28.style.css({
								"border-right-style" : "none",
								"background-color" : "transparent",
								"border-left-style" : "none",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "center"
							});
							container.addChild(output_28, {
								"colIndex": 0,
								"rowIndex": 2
							});
							var output_29 = new cpr.controls.Output();
							output_29.value = "rowgroup사용시 해당 그룹을 접을 수 있도록 할지 여부를 반환합니다.";
							output_29.style.css({
								"background-color" : "transparent",
								"border-right-style" : "none",
								"border-left-style" : "none",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "center"
							});
							container.addChild(output_29, {
								"colIndex": 1,
								"rowIndex": 1
							});
							var output_30 = new cpr.controls.Output();
							output_30.value = "rowgroup사용시 해당 그룹을 접을 수 있도록 할지 여부를 설정합니다.";
							output_30.style.css({
								"background-color" : "transparent",
								"border-right-style" : "none",
								"border-left-style" : "none",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "center"
							});
							container.addChild(output_30, {
								"colIndex": 1,
								"rowIndex": 2
							});
							var output_31 = new cpr.controls.Output();
							output_31.value = "Boolean ( Default : false )";
							output_31.style.css({
								"background-color" : "transparent",
								"border-right-style" : "none",
								"border-left-style" : "none",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "center"
							});
							container.addChild(output_31, {
								"colIndex": 1,
								"rowIndex": 0
							});
						})(group_17);
						container.addChild(group_17, {
							"autoSize": "height",
							"width": "1140px",
							"height": "125px"
						});
						var group_18 = new cpr.controls.Container();
						group_18.style.setClasses(["form-box", "vertical"]);
						// Layout
						var formLayout_5 = new cpr.controls.layouts.FormLayout();
						formLayout_5.topMargin = "5px";
						formLayout_5.rightMargin = "5px";
						formLayout_5.bottomMargin = "5px";
						formLayout_5.leftMargin = "5px";
						formLayout_5.horizontalSpacing = "10px";
						formLayout_5.verticalSpacing = "10px";
						formLayout_5.horizontalSeparatorWidth = 1;
						formLayout_5.verticalSeparatorWidth = 1;
						formLayout_5.setColumns(["1fr", "200px", "80px"]);
						formLayout_5.setRows(["30px", "80px", "80px"]);
						formLayout_5.setCustomRowShade(0, "#edeff6");
						formLayout_5.setRowAutoSizing(1, true);
						formLayout_5.setRowAutoSizing(2, true);
						group_18.setLayout(formLayout_5);
						(function(container){
							var output_32 = new cpr.controls.Output();
							output_32.value = "시나리오";
							output_32.style.setClasses(["label"]);
							output_32.style.css({
								"border-right-style" : "none",
								"background-color" : "transparent",
								"border-left-style" : "none",
								"padding-left" : "15px",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "left"
							});
							container.addChild(output_32, {
								"colIndex": 0,
								"rowIndex": 0
							});
							var output_33 = new cpr.controls.Output();
							output_33.value = "입력값";
							output_33.style.setClasses(["label"]);
							output_33.style.css({
								"border-right-style" : "none",
								"background-color" : "transparent",
								"border-left-style" : "none",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "center"
							});
							container.addChild(output_33, {
								"colIndex": 1,
								"rowIndex": 0
							});
							var output_34 = new cpr.controls.Output();
							output_34.value = "기능확인";
							output_34.style.setClasses(["label"]);
							output_34.style.css({
								"border-right-style" : "none",
								"background-color" : "transparent",
								"border-left-style" : "none",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "center"
							});
							container.addChild(output_34, {
								"colIndex": 2,
								"rowIndex": 0
							});
							var output_35 = new cpr.controls.Output();
							output_35.value = "1) 하단의 그리드 푸터의 좌측 숫자는 가격의 총합입니다.\r\n- getSum(\"price\")\r\n2) 하단의 그리드 푸터의 우측 숫자는 할인된 가격의 총합입니다.\r\n- getSum(\"ratedPrice\")";
							output_35.style.setClasses(["opt-tmpl"]);
							output_35.style.css({
								"background-color" : "transparent",
								"border-right-style" : "none",
								"border-left-style" : "none",
								"padding-left" : "15px",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "left"
							});
							container.addChild(output_35, {
								"colIndex": 0,
								"rowIndex": 1
							});
							var button_4 = new cpr.controls.Button("btnInit8");
							button_4.value = "실행";
							button_4.style.setClasses(["btn-primary"]);
							container.addChild(button_4, {
								"colIndex": 2,
								"rowIndex": 1,
								"verticalAlign": "center",
								"height": 30
							});
							var output_36 = new cpr.controls.Output();
							output_36.value = "";
							output_36.style.css({
								"background-color" : "transparent",
								"border-right-style" : "none",
								"border-left-style" : "none",
								"padding-left" : "15px",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "left"
							});
							container.addChild(output_36, {
								"colIndex": 1,
								"rowIndex": 1
							});
							var output_37 = new cpr.controls.Output();
							output_37.value = "1) 하단의 그리드가 펼쳐져 있습니다.\r\n2) 상품 그룹 좌측에 화살표 아이콘을 클릭합니다.\r\n3) 해당 로우가 접히는 것을 확인할 수 있습니다.";
							output_37.style.setClasses(["opt-tmpl"]);
							output_37.style.css({
								"background-color" : "transparent",
								"border-right-style" : "none",
								"border-left-style" : "none",
								"padding-left" : "15px",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "left"
							});
							container.addChild(output_37, {
								"colIndex": 0,
								"rowIndex": 2
							});
							var button_5 = new cpr.controls.Button("btnInit9");
							button_5.value = "실행";
							button_5.style.setClasses(["btn-primary"]);
							container.addChild(button_5, {
								"colIndex": 2,
								"rowIndex": 2,
								"verticalAlign": "center"
							});
						})(group_18);
						container.addChild(group_18, {
							"autoSize": "height",
							"width": "1140px",
							"height": "230px"
						});
						var group_19 = new cpr.controls.Container();
						group_19.style.setClasses(["attach-box"]);
						group_19.style.css({
							"border-right-style" : "solid",
							"border-top-width" : "1px",
							"border-bottom-color" : "#babfc7",
							"border-right-width" : "1px",
							"border-left-color" : "#babfc7",
							"border-right-color" : "#babfc7",
							"border-left-width" : "1px",
							"border-top-style" : "solid",
							"background-color" : "#e9e9e9",
							"border-left-style" : "solid",
							"border-bottom-width" : "1px",
							"border-top-color" : "#babfc7",
							"border-bottom-style" : "solid",
							"background-image" : "none"
						});
						// Layout
						var flowLayout_3 = new cpr.controls.layouts.FlowLayout();
						flowLayout_3.scrollable = false;
						flowLayout_3.horizontalSpacing = 20;
						flowLayout_3.verticalSpacing = 20;
						flowLayout_3.horizontalAlign = "center";
						flowLayout_3.verticalAlign = "middle";
						flowLayout_3.leftMargin = 20;
						flowLayout_3.rightMargin = 20;
						flowLayout_3.topMargin = 20;
						flowLayout_3.bottomMargin = 20;
						group_19.setLayout(flowLayout_3);
						(function(container){
							var group_20 = new cpr.controls.Container();
							// Layout
							var formLayout_6 = new cpr.controls.layouts.FormLayout();
							formLayout_6.topMargin = "0px";
							formLayout_6.rightMargin = "0px";
							formLayout_6.bottomMargin = "0px";
							formLayout_6.leftMargin = "0px";
							formLayout_6.horizontalSpacing = "5px";
							formLayout_6.verticalSpacing = "5px";
							formLayout_6.setColumns(["1fr"]);
							formLayout_6.setRows(["1fr", "20px"]);
							group_20.setLayout(formLayout_6);
							(function(container){
								var output_38 = new cpr.controls.Output();
								output_38.value = "<기능확인 컨트롤>";
								output_38.style.setClasses(["text-center"]);
								container.addChild(output_38, {
									"colIndex": 0,
									"rowIndex": 1
								});
								var grid_3 = new cpr.controls.Grid("sampleGrd2");
								grid_3.init({
									"dataSet": app.lookup("ds2"),
									"collapsible": true,
									"columns": [
										{"width": "100px"},
										{"width": "100px"},
										{"width": "100px"},
										{"width": "100px"},
										{"width": "100px"}
									],
									"header": {
										"rows": [{"height": "24px"}],
										"cells": [
											{
												"constraint": {"rowIndex": 0, "colIndex": 1},
												"configurator": function(cell){
													cell.targetColumnName = "productName";
													cell.filterable = false;
													cell.sortable = false;
													cell.text = "상품명";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 2},
												"configurator": function(cell){
													cell.targetColumnName = "price";
													cell.filterable = false;
													cell.sortable = false;
													cell.text = "가격";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 3},
												"configurator": function(cell){
													cell.targetColumnName = "rate";
													cell.filterable = false;
													cell.sortable = false;
													cell.text = "할인율";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 4},
												"configurator": function(cell){
													cell.targetColumnName = "ratedprice";
													cell.text = "할인된가격";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 0},
												"configurator": function(cell){
													cell.targetColumnName = "productGroup";
													cell.text = "상품그룹";
												}
											}
										]
									},
									"detail": {
										"rows": [{"height": "24px"}],
										"cells": [
											{
												"constraint": {"rowIndex": 0, "colIndex": 1},
												"configurator": function(cell){
													cell.columnName = "productName";
													cell.control = (function(){
														var output_39 = new cpr.controls.Output();
														output_39.value = "Output";
														output_39.style.css({
															"text-align" : "center"
														});
														output_39.bind("value").toDataColumn("productName");
														return output_39;
													})();
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 2},
												"configurator": function(cell){
													cell.columnName = "price";
													cell.control = (function(){
														var output_40 = new cpr.controls.Output();
														output_40.value = "Output";
														output_40.dataType = "number";
														output_40.format = "s#,##0";
														output_40.displayExp = "text + \"원\"";
														output_40.style.css({
															"text-align" : "center"
														});
														output_40.bind("value").toDataColumn("price");
														return output_40;
													})();
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 3},
												"configurator": function(cell){
													cell.columnName = "rate";
													cell.control = (function(){
														var output_41 = new cpr.controls.Output();
														output_41.value = "Output";
														output_41.dataType = "number";
														output_41.displayExp = "text + \"%\"";
														output_41.style.css({
															"text-align" : "center"
														});
														output_41.bind("value").toDataColumn("rate");
														return output_41;
													})();
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 4},
												"configurator": function(cell){
													cell.columnName = "ratedprice";
													cell.control = (function(){
														var output_42 = new cpr.controls.Output();
														output_42.value = "Output";
														output_42.dataType = "number";
														output_42.format = "s#,##0";
														output_42.displayExp = "text + \"원\"";
														output_42.style.css({
															"text-align" : "center"
														});
														output_42.bind("value").toDataColumn("ratedprice");
														return output_42;
													})();
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 0},
												"configurator": function(cell){
													cell.columnName = "productGroup";
												}
											}
										]
									},
									"footer": {
										"rows": [{"height": "20px"}],
										"cells": [
											{
												"constraint": {"rowIndex": 0, "colIndex": 2, "rowSpan": 1, "colSpan": 1},
												"configurator": function(cell){
													cell.expr = "getSum(\"price\")";
													cell.control = (function(){
														var output_43 = new cpr.controls.Output();
														output_43.value = "Output";
														output_43.dataType = "number";
														output_43.format = "s#,##0";
														output_43.displayExp = "text + \"원\"";
														return output_43;
													})();
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 4, "rowSpan": 1, "colSpan": 1},
												"configurator": function(cell){
													cell.expr = "getSum(\"ratedprice\")";
													cell.control = (function(){
														var output_44 = new cpr.controls.Output();
														output_44.value = "Output";
														output_44.dataType = "number";
														output_44.format = "s#,##0";
														output_44.displayExp = "text + \"원\"";
														return output_44;
													})();
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 1},
												"configurator": function(cell){
													cell.expr = "\"\"";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 3},
												"configurator": function(cell){
													cell.expr = "\"\"";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 0},
												"configurator": function(cell){
													cell.expr = "\"\"";
												}
											}
										]
									},
									"rowGroup": [{
										"groupCondition": "productGroup",
										"gheader": {
											"rows": [{"height": "24px"}],
											"cells": [
												{
													"constraint": {"rowIndex": 0, "colIndex": 0},
													"configurator": function(cell){
														cell.expr = "productGroup";
													}
												},
												{
													"constraint": {"rowIndex": 0, "colIndex": 1},
													"configurator": function(cell){
														cell.expr = "\"\"";
													}
												},
												{
													"constraint": {"rowIndex": 0, "colIndex": 2},
													"configurator": function(cell){
														cell.expr = "\"\"";
													}
												},
												{
													"constraint": {"rowIndex": 0, "colIndex": 3},
													"configurator": function(cell){
														cell.expr = "\"\"";
													}
												},
												{
													"constraint": {"rowIndex": 0, "colIndex": 4},
													"configurator": function(cell){
														cell.expr = "\"\"";
													}
												}
											]
										},
										"gfooter": {
											"visibleExpr": "false",
											"rows": [{"height": "24px"}],
											"cells": [
												{
													"constraint": {"rowIndex": 0, "colIndex": 0},
													"configurator": function(cell){
														cell.expr = "\"\"";
													}
												},
												{
													"constraint": {"rowIndex": 0, "colIndex": 1},
													"configurator": function(cell){
														cell.expr = "\"\"";
													}
												},
												{
													"constraint": {"rowIndex": 0, "colIndex": 2},
													"configurator": function(cell){
														cell.expr = "\"\"";
													}
												},
												{
													"constraint": {"rowIndex": 0, "colIndex": 3},
													"configurator": function(cell){
														cell.expr = "\"\"";
													}
												},
												{
													"constraint": {"rowIndex": 0, "colIndex": 4},
													"configurator": function(cell){
														cell.expr = "\"\"";
													}
												}
											]
										}
									}]
								});
								container.addChild(grid_3, {
									"colIndex": 0,
									"rowIndex": 0
								});
							})(group_20);
							container.addChild(group_20, {
								"autoSize": "both",
								"width": "700px",
								"height": "300px"
							});
						})(group_19);
						container.addChild(group_19, {
							"autoSize": "height",
							"width": "1220px",
							"height": "337px"
						});
					})(group_14);
					container.addChild(group_14, {
						"autoSize": "height",
						"width": "1220px",
						"height": "1200px"
					});
					var group_21 = new cpr.controls.Container();
					group_21.style.setClasses(["card-inner"]);
					// Layout
					var verticalLayout_13 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_13.spacing = 25;
					verticalLayout_13.leftMargin = 40;
					verticalLayout_13.rightMargin = 40;
					verticalLayout_13.topMargin = 20;
					verticalLayout_13.bottomMargin = 40;
					group_21.setLayout(verticalLayout_13);
					(function(container){
						var output_45 = new cpr.controls.Output();
						output_45.value = "clickMode";
						output_45.style.css({
							"color" : "#2263b3",
							"font-weight" : "700",
							"font-size" : "20px",
							"font-family" : "sans-serif , 'Malgun Gothic' , 'Noto Sans KR'"
						});
						container.addChild(output_45, {
							"autoSize": "none",
							"width": "1220px",
							"height": "38px"
						});
						var group_22 = new cpr.controls.Container();
						group_22.style.css({
							"background-color" : "#e9eff7",
							"background-image" : "none"
						});
						// Layout
						var verticalLayout_14 = new cpr.controls.layouts.VerticalLayout();
						verticalLayout_14.leftMargin = 30;
						verticalLayout_14.rightMargin = 30;
						verticalLayout_14.topMargin = 20;
						verticalLayout_14.bottomMargin = 20;
						group_22.setLayout(verticalLayout_14);
						(function(container){
							var output_46 = new cpr.controls.Output();
							output_46.value = "그리드를 클릭했을 때 진입하는 모드를 설정할 수 있는 속성입니다. 기본값은 select이며, edit으로 변경 시 클릭과 동시에 그리드 편집모드로 진입하게 됩니다.";
							output_46.style.setClasses(["opt-tmpl"]);
							output_46.style.css({
								"font-weight" : "700"
							});
							container.addChild(output_46, {
								"autoSize": "height",
								"width": "100px",
								"height": "40px"
							});
						})(group_22);
						container.addChild(group_22, {
							"autoSize": "height",
							"width": "1140px",
							"height": "80px"
						});
						var output_47 = new cpr.controls.Output();
						output_47.value = "filterable, sortable";
						output_47.style.css({
							"color" : "#2263b3",
							"font-weight" : "700",
							"font-size" : "20px",
							"font-family" : "sans-serif , 'Malgun Gothic' , 'Noto Sans KR'"
						});
						container.addChild(output_47, {
							"autoSize": "none",
							"width": "1140px",
							"height": "38px"
						});
						var group_23 = new cpr.controls.Container();
						group_23.style.css({
							"background-color" : "#e9eff7",
							"background-image" : "none"
						});
						// Layout
						var verticalLayout_15 = new cpr.controls.layouts.VerticalLayout();
						verticalLayout_15.leftMargin = 30;
						verticalLayout_15.rightMargin = 30;
						verticalLayout_15.topMargin = 20;
						verticalLayout_15.bottomMargin = 20;
						group_23.setLayout(verticalLayout_15);
						(function(container){
							var output_48 = new cpr.controls.Output();
							output_48.value = "filterble : 그리드의 필터링 여부를 설정하는 속성입니다. 그리드 헤더 셀에서 설정할 수 있습니다. 기본값은 false이며 true로 변경 시 그리드 헤더에 필터 아이콘을 클릭하여 필터링을 할 수 있습니다.\r\n\r\nsortable : 그리드의 정렬 가능 여부를 설정하는 속성입니다. 그리드 헤더 셀에서 설정할 수 있습니다. 기본값은 false이며 true로 변경 시 그리드 헤더에 정렬 아이콘을 클릭하여 정렬을 할 수 있습니다.";
							output_48.style.setClasses(["opt-tmpl"]);
							output_48.style.css({
								"font-weight" : "700"
							});
							container.addChild(output_48, {
								"autoSize": "height",
								"width": "100px",
								"height": "40px"
							});
						})(group_23);
						container.addChild(group_23, {
							"autoSize": "height",
							"width": "1140px",
							"height": "80px"
						});
						var output_49 = new cpr.controls.Output();
						output_49.value = "filterDialogButtons";
						output_49.style.css({
							"color" : "#2263b3",
							"font-weight" : "700",
							"font-size" : "20px",
							"font-family" : "sans-serif , 'Malgun Gothic' , 'Noto Sans KR'"
						});
						container.addChild(output_49, {
							"autoSize": "none",
							"width": "1140px",
							"height": "38px"
						});
						var group_24 = new cpr.controls.Container();
						group_24.style.css({
							"background-color" : "#e9eff7",
							"background-image" : "none"
						});
						// Layout
						var verticalLayout_16 = new cpr.controls.layouts.VerticalLayout();
						verticalLayout_16.leftMargin = 30;
						verticalLayout_16.rightMargin = 30;
						verticalLayout_16.topMargin = 20;
						verticalLayout_16.bottomMargin = 20;
						group_24.setLayout(verticalLayout_16);
						(function(container){
							var output_50 = new cpr.controls.Output();
							output_50.value = "그리드 필터 팝업 버튼의 순서를 편집할 수 있는 속성입니다. ";
							output_50.style.setClasses(["opt-tmpl"]);
							output_50.style.css({
								"font-weight" : "700"
							});
							container.addChild(output_50, {
								"autoSize": "height",
								"width": "100px",
								"height": "40px"
							});
						})(group_24);
						container.addChild(group_24, {
							"autoSize": "height",
							"width": "1140px",
							"height": "80px"
						});
						var group_25 = new cpr.controls.Container();
						group_25.style.setClasses(["form-box", "vertical"]);
						// Layout
						var formLayout_7 = new cpr.controls.layouts.FormLayout();
						formLayout_7.topMargin = "5px";
						formLayout_7.rightMargin = "5px";
						formLayout_7.bottomMargin = "5px";
						formLayout_7.leftMargin = "5px";
						formLayout_7.horizontalSpacing = "10px";
						formLayout_7.verticalSpacing = "10px";
						formLayout_7.horizontalSeparatorWidth = 1;
						formLayout_7.verticalSeparatorWidth = 1;
						formLayout_7.setColumns(["1fr", "300px", "80px"]);
						formLayout_7.setRows(["30px", "80px", "80px"]);
						formLayout_7.setCustomRowShade(0, "#edeff6");
						formLayout_7.setRowAutoSizing(1, true);
						formLayout_7.setRowAutoSizing(2, true);
						group_25.setLayout(formLayout_7);
						(function(container){
							var output_51 = new cpr.controls.Output();
							output_51.value = "시나리오";
							output_51.style.setClasses(["label"]);
							output_51.style.css({
								"border-right-style" : "none",
								"background-color" : "transparent",
								"border-left-style" : "none",
								"padding-left" : "15px",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "left"
							});
							container.addChild(output_51, {
								"colIndex": 0,
								"rowIndex": 0
							});
							var output_52 = new cpr.controls.Output();
							output_52.value = "입력값";
							output_52.style.setClasses(["label"]);
							output_52.style.css({
								"border-right-style" : "none",
								"background-color" : "transparent",
								"border-left-style" : "none",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "center"
							});
							container.addChild(output_52, {
								"colIndex": 1,
								"rowIndex": 0
							});
							var output_53 = new cpr.controls.Output();
							output_53.value = "기능확인";
							output_53.style.setClasses(["label"]);
							output_53.style.css({
								"border-right-style" : "none",
								"background-color" : "transparent",
								"border-left-style" : "none",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "center"
							});
							container.addChild(output_53, {
								"colIndex": 2,
								"rowIndex": 0
							});
							var output_54 = new cpr.controls.Output();
							output_54.value = "1) 그리드를 클릭합니다.\r\n2) 해당 셀을 수정할 수 있습니다.";
							output_54.style.setClasses(["opt-tmpl"]);
							output_54.style.css({
								"background-color" : "transparent",
								"border-right-style" : "none",
								"border-left-style" : "none",
								"padding-left" : "15px",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "left"
							});
							container.addChild(output_54, {
								"colIndex": 0,
								"rowIndex": 1
							});
							var button_6 = new cpr.controls.Button("btnInit2");
							button_6.value = "실행";
							button_6.style.setClasses(["btn-primary"]);
							container.addChild(button_6, {
								"colIndex": 2,
								"rowIndex": 1,
								"verticalAlign": "center",
								"height": 30
							});
							var output_55 = new cpr.controls.Output();
							output_55.value = "clickMode = \"edit\"(편집모드)";
							output_55.style.css({
								"background-color" : "transparent",
								"border-right-style" : "none",
								"border-left-style" : "none",
								"padding-left" : "15px",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "left"
							});
							container.addChild(output_55, {
								"colIndex": 1,
								"rowIndex": 1
							});
							var output_56 = new cpr.controls.Output();
							output_56.value = "1) 그리드 헤더 중 숫자 컬럼에 필터 아이콘이 보입니다.\r\n2) 필터 아이콘을 클릭하면 필터 창 우측의 버튼의 순서가 취소, 확인 으로 되어 있습니다.\r\n3) 그리드의 헤더를 클릭합니다.\r\n4) 행들이 정렬되는 것을 확인할 수 있습니다.";
							output_56.style.setClasses(["opt-tmpl"]);
							output_56.style.css({
								"background-color" : "transparent",
								"border-right-style" : "none",
								"border-left-style" : "none",
								"padding-left" : "15px",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "left"
							});
							container.addChild(output_56, {
								"colIndex": 0,
								"rowIndex": 2
							});
							var button_7 = new cpr.controls.Button("btnInit10");
							button_7.value = "실행";
							button_7.style.setClasses(["btn-primary"]);
							container.addChild(button_7, {
								"colIndex": 2,
								"rowIndex": 2,
								"verticalAlign": "center"
							});
							var output_57 = new cpr.controls.Output();
							output_57.value = "filterable = true\r\nfilterDialogButtons = [\"cancel\",\"okay\"]\r\nsortable = true";
							output_57.style.css({
								"background-color" : "transparent",
								"border-right-style" : "none",
								"border-left-style" : "none",
								"padding-left" : "15px",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "left"
							});
							container.addChild(output_57, {
								"colIndex": 1,
								"rowIndex": 2
							});
						})(group_25);
						container.addChild(group_25, {
							"autoSize": "height",
							"width": "1140px",
							"height": "230px"
						});
						var group_26 = new cpr.controls.Container();
						group_26.style.setClasses(["attach-box"]);
						group_26.style.css({
							"border-right-style" : "solid",
							"border-top-width" : "1px",
							"border-bottom-color" : "#babfc7",
							"border-right-width" : "1px",
							"border-left-color" : "#babfc7",
							"border-right-color" : "#babfc7",
							"border-left-width" : "1px",
							"border-top-style" : "solid",
							"background-color" : "#e9e9e9",
							"border-left-style" : "solid",
							"border-bottom-width" : "1px",
							"border-top-color" : "#babfc7",
							"border-bottom-style" : "solid",
							"background-image" : "none"
						});
						// Layout
						var flowLayout_4 = new cpr.controls.layouts.FlowLayout();
						flowLayout_4.scrollable = false;
						flowLayout_4.horizontalSpacing = 20;
						flowLayout_4.verticalSpacing = 20;
						flowLayout_4.horizontalAlign = "center";
						flowLayout_4.verticalAlign = "middle";
						flowLayout_4.leftMargin = 20;
						flowLayout_4.rightMargin = 20;
						flowLayout_4.topMargin = 20;
						flowLayout_4.bottomMargin = 20;
						group_26.setLayout(flowLayout_4);
						(function(container){
							var group_27 = new cpr.controls.Container();
							// Layout
							var formLayout_8 = new cpr.controls.layouts.FormLayout();
							formLayout_8.topMargin = "0px";
							formLayout_8.rightMargin = "0px";
							formLayout_8.bottomMargin = "0px";
							formLayout_8.leftMargin = "0px";
							formLayout_8.horizontalSpacing = "5px";
							formLayout_8.verticalSpacing = "5px";
							formLayout_8.setColumns(["1fr"]);
							formLayout_8.setRows(["1fr", "20px"]);
							group_27.setLayout(formLayout_8);
							(function(container){
								var output_58 = new cpr.controls.Output();
								output_58.value = "<기능확인 컨트롤>";
								output_58.style.setClasses(["text-center"]);
								container.addChild(output_58, {
									"colIndex": 0,
									"rowIndex": 1
								});
								var grid_4 = new cpr.controls.Grid("sampleGrd3");
								grid_4.init({
									"dataSet": app.lookup("ds1"),
									"selectionMulti": "single",
									"clickMode": "edit",
									"filterDialogButtons": [
										"cancel",
										"okay"
									],
									"columns": [
										{
											"width": "100px",
											"visible": true
										},
										{"width": "100px"},
										{"width": "100px"},
										{"width": "100px"}
									],
									"header": {
										"rows": [{"height": "24px"}],
										"cells": [
											{
												"constraint": {"rowIndex": 0, "colIndex": 0},
												"configurator": function(cell){
													cell.targetColumnName = "Alpabet";
													cell.filterable = false;
													cell.sortable = true;
													cell.text = "알파벳";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 1},
												"configurator": function(cell){
													cell.targetColumnName = "Number";
													cell.filterable = true;
													cell.sortable = true;
													cell.text = "숫자";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 2},
												"configurator": function(cell){
													cell.targetColumnName = "Hangul";
													cell.filterable = false;
													cell.sortable = true;
													cell.text = "한글";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 3},
												"configurator": function(cell){
													cell.targetColumnName = "Characters";
													cell.filterable = false;
													cell.sortable = true;
													cell.text = "특수문자";
												}
											}
										]
									},
									"detail": {
										"rows": [{"height": "24px"}],
										"cells": [
											{
												"constraint": {"rowIndex": 0, "colIndex": 0},
												"configurator": function(cell){
													cell.columnName = "Alpabet";
													cell.control = (function(){
														var inputBox_1 = new cpr.controls.InputBox("ipb5");
														inputBox_1.bind("value").toDataColumn("Alpabet");
														return inputBox_1;
													})();
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 1},
												"configurator": function(cell){
													cell.columnName = "Number";
													cell.control = (function(){
														var inputBox_2 = new cpr.controls.InputBox("ipb6");
														inputBox_2.bind("value").toDataColumn("Number");
														return inputBox_2;
													})();
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 2},
												"configurator": function(cell){
													cell.columnName = "Hangul";
													cell.control = (function(){
														var inputBox_3 = new cpr.controls.InputBox("ipb7");
														inputBox_3.bind("value").toDataColumn("Hangul");
														return inputBox_3;
													})();
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 3},
												"configurator": function(cell){
													cell.columnName = "Characters";
													cell.control = (function(){
														var inputBox_4 = new cpr.controls.InputBox("ipb8");
														inputBox_4.bind("value").toDataColumn("Characters");
														return inputBox_4;
													})();
												}
											}
										]
									}
								});
								container.addChild(grid_4, {
									"colIndex": 0,
									"rowIndex": 0
								});
							})(group_27);
							container.addChild(group_27, {
								"autoSize": "none",
								"width": "700px",
								"height": "300px"
							});
						})(group_26);
						container.addChild(group_26, {
							"autoSize": "height",
							"width": "1220px",
							"height": "337px"
						});
					})(group_21);
					container.addChild(group_21, {
						"autoSize": "height",
						"width": "1220px",
						"height": "1200px"
					});
					var group_28 = new cpr.controls.Container();
					group_28.style.setClasses(["card-inner"]);
					// Layout
					var verticalLayout_17 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_17.spacing = 25;
					verticalLayout_17.leftMargin = 40;
					verticalLayout_17.rightMargin = 40;
					verticalLayout_17.topMargin = 20;
					verticalLayout_17.bottomMargin = 40;
					group_28.setLayout(verticalLayout_17);
					(function(container){
						var output_59 = new cpr.controls.Output();
						output_59.value = "suppressedCellType";
						output_59.style.css({
							"color" : "#2263b3",
							"font-weight" : "700",
							"font-size" : "20px",
							"font-family" : "sans-serif , 'Malgun Gothic' , 'Noto Sans KR'"
						});
						container.addChild(output_59, {
							"autoSize": "none",
							"width": "1220px",
							"height": "38px"
						});
						var group_29 = new cpr.controls.Container();
						group_29.style.css({
							"background-color" : "#e9eff7",
							"background-image" : "none"
						});
						// Layout
						var verticalLayout_18 = new cpr.controls.layouts.VerticalLayout();
						verticalLayout_18.leftMargin = 30;
						verticalLayout_18.rightMargin = 30;
						verticalLayout_18.topMargin = 20;
						verticalLayout_18.bottomMargin = 20;
						group_29.setLayout(verticalLayout_18);
						(function(container){
							var output_60 = new cpr.controls.Output();
							output_60.value = "그리드에서 Suppress된 디테일 셀을 표현하는 방법을 설정하는 속성입니다. 기본값은 split(분리형)이며 merged(병합형)로 변경이 가능합니다.\r\n- split : 같은 값이 반복될 때 처음 한 번만 값을 출력하고 나머지 값은 생략합니다. (default)\r\n- merged : 같은 값이 반복될 때 반복되는 값의 셀들을 병합하는 효과를 제공합니다.";
							output_60.style.setClasses(["opt-tmpl"]);
							output_60.style.css({
								"font-weight" : "700"
							});
							container.addChild(output_60, {
								"autoSize": "height",
								"width": "100px",
								"height": "40px"
							});
						})(group_29);
						container.addChild(group_29, {
							"autoSize": "height",
							"width": "1140px",
							"height": "80px"
						});
						var output_61 = new cpr.controls.Output();
						output_61.value = "suppressible";
						output_61.style.css({
							"color" : "#2263b3",
							"font-weight" : "700",
							"font-size" : "20px",
							"font-family" : "sans-serif , 'Malgun Gothic' , 'Noto Sans KR'"
						});
						container.addChild(output_61, {
							"autoSize": "none",
							"width": "1140px",
							"height": "38px"
						});
						var group_30 = new cpr.controls.Container();
						group_30.style.css({
							"background-color" : "#e9eff7",
							"background-image" : "none"
						});
						// Layout
						var verticalLayout_19 = new cpr.controls.layouts.VerticalLayout();
						verticalLayout_19.leftMargin = 30;
						verticalLayout_19.rightMargin = 30;
						verticalLayout_19.topMargin = 20;
						verticalLayout_19.bottomMargin = 20;
						group_30.setLayout(verticalLayout_19);
						(function(container){
							var output_62 = new cpr.controls.Output();
							output_62.value = "그리드의 디테일 셀에서 설정 가능한 속성으로 이전의 행의 값과 일치하는 텍스트 병합 여부를 설정하는 속성입니다. 기본값은 false이며, true로 변경 시 셀 병합 효과를 설정할 수 있습니다. \r\n디자인 시점의 디테일 행이 다중행(2줄 이상)인 경우 디테일 전체 행의 수만큼 rowSpan을 가지고 있으면 suppress가 지원되나 개별 행으로 구성된 경우 suppress를 지원하지 않습니다.";
							output_62.style.setClasses(["opt-tmpl"]);
							output_62.style.css({
								"font-weight" : "700"
							});
							container.addChild(output_62, {
								"autoSize": "height",
								"width": "100px",
								"height": "40px"
							});
						})(group_30);
						container.addChild(group_30, {
							"autoSize": "height",
							"width": "1140px",
							"height": "80px"
						});
						var output_63 = new cpr.controls.Output();
						output_63.value = "mergedToIndexExpr";
						output_63.style.css({
							"color" : "#2263b3",
							"font-weight" : "700",
							"font-size" : "20px",
							"font-family" : "sans-serif , 'Malgun Gothic' , 'Noto Sans KR'"
						});
						container.addChild(output_63, {
							"autoSize": "none",
							"width": "1140px",
							"height": "38px"
						});
						var group_31 = new cpr.controls.Container();
						group_31.style.css({
							"background-color" : "#e9eff7",
							"background-image" : "none"
						});
						// Layout
						var verticalLayout_20 = new cpr.controls.layouts.VerticalLayout();
						verticalLayout_20.leftMargin = 30;
						verticalLayout_20.rightMargin = 30;
						verticalLayout_20.topMargin = 20;
						verticalLayout_20.bottomMargin = 20;
						group_31.setLayout(verticalLayout_20);
						(function(container){
							var output_64 = new cpr.controls.Output();
							output_64.value = "그리드에서 열 병합할 셀의 cellIndex를 반환하는 표현식입니다. 표현식 실행 결과 반환되는 cellIndex의 셀은 현재 셀보다 우측에 위치해야 합니다. (현재 셀의 collIndex보다 크거나 같은 collIndex를 갖는 셀이어야 합니다.)\r\n\r\n* mergedToIndexExpr 속성이 설정된 경우 mergedColumnName에 설정된 컬럼의 값이 해당 셀에 표시됩니다.";
							output_64.style.setClasses(["opt-tmpl"]);
							output_64.style.css({
								"font-weight" : "700"
							});
							container.addChild(output_64, {
								"autoSize": "height",
								"width": "100px",
								"height": "40px"
							});
						})(group_31);
						container.addChild(group_31, {
							"autoSize": "height",
							"width": "1140px",
							"height": "80px"
						});
						var group_32 = new cpr.controls.Container();
						group_32.style.setClasses(["form-box", "vertical"]);
						// Layout
						var formLayout_9 = new cpr.controls.layouts.FormLayout();
						formLayout_9.topMargin = "5px";
						formLayout_9.rightMargin = "5px";
						formLayout_9.bottomMargin = "5px";
						formLayout_9.leftMargin = "5px";
						formLayout_9.horizontalSpacing = "10px";
						formLayout_9.verticalSpacing = "10px";
						formLayout_9.horizontalSeparatorWidth = 1;
						formLayout_9.verticalSeparatorWidth = 1;
						formLayout_9.setColumns(["1fr", "300px", "80px"]);
						formLayout_9.setRows(["30px", "30px"]);
						formLayout_9.setCustomRowShade(0, "#edeff6");
						formLayout_9.setRowAutoSizing(1, true);
						group_32.setLayout(formLayout_9);
						(function(container){
							var output_65 = new cpr.controls.Output();
							output_65.value = "시나리오";
							output_65.style.setClasses(["label"]);
							output_65.style.css({
								"border-right-style" : "none",
								"background-color" : "transparent",
								"border-left-style" : "none",
								"padding-left" : "15px",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "left"
							});
							container.addChild(output_65, {
								"colIndex": 0,
								"rowIndex": 0
							});
							var output_66 = new cpr.controls.Output();
							output_66.value = "입력값";
							output_66.style.setClasses(["label"]);
							output_66.style.css({
								"border-right-style" : "none",
								"background-color" : "transparent",
								"border-left-style" : "none",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "center"
							});
							container.addChild(output_66, {
								"colIndex": 1,
								"rowIndex": 0
							});
							var output_67 = new cpr.controls.Output();
							output_67.value = "기능확인";
							output_67.style.setClasses(["label"]);
							output_67.style.css({
								"border-right-style" : "none",
								"background-color" : "transparent",
								"border-left-style" : "none",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "center"
							});
							container.addChild(output_67, {
								"colIndex": 2,
								"rowIndex": 0
							});
							var output_68 = new cpr.controls.Output();
							output_68.value = "1) 하단의 그리드에서 1, 5번째 컬럼이 가격부터 할인된 가격까지 병합된 것을 확인할 수 있습니다.\r\n2) 하단의 그리드에서 상품그룹에 생활용품과 가전제품이 4개 행씩 병합된 것을 확인할 수 있습니다.";
							output_68.style.setClasses(["opt-tmpl"]);
							output_68.style.css({
								"background-color" : "transparent",
								"border-right-style" : "none",
								"border-left-style" : "none",
								"padding-left" : "15px",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "left"
							});
							container.addChild(output_68, {
								"colIndex": 0,
								"rowIndex": 1
							});
							var button_8 = new cpr.controls.Button("btnInit4");
							button_8.value = "실행";
							button_8.style.setClasses(["btn-primary"]);
							container.addChild(button_8, {
								"colIndex": 2,
								"rowIndex": 1,
								"verticalAlign": "center",
								"height": 30
							});
							var output_69 = new cpr.controls.Output();
							output_69.value = "suppressedCellType = \"merged\"\r\nmergedToIndexExpr = \"rate == 0 ? 4 : 2\"\r\nsuppressible = true";
							output_69.style.css({
								"background-color" : "transparent",
								"border-right-style" : "none",
								"border-left-style" : "none",
								"padding-left" : "15px",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "left"
							});
							container.addChild(output_69, {
								"colIndex": 1,
								"rowIndex": 1
							});
						})(group_32);
						container.addChild(group_32, {
							"autoSize": "height",
							"width": "1220px",
							"height": "80px"
						});
						var group_33 = new cpr.controls.Container();
						group_33.style.setClasses(["attach-box"]);
						group_33.style.css({
							"border-right-style" : "solid",
							"border-top-width" : "1px",
							"border-bottom-color" : "#babfc7",
							"border-right-width" : "1px",
							"border-left-color" : "#babfc7",
							"border-right-color" : "#babfc7",
							"border-left-width" : "1px",
							"border-top-style" : "solid",
							"background-color" : "#e9e9e9",
							"border-left-style" : "solid",
							"border-bottom-width" : "1px",
							"border-top-color" : "#babfc7",
							"border-bottom-style" : "solid",
							"background-image" : "none"
						});
						// Layout
						var flowLayout_5 = new cpr.controls.layouts.FlowLayout();
						flowLayout_5.scrollable = false;
						flowLayout_5.horizontalSpacing = 20;
						flowLayout_5.verticalSpacing = 20;
						flowLayout_5.horizontalAlign = "center";
						flowLayout_5.verticalAlign = "middle";
						flowLayout_5.leftMargin = 20;
						flowLayout_5.rightMargin = 20;
						flowLayout_5.topMargin = 20;
						flowLayout_5.bottomMargin = 20;
						group_33.setLayout(flowLayout_5);
						(function(container){
							var group_34 = new cpr.controls.Container();
							// Layout
							var formLayout_10 = new cpr.controls.layouts.FormLayout();
							formLayout_10.topMargin = "0px";
							formLayout_10.rightMargin = "0px";
							formLayout_10.bottomMargin = "0px";
							formLayout_10.leftMargin = "0px";
							formLayout_10.horizontalSpacing = "5px";
							formLayout_10.verticalSpacing = "5px";
							formLayout_10.setColumns(["1fr"]);
							formLayout_10.setRows(["1fr", "20px"]);
							group_34.setLayout(formLayout_10);
							(function(container){
								var output_70 = new cpr.controls.Output();
								output_70.value = "<기능확인 컨트롤>";
								output_70.style.setClasses(["text-center"]);
								container.addChild(output_70, {
									"colIndex": 0,
									"rowIndex": 1
								});
								var grid_5 = new cpr.controls.Grid("sampleGrd4");
								grid_5.init({
									"dataSet": app.lookup("ds2"),
									"suppressedCellType": "merged",
									"columns": [
										{"width": "100px"},
										{"width": "100px"},
										{"width": "100px"},
										{"width": "100px"},
										{"width": "100px"}
									],
									"header": {
										"rows": [{"height": "24px"}],
										"cells": [
											{
												"constraint": {"rowIndex": 0, "colIndex": 1},
												"configurator": function(cell){
													cell.targetColumnName = "productName";
													cell.filterable = false;
													cell.sortable = false;
													cell.text = "상품명";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 2},
												"configurator": function(cell){
													cell.targetColumnName = "price";
													cell.filterable = false;
													cell.sortable = false;
													cell.text = "가격";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 3},
												"configurator": function(cell){
													cell.targetColumnName = "rate";
													cell.filterable = false;
													cell.sortable = false;
													cell.text = "할인율";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 4},
												"configurator": function(cell){
													cell.targetColumnName = "ratedprice";
													cell.text = "할인된가격";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 0},
												"configurator": function(cell){
													cell.targetColumnName = "productGroup";
													cell.text = "상품그룹";
												}
											}
										]
									},
									"detail": {
										"rows": [{"height": "24px"}],
										"cells": [
											{
												"constraint": {"rowIndex": 0, "colIndex": 1},
												"configurator": function(cell){
													cell.columnName = "productName";
													cell.control = (function(){
														var output_71 = new cpr.controls.Output();
														output_71.value = "Output";
														output_71.style.css({
															"text-align" : "center"
														});
														output_71.bind("value").toDataColumn("productName");
														return output_71;
													})();
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 2},
												"configurator": function(cell){
													cell.columnName = "price";
													cell.mergeToIndexExpr = "rate ==0 ? 4 : 2";
													cell.control = (function(){
														var output_72 = new cpr.controls.Output();
														output_72.value = "Output";
														output_72.dataType = "number";
														output_72.format = "s#,##0";
														output_72.displayExp = "text + \"원\"";
														output_72.style.css({
															"text-align" : "center"
														});
														output_72.bind("value").toDataColumn("price");
														return output_72;
													})();
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 3},
												"configurator": function(cell){
													cell.columnName = "rate";
													cell.control = (function(){
														var output_73 = new cpr.controls.Output();
														output_73.value = "Output";
														output_73.dataType = "number";
														output_73.displayExp = "text + \"%\"";
														output_73.style.css({
															"text-align" : "center"
														});
														output_73.bind("value").toDataColumn("rate");
														return output_73;
													})();
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 4},
												"configurator": function(cell){
													cell.columnName = "ratedprice";
													cell.mergeToIndexExpr = "rate ==0 ? 4:3";
													cell.control = (function(){
														var output_74 = new cpr.controls.Output();
														output_74.value = "Output";
														output_74.dataType = "number";
														output_74.format = "s#,##0";
														output_74.displayExp = "text + \"원\"";
														output_74.style.css({
															"text-align" : "center"
														});
														output_74.bind("value").toDataColumn("ratedprice");
														return output_74;
													})();
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 0},
												"configurator": function(cell){
													cell.columnName = "productGroup";
													cell.suppressible = true;
													cell.control = (function(){
														var output_75 = new cpr.controls.Output();
														output_75.value = "Output";
														output_75.bind("value").toDataColumn("productGroup");
														return output_75;
													})();
												}
											}
										]
									}
								});
								container.addChild(grid_5, {
									"colIndex": 0,
									"rowIndex": 0
								});
							})(group_34);
							container.addChild(group_34, {
								"autoSize": "none",
								"width": "700px",
								"height": "300px"
							});
						})(group_33);
						container.addChild(group_33, {
							"autoSize": "height",
							"width": "1220px",
							"height": "337px"
						});
					})(group_28);
					container.addChild(group_28, {
						"autoSize": "height",
						"width": "1220px",
						"height": "1022px"
					});
					var group_35 = new cpr.controls.Container("grp1");
					group_35.style.setClasses(["card-inner"]);
					// Layout
					var verticalLayout_21 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_21.spacing = 25;
					verticalLayout_21.leftMargin = 40;
					verticalLayout_21.rightMargin = 40;
					verticalLayout_21.topMargin = 20;
					verticalLayout_21.bottomMargin = 40;
					group_35.setLayout(verticalLayout_21);
					(function(container){
						var output_76 = new cpr.controls.Output();
						output_76.value = "autoRowHeight";
						output_76.style.css({
							"color" : "#2263b3",
							"font-weight" : "700",
							"font-size" : "20px",
							"font-family" : "sans-serif , 'Malgun Gothic' , 'Noto Sans KR'"
						});
						container.addChild(output_76, {
							"autoSize": "none",
							"width": "1220px",
							"height": "38px"
						});
						var group_36 = new cpr.controls.Container("grp2");
						group_36.style.css({
							"background-color" : "#e9eff7",
							"background-image" : "none"
						});
						// Layout
						var verticalLayout_22 = new cpr.controls.layouts.VerticalLayout();
						verticalLayout_22.leftMargin = 30;
						verticalLayout_22.rightMargin = 30;
						verticalLayout_22.topMargin = 20;
						verticalLayout_22.bottomMargin = 20;
						group_36.setLayout(verticalLayout_22);
						(function(container){
							var output_77 = new cpr.controls.Output();
							output_77.value = "셀 데이터 길이에 맞게 행 높이를 자동 조절하는 속성입니다. 최솟값은 처음 설정한 행 높이가 됩니다. 기본값은 none이며 all, cellIndex로 변경이 가능합니다. (기본 셀, 아웃풋, 텍스트 에어리어, HTML스니펫, UDC입니다.)\r\n- none : 해당 기능을 사용하지 않고, 고정 높이로 설정됩니다.\r\n- all : 모든 컬럼의 데이터 길이에 맞게 행 높이를 자동조절합니다.\r\n- cellIndex : 특정 셀 인덱스를 지정 시, 해당 셀의 데이터 길이에 맞게 행 높이를 자동조절합니다. 콤마(,) 구분자를 통해 여러 컬럼을 설정할 수 있습니다.";
							output_77.style.setClasses(["opt-tmpl"]);
							output_77.style.css({
								"font-weight" : "700"
							});
							container.addChild(output_77, {
								"autoSize": "height",
								"width": "100px",
								"height": "40px"
							});
						})(group_36);
						container.addChild(group_36, {
							"autoSize": "height",
							"width": "1140px",
							"height": "80px"
						});
						var group_37 = new cpr.controls.Container("grp4");
						group_37.style.setClasses(["form-box", "vertical"]);
						// Layout
						var formLayout_11 = new cpr.controls.layouts.FormLayout();
						formLayout_11.topMargin = "5px";
						formLayout_11.rightMargin = "5px";
						formLayout_11.bottomMargin = "5px";
						formLayout_11.leftMargin = "5px";
						formLayout_11.horizontalSpacing = "10px";
						formLayout_11.verticalSpacing = "10px";
						formLayout_11.horizontalSeparatorWidth = 1;
						formLayout_11.verticalSeparatorWidth = 1;
						formLayout_11.setColumns(["1fr", "2fr"]);
						formLayout_11.setCustomColumnShade(0, "#edeff6");
						formLayout_11.setRows(["30px", "30px", "30px"]);
						formLayout_11.setRowAutoSizing(1, true);
						formLayout_11.setRowAutoSizing(2, true);
						group_37.setLayout(formLayout_11);
						(function(container){
							var output_78 = new cpr.controls.Output();
							output_78.value = "type";
							output_78.style.setClasses(["label"]);
							output_78.style.css({
								"border-right-style" : "none",
								"background-color" : "transparent",
								"border-left-style" : "none",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "center"
							});
							container.addChild(output_78, {
								"colIndex": 0,
								"rowIndex": 0
							});
							var output_79 = new cpr.controls.Output();
							output_79.value = "get";
							output_79.style.setClasses(["label"]);
							output_79.style.css({
								"border-right-style" : "none",
								"background-color" : "transparent",
								"border-left-style" : "none",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "center"
							});
							container.addChild(output_79, {
								"colIndex": 0,
								"rowIndex": 1
							});
							var output_80 = new cpr.controls.Output();
							output_80.value = "set";
							output_80.style.setClasses(["label"]);
							output_80.style.css({
								"border-right-style" : "none",
								"background-color" : "transparent",
								"border-left-style" : "none",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "center"
							});
							container.addChild(output_80, {
								"colIndex": 0,
								"rowIndex": 2
							});
							var output_81 = new cpr.controls.Output();
							output_81.value = "셀 데이터 길이에 맞게 행 높이를 자동조절 설정 정보를 반환합니다.";
							output_81.style.css({
								"background-color" : "transparent",
								"border-right-style" : "none",
								"border-left-style" : "none",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "center"
							});
							container.addChild(output_81, {
								"colIndex": 1,
								"rowIndex": 1
							});
							var output_82 = new cpr.controls.Output();
							output_82.value = "셀 데이터 길이에 맞게 행 높이를 자동조절할 지 여부를 설정합니다.";
							output_82.style.css({
								"background-color" : "transparent",
								"border-right-style" : "none",
								"border-left-style" : "none",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "center"
							});
							container.addChild(output_82, {
								"colIndex": 1,
								"rowIndex": 2
							});
							var output_83 = new cpr.controls.Output();
							output_83.value = "String";
							output_83.style.css({
								"background-color" : "transparent",
								"border-right-style" : "none",
								"border-left-style" : "none",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "center"
							});
							container.addChild(output_83, {
								"colIndex": 1,
								"rowIndex": 0
							});
						})(group_37);
						container.addChild(group_37, {
							"autoSize": "height",
							"width": "1140px",
							"height": "125px"
						});
						var group_38 = new cpr.controls.Container("grp5");
						group_38.style.setClasses(["form-box", "vertical"]);
						// Layout
						var formLayout_12 = new cpr.controls.layouts.FormLayout();
						formLayout_12.topMargin = "5px";
						formLayout_12.rightMargin = "5px";
						formLayout_12.bottomMargin = "5px";
						formLayout_12.leftMargin = "5px";
						formLayout_12.horizontalSpacing = "10px";
						formLayout_12.verticalSpacing = "10px";
						formLayout_12.horizontalSeparatorWidth = 1;
						formLayout_12.verticalSeparatorWidth = 1;
						formLayout_12.setColumns(["1fr", "200px", "80px"]);
						formLayout_12.setRows(["30px", "80px"]);
						formLayout_12.setCustomRowShade(0, "#edeff6");
						formLayout_12.setRowAutoSizing(1, true);
						group_38.setLayout(formLayout_12);
						(function(container){
							var output_84 = new cpr.controls.Output();
							output_84.value = "시나리오";
							output_84.style.setClasses(["label"]);
							output_84.style.css({
								"border-right-style" : "none",
								"background-color" : "transparent",
								"border-left-style" : "none",
								"padding-left" : "15px",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "left"
							});
							container.addChild(output_84, {
								"colIndex": 0,
								"rowIndex": 0
							});
							var output_85 = new cpr.controls.Output();
							output_85.value = "입력값";
							output_85.style.setClasses(["label"]);
							output_85.style.css({
								"border-right-style" : "none",
								"background-color" : "transparent",
								"border-left-style" : "none",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "center"
							});
							container.addChild(output_85, {
								"colIndex": 1,
								"rowIndex": 0
							});
							var output_86 = new cpr.controls.Output();
							output_86.value = "기능확인";
							output_86.style.setClasses(["label"]);
							output_86.style.css({
								"border-right-style" : "none",
								"background-color" : "transparent",
								"border-left-style" : "none",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "center"
							});
							container.addChild(output_86, {
								"colIndex": 2,
								"rowIndex": 0
							});
							var output_87 = new cpr.controls.Output();
							output_87.value = "1) 우측의 입력값을 선택하고 실행 버튼을 클릭합니다.\r\n2) 해당 속성에 따라 셀 데이터에 따라 행 높이가 달라지는 것을 확인할 수 있습니다.";
							output_87.style.setClasses(["opt-tmpl"]);
							output_87.style.css({
								"background-color" : "transparent",
								"border-right-style" : "none",
								"border-left-style" : "none",
								"padding-left" : "15px",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "left"
							});
							container.addChild(output_87, {
								"colIndex": 0,
								"rowIndex": 1
							});
							var button_9 = new cpr.controls.Button("btnInit3");
							button_9.value = "실행";
							button_9.style.setClasses(["btn-primary"]);
							if(typeof onBtnInit3Click == "function") {
								button_9.addEventListener("click", onBtnInit3Click);
							}
							container.addChild(button_9, {
								"colIndex": 2,
								"rowIndex": 1,
								"verticalAlign": "center",
								"height": 30
							});
							var comboBox_1 = new cpr.controls.ComboBox("sampleCmb1");
							comboBox_1.value = "all";
							(function(comboBox_1){
								comboBox_1.addItem(new cpr.controls.Item("none", "none"));
								comboBox_1.addItem(new cpr.controls.Item("all", "all"));
							})(comboBox_1);
							container.addChild(comboBox_1, {
								"colIndex": 1,
								"rowIndex": 1
							});
						})(group_38);
						container.addChild(group_38, {
							"autoSize": "height",
							"width": "1140px",
							"height": "142px"
						});
						var group_39 = new cpr.controls.Container("grp6");
						group_39.style.setClasses(["attach-box"]);
						group_39.style.css({
							"border-right-style" : "solid",
							"border-top-width" : "1px",
							"border-bottom-color" : "#babfc7",
							"border-right-width" : "1px",
							"border-left-color" : "#babfc7",
							"border-right-color" : "#babfc7",
							"border-left-width" : "1px",
							"border-top-style" : "solid",
							"background-color" : "#e9e9e9",
							"border-left-style" : "solid",
							"border-bottom-width" : "1px",
							"border-top-color" : "#babfc7",
							"border-bottom-style" : "solid",
							"background-image" : "none"
						});
						// Layout
						var flowLayout_6 = new cpr.controls.layouts.FlowLayout();
						flowLayout_6.scrollable = false;
						flowLayout_6.horizontalSpacing = 20;
						flowLayout_6.verticalSpacing = 20;
						flowLayout_6.horizontalAlign = "center";
						flowLayout_6.verticalAlign = "middle";
						flowLayout_6.leftMargin = 20;
						flowLayout_6.rightMargin = 20;
						flowLayout_6.topMargin = 20;
						flowLayout_6.bottomMargin = 20;
						group_39.setLayout(flowLayout_6);
						(function(container){
							var group_40 = new cpr.controls.Container("grp7");
							// Layout
							var formLayout_13 = new cpr.controls.layouts.FormLayout();
							formLayout_13.topMargin = "0px";
							formLayout_13.rightMargin = "0px";
							formLayout_13.bottomMargin = "0px";
							formLayout_13.leftMargin = "0px";
							formLayout_13.horizontalSpacing = "5px";
							formLayout_13.verticalSpacing = "5px";
							formLayout_13.setColumns(["1fr"]);
							formLayout_13.setRows(["1fr", "20px"]);
							group_40.setLayout(formLayout_13);
							(function(container){
								var output_88 = new cpr.controls.Output();
								output_88.value = "<기능확인 컨트롤>";
								output_88.style.setClasses(["text-center"]);
								container.addChild(output_88, {
									"colIndex": 0,
									"rowIndex": 1
								});
								var grid_6 = new cpr.controls.Grid("defaultGrid2");
								grid_6.init({
									"dataSet": app.lookup("dsList"),
									"columns": [
										{"width": "50px"},
										{"width": "100px"},
										{"width": "100px"},
										{"width": "100px"},
										{"width": "100px"},
										{"width": "100px"},
										{"width": "100px"}
									],
									"header": {
										"rows": [{"height": "24px"}],
										"cells": [
											{
												"constraint": {"rowIndex": 0, "colIndex": 0},
												"configurator": function(cell){
													cell.filterable = false;
													cell.sortable = false;
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 1},
												"configurator": function(cell){
													cell.targetColumnName = "empId";
													cell.filterable = false;
													cell.sortable = false;
													cell.text = "empId";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 2},
												"configurator": function(cell){
													cell.targetColumnName = "empNm";
													cell.filterable = false;
													cell.sortable = false;
													cell.text = "empNm";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 3},
												"configurator": function(cell){
													cell.targetColumnName = "email";
													cell.filterable = false;
													cell.sortable = false;
													cell.text = "email";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 4},
												"configurator": function(cell){
													cell.targetColumnName = "phone";
													cell.filterable = false;
													cell.sortable = false;
													cell.text = "phone";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 5},
												"configurator": function(cell){
													cell.targetColumnName = "address";
													cell.filterable = false;
													cell.sortable = false;
													cell.text = "address";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 6},
												"configurator": function(cell){
													cell.targetColumnName = "rgstDt";
													cell.filterable = false;
													cell.sortable = false;
													cell.text = "rgstDt";
												}
											}
										]
									},
									"detail": {
										"rows": [{"height": "24px"}],
										"cells": [
											{
												"constraint": {"rowIndex": 0, "colIndex": 0},
												"configurator": function(cell){
													cell.columnType = "rowindex";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 1},
												"configurator": function(cell){
													cell.columnName = "empId";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 2},
												"configurator": function(cell){
													cell.columnName = "empNm";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 3},
												"configurator": function(cell){
													cell.columnName = "email";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 4},
												"configurator": function(cell){
													cell.columnName = "phone";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 5},
												"configurator": function(cell){
													cell.columnName = "address";
													cell.control = (function(){
														var output_89 = new cpr.controls.Output();
														output_89.value = "Output";
														output_89.bind("value").toDataColumn("address");
														return output_89;
													})();
													cell.controlConstraint = {};
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 6},
												"configurator": function(cell){
													cell.columnName = "rgstDt";
												}
											}
										]
									}
								});
								container.addChild(grid_6, {
									"colIndex": 0,
									"rowIndex": 0
								});
							})(group_40);
							container.addChild(group_40, {
								"autoSize": "none",
								"width": "800px",
								"height": "300px"
							});
						})(group_39);
						container.addChild(group_39, {
							"autoSize": "height",
							"width": "1220px",
							"height": "337px"
						});
					})(group_35);
					container.addChild(group_35, {
						"autoSize": "height",
						"width": "1220px",
						"height": "1200px"
					});
				})(group_6);
				container.addChild(group_6, {
					"autoSize": "height",
					"width": "1100px",
					"height": "6700px"
				});
			})(group_2);
			container.addChild(group_2, {
				"autoSize": "height",
				"width": "400px",
				"height": "7600px"
			});
		}
	});
	app.title = "그리드 관련 속성";
	cpr.core.Platform.INSTANCE.register(app);
})();
