/*
 * App URI: app/exam/controls/Calendar
 * Source Location: app/exam/controls/Calendar.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/exam/controls/Calendar", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * Calendar.js
			 * Created at 2022. 3. 7. 오후 2:43:40.
			 *
			 * @author 1amthomas
			 ************************************************/
			
			/*
			 * "실행" 버튼(btnInit)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnInitClick(e){
				var sampleCal1 = app.lookup("sampleCal1");
				sampleCal1.defaultDate = new Date("2022-03-10");
				sampleCal1.minDate = new Date("2022-01-01");
				sampleCal1.maxDate = new Date("2022-12-31");
				sampleCal1.focus();
			}
			
			/*
			 * "실행" 버튼(btnInit2)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnInit2Click(e){
				var sampleCal2 = app.lookup("sampleCal2");
				sampleCal2.locale = "en";
				sampleCal2.headerFormat = 'YY/MM';
				sampleCal2.footerFormat = 'MM/DD/YYYY';
				sampleCal2.focus();
			}
			
			/*
			 * "실행" 버튼(btnInit3)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnInit3Click(e){
				var sampleCal3 = app.lookup("sampleCal3");
				sampleCal3.headerVisible = false;
				sampleCal3.footerVisible = false;
				sampleCal3.selectionType = "multi";
				sampleCal3.focus();
			}
			
			/*
			 * "실행" 버튼(btnInit4)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnInit4Click(e){
				var sampleCal4 = app.lookup("sampleCal4");
				
				sampleCal4.addAnniversary({
					date: "*1003",
					label: "개천절"
				});
				sampleCal4.addAnniversary({
					date: "*1009",
					label: "한글날"
				});
				sampleCal4.addAnniversary({
					date: "*0815",
					label: "광복절"
				});
				
				sampleCal4.showAnniversary = true;
				sampleCal4.enabledDateExp = "getDate() != 19";
				sampleCal4.redraw();
			}
			
			/*
			 * "실행" 버튼(btnInit5)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnInit5Click(e){
				var vsSelectFir = app.lookup("sampleCmb1").value;
				var vsSelectSec = app.lookup("sampleCmb2").value;
				if(vsSelectFir == null || vsSelectSec == null){
					alert("입력값을 먼저 선택하세요");
					return false;
				}
				var vaButtons = vsSelectSec.split(',');
			
				app.lookup("sampleCal5").datePosition = vsSelectFir;
				app.lookup("sampleCal5").headerButtons = vaButtons;
			
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns": [
					{"name": "label"},
					{
						"name": "start",
						"dataType": "string"
					},
					{"name": "end"},
					{"name": "tooltip"},
					{"name": "color"}
				],
				"rows": [
					{"label": "W11", "start": "2022-03-10", "end": "2022-03-14", "tooltip": "test1", "color": "red"},
					{"label": "W12", "start": "2022-04-10", "end": "2022-04-14", "tooltip": "test2", "color": "pink"},
					{"label": "W13", "start": "2022-05-10", "end": "2022-05-14", "tooltip": "test3", "color": "skyblue"}
				]
			});
			app.register(dataSet_1);
			
			app.supportMedia("all and (min-width: 1320px)", "eXFrame");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1319px)", "default");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpHeader");
			// Layout
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_2.spacing = 0;
			group_1.setLayout(verticalLayout_2);
			(function(container){
				var userDefinedControl_1 = new udc.com.appHeader("appheader1");
				userDefinedControl_1.initializeYn = "N";
				userDefinedControl_1.searchBoxId = "grpHeader";
				container.addChild(userDefinedControl_1, {
					"width": "500px",
					"height": "30px"
				});
			})(group_1);
			container.addChild(group_1, {
				"autoSize": "height",
				"width": "400px",
				"height": "30px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var verticalLayout_3 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_3.spacing = 20;
			verticalLayout_3.leftMargin = 50;
			verticalLayout_3.rightMargin = 50;
			verticalLayout_3.topMargin = 20;
			verticalLayout_3.bottomMargin = 60;
			group_2.setLayout(verticalLayout_3);
			(function(container){
				var group_3 = new cpr.controls.Container();
				// Layout
				var verticalLayout_4 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_4.spacing = 30;
				verticalLayout_4.leftMargin = 0;
				verticalLayout_4.rightMargin = 0;
				verticalLayout_4.topMargin = 20;
				verticalLayout_4.bottomMargin = 40;
				group_3.setLayout(verticalLayout_4);
				(function(container){
					var output_1 = new cpr.controls.Output();
					output_1.value = "캘린더";
					output_1.style.css({
						"font-weight" : "700",
						"font-size" : "2.5rem",
						"font-family" : "sans-serif , 'Malgun Gothic' , 'Noto Sans KR'"
					});
					container.addChild(output_1, {
						"autoSize": "height",
						"width": "100px",
						"height": "45px"
					});
					var output_2 = new cpr.controls.Output();
					output_2.value = "날짜를 입력하는 컨트롤입니다.\r\n\r\n달력으로 날짜를 선택합니다. 일별, 월별, 연도별 달력을 선택하여 보여줄 수 있습니다.";
					container.addChild(output_2, {
						"autoSize": "height",
						"width": "100px",
						"height": "150px"
					});
					var group_4 = new cpr.controls.Container();
					group_4.style.setClasses(["attach-box"]);
					group_4.style.css({
						"border-right-style" : "solid",
						"border-top-width" : "1px",
						"border-bottom-color" : "#babfc7",
						"border-right-width" : "1px",
						"border-left-color" : "#babfc7",
						"border-right-color" : "#babfc7",
						"border-left-width" : "1px",
						"border-top-style" : "solid",
						"background-color" : "#e9e9e9",
						"border-left-style" : "solid",
						"border-bottom-width" : "1px",
						"border-top-color" : "#babfc7",
						"border-bottom-style" : "solid"
					});
					// Layout
					var flowLayout_1 = new cpr.controls.layouts.FlowLayout();
					flowLayout_1.scrollable = false;
					flowLayout_1.horizontalSpacing = 40;
					flowLayout_1.verticalSpacing = 20;
					flowLayout_1.horizontalAlign = "center";
					flowLayout_1.verticalAlign = "middle";
					flowLayout_1.leftMargin = 20;
					flowLayout_1.rightMargin = 20;
					flowLayout_1.topMargin = 20;
					flowLayout_1.bottomMargin = 20;
					group_4.setLayout(flowLayout_1);
					(function(container){
						var group_5 = new cpr.controls.Container();
						// Layout
						var formLayout_1 = new cpr.controls.layouts.FormLayout();
						formLayout_1.topMargin = "0px";
						formLayout_1.rightMargin = "0px";
						formLayout_1.bottomMargin = "0px";
						formLayout_1.leftMargin = "0px";
						formLayout_1.horizontalSpacing = "5px";
						formLayout_1.verticalSpacing = "5px";
						formLayout_1.setColumns(["1fr"]);
						formLayout_1.setRows(["1fr", "20px"]);
						group_5.setLayout(formLayout_1);
						(function(container){
							var output_3 = new cpr.controls.Output();
							output_3.value = "<기본 인풋 컨트롤>";
							output_3.style.setClasses(["text-center"]);
							container.addChild(output_3, {
								"colIndex": 0,
								"rowIndex": 1
							});
							var calendar_1 = new cpr.controls.Calendar("defaultCal");
							(function(calendar_1){
							})(calendar_1);
							container.addChild(calendar_1, {
								"colIndex": 0,
								"rowIndex": 0
							});
						})(group_5);
						container.addChild(group_5, {
							"autoSize": "none",
							"width": "300px",
							"height": "300px"
						});
						var group_6 = new cpr.controls.Container();
						// Layout
						var formLayout_2 = new cpr.controls.layouts.FormLayout();
						formLayout_2.scrollable = true;
						formLayout_2.topMargin = "0px";
						formLayout_2.rightMargin = "0px";
						formLayout_2.bottomMargin = "0px";
						formLayout_2.leftMargin = "0px";
						formLayout_2.horizontalSpacing = "5px";
						formLayout_2.verticalSpacing = "5px";
						formLayout_2.setColumns(["1fr"]);
						formLayout_2.setRows(["1fr", "20px"]);
						group_6.setLayout(formLayout_2);
						(function(container){
							var output_4 = new cpr.controls.Output();
							output_4.value = "<컨트롤 동적 생성 코드>";
							output_4.style.setClasses(["text-center"]);
							container.addChild(output_4, {
								"colIndex": 0,
								"rowIndex": 1
							});
							var userDefinedControl_2 = new udc.tmp.Ace("ace1");
							userDefinedControl_2.value = "var calendar = app.lookup('calendar1');\r\n\r\n/* 일별 달력으로 설정합니다. */\r\ncalendar.calendarType = \"yearmonthdate\";\r\n\r\ncalendar.defaultDate = new Date('2022-03-07');";
							container.addChild(userDefinedControl_2, {
								"colIndex": 0,
								"rowIndex": 0
							});
						})(group_6);
						container.addChild(group_6, {
							"autoSize": "height",
							"width": "450px",
							"height": "300px"
						});
					})(group_4);
					container.addChild(group_4, {
						"autoSize": "height",
						"width": "1220px",
						"height": "381px"
					});
				})(group_3);
				container.addChild(group_3, {
					"autoSize": "height",
					"width": "400px",
					"height": "700px"
				});
				var group_7 = new cpr.controls.Container();
				group_7.style.setClasses(["card-inner"]);
				// Layout
				var verticalLayout_5 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_5.spacing = 30;
				verticalLayout_5.leftMargin = 0;
				verticalLayout_5.rightMargin = 0;
				verticalLayout_5.topMargin = 20;
				verticalLayout_5.bottomMargin = 40;
				group_7.setLayout(verticalLayout_5);
				(function(container){
					var output_5 = new cpr.controls.Output();
					output_5.value = "자주 사용되는 속성";
					output_5.style.setClasses(["h1", "pl-3", "bg-primary", "text-white"]);
					output_5.style.css({
						"font-weight" : "700",
						"font-size" : "26px",
						"font-family" : "sans-serif , 'Malgun Gothic' , 'Noto Sans KR'"
					});
					container.addChild(output_5, {
						"autoSize": "none",
						"width": "1220px",
						"height": "38px"
					});
					var output_6 = new cpr.controls.Output();
					output_6.value = "자주 사용되는 속성과 시나리오를 통한 예제를 확인할 수 있습니다. 자세한 사항은 Help Contents를 참조하시기 바랍니다.";
					container.addChild(output_6, {
						"autoSize": "height",
						"width": "100px",
						"height": "141px"
					});
					var group_8 = new cpr.controls.Container();
					group_8.style.setClasses(["card-inner"]);
					// Layout
					var verticalLayout_6 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_6.spacing = 25;
					verticalLayout_6.leftMargin = 40;
					verticalLayout_6.rightMargin = 40;
					verticalLayout_6.topMargin = 20;
					verticalLayout_6.bottomMargin = 40;
					group_8.setLayout(verticalLayout_6);
					(function(container){
						var output_7 = new cpr.controls.Output();
						output_7.value = "defaultDate, minDate, maxDate";
						output_7.style.css({
							"color" : "#2263b3",
							"font-weight" : "700",
							"font-size" : "20px",
							"font-family" : "sans-serif , 'Malgun Gothic' , 'Noto Sans KR'"
						});
						container.addChild(output_7, {
							"autoSize": "none",
							"width": "1220px",
							"height": "38px"
						});
						var group_9 = new cpr.controls.Container();
						group_9.style.css({
							"background-color" : "#e9eff7",
							"background-image" : "none"
						});
						// Layout
						var verticalLayout_7 = new cpr.controls.layouts.VerticalLayout();
						verticalLayout_7.leftMargin = 30;
						verticalLayout_7.rightMargin = 30;
						verticalLayout_7.topMargin = 20;
						verticalLayout_7.bottomMargin = 20;
						group_9.setLayout(verticalLayout_7);
						(function(container){
							var output_8 = new cpr.controls.Output();
							output_8.value = "defaultDate : 캘린더의 기본 날짜를 설정하는 속성입니다. 해당 속성의 기본값은 페이지를 로딩한 시점의 날짜입니다.\r\n\r\nminDate : 캘린더에서 선택할 수 있는 최소 날짜를 설정하는 속성입니다. 기본값은 1900.01.01입니다.\r\n\r\nmaxDate : 캘린더에서 선택할 수 있는 최대 날짜를 설정하는 속성입니다. 기본값은 9999.12.31입니다.";
							output_8.style.css({
								"font-weight" : "700"
							});
							container.addChild(output_8, {
								"autoSize": "height",
								"width": "100px",
								"height": "40px"
							});
						})(group_9);
						container.addChild(group_9, {
							"autoSize": "height",
							"width": "1140px",
							"height": "80px"
						});
						var group_10 = new cpr.controls.Container();
						group_10.style.setClasses(["form-box", "vertical"]);
						// Layout
						var formLayout_3 = new cpr.controls.layouts.FormLayout();
						formLayout_3.topMargin = "5px";
						formLayout_3.rightMargin = "5px";
						formLayout_3.bottomMargin = "5px";
						formLayout_3.leftMargin = "5px";
						formLayout_3.horizontalSpacing = "10px";
						formLayout_3.verticalSpacing = "10px";
						formLayout_3.horizontalSeparatorWidth = 1;
						formLayout_3.verticalSeparatorWidth = 1;
						formLayout_3.setColumns(["1fr", "350px", "80px"]);
						formLayout_3.setRows(["30px", "30px"]);
						formLayout_3.setCustomRowShade(0, "#edeff6");
						formLayout_3.setRowAutoSizing(1, true);
						group_10.setLayout(formLayout_3);
						(function(container){
							var output_9 = new cpr.controls.Output();
							output_9.value = "시나리오";
							output_9.style.setClasses(["label"]);
							output_9.style.css({
								"border-right-style" : "none",
								"background-color" : "transparent",
								"border-left-style" : "none",
								"padding-left" : "15px",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "left"
							});
							container.addChild(output_9, {
								"colIndex": 0,
								"rowIndex": 0
							});
							var output_10 = new cpr.controls.Output();
							output_10.value = "입력값";
							output_10.style.setClasses(["label"]);
							output_10.style.css({
								"border-right-style" : "none",
								"background-color" : "transparent",
								"border-left-style" : "none",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "center"
							});
							container.addChild(output_10, {
								"colIndex": 1,
								"rowIndex": 0
							});
							var output_11 = new cpr.controls.Output();
							output_11.value = "기능확인";
							output_11.style.setClasses(["label"]);
							output_11.style.css({
								"border-right-style" : "none",
								"background-color" : "transparent",
								"border-left-style" : "none",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "center"
							});
							container.addChild(output_11, {
								"colIndex": 2,
								"rowIndex": 0
							});
							var output_12 = new cpr.controls.Output();
							output_12.value = "1) 우측의 실행 버튼을 클릭합니다.\r\n2) 아래의 컨트롤에서 입력값들이 설정된 캘린더 속성을 확인할 수 있습니다.";
							output_12.style.css({
								"background-color" : "transparent",
								"border-right-style" : "none",
								"border-left-style" : "none",
								"padding-left" : "15px",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "left"
							});
							container.addChild(output_12, {
								"colIndex": 0,
								"rowIndex": 1
							});
							var button_1 = new cpr.controls.Button("btnInit");
							button_1.value = "실행";
							button_1.style.setClasses(["btn-primary"]);
							if(typeof onBtnInitClick == "function") {
								button_1.addEventListener("click", onBtnInitClick);
							}
							container.addChild(button_1, {
								"colIndex": 2,
								"rowIndex": 1,
								"verticalAlign": "center",
								"height": 30
							});
							var output_13 = new cpr.controls.Output();
							output_13.value = "defaultDate = new Date(\"2022-03-10\");\r\nminDate = new Date(\"2022-01-01\");\r\nmaxDate = new Date(\"2022-12-31\");";
							output_13.style.css({
								"background-color" : "transparent",
								"border-right-style" : "none",
								"border-left-style" : "none",
								"padding-left" : "15px",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "left"
							});
							container.addChild(output_13, {
								"colIndex": 1,
								"rowIndex": 1
							});
						})(group_10);
						container.addChild(group_10, {
							"autoSize": "height",
							"width": "1220px",
							"height": "80px"
						});
						var group_11 = new cpr.controls.Container();
						group_11.style.setClasses(["attach-box"]);
						group_11.style.css({
							"border-right-style" : "solid",
							"border-top-width" : "1px",
							"border-bottom-color" : "#babfc7",
							"border-right-width" : "1px",
							"border-left-color" : "#babfc7",
							"border-right-color" : "#babfc7",
							"border-left-width" : "1px",
							"border-top-style" : "solid",
							"background-color" : "#e9e9e9",
							"border-left-style" : "solid",
							"border-bottom-width" : "1px",
							"border-top-color" : "#babfc7",
							"border-bottom-style" : "solid",
							"background-image" : "none"
						});
						// Layout
						var flowLayout_2 = new cpr.controls.layouts.FlowLayout();
						flowLayout_2.scrollable = false;
						flowLayout_2.horizontalSpacing = 20;
						flowLayout_2.verticalSpacing = 20;
						flowLayout_2.horizontalAlign = "center";
						flowLayout_2.verticalAlign = "middle";
						flowLayout_2.leftMargin = 20;
						flowLayout_2.rightMargin = 20;
						flowLayout_2.topMargin = 20;
						flowLayout_2.bottomMargin = 20;
						group_11.setLayout(flowLayout_2);
						(function(container){
							var group_12 = new cpr.controls.Container();
							// Layout
							var formLayout_4 = new cpr.controls.layouts.FormLayout();
							formLayout_4.topMargin = "0px";
							formLayout_4.rightMargin = "0px";
							formLayout_4.bottomMargin = "0px";
							formLayout_4.leftMargin = "0px";
							formLayout_4.horizontalSpacing = "5px";
							formLayout_4.verticalSpacing = "5px";
							formLayout_4.setColumns(["1fr"]);
							formLayout_4.setRows(["1fr", "20px"]);
							group_12.setLayout(formLayout_4);
							(function(container){
								var output_14 = new cpr.controls.Output();
								output_14.value = "<기능 확인 컨트롤>";
								output_14.style.setClasses(["text-center"]);
								container.addChild(output_14, {
									"colIndex": 0,
									"rowIndex": 1
								});
								var calendar_2 = new cpr.controls.Calendar("sampleCal1");
								(function(calendar_2){
								})(calendar_2);
								container.addChild(calendar_2, {
									"colIndex": 0,
									"rowIndex": 0
								});
							})(group_12);
							container.addChild(group_12, {
								"autoSize": "none",
								"width": "300px",
								"height": "300px"
							});
						})(group_11);
						container.addChild(group_11, {
							"autoSize": "height",
							"width": "1220px",
							"height": "337px"
						});
					})(group_8);
					container.addChild(group_8, {
						"autoSize": "height",
						"width": "1220px",
						"height": "780px"
					});
					var group_13 = new cpr.controls.Container();
					group_13.style.setClasses(["card-inner"]);
					// Layout
					var verticalLayout_8 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_8.spacing = 15;
					verticalLayout_8.leftMargin = 40;
					verticalLayout_8.rightMargin = 40;
					verticalLayout_8.topMargin = 20;
					verticalLayout_8.bottomMargin = 40;
					group_13.setLayout(verticalLayout_8);
					(function(container){
						var output_15 = new cpr.controls.Output();
						output_15.value = "locale, headerFormat, footerFormat";
						output_15.style.css({
							"color" : "#2263b3",
							"font-weight" : "700",
							"font-size" : "20px",
							"font-family" : "sans-serif , 'Malgun Gothic' , 'Noto Sans KR'"
						});
						container.addChild(output_15, {
							"autoSize": "none",
							"width": "1220px",
							"height": "38px"
						});
						var group_14 = new cpr.controls.Container();
						group_14.style.css({
							"background-color" : "#e9eff7",
							"background-image" : "none"
						});
						// Layout
						var verticalLayout_9 = new cpr.controls.layouts.VerticalLayout();
						verticalLayout_9.leftMargin = 30;
						verticalLayout_9.rightMargin = 30;
						verticalLayout_9.topMargin = 20;
						verticalLayout_9.bottomMargin = 20;
						group_14.setLayout(verticalLayout_9);
						(function(container){
							var output_16 = new cpr.controls.Output();
							output_16.value = "locale : 캘린더에 표시되는 텍스트 언어를 설정하는 속성입니다. 기본값은 cpr.L18N.INSTANCE.currentLanguage 또는 cpr.L18N.INSTANCE.getBrowserLanguage()입니다.\r\n\r\nheaderFormat : 헤더에 표시하는 날짜 포맷 설정하는 속성입니다. 빈 값인 경우 캘린더 타입에 따라 기본 포맷으로 헤더를 표시합니다.\r\n\r\nfooterFormat : calendarType = \"yearmonthdate\" 일 때 푸터에서 defaultDate를 표시하는 포맷을 설정하는 속성입니다. 기본값은 LL입니다.";
							output_16.style.css({
								"font-weight" : "700"
							});
							container.addChild(output_16, {
								"autoSize": "height",
								"width": "100px",
								"height": "40px"
							});
						})(group_14);
						container.addChild(group_14, {
							"autoSize": "height",
							"width": "1140px",
							"height": "80px"
						});
						var group_15 = new cpr.controls.Container();
						group_15.style.setClasses(["form-box", "vertical"]);
						// Layout
						var formLayout_5 = new cpr.controls.layouts.FormLayout();
						formLayout_5.topMargin = "5px";
						formLayout_5.rightMargin = "5px";
						formLayout_5.bottomMargin = "5px";
						formLayout_5.leftMargin = "5px";
						formLayout_5.horizontalSpacing = "10px";
						formLayout_5.verticalSpacing = "10px";
						formLayout_5.horizontalSeparatorWidth = 1;
						formLayout_5.verticalSeparatorWidth = 1;
						formLayout_5.setColumns(["1fr", "300px", "80px"]);
						formLayout_5.setRows(["30px", "30px"]);
						formLayout_5.setCustomRowShade(0, "#edeff6");
						formLayout_5.setRowAutoSizing(1, true);
						group_15.setLayout(formLayout_5);
						(function(container){
							var output_17 = new cpr.controls.Output();
							output_17.value = "시나리오";
							output_17.style.setClasses(["label"]);
							output_17.style.css({
								"border-right-style" : "none",
								"background-color" : "transparent",
								"border-left-style" : "none",
								"padding-left" : "15px",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "left"
							});
							container.addChild(output_17, {
								"colIndex": 0,
								"rowIndex": 0
							});
							var output_18 = new cpr.controls.Output();
							output_18.value = "입력값";
							output_18.style.setClasses(["label"]);
							output_18.style.css({
								"border-right-style" : "none",
								"background-color" : "transparent",
								"border-left-style" : "none",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "center"
							});
							container.addChild(output_18, {
								"colIndex": 1,
								"rowIndex": 0
							});
							var output_19 = new cpr.controls.Output();
							output_19.value = "기능확인";
							output_19.style.setClasses(["label"]);
							output_19.style.css({
								"border-right-style" : "none",
								"background-color" : "transparent",
								"border-left-style" : "none",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "center"
							});
							container.addChild(output_19, {
								"colIndex": 2,
								"rowIndex": 0
							});
							var button_2 = new cpr.controls.Button("btnInit2");
							button_2.value = "실행";
							button_2.style.setClasses(["btn-primary"]);
							if(typeof onBtnInit2Click == "function") {
								button_2.addEventListener("click", onBtnInit2Click);
							}
							container.addChild(button_2, {
								"colIndex": 2,
								"rowIndex": 1,
								"verticalAlign": "center",
								"height": 30
							});
							var output_20 = new cpr.controls.Output();
							output_20.value = "1) 우측의 실행 버튼을 클릭합니다.\r\n2) 아래의 컨트롤에서 입력값들이 설정된 캘린더 속성을 확인할 수 있습니다.";
							output_20.style.css({
								"background-color" : "transparent",
								"border-right-style" : "none",
								"border-left-style" : "none",
								"padding-left" : "15px",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "left"
							});
							container.addChild(output_20, {
								"colIndex": 0,
								"rowIndex": 1
							});
							var output_21 = new cpr.controls.Output();
							output_21.value = "locale = \"en\"\r\nheaderFormat = \"YY/MM\"\r\nfooterFormat = \"MM/DD/YYYY\"";
							output_21.style.css({
								"background-color" : "transparent",
								"border-right-style" : "none",
								"border-left-style" : "none",
								"padding-left" : "15px",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "left"
							});
							container.addChild(output_21, {
								"colIndex": 1,
								"rowIndex": 1
							});
						})(group_15);
						container.addChild(group_15, {
							"autoSize": "height",
							"width": "1220px",
							"height": "80px"
						});
						var group_16 = new cpr.controls.Container();
						group_16.style.setClasses(["attach-box"]);
						group_16.style.css({
							"border-right-style" : "solid",
							"border-top-width" : "1px",
							"border-bottom-color" : "#babfc7",
							"border-right-width" : "1px",
							"border-left-color" : "#babfc7",
							"border-right-color" : "#babfc7",
							"border-left-width" : "1px",
							"border-top-style" : "solid",
							"background-color" : "#e9e9e9",
							"border-left-style" : "solid",
							"border-bottom-width" : "1px",
							"border-top-color" : "#babfc7",
							"border-bottom-style" : "solid",
							"background-image" : "none"
						});
						// Layout
						var flowLayout_3 = new cpr.controls.layouts.FlowLayout();
						flowLayout_3.scrollable = false;
						flowLayout_3.horizontalSpacing = 20;
						flowLayout_3.verticalSpacing = 20;
						flowLayout_3.horizontalAlign = "center";
						flowLayout_3.verticalAlign = "middle";
						flowLayout_3.leftMargin = 20;
						flowLayout_3.rightMargin = 20;
						flowLayout_3.topMargin = 20;
						flowLayout_3.bottomMargin = 20;
						group_16.setLayout(flowLayout_3);
						(function(container){
							var group_17 = new cpr.controls.Container();
							// Layout
							var formLayout_6 = new cpr.controls.layouts.FormLayout();
							formLayout_6.topMargin = "0px";
							formLayout_6.rightMargin = "0px";
							formLayout_6.bottomMargin = "0px";
							formLayout_6.leftMargin = "0px";
							formLayout_6.horizontalSpacing = "5px";
							formLayout_6.verticalSpacing = "5px";
							formLayout_6.setColumns(["1fr"]);
							formLayout_6.setRows(["1fr", "20px"]);
							group_17.setLayout(formLayout_6);
							(function(container){
								var output_22 = new cpr.controls.Output();
								output_22.value = "<기능 확인 컨트롤>";
								output_22.style.setClasses(["text-center"]);
								container.addChild(output_22, {
									"colIndex": 0,
									"rowIndex": 1
								});
								var calendar_3 = new cpr.controls.Calendar("sampleCal2");
								(function(calendar_3){
								})(calendar_3);
								container.addChild(calendar_3, {
									"colIndex": 0,
									"rowIndex": 0
								});
							})(group_17);
							container.addChild(group_17, {
								"autoSize": "none",
								"width": "300px",
								"height": "300px"
							});
						})(group_16);
						container.addChild(group_16, {
							"autoSize": "height",
							"width": "1140px",
							"height": "337px"
						});
					})(group_13);
					container.addChild(group_13, {
						"autoSize": "height",
						"width": "1220px",
						"height": "780px"
					});
					var group_18 = new cpr.controls.Container();
					group_18.style.setClasses(["card-inner"]);
					// Layout
					var verticalLayout_10 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_10.spacing = 15;
					verticalLayout_10.leftMargin = 40;
					verticalLayout_10.rightMargin = 40;
					verticalLayout_10.topMargin = 20;
					verticalLayout_10.bottomMargin = 40;
					group_18.setLayout(verticalLayout_10);
					(function(container){
						var output_23 = new cpr.controls.Output();
						output_23.value = "headerVisible, footerVisible, selectionType";
						output_23.style.css({
							"color" : "#2263b3",
							"font-weight" : "700",
							"font-size" : "20px",
							"font-family" : "sans-serif , 'Malgun Gothic' , 'Noto Sans KR'"
						});
						container.addChild(output_23, {
							"autoSize": "none",
							"width": "1220px",
							"height": "38px"
						});
						var group_19 = new cpr.controls.Container();
						group_19.style.css({
							"background-color" : "#e9eff7",
							"background-image" : "none"
						});
						// Layout
						var verticalLayout_11 = new cpr.controls.layouts.VerticalLayout();
						verticalLayout_11.leftMargin = 30;
						verticalLayout_11.rightMargin = 30;
						verticalLayout_11.topMargin = 20;
						verticalLayout_11.bottomMargin = 20;
						group_19.setLayout(verticalLayout_11);
						(function(container){
							var output_24 = new cpr.controls.Output();
							output_24.value = "headerVisible : 캘린더의 헤더 표시 여부를 설정하는 속성입니다. 기본값은 true이며, false로 변경 시 헤더가 보이지 않습니다.\r\n\r\nfooterVisible : 캘린더의 푸터 표시 여부를 설정하는 속성입니다. 기본값은 true이며, false로 변경 시 푸터가 보이지 않습니다.\r\n\r\nselectionType : 날짜 선택 형식을 설정하는 속성입니다. 기본값은 single이며 multi, range로 변경할 수 있습니다.";
							output_24.style.css({
								"font-weight" : "700"
							});
							container.addChild(output_24, {
								"autoSize": "height",
								"width": "100px",
								"height": "40px"
							});
						})(group_19);
						container.addChild(group_19, {
							"autoSize": "height",
							"width": "1140px",
							"height": "80px"
						});
						var group_20 = new cpr.controls.Container();
						group_20.style.setClasses(["form-box", "vertical"]);
						// Layout
						var formLayout_7 = new cpr.controls.layouts.FormLayout();
						formLayout_7.topMargin = "5px";
						formLayout_7.rightMargin = "5px";
						formLayout_7.bottomMargin = "5px";
						formLayout_7.leftMargin = "5px";
						formLayout_7.horizontalSpacing = "10px";
						formLayout_7.verticalSpacing = "10px";
						formLayout_7.horizontalSeparatorWidth = 1;
						formLayout_7.verticalSeparatorWidth = 1;
						formLayout_7.setColumns(["1fr", "200px", "80px"]);
						formLayout_7.setRows(["30px", "30px"]);
						formLayout_7.setCustomRowShade(0, "#edeff6");
						formLayout_7.setRowAutoSizing(1, true);
						group_20.setLayout(formLayout_7);
						(function(container){
							var output_25 = new cpr.controls.Output();
							output_25.value = "시나리오";
							output_25.style.setClasses(["label"]);
							output_25.style.css({
								"border-right-style" : "none",
								"background-color" : "transparent",
								"border-left-style" : "none",
								"padding-left" : "15px",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "left"
							});
							container.addChild(output_25, {
								"colIndex": 0,
								"rowIndex": 0
							});
							var output_26 = new cpr.controls.Output();
							output_26.value = "입력값";
							output_26.style.setClasses(["label"]);
							output_26.style.css({
								"border-right-style" : "none",
								"background-color" : "transparent",
								"border-left-style" : "none",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "center"
							});
							container.addChild(output_26, {
								"colIndex": 1,
								"rowIndex": 0
							});
							var output_27 = new cpr.controls.Output();
							output_27.value = "기능확인";
							output_27.style.setClasses(["label"]);
							output_27.style.css({
								"border-right-style" : "none",
								"background-color" : "transparent",
								"border-left-style" : "none",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "center"
							});
							container.addChild(output_27, {
								"colIndex": 2,
								"rowIndex": 0
							});
							var button_3 = new cpr.controls.Button("btnInit3");
							button_3.value = "실행";
							button_3.style.setClasses(["btn-primary"]);
							if(typeof onBtnInit3Click == "function") {
								button_3.addEventListener("click", onBtnInit3Click);
							}
							container.addChild(button_3, {
								"colIndex": 2,
								"rowIndex": 1,
								"verticalAlign": "center",
								"height": 30
							});
							var output_28 = new cpr.controls.Output();
							output_28.value = "1) 우측의 실행 버튼을 클릭합니다.\r\n2) 아래의 컨트롤에서 입력값들이 설정된 캘린더 속성을 확인할 수 있습니다.";
							output_28.style.css({
								"background-color" : "transparent",
								"border-right-style" : "none",
								"border-left-style" : "none",
								"padding-left" : "15px",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "left"
							});
							container.addChild(output_28, {
								"colIndex": 0,
								"rowIndex": 1
							});
							var output_29 = new cpr.controls.Output();
							output_29.value = "headerVisible = false\r\nfooterVisible = false\r\nselectionType = multi";
							output_29.style.css({
								"background-color" : "transparent",
								"border-right-style" : "none",
								"border-left-style" : "none",
								"padding-left" : "15px",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "left"
							});
							container.addChild(output_29, {
								"colIndex": 1,
								"rowIndex": 1
							});
						})(group_20);
						container.addChild(group_20, {
							"autoSize": "height",
							"width": "1220px",
							"height": "80px"
						});
						var group_21 = new cpr.controls.Container();
						group_21.style.setClasses(["attach-box"]);
						group_21.style.css({
							"border-right-style" : "solid",
							"border-top-width" : "1px",
							"border-bottom-color" : "#babfc7",
							"border-right-width" : "1px",
							"border-left-color" : "#babfc7",
							"border-right-color" : "#babfc7",
							"border-left-width" : "1px",
							"border-top-style" : "solid",
							"background-color" : "#e9e9e9",
							"border-left-style" : "solid",
							"border-bottom-width" : "1px",
							"border-top-color" : "#babfc7",
							"border-bottom-style" : "solid",
							"background-image" : "none"
						});
						// Layout
						var flowLayout_4 = new cpr.controls.layouts.FlowLayout();
						flowLayout_4.scrollable = false;
						flowLayout_4.horizontalSpacing = 20;
						flowLayout_4.verticalSpacing = 20;
						flowLayout_4.horizontalAlign = "center";
						flowLayout_4.verticalAlign = "middle";
						flowLayout_4.leftMargin = 20;
						flowLayout_4.rightMargin = 20;
						flowLayout_4.topMargin = 20;
						flowLayout_4.bottomMargin = 20;
						group_21.setLayout(flowLayout_4);
						(function(container){
							var group_22 = new cpr.controls.Container();
							// Layout
							var formLayout_8 = new cpr.controls.layouts.FormLayout();
							formLayout_8.topMargin = "0px";
							formLayout_8.rightMargin = "0px";
							formLayout_8.bottomMargin = "0px";
							formLayout_8.leftMargin = "0px";
							formLayout_8.horizontalSpacing = "5px";
							formLayout_8.verticalSpacing = "5px";
							formLayout_8.setColumns(["1fr"]);
							formLayout_8.setRows(["1fr", "20px"]);
							group_22.setLayout(formLayout_8);
							(function(container){
								var output_30 = new cpr.controls.Output();
								output_30.value = "<기능 확인 컨트롤>";
								output_30.style.setClasses(["text-center"]);
								container.addChild(output_30, {
									"colIndex": 0,
									"rowIndex": 1
								});
								var calendar_4 = new cpr.controls.Calendar("sampleCal3");
								(function(calendar_4){
								})(calendar_4);
								container.addChild(calendar_4, {
									"colIndex": 0,
									"rowIndex": 0
								});
							})(group_22);
							container.addChild(group_22, {
								"autoSize": "none",
								"width": "300px",
								"height": "300px"
							});
						})(group_21);
						container.addChild(group_21, {
							"autoSize": "height",
							"width": "1140px",
							"height": "337px"
						});
					})(group_18);
					container.addChild(group_18, {
						"autoSize": "height",
						"width": "1220px",
						"height": "780px"
					});
					var group_23 = new cpr.controls.Container();
					group_23.style.setClasses(["card-inner"]);
					// Layout
					var verticalLayout_12 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_12.spacing = 15;
					verticalLayout_12.leftMargin = 40;
					verticalLayout_12.rightMargin = 40;
					verticalLayout_12.topMargin = 20;
					verticalLayout_12.bottomMargin = 40;
					group_23.setLayout(verticalLayout_12);
					(function(container){
						var output_31 = new cpr.controls.Output();
						output_31.value = "showAnniversary, enabledDataExp";
						output_31.style.css({
							"color" : "#2263b3",
							"font-weight" : "700",
							"font-size" : "20px",
							"font-family" : "sans-serif , 'Malgun Gothic' , 'Noto Sans KR'"
						});
						container.addChild(output_31, {
							"autoSize": "none",
							"width": "1220px",
							"height": "38px"
						});
						var group_24 = new cpr.controls.Container();
						group_24.style.css({
							"background-color" : "#e9eff7",
							"background-image" : "none"
						});
						// Layout
						var verticalLayout_13 = new cpr.controls.layouts.VerticalLayout();
						verticalLayout_13.leftMargin = 30;
						verticalLayout_13.rightMargin = 30;
						verticalLayout_13.topMargin = 20;
						verticalLayout_13.bottomMargin = 20;
						group_24.setLayout(verticalLayout_13);
						(function(container){
							var output_32 = new cpr.controls.Output();
							output_32.value = "showAnniversary : 캘린더에서 기념일을 표시하는 기능입니다. 기본값은 false이며, true로 변경 시 기념일이 표시되게 됩니다.\r\n\r\nenabledDataExp : 날짜에 표현식을 적용해서 특정 날짜를 비활성화할 수 있게 설정하는 속성입니다.";
							output_32.style.css({
								"font-weight" : "700"
							});
							container.addChild(output_32, {
								"autoSize": "height",
								"width": "100px",
								"height": "40px"
							});
						})(group_24);
						container.addChild(group_24, {
							"autoSize": "height",
							"width": "1140px",
							"height": "80px"
						});
						var group_25 = new cpr.controls.Container();
						group_25.style.setClasses(["form-box", "vertical"]);
						// Layout
						var formLayout_9 = new cpr.controls.layouts.FormLayout();
						formLayout_9.topMargin = "5px";
						formLayout_9.rightMargin = "5px";
						formLayout_9.bottomMargin = "5px";
						formLayout_9.leftMargin = "5px";
						formLayout_9.horizontalSpacing = "10px";
						formLayout_9.verticalSpacing = "10px";
						formLayout_9.horizontalSeparatorWidth = 1;
						formLayout_9.verticalSeparatorWidth = 1;
						formLayout_9.setColumns(["1fr", "300px", "80px"]);
						formLayout_9.setRows(["30px", "30px"]);
						formLayout_9.setCustomRowShade(0, "#edeff6");
						formLayout_9.setRowAutoSizing(1, true);
						group_25.setLayout(formLayout_9);
						(function(container){
							var output_33 = new cpr.controls.Output();
							output_33.value = "시나리오";
							output_33.style.setClasses(["label"]);
							output_33.style.css({
								"border-right-style" : "none",
								"background-color" : "transparent",
								"border-left-style" : "none",
								"padding-left" : "15px",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "left"
							});
							container.addChild(output_33, {
								"colIndex": 0,
								"rowIndex": 0
							});
							var output_34 = new cpr.controls.Output();
							output_34.value = "입력값";
							output_34.style.setClasses(["label"]);
							output_34.style.css({
								"border-right-style" : "none",
								"background-color" : "transparent",
								"border-left-style" : "none",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "center"
							});
							container.addChild(output_34, {
								"colIndex": 1,
								"rowIndex": 0
							});
							var output_35 = new cpr.controls.Output();
							output_35.value = "기능확인";
							output_35.style.setClasses(["label"]);
							output_35.style.css({
								"border-right-style" : "none",
								"background-color" : "transparent",
								"border-left-style" : "none",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "center"
							});
							container.addChild(output_35, {
								"colIndex": 2,
								"rowIndex": 0
							});
							var button_4 = new cpr.controls.Button("btnInit4");
							button_4.value = "실행";
							button_4.style.setClasses(["btn-primary"]);
							if(typeof onBtnInit4Click == "function") {
								button_4.addEventListener("click", onBtnInit4Click);
							}
							container.addChild(button_4, {
								"colIndex": 2,
								"rowIndex": 1,
								"verticalAlign": "center",
								"height": 30
							});
							var output_36 = new cpr.controls.Output();
							output_36.value = "1) 우측의 실행 버튼을 클릭합니다.\r\n2) 기념일이 표시되고, 매월 달력의 19일이 클릭 되지 않는 것을 확인할 수 있습니다.\r\n3) 8/15일에 광복절이 추가된 것을 확인할 수 있습니다.";
							output_36.style.css({
								"background-color" : "transparent",
								"border-right-style" : "none",
								"border-left-style" : "none",
								"padding-left" : "15px",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "left"
							});
							container.addChild(output_36, {
								"colIndex": 0,
								"rowIndex": 1
							});
							var output_37 = new cpr.controls.Output();
							output_37.value = "showAnniversary = true\r\nenabledDateExp = \"getDate() != 19\"";
							output_37.style.css({
								"background-color" : "transparent",
								"border-right-style" : "none",
								"border-left-style" : "none",
								"padding-left" : "15px",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "left"
							});
							container.addChild(output_37, {
								"colIndex": 1,
								"rowIndex": 1
							});
						})(group_25);
						container.addChild(group_25, {
							"autoSize": "height",
							"width": "1220px",
							"height": "80px"
						});
						var group_26 = new cpr.controls.Container();
						group_26.style.setClasses(["attach-box"]);
						group_26.style.css({
							"border-right-style" : "solid",
							"border-top-width" : "1px",
							"border-bottom-color" : "#babfc7",
							"border-right-width" : "1px",
							"border-left-color" : "#babfc7",
							"border-right-color" : "#babfc7",
							"border-left-width" : "1px",
							"border-top-style" : "solid",
							"background-color" : "#e9e9e9",
							"border-left-style" : "solid",
							"border-bottom-width" : "1px",
							"border-top-color" : "#babfc7",
							"border-bottom-style" : "solid",
							"background-image" : "none"
						});
						// Layout
						var flowLayout_5 = new cpr.controls.layouts.FlowLayout();
						flowLayout_5.scrollable = false;
						flowLayout_5.horizontalSpacing = 20;
						flowLayout_5.verticalSpacing = 20;
						flowLayout_5.horizontalAlign = "center";
						flowLayout_5.verticalAlign = "middle";
						flowLayout_5.leftMargin = 20;
						flowLayout_5.rightMargin = 20;
						flowLayout_5.topMargin = 20;
						flowLayout_5.bottomMargin = 20;
						group_26.setLayout(flowLayout_5);
						(function(container){
							var group_27 = new cpr.controls.Container();
							// Layout
							var formLayout_10 = new cpr.controls.layouts.FormLayout();
							formLayout_10.topMargin = "0px";
							formLayout_10.rightMargin = "0px";
							formLayout_10.bottomMargin = "0px";
							formLayout_10.leftMargin = "0px";
							formLayout_10.horizontalSpacing = "5px";
							formLayout_10.verticalSpacing = "5px";
							formLayout_10.setColumns(["1fr"]);
							formLayout_10.setRows(["1fr", "20px"]);
							group_27.setLayout(formLayout_10);
							(function(container){
								var output_38 = new cpr.controls.Output();
								output_38.value = "<기능 확인 컨트롤>";
								output_38.style.setClasses(["text-center"]);
								container.addChild(output_38, {
									"colIndex": 0,
									"rowIndex": 1
								});
								var calendar_5 = new cpr.controls.Calendar("sampleCal4");
								calendar_5.showAnniversary = true;
								(function(calendar_5){
								})(calendar_5);
								container.addChild(calendar_5, {
									"colIndex": 0,
									"rowIndex": 0
								});
							})(group_27);
							container.addChild(group_27, {
								"autoSize": "none",
								"width": "500px",
								"height": "500px"
							});
						})(group_26);
						container.addChild(group_26, {
							"autoSize": "height",
							"width": "1140px",
							"height": "700px"
						});
					})(group_23);
					container.addChild(group_23, {
						"autoSize": "height",
						"width": "1220px",
						"height": "1000px"
					});
					var group_28 = new cpr.controls.Container("grp1");
					group_28.style.setClasses(["card-inner"]);
					// Layout
					var verticalLayout_14 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_14.spacing = 15;
					verticalLayout_14.leftMargin = 40;
					verticalLayout_14.rightMargin = 40;
					verticalLayout_14.topMargin = 20;
					verticalLayout_14.bottomMargin = 40;
					group_28.setLayout(verticalLayout_14);
					(function(container){
						var output_39 = new cpr.controls.Output();
						output_39.value = "showOtherMonths, datePosition, headerButtons";
						output_39.style.css({
							"color" : "#2263b3",
							"font-weight" : "700",
							"font-size" : "20px",
							"font-family" : "sans-serif , 'Malgun Gothic' , 'Noto Sans KR'"
						});
						container.addChild(output_39, {
							"autoSize": "none",
							"width": "1220px",
							"height": "38px"
						});
						var group_29 = new cpr.controls.Container("grp2");
						group_29.style.css({
							"background-color" : "#e9eff7",
							"background-image" : "none"
						});
						// Layout
						var verticalLayout_15 = new cpr.controls.layouts.VerticalLayout();
						verticalLayout_15.leftMargin = 30;
						verticalLayout_15.rightMargin = 30;
						verticalLayout_15.topMargin = 20;
						verticalLayout_15.bottomMargin = 20;
						group_29.setLayout(verticalLayout_15);
						(function(container){
							var output_40 = new cpr.controls.Output();
							output_40.value = "showOtherMonths : 캘린더의 이전 달과 다음 달에 해당하는 날짜 표시 여부를 설정하는 속성입니다. 기본값은 true이며, false로 변경 시 다른 달의 날짜가 보이지 않게 됩니다.\r\n\r\ndatePosition : 날짜의 위치를 설정하는 속성입니다. 기본값은 상단의 중앙에 표시됩니다.\r\n\r\nheaderButtons : 캘린더에 표시되는 헤더 버튼들을 설정하는 속성입니다. 버튼 이름이 나열된 순서대로 캘린더 헤더에 표시됩니다.";
							output_40.style.css({
								"font-weight" : "700"
							});
							container.addChild(output_40, {
								"autoSize": "height",
								"width": "100px",
								"height": "40px"
							});
						})(group_29);
						container.addChild(group_29, {
							"autoSize": "height",
							"width": "1140px",
							"height": "80px"
						});
						var group_30 = new cpr.controls.Container("grp3");
						group_30.style.setClasses(["form-box", "vertical"]);
						// Layout
						var formLayout_11 = new cpr.controls.layouts.FormLayout();
						formLayout_11.topMargin = "5px";
						formLayout_11.rightMargin = "5px";
						formLayout_11.bottomMargin = "5px";
						formLayout_11.leftMargin = "5px";
						formLayout_11.horizontalSpacing = "10px";
						formLayout_11.verticalSpacing = "10px";
						formLayout_11.horizontalSeparatorWidth = 1;
						formLayout_11.verticalSeparatorWidth = 1;
						formLayout_11.setColumns(["1fr", "400px", "80px"]);
						formLayout_11.setRows(["30px", "30px"]);
						formLayout_11.setCustomRowShade(0, "#edeff6");
						formLayout_11.setRowAutoSizing(1, true);
						group_30.setLayout(formLayout_11);
						(function(container){
							var output_41 = new cpr.controls.Output();
							output_41.value = "시나리오";
							output_41.style.setClasses(["label"]);
							output_41.style.css({
								"border-right-style" : "none",
								"background-color" : "transparent",
								"border-left-style" : "none",
								"padding-left" : "15px",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "left"
							});
							container.addChild(output_41, {
								"colIndex": 0,
								"rowIndex": 0
							});
							var output_42 = new cpr.controls.Output();
							output_42.value = "입력값";
							output_42.style.setClasses(["label"]);
							output_42.style.css({
								"border-right-style" : "none",
								"background-color" : "transparent",
								"border-left-style" : "none",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "center"
							});
							container.addChild(output_42, {
								"colIndex": 1,
								"rowIndex": 0
							});
							var output_43 = new cpr.controls.Output();
							output_43.value = "기능확인";
							output_43.style.setClasses(["label"]);
							output_43.style.css({
								"border-right-style" : "none",
								"background-color" : "transparent",
								"border-left-style" : "none",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "center"
							});
							container.addChild(output_43, {
								"colIndex": 2,
								"rowIndex": 0
							});
							var button_5 = new cpr.controls.Button("btnInit5");
							button_5.value = "실행";
							button_5.style.setClasses(["btn-primary"]);
							if(typeof onBtnInit5Click == "function") {
								button_5.addEventListener("click", onBtnInit5Click);
							}
							container.addChild(button_5, {
								"colIndex": 2,
								"rowIndex": 1,
								"verticalAlign": "center",
								"height": 30
							});
							var output_44 = new cpr.controls.Output();
							output_44.value = "1) 우측의 첫 번째 콤보 박스에서 datePostion을 선택합니다.\r\n2) 두 번째 콤보 박스에서 체크한 순서대로 headerButtons가 정렬됩니다.\r\n3) 실행 버튼을 클릭합니다.\r\n4) 하단의 캘린더에서 해당 속성이 적용된 형태를 확인할 수 있습니다.";
							output_44.style.css({
								"background-color" : "transparent",
								"border-right-style" : "none",
								"border-left-style" : "none",
								"padding-left" : "15px",
								"border-bottom-style" : "none",
								"border-top-style" : "none",
								"text-align" : "left"
							});
							container.addChild(output_44, {
								"colIndex": 0,
								"rowIndex": 1
							});
							var group_31 = new cpr.controls.Container("grp6");
							// Layout
							var formLayout_12 = new cpr.controls.layouts.FormLayout();
							formLayout_12.scrollable = true;
							formLayout_12.topMargin = "0px";
							formLayout_12.rightMargin = "0px";
							formLayout_12.bottomMargin = "0px";
							formLayout_12.leftMargin = "0px";
							formLayout_12.horizontalSpacing = "0px";
							formLayout_12.verticalSpacing = "0px";
							formLayout_12.setColumns(["1fr", "1fr"]);
							formLayout_12.setRows(["1fr"]);
							group_31.setLayout(formLayout_12);
							(function(container){
								var comboBox_1 = new cpr.controls.ComboBox("sampleCmb1");
								(function(comboBox_1){
									comboBox_1.addItem(new cpr.controls.Item("topLeft", "topLeft"));
									comboBox_1.addItem(new cpr.controls.Item("topCenter", "topCenter"));
									comboBox_1.addItem(new cpr.controls.Item("topRight", "topRight"));
									comboBox_1.addItem(new cpr.controls.Item("middleLeft", "middleLeft"));
									comboBox_1.addItem(new cpr.controls.Item("middleCenter", "middleCenter"));
									comboBox_1.addItem(new cpr.controls.Item("middleRight", "middleRight"));
									comboBox_1.addItem(new cpr.controls.Item("bottomLeft", "bottomLeft"));
									comboBox_1.addItem(new cpr.controls.Item("bottomCenter", "bottomCenter"));
									comboBox_1.addItem(new cpr.controls.Item("bottomRight", "bottomRight"));
								})(comboBox_1);
								container.addChild(comboBox_1, {
									"colIndex": 0,
									"rowIndex": 0
								});
								var comboBox_2 = new cpr.controls.ComboBox("sampleCmb2");
								comboBox_2.multiple = true;
								(function(comboBox_2){
									comboBox_2.addItem(new cpr.controls.Item("prevYear", "prevYear"));
									comboBox_2.addItem(new cpr.controls.Item("prev", "prev"));
									comboBox_2.addItem(new cpr.controls.Item("title", "title"));
									comboBox_2.addItem(new cpr.controls.Item("next", "next"));
									comboBox_2.addItem(new cpr.controls.Item("nextYear", "nextYear"));
								})(comboBox_2);
								container.addChild(comboBox_2, {
									"colIndex": 1,
									"rowIndex": 0
								});
							})(group_31);
							container.addChild(group_31, {
								"colIndex": 1,
								"rowIndex": 1
							});
						})(group_30);
						container.addChild(group_30, {
							"autoSize": "height",
							"width": "1220px",
							"height": "80px"
						});
						var group_32 = new cpr.controls.Container("grp4");
						group_32.style.setClasses(["attach-box"]);
						group_32.style.css({
							"border-right-style" : "solid",
							"border-top-width" : "1px",
							"border-bottom-color" : "#babfc7",
							"border-right-width" : "1px",
							"border-left-color" : "#babfc7",
							"border-right-color" : "#babfc7",
							"border-left-width" : "1px",
							"border-top-style" : "solid",
							"background-color" : "#e9e9e9",
							"border-left-style" : "solid",
							"border-bottom-width" : "1px",
							"border-top-color" : "#babfc7",
							"border-bottom-style" : "solid",
							"background-image" : "none"
						});
						// Layout
						var flowLayout_6 = new cpr.controls.layouts.FlowLayout();
						flowLayout_6.scrollable = false;
						flowLayout_6.horizontalSpacing = 20;
						flowLayout_6.verticalSpacing = 20;
						flowLayout_6.horizontalAlign = "center";
						flowLayout_6.verticalAlign = "middle";
						flowLayout_6.leftMargin = 20;
						flowLayout_6.rightMargin = 20;
						flowLayout_6.topMargin = 20;
						flowLayout_6.bottomMargin = 20;
						group_32.setLayout(flowLayout_6);
						(function(container){
							var group_33 = new cpr.controls.Container("grp5");
							// Layout
							var formLayout_13 = new cpr.controls.layouts.FormLayout();
							formLayout_13.topMargin = "0px";
							formLayout_13.rightMargin = "0px";
							formLayout_13.bottomMargin = "0px";
							formLayout_13.leftMargin = "0px";
							formLayout_13.horizontalSpacing = "5px";
							formLayout_13.verticalSpacing = "5px";
							formLayout_13.setColumns(["1fr"]);
							formLayout_13.setRows(["1fr", "20px"]);
							group_33.setLayout(formLayout_13);
							(function(container){
								var output_45 = new cpr.controls.Output();
								output_45.value = "<showOtherMonths = false>";
								output_45.style.setClasses(["text-center"]);
								container.addChild(output_45, {
									"colIndex": 0,
									"rowIndex": 1
								});
								var calendar_6 = new cpr.controls.Calendar("sampleCal5");
								calendar_6.showOtherMonths = false;
								(function(calendar_6){
									calendar_6.addItem(new cpr.controls.CalendarItem("auto", null, null, "auto"));
									calendar_6.addItem(new cpr.controls.CalendarItem("topLeft", null, null, "topLeft"));
									calendar_6.addItem(new cpr.controls.CalendarItem("topCenter", null, null, "topCenter"));
									calendar_6.addItem(new cpr.controls.CalendarItem("topRight", null, null, "topRight"));
									calendar_6.addItem(new cpr.controls.CalendarItem("middleLeft", null, null, "middleLeft"));
									calendar_6.addItem(new cpr.controls.CalendarItem("middleCenter", null, null, "middleCenter"));
									calendar_6.addItem(new cpr.controls.CalendarItem("middleRight", null, null, "middleRight"));
									calendar_6.addItem(new cpr.controls.CalendarItem("bottomLeft", null, null, "bottomLeft"));
									calendar_6.addItem(new cpr.controls.CalendarItem("bottomCenter", null, null, "bottomCenter"));
									calendar_6.addItem(new cpr.controls.CalendarItem("bottomRight", null, null, "bottomRight"));
								})(calendar_6);
								container.addChild(calendar_6, {
									"colIndex": 0,
									"rowIndex": 0
								});
							})(group_33);
							container.addChild(group_33, {
								"autoSize": "none",
								"width": "300px",
								"height": "300px"
							});
						})(group_32);
						container.addChild(group_32, {
							"autoSize": "height",
							"width": "1140px",
							"height": "337px"
						});
					})(group_28);
					container.addChild(group_28, {
						"autoSize": "height",
						"width": "1220px",
						"height": "780px"
					});
				})(group_7);
				container.addChild(group_7, {
					"autoSize": "height",
					"width": "1100px",
					"height": "4400px"
				});
			})(group_2);
			container.addChild(group_2, {
				"autoSize": "height",
				"width": "400px",
				"height": "5200px"
			});
		}
	});
	app.title = "캘린더 관련 속성";
	cpr.core.Platform.INSTANCE.register(app);
})();
