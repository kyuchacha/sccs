/*
 * App URI: app/exam/thirdparty/html2canvas
 * Source Location: app/exam/thirdparty/html2canvas.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/exam/thirdparty/html2canvas", {
		onPrepare: function(loader){
			loader.addScript("thirdparty/html2canvas/html2canvas.min.js");
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			* html2canvas2.js
			 * Created at 2022. 3. 8. 오후 1:28:37.
			 *
			 * @author aaajd
			 ************************************************/
			
			//공통 모듈 사용
			var util = createCommonUtil();
			
			/*
			 * "https://html2canvas.hertzen.com/" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click(e){
				window.open('https://html2canvas.hertzen.com/');	
			}
			
			/*
			 * 사용자 정의 컨트롤에서 afterLoad 이벤트 발생 시 호출.
			 */
			function onAce1AfterLoad(e){
				/* 에디터에 소스 표시 */
				var vcAceEditor = app.lookup("ace1");
				vcAceEditor.value = captureControlImage;
			}
			
			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(e){
				util.Submit.send(app, "subOnLoad", function(pbSuccess) {
					if (pbSuccess) {
						util.Control.redraw(app, "cmbJob");
						doList();
					}
				});
			}
			
			/*
			 * 사용자 정의 컨트롤에서 search 이벤트 발생 시 호출.
			 * 조회버튼 클릭시 이벤트
			 */
			function onCombtnsearch1Search(e){
				// 1. 데이터 변경사항 체크
				if (util.Grid.isModified(app, "grdMain", "CRM")) {
					return false;
				}
				
				// 2. 조회조건 유효성 체크
				if(!util.validate(app, "grpSearch")) return false;
				
				// 3. 데이터 조회
				doList();
			}
			
			/**
			 * 그리드 데이터를 조회
			 * @param psStatus - 조회 상태(저장 후 조회인 경우에는 'save' 구분값 넘김)
			 */
			function doList(psStatus) {
				util.Submit.send(app, "subList", function(pbSuccess) {
					if(pbSuccess) {
						if(psStatus == "save"){
							//갱신된 데이터가 조회되었습니다.
							util.Msg.notify(app, "INF-M005");
						}else{
							//조회되었습니다.
							util.Msg.notify(app, "INF-M001");
							util.Grid.selectRow(app, "grdMain", 0);
						}
					}
				});
			}
			
			/*
			 * 사용자 정의 컨트롤에서 save 이벤트 발생 시 호출.
			 * 저장 클릭 이벤트
			 */
			function onCombutton2Save(e){
				// 1. 데이터 변경사항 체크
				if (!util.Grid.isModified(app, "grdMain", "MSG")) return false;
				
				// 2. 유효성 체크
				if (!util.validate(app, "grdMain")) return false;
				
				// 3. 데이터 저장
				util.Submit.send(app, "subSave", function(pbSuccess){
					if(pbSuccess){
						doList("save");
					}
				});
			}
			
			/*
			 * 그리드에서 selection-change 이벤트 발생 시 호출.
			 * detail의 cell 클릭하여 설정된 selectionunit에 해당되는 단위가 선택될 때 발생하는 이벤트.
			 */
			function onGrdMainSelectionChange(e){
				/** 
				 * @type cpr.controls.Grid
				 */
				var grdMain = e.control;
				if(util.Grid.getRowState(app, "grdMain") == cpr.data.tabledata.RowState.INSERTED){
					util.Grid.reset(app, "grdSub");
					return false;
				}
				
				doListDtl();
			}
			
			/**
			 * @param psStatus - 조회 상태(저장 후 조회인 경우에는 'save' 구분값 넘김)
			 */
			function doListDtl(psStatus){
			     var vsDeptNo = util.Grid.getCellValue(app, "grdMain", "DEPTNO");
			     util.DataMap.setValue(app, "dmParamDtl", "strDeptNo", vsDeptNo);
			     
				//조회 서브미션 호출
				util.Submit.send(app, "subListDtl", function(pbSuccess){
					if(pbSuccess) {
						if(psStatus == "save"){
							//갱신된 데이터가 조회되었습니다.
							util.Msg.notify(app, "INF-M005");
						}else{
							//조회되었습니다.
							util.Msg.notify(app, "INF-M001");
						}
						
					}
				});
			}
			
			function captureControlImage(control) {
				return new Promise(function(resolve, reject) {
					// DOM을 식별하기 위해 임시로 html 속성 부여.
					control.htmlAttr("capture-target", "true");
					
					// 임시 부여된 속성이 랜더링 된 이후에 실행.
					cpr.core.DeferredUpdateManager.INSTANCE.asyncExec(function() {
						// 임시 부여 속성을 이용하여 DOM을 찾음.
						var targetDOM = document.querySelector("[data-usr-capture-target=\"true\"]");
						// 임시로 부여한 속성 제거.
						control.removeHtmlAttr("capture-target");
						
						// 돔 상태를 이용해 이미지 렌더링
						html2canvas(
							targetDOM, {
								// see https://github.com/niklasvh/html2canvas/wiki/Documentation
								logging: false
							}
						).then(function( /* HTMLCanvasElement */ canvas) {
							if (canvas.msToBlob){ // Only Works in IE
								var blob = canvas.msToBlob();
								window.navigator.msSaveBlob(blob, control.id + ".png");
							} else {
								var link = document.createElement("a");
								link.href = canvas.toDataURL("image/png");
								link.download = control.id + ".png";
								link.click();
							}
						});
					});
				});
				
			}
			
			/*
			 * "직원정보그리드캡쳐" 버튼(btn2)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn2Click(e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
				captureControlImage(app.lookup("grdMain"));
			}
			
			/*
			 * "직원상세캡쳐" 버튼(btn3)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn3Click(e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn2 = e.control;
				captureControlImage(app.lookup("tabMain"));
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsJob");
			dataSet_1.parseData({
				"columns" : [
					{"name": "CD_NM"},
					{"name": "CD"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsEmp");
			dataSet_2.parseData({
				"info": "EMPNO",
				"columns": [
					{
						"name": "EMPNO",
						"dataType": "number"
					},
					{"name": "ENAME"},
					{"name": "JOB"},
					{
						"name": "MGR",
						"dataType": "number"
					},
					{"name": "HIREDATE"},
					{
						"name": "SAL",
						"dataType": "decimal"
					},
					{
						"name": "COMM",
						"dataType": "decimal"
					},
					{
						"name": "DEPTNO",
						"dataType": "number"
					}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsDept");
			dataSet_3.parseData({
				"columns" : [
					{
						"name": "DEPTNO",
						"dataType": "number"
					},
					{"name": "DNAME"},
					{"name": "LOC"}
				]
			});
			app.register(dataSet_3);
			var dataMap_1 = new cpr.data.DataMap("dmParam");
			dataMap_1.parseData({
				"columns" : [
					{"name": "strEName"},
					{"name": "strJob"}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmParamDtl");
			dataMap_2.parseData({
				"columns" : [{"name": "strDeptNo"}]
			});
			app.register(dataMap_2);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "app/exam/data/temp/template.json";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "app/exam/data/temp/template.json";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataSet_2, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSave");
			submission_3.action = "app/exam/data/temp/template.json";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataSet_2);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subListDtl");
			submission_4.action = "app/exam/data/temp/template.json";
			submission_4.addRequestData(dataMap_2);
			submission_4.addResponseData(dataSet_3, false);
			app.register(submission_4);
			
			var submission_5 = new cpr.protocols.Submission("subSaveDtl");
			submission_5.action = "app/exam/data/temp/template.json";
			submission_5.addRequestData(dataSet_3);
			app.register(submission_5);
			
			app.supportMedia("all and (min-width: 1320px)", "eXFrame");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1319px)", "default");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpHeader");
			// Layout
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			group_1.setLayout(verticalLayout_2);
			(function(container){
				var userDefinedControl_1 = new udc.com.appHeader("appheader1");
				userDefinedControl_1.initializeYn = "N";
				container.addChild(userDefinedControl_1, {
					"width": "500px",
					"height": "30px"
				});
			})(group_1);
			container.addChild(group_1, {
				"autoSize": "height",
				"width": "1320px",
				"height": "30px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var verticalLayout_3 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_3.leftMargin = 20;
			verticalLayout_3.rightMargin = 30;
			verticalLayout_3.topMargin = 30;
			verticalLayout_3.bottomMargin = 30;
			group_2.setLayout(verticalLayout_3);
			(function(container){
				var group_3 = new cpr.controls.Container("grp1");
				// Layout
				var verticalLayout_4 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_4.spacing = 30;
				verticalLayout_4.topMargin = 20;
				verticalLayout_4.bottomMargin = 40;
				group_3.setLayout(verticalLayout_4);
				(function(container){
					var group_4 = new cpr.controls.Container("grp3");
					// Layout
					var formLayout_1 = new cpr.controls.layouts.FormLayout();
					formLayout_1.scrollable = false;
					formLayout_1.rightMargin = "50px";
					formLayout_1.horizontalSpacing = "5px";
					formLayout_1.verticalSpacing = "5px";
					formLayout_1.setColumns(["300px", "100px"]);
					formLayout_1.setColumnAutoSizing(0, true);
					formLayout_1.setColumnAutoSizing(1, true);
					formLayout_1.setRows(["1fr"]);
					group_4.setLayout(formLayout_1);
					(function(container){
						var output_1 = new cpr.controls.Output();
						output_1.value = "캡처";
						output_1.style.css({
							"font-weight" : "bold",
							"padding-left" : "1rem",
							"font-size" : "2.5rem"
						});
						container.addChild(output_1, {
							"colIndex": 0,
							"rowIndex": 0
						});
					})(group_4);
					container.addChild(group_4, {
						"autoSize": "height",
						"width": "1270px",
						"height": "40px"
					});
					var output_2 = new cpr.controls.Output();
					output_2.value = "html2canvas 라이브러리를 사용해 화면 캡처를 구현한 화면입니다.";
					output_2.style.setClasses(["opt-tmpl"]);
					output_2.style.css({
						"padding-left" : "1rem",
						"font-size" : "1rem"
					});
					container.addChild(output_2, {
						"autoSize": "height",
						"width": "1210px",
						"height": "46px"
					});
				})(group_3);
				container.addChild(group_3, {
					"autoSize": "height",
					"width": "1270px",
					"height": "150px"
				});
				var group_5 = new cpr.controls.Container("grp2");
				// Layout
				var verticalLayout_5 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_5.spacing = 30;
				verticalLayout_5.topMargin = 10;
				verticalLayout_5.bottomMargin = 30;
				group_5.setLayout(verticalLayout_5);
				(function(container){
					var output_3 = new cpr.controls.Output();
					output_3.value = "시나리오";
					output_3.style.setClasses(["h1", "pl-3", "bg-primary", "text-white"]);
					output_3.style.css({
						"font-weight" : "bold",
						"padding-left" : "1rem",
						"font-size" : "1.75rem"
					});
					container.addChild(output_3, {
						"width": "100px",
						"height": "40px"
					});
					var output_4 = new cpr.controls.Output("ipbScenario");
					output_4.value = "1. 기능확인에 우측 상단에 '직원정보그리드캡처'와 '직원상세캡처' 버튼을 클릭한다.\r\n2. 정상적으로 캡처가 되는지 확인한다.";
					output_4.style.setClasses(["opt-tmpl"]);
					output_4.style.css({
						"padding-left" : "1rem",
						"font-size" : "1rem"
					});
					container.addChild(output_4, {
						"autoSize": "height",
						"width": "1210px",
						"height": "107px"
					});
					var group_6 = new cpr.controls.Container("grp4");
					group_6.style.css({
						"background-color" : "#dff7fb"
					});
					// Layout
					var verticalLayout_6 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_6.spacing = 10;
					verticalLayout_6.leftMargin = 30;
					verticalLayout_6.rightMargin = 30;
					verticalLayout_6.topMargin = 20;
					verticalLayout_6.bottomMargin = 20;
					group_6.setLayout(verticalLayout_6);
					(function(container){
						var output_5 = new cpr.controls.Output();
						output_5.value = "html2canvas";
						output_5.style.setClasses(["ref-title"]);
						output_5.style.css({
							"color" : "#09c2de",
							"font-weight" : "bold"
						});
						container.addChild(output_5, {
							"width": "100px",
							"height": "25px"
						});
						var output_6 = new cpr.controls.Output();
						output_6.value = "js파일은 아래 링크에서 최신 버전을 다운로드합니다.";
						output_6.style.css({
							"color" : "#09c2de"
						});
						container.addChild(output_6, {
							"autoSize": "height",
							"width": "100px",
							"height": "25px"
						});
						var button_1 = new cpr.controls.Button("btn1");
						button_1.value = "https://html2canvas.hertzen.com/";
						button_1.ariaButtonType = "link";
						button_1.style.css({
							"background-color" : "#dff7fb",
							"color" : "false",
							"border-top-width" : "0px",
							"border-right-width" : "0px",
							"border-bottom-width" : "0px",
							"background-image" : "none",
							"border-left-width" : "0px",
							"text-align" : "left"
						});
						if(typeof onBtn1Click == "function") {
							button_1.addEventListener("click", onBtn1Click);
						}
						container.addChild(button_1, {
							"autoSize": "none",
							"width": "1210px",
							"height": "20px"
						});
					})(group_6);
					container.addChild(group_6, {
						"autoSize": "height",
						"width": "1100px",
						"height": "150px"
					});
				})(group_5);
				container.addChild(group_5, {
					"autoSize": "height",
					"width": "1270px",
					"height": "370px"
				});
				var group_7 = new cpr.controls.Container("grpFunction");
				// Layout
				var verticalLayout_7 = new cpr.controls.layouts.VerticalLayout();
				group_7.setLayout(verticalLayout_7);
				(function(container){
					var group_8 = new cpr.controls.Container("grpFuncFloating");
					group_8.userAttr({"floating-header": "true"});
					// Layout
					var verticalLayout_8 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_8.bottomMargin = 30;
					group_8.setLayout(verticalLayout_8);
					(function(container){
						var output_7 = new cpr.controls.Output();
						output_7.value = "기능확인";
						output_7.style.setClasses(["h1", "pl-3", "bg-primary", "text-white"]);
						output_7.style.css({
							"font-weight" : "bold",
							"padding-left" : "1rem",
							"font-size" : "1.75rem"
						});
						container.addChild(output_7, {
							"autoSize": "none",
							"width": "1270px",
							"height": "40px"
						});
						var group_9 = new cpr.controls.Container("grp11");
						group_9.style.css({
							"border-right-style" : "solid",
							"border-top-width" : "1px",
							"border-bottom-color" : "#dedede",
							"border-right-width" : "1px",
							"border-left-color" : "#dedede",
							"border-right-color" : "#dedede",
							"border-left-width" : "1px",
							"border-top-style" : "solid",
							"background-color" : "#F0F0F0",
							"border-left-style" : "solid",
							"border-bottom-width" : "1px",
							"border-top-color" : "#dedede",
							"border-bottom-style" : "solid"
						});
						// Layout
						var verticalLayout_9 = new cpr.controls.layouts.VerticalLayout();
						verticalLayout_9.leftMargin = 30;
						verticalLayout_9.rightMargin = 30;
						verticalLayout_9.topMargin = 5;
						verticalLayout_9.bottomMargin = 10;
						group_9.setLayout(verticalLayout_9);
						(function(container){
							var group_10 = new cpr.controls.Container("grpSearch");
							group_10.userAttr({
								"mobile-column-count": "2",
								"tablet-column-count": "2"
							});
							group_10.style.setClasses(["search-box"]);
							// Layout
							var formLayout_2 = new cpr.controls.layouts.FormLayout();
							formLayout_2.topMargin = "5px";
							formLayout_2.rightMargin = "5px";
							formLayout_2.bottomMargin = "5px";
							formLayout_2.leftMargin = "5px";
							formLayout_2.setColumns(["120px", "120px", "120px", "200px", "1fr", "60px"]);
							formLayout_2.setRows(["25px"]);
							formLayout_2.setRowAutoSizing(0, true);
							group_10.setLayout(formLayout_2);
							(function(container){
								var output_8 = new cpr.controls.Output();
								output_8.value = "사원명";
								container.addChild(output_8, {
									"colIndex": 0,
									"rowIndex": 0
								});
								var inputBox_1 = new cpr.controls.InputBox("ipbEName");
								inputBox_1.fieldLabel = "사원명";
								inputBox_1.userAttr({
									"required": "",
									"autoKeydownSearch": "Y"
								});
								inputBox_1.bind("value").toDataMap(app.lookup("dmParam"), "strEName");
								container.addChild(inputBox_1, {
									"colIndex": 1,
									"rowIndex": 0
								});
								var output_9 = new cpr.controls.Output();
								output_9.value = "직급";
								container.addChild(output_9, {
									"colIndex": 2,
									"rowIndex": 0
								});
								var comboBox_1 = new cpr.controls.ComboBox("cmbJob");
								comboBox_1.fieldLabel = "직급";
								comboBox_1.bind("value").toDataMap(app.lookup("dmParam"), "strJob");
								(function(comboBox_1){
									comboBox_1.setItemSet(app.lookup("dsJob"), {
										"label": "CD_NM",
										"value": "CD"
									});
								})(comboBox_1);
								container.addChild(comboBox_1, {
									"colIndex": 3,
									"rowIndex": 0
								});
								var group_11 = new cpr.controls.Container("grp18");
								// Layout
								var formLayout_3 = new cpr.controls.layouts.FormLayout();
								formLayout_3.setColumns(["3fr", "60px"]);
								formLayout_3.setRows(["25px"]);
								group_11.setLayout(formLayout_3);
								(function(container){
									var userDefinedControl_2 = new udc.com.comBtnSearch("combtnsearch1");
									if(typeof onCombtnsearch1Search == "function") {
										userDefinedControl_2.addEventListener("search", onCombtnsearch1Search);
									}
									container.addChild(userDefinedControl_2, {
										"colIndex": 1,
										"rowIndex": 0,
										"horizontalAlign": "right",
										"verticalAlign": "fill",
										"width": 60
									});
								})(group_11);
								container.addChild(group_11, {
									"colIndex": 4,
									"rowIndex": 0,
									"colSpan": 2,
									"rowSpan": 1
								});
							})(group_10);
							container.addChild(group_10, {
								"autoSize": "height",
								"width": "1320px",
								"height": "37px"
							});
							var group_12 = new cpr.controls.Container("grpData2");
							// Layout
							var formLayout_4 = new cpr.controls.layouts.FormLayout();
							formLayout_4.setColumns(["1fr"]);
							formLayout_4.setRows(["25px", "1fr"]);
							group_12.setLayout(formLayout_4);
							(function(container){
								var group_13 = new cpr.controls.Container("grp16");
								// Layout
								var formLayout_5 = new cpr.controls.layouts.FormLayout();
								formLayout_5.topMargin = "0px";
								formLayout_5.rightMargin = "0px";
								formLayout_5.bottomMargin = "0px";
								formLayout_5.leftMargin = "0px";
								formLayout_5.horizontalSpacing = "5px";
								formLayout_5.verticalSpacing = "5px";
								formLayout_5.setColumns(["1fr", "260px"]);
								formLayout_5.setRows(["1fr"]);
								group_13.setLayout(formLayout_5);
								(function(container){
									var userDefinedControl_3 = linker.userDefinedControl_3 = new udc.com.comTitle("comtitle2");
									container.addChild(userDefinedControl_3, {
										"colIndex": 0,
										"rowIndex": 0
									});
									var group_14 = new cpr.controls.Container("grp17");
									// Layout
									var formLayout_6 = new cpr.controls.layouts.FormLayout();
									formLayout_6.horizontalSpacing = "5px";
									formLayout_6.verticalSpacing = "5px";
									formLayout_6.setColumns(["1fr", "1fr"]);
									formLayout_6.setRows(["1fr"]);
									group_14.setLayout(formLayout_6);
									(function(container){
										var button_2 = new cpr.controls.Button("btn2");
										button_2.value = "직원정보그리드캡쳐";
										if(typeof onBtn2Click == "function") {
											button_2.addEventListener("click", onBtn2Click);
										}
										container.addChild(button_2, {
											"colIndex": 0,
											"rowIndex": 0
										});
										var button_3 = new cpr.controls.Button("btn3");
										button_3.value = "직원상세캡쳐";
										if(typeof onBtn3Click == "function") {
											button_3.addEventListener("click", onBtn3Click);
										}
										container.addChild(button_3, {
											"colIndex": 1,
											"rowIndex": 0
										});
									})(group_14);
									container.addChild(group_14, {
										"colIndex": 1,
										"rowIndex": 0
									});
								})(group_13);
								container.addChild(group_13, {
									"colIndex": 0,
									"rowIndex": 0
								});
								var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdMain");
								grid_1.fieldLabel = "직원 정보";
								grid_1.init({
									"dataSet": app.lookup("dsEmp"),
									"autoFit": "3, 4, 5, 6, 7, 8, 9, 10",
									"columns": [
										{"width": "25px"},
										{"width": "25px"},
										{"width": "40px"},
										{"width": "100px"},
										{"width": "100px"},
										{"width": "100px"},
										{"width": "120px"},
										{"width": "100px"},
										{"width": "100px"},
										{"width": "100px"},
										{"width": "100px"}
									],
									"header": {
										"rows": [{"height": "27px"}],
										"cells": [
											{
												"constraint": {"rowIndex": 0, "colIndex": 0},
												"configurator": function(cell){
													cell.columnType = "checkbox";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 1},
												"configurator": function(cell){
													cell.text = "F";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 2},
												"configurator": function(cell){
													cell.text = "No";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 3},
												"configurator": function(cell){
													cell.targetColumnName = "EMPNO";
													cell.text = "사원번호";
													cell.style.setClasses(["require"]);
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 4},
												"configurator": function(cell){
													cell.targetColumnName = "ENAME";
													cell.text = "사원명";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 10},
												"configurator": function(cell){
													cell.targetColumnName = "DEPTNO";
													cell.text = "부서코드";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 9},
												"configurator": function(cell){
													cell.targetColumnName = "COMM";
													cell.text = "성과금";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 8},
												"configurator": function(cell){
													cell.targetColumnName = "SAL";
													cell.text = "급여";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 7},
												"configurator": function(cell){
													cell.targetColumnName = "HIREDATE";
													cell.text = "입사일";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 6},
												"configurator": function(cell){
													cell.targetColumnName = "MGR";
													cell.text = "관리자 사원번호";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 5},
												"configurator": function(cell){
													cell.targetColumnName = "JOB";
													cell.text = "직급";
												}
											}
										]
									},
									"detail": {
										"rows": [{"height": "25px"}],
										"cells": [
											{
												"constraint": {"rowIndex": 0, "colIndex": 0},
												"configurator": function(cell){
													cell.columnType = "checkbox";
													cell.style.css({
														"text-align" : "center"
													});
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 1},
												"configurator": function(cell){
													cell.control = (function(){
														var output_10 = new cpr.controls.Output();
														output_10.style.css({
															"text-align" : "center"
														});
														return output_10;
													})();
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 2},
												"configurator": function(cell){
													cell.columnType = "rowindex";
													cell.style.css({
														"text-align" : "center"
													});
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 3},
												"configurator": function(cell){
													cell.columnName = "EMPNO";
													cell.control = (function(){
														var inputBox_2 = new cpr.controls.InputBox("ipb7");
														inputBox_2.inputFilter = "[0-9]";
														inputBox_2.style.css({
															"text-align" : "center"
														});
														inputBox_2.bind("value").toDataColumn("EMPNO");
														return inputBox_2;
													})();
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 4},
												"configurator": function(cell){
													cell.columnName = "ENAME";
													cell.control = (function(){
														var inputBox_3 = new cpr.controls.InputBox("ipb8");
														inputBox_3.style.css({
															"text-align" : "center"
														});
														inputBox_3.bind("value").toDataColumn("ENAME");
														return inputBox_3;
													})();
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 10},
												"configurator": function(cell){
													cell.columnName = "DEPTNO";
													cell.control = (function(){
														var inputBox_4 = new cpr.controls.InputBox("ipb9");
														inputBox_4.style.css({
															"text-align" : "center"
														});
														inputBox_4.bind("value").toDataColumn("DEPTNO");
														return inputBox_4;
													})();
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 9},
												"configurator": function(cell){
													cell.columnName = "COMM";
													cell.control = (function(){
														var numberEditor_1 = new cpr.controls.NumberEditor("nbe2");
														numberEditor_1.bind("value").toDataColumn("COMM");
														return numberEditor_1;
													})();
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 8},
												"configurator": function(cell){
													cell.columnName = "SAL";
													cell.control = (function(){
														var numberEditor_2 = new cpr.controls.NumberEditor("nbe1");
														numberEditor_2.bind("value").toDataColumn("SAL");
														return numberEditor_2;
													})();
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 7},
												"configurator": function(cell){
													cell.columnName = "HIREDATE";
													cell.control = (function(){
														var dateInput_1 = new cpr.controls.DateInput("dti1");
														dateInput_1.format = "YYYY-MM-DD";
														dateInput_1.bind("value").toDataColumn("HIREDATE");
														return dateInput_1;
													})();
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 6},
												"configurator": function(cell){
													cell.columnName = "MGR";
													cell.control = (function(){
														var inputBox_5 = new cpr.controls.InputBox("ipb10");
														inputBox_5.style.css({
															"text-align" : "center"
														});
														inputBox_5.bind("value").toDataColumn("MGR");
														return inputBox_5;
													})();
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 5},
												"configurator": function(cell){
													cell.columnName = "JOB";
													cell.control = (function(){
														var comboBox_2 = new cpr.controls.ComboBox("cmb1");
														comboBox_2.style.css({
															"text-align" : "center"
														});
														(function(comboBox_2){
															comboBox_2.setItemSet(app.lookup("dsJob"), {
																"label": "CD_NM",
																"value": "CD"
															});
														})(comboBox_2);
														comboBox_2.bind("value").toDataColumn("JOB");
														return comboBox_2;
													})();
												}
											}
										]
									}
								});
								if(typeof onGrdMainSelectionChange == "function") {
									grid_1.addEventListener("selection-change", onGrdMainSelectionChange);
								}
								container.addChild(grid_1, {
									"colIndex": 0,
									"rowIndex": 1,
									"colSpan": 1,
									"rowSpan": 1
								});
							})(group_12);
							container.addChild(group_12, {
								"autoSize": "none",
								"width": "1320px",
								"height": "323px"
							});
							var group_15 = new cpr.controls.Container("grp10");
							// Layout
							var formLayout_7 = new cpr.controls.layouts.FormLayout();
							formLayout_7.horizontalSpacing = "5px";
							formLayout_7.verticalSpacing = "5px";
							formLayout_7.setColumns(["1fr"]);
							formLayout_7.setRows(["25px", "1fr"]);
							group_15.setLayout(formLayout_7);
							(function(container){
								var group_16 = new cpr.controls.Container("grp12");
								// Layout
								var formLayout_8 = new cpr.controls.layouts.FormLayout();
								formLayout_8.topMargin = "0px";
								formLayout_8.rightMargin = "0px";
								formLayout_8.bottomMargin = "0px";
								formLayout_8.leftMargin = "0px";
								formLayout_8.horizontalSpacing = "5px";
								formLayout_8.verticalSpacing = "5px";
								formLayout_8.setColumns(["1fr"]);
								formLayout_8.setRows(["1fr"]);
								group_16.setLayout(formLayout_8);
								(function(container){
									var userDefinedControl_4 = linker.userDefinedControl_4 = new udc.com.comFormTitle("comformtitle1");
									container.addChild(userDefinedControl_4, {
										"colIndex": 0,
										"rowIndex": 0
									});
								})(group_16);
								container.addChild(group_16, {
									"colIndex": 0,
									"rowIndex": 0
								});
								var tabFolder_1 = linker.tabFolder_1 = new cpr.controls.TabFolder("tabMain");
								tabFolder_1.fieldLabel = "직원 상세 탭";
								
								var tabItem_1 = (function(tabFolder){
									var tabItem_1 = new cpr.controls.TabItem();
									tabItem_1.text = "탭1";
									tabItem_1.name = "tab1";
									var group_17 = new cpr.controls.Container("grpTpc1");
									// Layout
									var formLayout_9 = new cpr.controls.layouts.FormLayout();
									formLayout_9.topMargin = "5px";
									formLayout_9.rightMargin = "5px";
									formLayout_9.bottomMargin = "5px";
									formLayout_9.leftMargin = "5px";
									formLayout_9.setColumns(["1fr"]);
									formLayout_9.setRows(["25px", "1fr"]);
									group_17.setLayout(formLayout_9);
									(function(container){
										var group_18 = new cpr.controls.Container("grp13");
										// Layout
										var formLayout_10 = new cpr.controls.layouts.FormLayout();
										formLayout_10.topMargin = "0px";
										formLayout_10.rightMargin = "0px";
										formLayout_10.bottomMargin = "0px";
										formLayout_10.leftMargin = "0px";
										formLayout_10.horizontalSpacing = "5px";
										formLayout_10.verticalSpacing = "5px";
										formLayout_10.setColumns(["1fr"]);
										formLayout_10.setRows(["1fr"]);
										group_18.setLayout(formLayout_10);
										(function(container){
											var userDefinedControl_5 = linker.userDefinedControl_5 = new udc.com.comFormTitle("comformtitle2");
											container.addChild(userDefinedControl_5, {
												"colIndex": 0,
												"rowIndex": 0
											});
										})(group_18);
										container.addChild(group_18, {
											"colIndex": 0,
											"rowIndex": 0
										});
										var group_19 = linker.group_19 = new cpr.controls.Container("frfMain");
										group_19.fieldLabel = "직원정보 상세";
										group_19.userAttr({
											"mobile-column-count": "2",
											"tablet-column-count": "2"
										});
										group_19.style.setClasses(["form-box"]);
										// Layout
										var formLayout_11 = new cpr.controls.layouts.FormLayout();
										formLayout_11.topMargin = "5px";
										formLayout_11.rightMargin = "5px";
										formLayout_11.bottomMargin = "5px";
										formLayout_11.leftMargin = "5px";
										formLayout_11.setColumns(["120px", "150px", "120px", "185px"]);
										formLayout_11.setRows(["25px", "25px", "25px", "25px", "1fr"]);
										group_19.setLayout(formLayout_11);
										(function(container){
											var output_11 = new cpr.controls.Output("opt2");
											output_11.value = "사원번호";
											output_11.style.setClasses(["require"]);
											container.addChild(output_11, {
												"colIndex": 0,
												"rowIndex": 0
											});
											var output_12 = new cpr.controls.Output("opt3");
											output_12.value = "사원명";
											container.addChild(output_12, {
												"colIndex": 2,
												"rowIndex": 0
											});
											var output_13 = new cpr.controls.Output("opt4");
											output_13.value = "직급";
											container.addChild(output_13, {
												"colIndex": 0,
												"rowIndex": 1
											});
											var output_14 = new cpr.controls.Output("opt5");
											output_14.value = "관리자 사원번호";
											container.addChild(output_14, {
												"colIndex": 2,
												"rowIndex": 1
											});
											var inputBox_6 = linker.inputBox_6 = new cpr.controls.InputBox("ipb1");
											inputBox_6.userAttr({"required": "Y"});
											inputBox_6.bind("value").toDataColumn("EMPNO");
											container.addChild(inputBox_6, {
												"colIndex": 1,
												"rowIndex": 0
											});
											var inputBox_7 = linker.inputBox_7 = new cpr.controls.InputBox("ipb2");
											inputBox_7.bind("value").toDataColumn("ENAME");
											container.addChild(inputBox_7, {
												"colIndex": 3,
												"rowIndex": 0
											});
											var inputBox_8 = new cpr.controls.InputBox("ipb4");
											inputBox_8.bind("value").toDataColumn("MGR");
											container.addChild(inputBox_8, {
												"colIndex": 3,
												"rowIndex": 1
											});
											var output_15 = new cpr.controls.Output();
											output_15.value = "입사일";
											container.addChild(output_15, {
												"colIndex": 0,
												"rowIndex": 2
											});
											var output_16 = new cpr.controls.Output();
											output_16.value = "급여";
											container.addChild(output_16, {
												"colIndex": 2,
												"rowIndex": 2
											});
											var output_17 = new cpr.controls.Output();
											output_17.value = "성과금";
											container.addChild(output_17, {
												"colIndex": 0,
												"rowIndex": 3
											});
											var output_18 = new cpr.controls.Output();
											output_18.value = "부서코드";
											container.addChild(output_18, {
												"colIndex": 2,
												"rowIndex": 3
											});
											var dateInput_2 = new cpr.controls.DateInput("dti2");
											dateInput_2.bind("value").toDataColumn("HIREDATE");
											container.addChild(dateInput_2, {
												"colIndex": 1,
												"rowIndex": 2
											});
											var inputBox_9 = new cpr.controls.InputBox("ipb11");
											inputBox_9.bind("value").toDataColumn("DEPTNO");
											container.addChild(inputBox_9, {
												"colIndex": 3,
												"rowIndex": 3
											});
											var numberEditor_3 = new cpr.controls.NumberEditor("nbe3");
											numberEditor_3.bind("value").toDataColumn("SAL");
											container.addChild(numberEditor_3, {
												"colIndex": 3,
												"rowIndex": 2
											});
											var numberEditor_4 = new cpr.controls.NumberEditor("nbe4");
											numberEditor_4.bind("value").toDataColumn("COMM");
											container.addChild(numberEditor_4, {
												"colIndex": 1,
												"rowIndex": 3
											});
											var comboBox_3 = new cpr.controls.ComboBox("cmb3");
											comboBox_3.bind("value").toDataColumn("JOB");
											(function(comboBox_3){
												comboBox_3.setItemSet(app.lookup("dsJob"), {
													"label": "CD_NM",
													"value": "CD"
												});
											})(comboBox_3);
											container.addChild(comboBox_3, {
												"colIndex": 1,
												"rowIndex": 1
											});
										})(group_19);
										container.addChild(group_19, {
											"colIndex": 0,
											"rowIndex": 1
										});
									})(group_17);
									tabItem_1.content = group_17;
									return tabItem_1;
								})(tabFolder_1);
								tabFolder_1.addTabItem(tabItem_1);
								
								var tabItem_2 = (function(tabFolder){
									var tabItem_2 = new cpr.controls.TabItem();
									tabItem_2.text = "탭2";
									tabItem_2.name = "tab2";
									var group_20 = new cpr.controls.Container("grpTpc2");
									// Layout
									var formLayout_12 = new cpr.controls.layouts.FormLayout();
									formLayout_12.topMargin = "5px";
									formLayout_12.rightMargin = "5px";
									formLayout_12.bottomMargin = "5px";
									formLayout_12.leftMargin = "5px";
									formLayout_12.setColumns(["1fr"]);
									formLayout_12.setRows(["25px", "1fr"]);
									formLayout_12.setRowAutoSizing(0, true);
									group_20.setLayout(formLayout_12);
									(function(container){
										var group_21 = new cpr.controls.Container("grp14");
										// Layout
										var formLayout_13 = new cpr.controls.layouts.FormLayout();
										formLayout_13.topMargin = "0px";
										formLayout_13.rightMargin = "0px";
										formLayout_13.bottomMargin = "0px";
										formLayout_13.leftMargin = "0px";
										formLayout_13.horizontalSpacing = "5px";
										formLayout_13.verticalSpacing = "5px";
										formLayout_13.setColumns(["1fr", "260px"]);
										formLayout_13.setRows(["1fr"]);
										group_21.setLayout(formLayout_13);
										(function(container){
											var userDefinedControl_6 = linker.userDefinedControl_6 = new udc.com.comTitle("comtitle1");
											container.addChild(userDefinedControl_6, {
												"colIndex": 0,
												"rowIndex": 0
											});
											var userDefinedControl_7 = linker.userDefinedControl_7 = new udc.com.comButton("combutton2");
											if(typeof onCombutton2Save == "function") {
												userDefinedControl_7.addEventListener("save", onCombutton2Save);
											}
											container.addChild(userDefinedControl_7, {
												"colIndex": 1,
												"rowIndex": 0
											});
										})(group_21);
										container.addChild(group_21, {
											"colIndex": 0,
											"rowIndex": 0
										});
										var grid_2 = linker.grid_2 = new cpr.controls.Grid("grdSub");
										grid_2.fieldLabel = "부서 정보";
										grid_2.init({
											"dataSet": app.lookup("dsDept"),
											"autoFit": "3, 4, 5",
											"columns": [
												{"width": "25px"},
												{"width": "25px"},
												{"width": "40px"},
												{"width": "100px"},
												{"width": "100px"},
												{"width": "100px"}
											],
											"header": {
												"rows": [{"height": "27px"}],
												"cells": [
													{
														"constraint": {"rowIndex": 0, "colIndex": 0},
														"configurator": function(cell){
															cell.columnType = "checkbox";
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 1},
														"configurator": function(cell){
															cell.text = "F";
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 2},
														"configurator": function(cell){
															cell.text = "번호";
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 5},
														"configurator": function(cell){
															cell.targetColumnName = "LOC";
															cell.text = "장소";
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 4},
														"configurator": function(cell){
															cell.targetColumnName = "DNAME";
															cell.text = "부서명";
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 3},
														"configurator": function(cell){
															cell.targetColumnName = "DEPTNO";
															cell.text = "부서코드";
															cell.style.setClasses(["require"]);
														}
													}
												]
											},
											"detail": {
												"rows": [{"height": "25px"}],
												"cells": [
													{
														"constraint": {"rowIndex": 0, "colIndex": 0},
														"configurator": function(cell){
															cell.columnType = "checkbox";
															cell.style.css({
																"text-align" : "center"
															});
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 1},
														"configurator": function(cell){
															cell.control = (function(){
																var output_19 = new cpr.controls.Output();
																output_19.style.css({
																	"text-align" : "center"
																});
																return output_19;
															})();
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 2},
														"configurator": function(cell){
															cell.columnType = "rowindex";
															cell.style.css({
																"text-align" : "center"
															});
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 5},
														"configurator": function(cell){
															cell.columnName = "LOC";
															cell.control = (function(){
																var inputBox_10 = new cpr.controls.InputBox("ipb3");
																inputBox_10.style.css({
																	"text-align" : "center"
																});
																inputBox_10.bind("value").toDataColumn("LOC");
																return inputBox_10;
															})();
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 4},
														"configurator": function(cell){
															cell.columnName = "DNAME";
															cell.control = (function(){
																var inputBox_11 = new cpr.controls.InputBox("ipb5");
																inputBox_11.style.css({
																	"text-align" : "center"
																});
																inputBox_11.bind("value").toDataColumn("DNAME");
																return inputBox_11;
															})();
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 3},
														"configurator": function(cell){
															cell.columnName = "DEPTNO";
															cell.control = (function(){
																var inputBox_12 = new cpr.controls.InputBox("ipb6");
																inputBox_12.userAttr({"required": "Y"});
																inputBox_12.style.css({
																	"text-align" : "center"
																});
																inputBox_12.bind("value").toDataColumn("DEPTNO");
																return inputBox_12;
															})();
														}
													}
												]
											}
										});
										container.addChild(grid_2, {
											"colIndex": 0,
											"rowIndex": 1
										});
									})(group_20);
									tabItem_2.content = group_20;
									return tabItem_2;
								})(tabFolder_1);
								tabFolder_1.addTabItem(tabItem_2);
								tabFolder_1.setSelectedTabItem(tabItem_1);
								container.addChild(tabFolder_1, {
									"colIndex": 0,
									"rowIndex": 1
								});
							})(group_15);
							container.addChild(group_15, {
								"autoSize": "none",
								"width": "1320px",
								"height": "250px"
							});
						})(group_9);
						container.addChild(group_9, {
							"autoSize": "height",
							"width": "1210px",
							"height": "700px"
						});
					})(group_8);
					container.addChild(group_8, {
						"autoSize": "height",
						"width": "1270px",
						"height": "700px"
					});
				})(group_7);
				container.addChild(group_7, {
					"autoSize": "height",
					"width": "1270px",
					"height": "700px"
				});
				var output_20 = new cpr.controls.Output();
				output_20.value = "주요코드";
				output_20.style.setClasses(["h1", "pl-3", "bg-primary", "text-white"]);
				output_20.style.css({
					"font-weight" : "bold",
					"padding-left" : "1rem",
					"font-size" : "1.75rem"
				});
				container.addChild(output_20, {
					"autoSize": "none",
					"width": "1210px",
					"height": "40px"
				});
				var group_22 = new cpr.controls.Container("grp15");
				// Layout
				var verticalLayout_10 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_10.spacing = 20;
				verticalLayout_10.leftMargin = 30;
				verticalLayout_10.rightMargin = 30;
				verticalLayout_10.topMargin = 0;
				verticalLayout_10.bottomMargin = 0;
				group_22.setLayout(verticalLayout_10);
				(function(container){
					var group_23 = new cpr.controls.Container("grp7");
					// Layout
					var formLayout_14 = new cpr.controls.layouts.FormLayout();
					formLayout_14.scrollable = false;
					formLayout_14.topMargin = "0px";
					formLayout_14.rightMargin = "0px";
					formLayout_14.bottomMargin = "0px";
					formLayout_14.leftMargin = "0px";
					formLayout_14.horizontalSpacing = "5px";
					formLayout_14.verticalSpacing = "5px";
					formLayout_14.setColumns(["1fr"]);
					formLayout_14.setRows(["1fr"]);
					group_23.setLayout(formLayout_14);
					(function(container){
						var group_24 = new cpr.controls.Container("grp9");
						group_24.style.setClasses(["form-box"]);
						// Layout
						var verticalLayout_11 = new cpr.controls.layouts.VerticalLayout();
						group_24.setLayout(verticalLayout_11);
						(function(container){
							var userDefinedControl_8 = new udc.tmp.Ace("ace1");
							if(typeof onAce1AfterLoad == "function") {
								userDefinedControl_8.addEventListener("afterLoad", onAce1AfterLoad);
							}
							container.addChild(userDefinedControl_8, {
								"autoSize": "height",
								"width": "300px",
								"height": "300px"
							});
						})(group_24);
						container.addChild(group_24, {
							"colIndex": 0,
							"rowIndex": 0
						});
					})(group_23);
					container.addChild(group_23, {
						"autoSize": "height",
						"width": "1210px",
						"height": "310px"
					});
				})(group_22);
				container.addChild(group_22, {
					"autoSize": "height",
					"width": "1270px",
					"height": "350px"
				});
				var group_25 = new cpr.controls.Container("grp5");
				group_25.style.setClasses(["card-inner"]);
				// Layout
				var verticalLayout_12 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_12.spacing = 15;
				verticalLayout_12.leftMargin = 0;
				verticalLayout_12.rightMargin = 0;
				verticalLayout_12.topMargin = 20;
				verticalLayout_12.bottomMargin = 40;
				group_25.setLayout(verticalLayout_12);
				(function(container){
					var output_21 = new cpr.controls.Output();
					output_21.value = "서드파티 버전 및 라이센스 정책";
					output_21.style.setClasses(["h1", "pl-3", "bg-primary", "text-white"]);
					output_21.style.css({
						"font-weight" : "bold",
						"padding-left" : "1rem",
						"font-size" : "1.75rem"
					});
					container.addChild(output_21, {
						"autoSize": "none",
						"width": "1270px",
						"height": "40px"
					});
					var group_26 = new cpr.controls.Container("grp6");
					group_26.style.css({
						"background-color" : "#FFF5EF"
					});
					// Layout
					var verticalLayout_13 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_13.leftMargin = 30;
					verticalLayout_13.rightMargin = 30;
					verticalLayout_13.topMargin = 20;
					verticalLayout_13.bottomMargin = 20;
					group_26.setLayout(verticalLayout_13);
					(function(container){
						var output_22 = new cpr.controls.Output();
						output_22.value = "서드파티 버전";
						output_22.style.css({
							"color" : "#FF9149",
							"font-weight" : "bolder"
						});
						container.addChild(output_22, {
							"width": "100px",
							"height": "25px"
						});
						var output_23 = new cpr.controls.Output();
						output_23.value = "html2canvas v1.4.1";
						output_23.style.css({
							"color" : "#FF9149"
						});
						container.addChild(output_23, {
							"autoSize": "height",
							"width": "100px",
							"height": "25px"
						});
					})(group_26);
					container.addChild(group_26, {
						"autoSize": "height",
						"width": "1040px",
						"height": "100px"
					});
					var group_27 = new cpr.controls.Container("grp8");
					group_27.style.css({
						"background-color" : "#FFF5EF"
					});
					// Layout
					var verticalLayout_14 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_14.leftMargin = 30;
					verticalLayout_14.rightMargin = 30;
					verticalLayout_14.topMargin = 20;
					verticalLayout_14.bottomMargin = 20;
					group_27.setLayout(verticalLayout_14);
					(function(container){
						var output_24 = new cpr.controls.Output();
						output_24.value = "라이센스 정책 및 호환";
						output_24.style.css({
							"color" : "#FF9149",
							"font-weight" : "bolder"
						});
						container.addChild(output_24, {
							"width": "100px",
							"height": "25px"
						});
						var output_25 = new cpr.controls.Output();
						output_25.value = "MIT License를 따릅니다.";
						output_25.style.css({
							"color" : "#FF9149"
						});
						container.addChild(output_25, {
							"autoSize": "height",
							"width": "100px",
							"height": "25px"
						});
					})(group_27);
					container.addChild(group_27, {
						"autoSize": "height",
						"width": "1270px",
						"height": "250px"
					});
				})(group_25);
				container.addChild(group_25, {
					"autoSize": "height",
					"width": "1100px",
					"height": "500px"
				});
			})(group_2);
			container.addChild(group_2, {
				"autoSize": "height",
				"width": "1320px",
				"height": "2056px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_3.ctrl = linker.grid_1;
			linker.userDefinedControl_4.ctrl = linker.tabFolder_1;
			linker.userDefinedControl_5.ctrl = linker.group_19;
			linker.group_19.setBindContext(new cpr.bind.GridSelectionContext(linker.grid_1));
			linker.inputBox_6.setNextControl(linker.inputBox_7);
			linker.inputBox_7.setPrevControl(linker.inputBox_6);
			linker.userDefinedControl_6.ctrl = linker.grid_2;
			linker.userDefinedControl_7.grid = linker.grid_2;
		}
	});
	app.title = "캡처";
	cpr.core.Platform.INSTANCE.register(app);
})();
