/*
 * App URI: app/exam/appSmpl/gridDragNDrop
 * Source Location: app/exam/appSmpl/gridDragNDrop.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/exam/appSmpl/gridDragNDrop", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * multiTabs.js
			 * Created at 2021. 7. 22. 오후 3:53:50.
			 *
			 * @author kim su hyun
			 ************************************************/
			
			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad( /* cpr.events.CEvent */ e){
				setDragSource(app.lookup('grdMain'));
				setDropTarget(app.lookup('grdMain'));
				setDragSource(app.lookup("grdMain2"));
				setDropTarget(app.lookup('grdSub'));
				setDragSource(app.lookup("grdSub"));
				setDropTarget(app.lookup('grdMain2'));
			}
			
			/*
			 * 탭 폴더에서 selection-change 이벤트 발생 시 호출.
			 * Tab Item을 선택한 후에 발생하는 이벤트.
			 */
			function onTab1SelectionChange(/* cpr.events.CSelectionEvent */ e){
				/** 
				 * @type cpr.controls.TabFolder
				 */
				app.lookup('dsEmp').revert();
				app.lookup('dsDept').revert();
			}
			
			/******* 첫번째 탭(그리드) 스크립트 *******/
			/*
			 * 사용자 정의 컨트롤에서 search 이벤트 발생 시 호출.
			 * 조회버튼 클릭시 이벤트
			 */
			function onCombtnsearchSearch(/* cpr.events.CUIEvent */ e){
				app.lookup('dsEmp').revert();
			}
			
			/******* 두번째 탭(그리드+그리드) 스크립트 *******/
			
			/*
			 * 사용자 정의 컨트롤에서 search 이벤트 발생 시 호출.
			 * 조회버튼 클릭시 이벤트
			 */
			function onCombtnsearch2Search(/* cpr.events.CUIEvent */ e){
				var combtnsearch2 = e.control;
					/** 
				 * @type udc.com.comBtnSearch
				 */
				app.lookup('dsEmp').revert();
				app.lookup('dsDept').revert();
			}
			
			function createDragSourceFeedback() {
				var feedback = new cpr.controls.Output();
				feedback.ellipsis = true;
				feedback.style.css({
					"opacity": "0.8",
					"border": "solid 1px red",
					"text-align": "center",
					"color": "black",
					"border-radius": "10px",
					"background": "white",
					"box-shadow": "0px 2px 10px #ddd",
					"cursor": "move"
				});
				return feedback;
			}
			
			/**
			 * 파라미터의 컨트롤을 드래그 가능하도록 드래그 소스를 지정하는 함수.
			 * @param {cpr.controls.UIControl} control
			 */
			function setDragSource(control) {
				var feedback = null;
				var actualRect = null;
				var startRowIndex = null;
				
				//control이 grid인지 판별
				if (control.type != 'grid') {
					return;
				}
				
				new cpr.controls.DragSource(control, {
					options: {
						dataType: "text", //데이터 타입을 text로 지정
						threadhold: 10 //10px만큼 이동해야 드래그 시작으로 인식
					},
					onDragStart: function(context) {
						if (context.targetObject.relativeTargetName != null && context.targetObject.relativeTargetName != "header") {
							context.cursor = "grabbing";
							feedback = createDragSourceFeedback();
							control.style.css("opacity", " 0.5");
							context.data = context.targetObject;
							
							//row데이터를 JSON 처리한 후 feedback에 value에 셋팅
							feedback.value = JSON.stringify(control.getRow(context.data.rowIndex).getRowData());
							
							//드래그 소스 초기화 (컨트롤)
							context.source = null;
							
						} else {
							context.cancel();
						}
					},
					onDragMove: function(context) {
						context.cursor = "grabbing";
						
						//actualRect = 해당 컨트롤에 실제크기
						var actualRect = context.source.control.getActualRect();
						
						//마우스의 이동량만큼 
						var newRect = actualRect.getTranslated(context.dragDelta);
						
						//플롯창 크기 제어
						newRect.height = actualRect.height / 20;
						newRect.width = actualRect.width / 2;
						
						//드래그 시작 지점에서 드래그 이동량만큼 이동
						newRect.top = context.dragStartLocation.y - (newRect.height / 2) + context.dragDelta.height;
						newRect.left = context.dragStartLocation.x - (newRect.width / 2) + context.dragDelta.width;
						
						//임베디드앱으로 실행될 경우 top, left 값 보정
						if (app.getActualRect().top > 0) {
							newRect.top -= app.getActualRect().top;
						}
						if (app.getActualRect().left > 0) {
							newRect.left -= app.getActualRect().left;
						}
						app.floatControl(feedback, newRect);
					},
					onDragEnd: function(context) {
						context.cursor = "";
						feedback.dispose();
						feedback = null;
						control.style.removeStyle("opacity");
					}
				});
			}
			
			function setDropTarget(control2) {
				//control이 grid인지 판별
				if (control2.type != 'grid') {
					return;
				}
				var dropTarget = new cpr.controls.DropTarget(control2, {
					isImportant: function(source) {
						return source.dataType == "text";
					},
					onDrop: function(context) {
						var deptNo = null;
						var dsEMP = app.lookup('dsEmp');
						var dsDept = app.lookup('dsDept');
						var grdSub = app.lookup('grdSub');
						var grdMain2 = app.lookup('grdMain2');
						
						if (context.targetObject != null) {
							//grdMain에 내려놓았을때
							if (control2.id == 'grdMain') {
								control2.dataSet.moveRowIndex(context.data.rowIndex, context.targetObject.rowIndex);
								control2.selectRows(context.targetObject.rowIndex);
							}
							//grdSub에서 
							else if (control2.id == 'grdSub') {
								// grdMain2로 행이동
								if (context.source.control.id == "grdMain2") {
									//dragStart한 행삭제
									deptNo = grdMain2.getRow(context.data.rowIndex).getValue('DEPTNO');
									grdMain2.deleteRow(context.data.rowIndex);
									
									//row 위에 drop할 경우
									if (context.targetObject.rowIndex != undefined) {
										dsDept.insertRow(context.targetObject.rowIndex, true);
										dsDept.setValue(context.targetObject.rowIndex + 1, 'DEPTNO', deptNo);
										
										//빈 공간에 drop할 경우
									} else {
										dsDept.addRow();
										dsDept.setValue(grdSub.getViewingEndRowIndex() + 1, 'DEPTNO', deptNo);
										control2.selectRows(grdSub.getViewingEndRowIndex() + 1);
									}
									// grdSub로 행이동								
								} else if (context.source.control.id == "grdSub") {
									control2.dataSet.moveRowIndex(context.data.rowIndex, context.targetObject.rowIndex);
									control2.selectRows(context.targetObject.rowIndex);
								}
							}
							// grdMain2에서
							else if (control2.id == 'grdMain2') {
								//grdMain2로 행이동
								if (context.source.control.id == "grdMain2") {
									control2.dataSet.moveRowIndex(context.data.rowIndex, context.targetObject.rowIndex);
									control2.selectRows(context.targetObject.rowIndex);
									//grdSub로 행이동
								} else if (context.source.control.id == "grdSub") {
									deptNo = grdSub.getRow(context.data.rowIndex).getValue('DEPTNO');
									dsDept.deleteRow(context.data.rowIndex);
									dsEMP.insertRow(context.targetObject.rowIndex, true);
									dsEMP.setValue(context.targetObject.rowIndex + 1, 'DEPTNO', deptNo)
									control2.selectRows(context.targetObject.rowIndex + 1);
								}
							}
						}
					}
				});
			}
			
			/*
			 * 사용자 정의 컨트롤에서 afterLoad 이벤트 발생 시 호출.
			 */
			function onAce1AfterLoad(e){
				/* 에디터에 소스 표시 */
				var vcAceEditor = app.lookup("ace1");
				vcAceEditor.value = createDragSourceFeedback + setDragSource + setDropTarget;
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsJob");
			dataSet_1.parseData({
				"columns" : [
					{"name": "CD_NM"},
					{"name": "CD"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsEmp");
			dataSet_2.parseData({
				"info": "EMPNO",
				"columns": [
					{
						"name": "EMPNO",
						"dataType": "number"
					},
					{"name": "ENAME"},
					{"name": "JOB"},
					{
						"name": "MGR",
						"dataType": "number"
					},
					{"name": "HIREDATE"},
					{
						"name": "SAL",
						"dataType": "decimal"
					},
					{
						"name": "COMM",
						"dataType": "decimal"
					},
					{
						"name": "DEPTNO",
						"dataType": "number"
					}
				],
				"rows": [
					{"EMPNO": "7698", "ENAME": "BLACK", "JOB": "AAA03", "MGR": "7839", "HIREDATE": "1981-05-01", "SAL": "2850", "COMM": "1", "DEPTNO": "30"},
					{"EMPNO": "7499", "ENAME": "ALLEN", "JOB": "AAA05", "MGR": "7698", "HIREDATE": "1981-02-20", "SAL": "1600", "COMM": "2", "DEPTNO": "30"},
					{"EMPNO": "7521", "ENAME": "WARD", "JOB": "AAA05", "MGR": "7698", "HIREDATE": "1981-02-22", "SAL": "1250", "COMM": "3", "DEPTNO": "30"},
					{"EMPNO": "7654", "ENAME": "MARTIN", "JOB": "AAA05", "MGR": "7698", "HIREDATE": "1981-09-28", "SAL": "1250", "COMM": "4", "DEPTNO": "30"},
					{"EMPNO": "7844", "ENAME": "TURNER", "JOB": "AAA05", "MGR": "7698", "HIREDATE": "1981-09-08", "SAL": "1500", "COMM": "5", "DEPTNO": "30"},
					{"EMPNO": "7900", "ENAME": "JAMES", "JOB": "AAA02", "MGR": "7698", "HIREDATE": "1981-12-03", "SAL": "950", "COMM": "6", "DEPTNO": "30"},
					{"EMPNO": "7839", "ENAME": "KING", "JOB": "AAA04", "MGR": "7566", "HIREDATE": "1981-11-17", "SAL": "5000", "COMM": "7", "DEPTNO": "01"},
					{"EMPNO": "7782", "ENAME": "CLARK", "JOB": "AAA03", "MGR": "7839", "HIREDATE": "1981-06-09", "SAL": "2450", "COMM": "8", "DEPTNO": "01"},
					{"EMPNO": "7934", "ENAME": "MILLER", "JOB": "AAA02", "MGR": "7782", "HIREDATE": "1992-01-23", "SAL": "1300", "COMM": "9", "DEPTNO": "10"},
					{"EMPNO": "7788", "ENAME": "SCOTT", "JOB": "AAA01", "MGR": "7566", "HIREDATE": "1981-04-19", "SAL": "3000", "COMM": "10", "DEPTNO": "20"},
					{"EMPNO": "7902", "ENAME": "FORD", "JOB": "AAA01", "MGR": "7566", "HIREDATE": "1981-12-03", "SAL": "3000", "COMM": "11", "DEPTNO": "20"},
					{"EMPNO": "7566", "ENAME": "JONES", "JOB": "AAA03", "MGR": "7839", "HIREDATE": "1981-04-02", "SAL": "2975", "COMM": "12", "DEPTNO": "20"},
					{"EMPNO": "7369", "ENAME": "SMITH", "JOB": "AAA02", "MGR": "7902", "HIREDATE": "1980-12-17", "SAL": "800", "COMM": "13", "DEPTNO": "20"},
					{"EMPNO": "7876", "ENAME": "ADAMS", "JOB": "AAA02", "MGR": "7788", "HIREDATE": "1981-05-23", "SAL": "1100", "COMM": "14", "DEPTNO": "20"},
					{"EMPNO": "6698", "ENAME": "홍길동", "JOB": "AAA03", "MGR": "7839", "HIREDATE": "1981-05-01", "SAL": "2850", "COMM": "15", "DEPTNO": "30"},
					{"EMPNO": "6499", "ENAME": "김태희", "JOB": "AAA05", "MGR": "7698", "HIREDATE": "1981-02-20", "SAL": "1600", "COMM": "16", "DEPTNO": "30"},
					{"EMPNO": "6521", "ENAME": "전지현", "JOB": "AAA05", "MGR": "7698", "HIREDATE": "1981-02-22", "SAL": "1250", "COMM": "17", "DEPTNO": "30"},
					{"EMPNO": "6654", "ENAME": "유재석", "JOB": "AAA05", "MGR": "7698", "HIREDATE": "1981-09-28", "SAL": "1250", "COMM": "18", "DEPTNO": "30"},
					{"EMPNO": "6844", "ENAME": "송혜교", "MGR": "7698", "JOB": "AAA05", "HIREDATE": "1981-09-08", "SAL": "1500", "DEPTNO": "30"},
					{"EMPNO": "6900", "ENAME": "강호동", "JOB": "AAA02", "MGR": "7698", "HIREDATE": "1981-12-03", "SAL": "950", "COMM": "19", "DEPTNO": "30"},
					{"EMPNO": "6839", "ENAME": "신동엽", "JOB": "AAA04", "MGR": "7566", "HIREDATE": "1981-11-17", "SAL": "5000", "COMM": "20", "DEPTNO": "10"},
					{"EMPNO": "6782", "ENAME": "이시영", "JOB": "AAA03", "MGR": "7839", "HIREDATE": "1981-06-09", "SAL": "2450", "COMM": "21", "DEPTNO": "10"},
					{"EMPNO": "6934", "ENAME": "김구라", "JOB": "AAA02", "MGR": "7782", "HIREDATE": "1992-01-23", "SAL": "1300", "COMM": "22", "DEPTNO": "10"},
					{"EMPNO": "6788", "ENAME": "박나래", "JOB": "AAA01", "MGR": "7566", "HIREDATE": "1981-04-19", "SAL": "3000", "COMM": "23", "DEPTNO": "20"},
					{"EMPNO": "6902", "ENAME": "이경규", "JOB": "AAA01", "MGR": "7566", "HIREDATE": "1981-12-03", "SAL": "3000", "COMM": "24", "DEPTNO": "20"},
					{"EMPNO": "6566", "ENAME": "김숙", "JOB": "AAA03", "MGR": "7839", "HIREDATE": "1981-04-02", "SAL": "2975", "COMM": "25", "DEPTNO": "20"},
					{"EMPNO": "6369", "ENAME": "전현무", "JOB": "AAA02", "MGR": "7902", "HIREDATE": "1980-12-17", "SAL": "800", "COMM": "26", "DEPTNO": "20"},
					{"EMPNO": "6876", "ENAME": "이영자", "JOB": "AAA02", "MGR": "7788", "HIREDATE": "1981-05-23", "SAL": "1100", "COMM": "27", "DEPTNO": "20"},
					{"EMPNO": "8698", "ENAME": "AMY", "JOB": "AAA03", "MGR": "7839", "HIREDATE": "1981-05-01", "SAL": "2850", "COMM": "28", "DEPTNO": "30"},
					{"EMPNO": "8499", "ENAME": "JOHN", "JOB": "AAA05", "MGR": "7698", "HIREDATE": "1981-02-20", "SAL": "1600", "COMM": "29", "DEPTNO": "30"},
					{"EMPNO": "8521", "ENAME": "LOEN", "JOB": "AAA05", "MGR": "7698", "HIREDATE": "1981-02-22", "SAL": "1250", "COMM": "30", "DEPTNO": "30"},
					{"EMPNO": "8654", "ENAME": "MIKLE", "JOB": "AAA05", "MGR": "7698", "HIREDATE": "1981-09-28", "SAL": "1250", "COMM": "31", "DEPTNO": "30"},
					{"EMPNO": "8844", "ENAME": "MICHEL", "JOB": "AAA05", "MGR": "7698", "HIREDATE": "1981-09-08", "SAL": "1500", "COMM": "32", "DEPTNO": "30"},
					{"EMPNO": "8900", "ENAME": "JOSEPH", "JOB": "AAA02", "MGR": "7698", "HIREDATE": "1981-12-03", "SAL": "950", "COMM": "33", "DEPTNO": "30"},
					{"EMPNO": "8839", "ENAME": "ROBERT", "JOB": "AAA04", "MGR": "7566", "HIREDATE": "1981-11-17", "SAL": "5000", "COMM": "34", "DEPTNO": "80"},
					{"EMPNO": "8782", "ENAME": "JEAN", "JOB": "AAA03", "MGR": "7839", "HIREDATE": "1981-06-09", "SAL": "2450", "COMM": "35", "DEPTNO": "40"},
					{"EMPNO": "8934", "ENAME": "TES", "JOB": "AAA02", "MGR": "7782", "HIREDATE": "1992-01-23", "SAL": "1300", "COMM": "36", "DEPTNO": "50"},
					{"EMPNO": "8788", "ENAME": "LUTIN", "JOB": "AAA01", "MGR": "7566", "HIREDATE": "1981-04-19", "SAL": "3000", "COMM": "37", "DEPTNO": "60"},
					{"EMPNO": "8902", "ENAME": "VALY", "JOB": "AAA01", "MGR": "7566", "HIREDATE": "1981-12-03", "SAL": "3000", "COMM": "38", "DEPTNO": "70"},
					{"EMPNO": "8566", "ENAME": "NAY", "JOB": "AAA03", "MGR": "7839", "HIREDATE": "1981-04-02", "SAL": "2975", "COMM": "39", "DEPTNO": "4"},
					{"EMPNO": "8369", "ENAME": "LAME", "JOB": "AAA02", "MGR": "7902", "HIREDATE": "1980-12-17", "SAL": "800", "COMM": "40", "DEPTNO": "3"},
					{"EMPNO": "8876", "ENAME": "PASTOR", "JOB": "AAA02", "MGR": "7788", "HIREDATE": "1981-05-23", "SAL": "1100", "COMM": "41", "DEPTNO": "1"}
				]
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsDept");
			dataSet_3.parseData({
				"info": "DEPTNO",
				"columns": [
					{
						"name": "DEPTNO",
						"dataType": "number"
					},
					{"name": "DNAME"},
					{"name": "LOC"}
				],
				"rows": [
					{"DEPTNO": "1", "DNAME": "Administration", "LOC": "Venice"},
					{"DEPTNO": "10", "DNAME": "Purchasing", "LOC": "NEW YORK"},
					{"DEPTNO": "20", "DNAME": "Marketing", "LOC": "DALLAS"},
					{"DEPTNO": "3", "DNAME": "Finance", "LOC": "Venice"},
					{"DEPTNO": "30", "DNAME": "Treasury", "LOC": "CHICAGO"},
					{"DEPTNO": "40", "DNAME": "Corporate Tax", "LOC": "BOSTON"},
					{"DEPTNO": "50", "DNAME": "Treasury", "LOC": "London"},
					{"DEPTNO": "4", "DNAME": "IT", "LOC": "Venice"},
					{"DEPTNO": "60", "DNAME": "IT Support", "LOC": "CHICAGO"},
					{"DEPTNO": "70", "DNAME": "IT Helpdesk", "LOC": "Geneva"},
					{"DEPTNO": "80", "DNAME": "NOC", "LOC": "Utrecht"}
				]
			});
			app.register(dataSet_3);
			
			app.supportMedia("all and (min-width: 1320px)", "eXFrame");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1319px)", "default");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpHeader");
			// Layout
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			group_1.setLayout(verticalLayout_2);
			(function(container){
				var userDefinedControl_1 = new udc.com.appHeader("appheader1");
				userDefinedControl_1.initializeYn = "N";
				container.addChild(userDefinedControl_1, {
					"width": "500px",
					"height": "30px"
				});
			})(group_1);
			container.addChild(group_1, {
				"autoSize": "height",
				"width": "1320px",
				"height": "30px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var verticalLayout_3 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_3.leftMargin = 20;
			verticalLayout_3.rightMargin = 30;
			verticalLayout_3.topMargin = 30;
			verticalLayout_3.bottomMargin = 30;
			group_2.setLayout(verticalLayout_3);
			(function(container){
				var group_3 = new cpr.controls.Container("grp1");
				// Layout
				var verticalLayout_4 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_4.spacing = 30;
				verticalLayout_4.topMargin = 20;
				verticalLayout_4.bottomMargin = 40;
				group_3.setLayout(verticalLayout_4);
				(function(container){
					var group_4 = new cpr.controls.Container("grp3");
					// Layout
					var formLayout_1 = new cpr.controls.layouts.FormLayout();
					formLayout_1.scrollable = false;
					formLayout_1.rightMargin = "50px";
					formLayout_1.horizontalSpacing = "5px";
					formLayout_1.verticalSpacing = "5px";
					formLayout_1.setColumns(["300px", "100px"]);
					formLayout_1.setColumnAutoSizing(0, true);
					formLayout_1.setColumnAutoSizing(1, true);
					formLayout_1.setRows(["1fr"]);
					group_4.setLayout(formLayout_1);
					(function(container){
						var output_1 = new cpr.controls.Output();
						output_1.value = "그리드 행 이동";
						output_1.style.css({
							"font-weight" : "bold",
							"padding-left" : "1rem",
							"font-size" : "2.5rem"
						});
						container.addChild(output_1, {
							"colIndex": 0,
							"rowIndex": 0
						});
					})(group_4);
					container.addChild(group_4, {
						"autoSize": "height",
						"width": "1270px",
						"height": "40px"
					});
					var output_2 = new cpr.controls.Output();
					output_2.value = "이 페이지는 원그리드와 투그리드 간 드래그앤드랍 행 이동 예제입니다.";
					output_2.style.setClasses(["opt-tmpl"]);
					output_2.style.css({
						"padding-left" : "1rem",
						"font-size" : "1rem"
					});
					container.addChild(output_2, {
						"autoSize": "height",
						"width": "1210px",
						"height": "46px"
					});
				})(group_3);
				container.addChild(group_3, {
					"autoSize": "height",
					"width": "1270px",
					"height": "150px"
				});
				var group_5 = new cpr.controls.Container("grp2");
				// Layout
				var verticalLayout_5 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_5.spacing = 30;
				verticalLayout_5.topMargin = 10;
				verticalLayout_5.bottomMargin = 30;
				group_5.setLayout(verticalLayout_5);
				(function(container){
					var output_3 = new cpr.controls.Output();
					output_3.value = "시나리오";
					output_3.style.setClasses(["h1", "pl-3", "bg-primary", "text-white"]);
					output_3.style.css({
						"font-weight" : "bold",
						"padding-left" : "1rem",
						"font-size" : "1.75rem"
					});
					container.addChild(output_3, {
						"width": "100px",
						"height": "40px"
					});
					var output_4 = new cpr.controls.Output("ipbScenario");
					output_4.value = "1. 원그리드에서 행을 드래그 앤 드랍해서 위치를 이동시켜정상적으로 작동하는지 확인합니다.\r\n2. 탭폴더에서 '그리드 + 그리드' 아이템을 클릭해서 투그리드 화면으로 이동합니다.\r\n3. 왼쪽 그리드에서 오른쪽 그리드로 행을 이동시켜 정상적으로 작동하는지 확인합니다.\r\n4. 오른쪽에서 왼쪽 그리드로 행을 이동시켜 정상적으로 작동하는지 확인합니다.";
					output_4.style.setClasses(["opt-tmpl"]);
					output_4.style.css({
						"padding-left" : "1rem",
						"font-size" : "1rem"
					});
					container.addChild(output_4, {
						"autoSize": "height",
						"width": "1210px",
						"height": "107px"
					});
				})(group_5);
				container.addChild(group_5, {
					"autoSize": "height",
					"width": "1270px",
					"height": "345px"
				});
				var group_6 = new cpr.controls.Container("grpFunction");
				// Layout
				var verticalLayout_6 = new cpr.controls.layouts.VerticalLayout();
				group_6.setLayout(verticalLayout_6);
				(function(container){
					var group_7 = new cpr.controls.Container("grpFuncFloating");
					group_7.userAttr({"floating-header": "true"});
					// Layout
					var verticalLayout_7 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_7.bottomMargin = 30;
					group_7.setLayout(verticalLayout_7);
					(function(container){
						var output_5 = new cpr.controls.Output();
						output_5.value = "기능확인";
						output_5.style.setClasses(["h1", "pl-3", "bg-primary", "text-white"]);
						output_5.style.css({
							"font-weight" : "bold",
							"padding-left" : "1rem",
							"font-size" : "1.75rem"
						});
						container.addChild(output_5, {
							"autoSize": "none",
							"width": "1270px",
							"height": "40px"
						});
						var group_8 = new cpr.controls.Container("grp11");
						group_8.style.css({
							"border-right-style" : "solid",
							"border-top-width" : "1px",
							"border-bottom-color" : "#dedede",
							"border-right-width" : "1px",
							"border-left-color" : "#dedede",
							"border-right-color" : "#dedede",
							"border-left-width" : "1px",
							"border-top-style" : "solid",
							"background-color" : "#F0F0F0",
							"border-left-style" : "solid",
							"border-bottom-width" : "1px",
							"border-top-color" : "#dedede",
							"border-bottom-style" : "solid"
						});
						// Layout
						var verticalLayout_8 = new cpr.controls.layouts.VerticalLayout();
						verticalLayout_8.leftMargin = 30;
						verticalLayout_8.rightMargin = 30;
						verticalLayout_8.topMargin = 5;
						verticalLayout_8.bottomMargin = 10;
						group_8.setLayout(verticalLayout_8);
						(function(container){
							var tabFolder_1 = new cpr.controls.TabFolder("tab1");
							
							var tabItem_1 = (function(tabFolder){
								var tabItem_1 = new cpr.controls.TabItem();
								tabItem_1.text = "그리드";
								var group_9 = new cpr.controls.Container("grp4");
								// Layout
								var formLayout_2 = new cpr.controls.layouts.FormLayout();
								formLayout_2.topMargin = "5px";
								formLayout_2.rightMargin = "5px";
								formLayout_2.bottomMargin = "5px";
								formLayout_2.leftMargin = "5px";
								formLayout_2.horizontalSpacing = "5px";
								formLayout_2.verticalSpacing = "5px";
								formLayout_2.setColumns(["1fr"]);
								formLayout_2.setRows(["37px", "25px", "1fr"]);
								formLayout_2.setRowAutoSizing(0, true);
								formLayout_2.setRowAutoSizing(1, true);
								group_9.setLayout(formLayout_2);
								(function(container){
									var group_10 = new cpr.controls.Container("grpSearch1");
									group_10.userAttr({
										"mobile-column-count": "2",
										"tablet-column-count": "2"
									});
									group_10.style.setClasses(["search-box"]);
									// Layout
									var formLayout_3 = new cpr.controls.layouts.FormLayout();
									formLayout_3.topMargin = "5px";
									formLayout_3.rightMargin = "5px";
									formLayout_3.bottomMargin = "5px";
									formLayout_3.leftMargin = "5px";
									formLayout_3.setColumns(["120px", "200px", "1fr", "60px"]);
									formLayout_3.setRows(["25px"]);
									formLayout_3.setRowAutoSizing(0, true);
									group_10.setLayout(formLayout_3);
									(function(container){
										var output_6 = new cpr.controls.Output();
										output_6.value = "학번";
										container.addChild(output_6, {
											"colIndex": 0,
											"rowIndex": 0
										});
										var inputBox_1 = new cpr.controls.InputBox("ipb2");
										inputBox_1.tooltip = "학번";
										inputBox_1.userAttr({"autoKeydownSearch": "Y"});
										container.addChild(inputBox_1, {
											"colIndex": 1,
											"rowIndex": 0
										});
										var group_11 = new cpr.controls.Container("grp10");
										// Layout
										var formLayout_4 = new cpr.controls.layouts.FormLayout();
										formLayout_4.horizontalSpacing = "5px";
										formLayout_4.verticalSpacing = "5px";
										formLayout_4.setColumns(["1fr", "60px"]);
										formLayout_4.setRows(["25px"]);
										group_11.setLayout(formLayout_4);
										(function(container){
											var userDefinedControl_2 = new udc.com.comBtnSearch("combtnsearch");
											if(typeof onCombtnsearchSearch == "function") {
												userDefinedControl_2.addEventListener("search", onCombtnsearchSearch);
											}
											container.addChild(userDefinedControl_2, {
												"colIndex": 1,
												"rowIndex": 0,
												"horizontalAlign": "fill",
												"width": 60
											});
										})(group_11);
										container.addChild(group_11, {
											"colIndex": 2,
											"rowIndex": 0,
											"colSpan": 2,
											"rowSpan": 1
										});
									})(group_10);
									container.addChild(group_10, {
										"colIndex": 0,
										"rowIndex": 0
									});
									var group_12 = new cpr.controls.Container("grpData1");
									// Layout
									var formLayout_5 = new cpr.controls.layouts.FormLayout();
									formLayout_5.topMargin = "5px";
									formLayout_5.rightMargin = "5px";
									formLayout_5.bottomMargin = "5px";
									formLayout_5.leftMargin = "5px";
									formLayout_5.setColumns(["1fr"]);
									formLayout_5.setRows(["25px", "1fr"]);
									formLayout_5.setRowAutoSizing(0, true);
									group_12.setLayout(formLayout_5);
									(function(container){
										var group_13 = new cpr.controls.Container("grp12");
										group_13.userAttr({
											"mobile-column-count": "",
											"tablet-column-count": ""
										});
										// Layout
										var formLayout_6 = new cpr.controls.layouts.FormLayout();
										formLayout_6.setColumns(["1fr", "260px"]);
										formLayout_6.setRows(["1fr"]);
										group_13.setLayout(formLayout_6);
										(function(container){
											var userDefinedControl_3 = linker.userDefinedControl_3 = new udc.com.comTitle("comtitle1");
											userDefinedControl_3.bind("rowCount").toExpression("#dsEmp.getRowCount()");
											container.addChild(userDefinedControl_3, {
												"colIndex": 0,
												"rowIndex": 0
											});
											var userDefinedControl_4 = linker.userDefinedControl_4 = new udc.com.comButton("combutton1");
											userDefinedControl_4.focusColumnName = "PARTY_ID";
											container.addChild(userDefinedControl_4, {
												"colIndex": 1,
												"rowIndex": 0
											});
										})(group_13);
										container.addChild(group_13, {
											"colIndex": 0,
											"rowIndex": 0
										});
										var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdMain");
										grid_1.fieldLabel = "직원 정보";
										grid_1.init({
											"dataSet": app.lookup("dsEmp"),
											"autoFit": "3, 4, 5, 6, 7, 8, 9, 10",
											"resizableColumns": "5, 6, 7, 8, 9, 10",
											"columns": [
												{"width": "25px"},
												{"width": "25px"},
												{"width": "40px"},
												{"width": "100px"},
												{"width": "100px"},
												{"width": "100px"},
												{"width": "120px"},
												{"width": "100px"},
												{"width": "100px"},
												{"width": "100px"},
												{"width": "100px"}
											],
											"header": {
												"rows": [{"height": "27px"}],
												"cells": [
													{
														"constraint": {"rowIndex": 0, "colIndex": 0},
														"configurator": function(cell){
															cell.columnType = "checkbox";
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 1},
														"configurator": function(cell){
															cell.text = "F";
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 2},
														"configurator": function(cell){
															cell.text = "No";
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 3},
														"configurator": function(cell){
															cell.targetColumnName = "EMPNO";
															cell.text = "사원번호";
															cell.style.setClasses(["require"]);
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 4},
														"configurator": function(cell){
															cell.targetColumnName = "ENAME";
															cell.text = "사원명";
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 10},
														"configurator": function(cell){
															cell.targetColumnName = "DEPTNO";
															cell.text = "부서코드";
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 9},
														"configurator": function(cell){
															cell.targetColumnName = "COMM";
															cell.text = "성과금";
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 8},
														"configurator": function(cell){
															cell.targetColumnName = "SAL";
															cell.text = "급여";
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 7},
														"configurator": function(cell){
															cell.targetColumnName = "HIREDATE";
															cell.text = "입사일";
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 6},
														"configurator": function(cell){
															cell.targetColumnName = "MGR";
															cell.text = "관리자 사원번호";
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 5},
														"configurator": function(cell){
															cell.targetColumnName = "JOB";
															cell.text = "직급";
														}
													}
												]
											},
											"detail": {
												"rows": [{"height": "25px"}],
												"cells": [
													{
														"constraint": {"rowIndex": 0, "colIndex": 0},
														"configurator": function(cell){
															cell.columnType = "checkbox";
															cell.style.css({
																"text-align" : "center"
															});
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 1},
														"configurator": function(cell){
															cell.control = (function(){
																var output_7 = new cpr.controls.Output();
																output_7.style.css({
																	"text-align" : "center"
																});
																return output_7;
															})();
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 2},
														"configurator": function(cell){
															cell.columnType = "rowindex";
															cell.style.css({
																"text-align" : "center"
															});
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 3},
														"configurator": function(cell){
															cell.columnName = "EMPNO";
															cell.control = (function(){
																var inputBox_2 = new cpr.controls.InputBox("ipb1");
																inputBox_2.style.css({
																	"text-align" : "center"
																});
																inputBox_2.bind("value").toDataColumn("EMPNO");
																return inputBox_2;
															})();
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 4},
														"configurator": function(cell){
															cell.columnName = "ENAME";
															cell.control = (function(){
																var inputBox_3 = new cpr.controls.InputBox("ipb4");
																inputBox_3.style.css({
																	"text-align" : "center"
																});
																inputBox_3.bind("value").toDataColumn("ENAME");
																return inputBox_3;
															})();
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 10},
														"configurator": function(cell){
															cell.columnName = "DEPTNO";
															cell.control = (function(){
																var inputBox_4 = new cpr.controls.InputBox("ipb5");
																inputBox_4.style.css({
																	"text-align" : "center"
																});
																inputBox_4.bind("value").toDataColumn("DEPTNO");
																return inputBox_4;
															})();
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 9},
														"configurator": function(cell){
															cell.columnName = "COMM";
															cell.control = (function(){
																var numberEditor_1 = new cpr.controls.NumberEditor("nbe4");
																numberEditor_1.bind("value").toDataColumn("COMM");
																return numberEditor_1;
															})();
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 8},
														"configurator": function(cell){
															cell.columnName = "SAL";
															cell.control = (function(){
																var numberEditor_2 = new cpr.controls.NumberEditor("nbe1");
																numberEditor_2.bind("value").toDataColumn("SAL");
																return numberEditor_2;
															})();
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 7},
														"configurator": function(cell){
															cell.columnName = "HIREDATE";
															cell.control = (function(){
																var dateInput_1 = new cpr.controls.DateInput("dti1");
																dateInput_1.format = "YYYY-MM-DD";
																dateInput_1.bind("value").toDataColumn("HIREDATE");
																return dateInput_1;
															})();
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 6},
														"configurator": function(cell){
															cell.columnName = "MGR";
															cell.control = (function(){
																var inputBox_5 = new cpr.controls.InputBox("ipb6");
																inputBox_5.style.css({
																	"text-align" : "center"
																});
																inputBox_5.bind("value").toDataColumn("MGR");
																return inputBox_5;
															})();
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 5},
														"configurator": function(cell){
															cell.columnName = "JOB";
															cell.control = (function(){
																var inputBox_6 = new cpr.controls.InputBox("ipb13");
																inputBox_6.style.css({
																	"text-align" : "center"
																});
																inputBox_6.bind("value").toDataColumn("JOB");
																return inputBox_6;
															})();
															cell.controlConstraint = {};
														}
													}
												]
											}
										});
										container.addChild(grid_1, {
											"colIndex": 0,
											"rowIndex": 1
										});
									})(group_12);
									container.addChild(group_12, {
										"colIndex": 0,
										"rowIndex": 2
									});
									var group_14 = new cpr.controls.Container("grp13");
									// Layout
									var formLayout_7 = new cpr.controls.layouts.FormLayout();
									formLayout_7.scrollable = false;
									formLayout_7.topMargin = "0px";
									formLayout_7.rightMargin = "0px";
									formLayout_7.bottomMargin = "0px";
									formLayout_7.leftMargin = "0px";
									formLayout_7.horizontalSpacing = "0px";
									formLayout_7.verticalSpacing = "0px";
									formLayout_7.setColumns(["1fr"]);
									formLayout_7.setRows(["25px"]);
									group_14.setLayout(formLayout_7);
									(function(container){
										var output_8 = new cpr.controls.Output();
										output_8.value = "원그리드 간 드래그앤드랍 행 이동 예제입니다.";
										container.addChild(output_8, {
											"colIndex": 0,
											"rowIndex": 0
										});
									})(group_14);
									container.addChild(group_14, {
										"colIndex": 0,
										"rowIndex": 1
									});
								})(group_9);
								tabItem_1.content = group_9;
								return tabItem_1;
							})(tabFolder_1);
							tabFolder_1.addTabItem(tabItem_1);
							
							var tabItem_2 = (function(tabFolder){
								var tabItem_2 = new cpr.controls.TabItem();
								tabItem_2.text = "그리드+그리드";
								var group_15 = new cpr.controls.Container("grp14");
								// Layout
								var formLayout_8 = new cpr.controls.layouts.FormLayout();
								formLayout_8.topMargin = "5px";
								formLayout_8.rightMargin = "5px";
								formLayout_8.bottomMargin = "5px";
								formLayout_8.leftMargin = "5px";
								formLayout_8.horizontalSpacing = "5px";
								formLayout_8.verticalSpacing = "5px";
								formLayout_8.setColumns(["1fr"]);
								formLayout_8.setRows(["37px", "25px", "1fr"]);
								formLayout_8.setRowAutoSizing(0, true);
								formLayout_8.setRowAutoSizing(1, true);
								group_15.setLayout(formLayout_8);
								(function(container){
									var group_16 = new cpr.controls.Container("grpSearch");
									group_16.userAttr({
										"mobile-column-count": "2",
										"tablet-column-count": "2"
									});
									group_16.style.setClasses(["search-box"]);
									// Layout
									var formLayout_9 = new cpr.controls.layouts.FormLayout();
									formLayout_9.topMargin = "5px";
									formLayout_9.rightMargin = "5px";
									formLayout_9.bottomMargin = "5px";
									formLayout_9.leftMargin = "5px";
									formLayout_9.setColumns(["120px", "120px", "120px", "200px", "1fr", "60px"]);
									formLayout_9.setRows(["25px"]);
									formLayout_9.setRowAutoSizing(0, true);
									group_16.setLayout(formLayout_9);
									(function(container){
										var output_9 = new cpr.controls.Output();
										output_9.value = "사원명";
										container.addChild(output_9, {
											"colIndex": 0,
											"rowIndex": 0
										});
										var inputBox_7 = new cpr.controls.InputBox("ipbEName");
										inputBox_7.fieldLabel = "사원명";
										inputBox_7.userAttr({"autoKeydownSearch": "Y"});
										container.addChild(inputBox_7, {
											"colIndex": 1,
											"rowIndex": 0
										});
										var output_10 = new cpr.controls.Output();
										output_10.value = "직급";
										container.addChild(output_10, {
											"colIndex": 2,
											"rowIndex": 0
										});
										var comboBox_1 = new cpr.controls.ComboBox("cmbJob");
										comboBox_1.fieldLabel = "직급";
										(function(comboBox_1){
											comboBox_1.addItem(new cpr.controls.Item("전체", ""));
											comboBox_1.setItemSet(app.lookup("dsJob"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_1);
										container.addChild(comboBox_1, {
											"colIndex": 3,
											"rowIndex": 0
										});
										var group_17 = new cpr.controls.Container("grp19");
										// Layout
										var formLayout_10 = new cpr.controls.layouts.FormLayout();
										formLayout_10.setColumns(["3fr", "60px"]);
										formLayout_10.setRows(["25px"]);
										formLayout_10.setRowAutoSizing(0, true);
										group_17.setLayout(formLayout_10);
										(function(container){
											var userDefinedControl_5 = new udc.com.comBtnSearch("combtnsearch2");
											if(typeof onCombtnsearch2Search == "function") {
												userDefinedControl_5.addEventListener("search", onCombtnsearch2Search);
											}
											container.addChild(userDefinedControl_5, {
												"colIndex": 1,
												"rowIndex": 0,
												"horizontalAlign": "right",
												"verticalAlign": "fill",
												"width": 60
											});
										})(group_17);
										container.addChild(group_17, {
											"colIndex": 4,
											"rowIndex": 0,
											"colSpan": 2,
											"rowSpan": 1
										});
									})(group_16);
									container.addChild(group_16, {
										"colIndex": 0,
										"rowIndex": 0
									});
									var group_18 = new cpr.controls.Container("grp20");
									// Layout
									var formLayout_11 = new cpr.controls.layouts.FormLayout();
									formLayout_11.scrollable = false;
									formLayout_11.topMargin = "0px";
									formLayout_11.rightMargin = "0px";
									formLayout_11.bottomMargin = "0px";
									formLayout_11.leftMargin = "0px";
									formLayout_11.horizontalSpacing = "0px";
									formLayout_11.verticalSpacing = "0px";
									formLayout_11.setColumns(["1fr"]);
									formLayout_11.setRows(["25px"]);
									group_18.setLayout(formLayout_11);
									(function(container){
										var output_11 = new cpr.controls.Output();
										output_11.value = "투그리드 간 드래그앤드랍 행 이동 예제입니다.";
										container.addChild(output_11, {
											"colIndex": 0,
											"rowIndex": 0
										});
									})(group_18);
									container.addChild(group_18, {
										"colIndex": 0,
										"rowIndex": 1
									});
									var group_19 = new cpr.controls.Container("grpData2");
									// Layout
									var formLayout_12 = new cpr.controls.layouts.FormLayout();
									formLayout_12.scrollable = false;
									formLayout_12.topMargin = "0px";
									formLayout_12.rightMargin = "0px";
									formLayout_12.bottomMargin = "0px";
									formLayout_12.leftMargin = "0px";
									formLayout_12.horizontalSpacing = "0px";
									formLayout_12.verticalSpacing = "0px";
									formLayout_12.setColumns(["1fr", "1fr"]);
									formLayout_12.setRows(["1fr"]);
									group_19.setLayout(formLayout_12);
									(function(container){
										var group_20 = new cpr.controls.Container("grpMain");
										// Layout
										var formLayout_13 = new cpr.controls.layouts.FormLayout();
										formLayout_13.setColumns(["1fr", "9px"]);
										formLayout_13.setRows(["25px", "1fr"]);
										group_20.setLayout(formLayout_13);
										(function(container){
											var group_21 = new cpr.controls.Container("grp17");
											// Layout
											var formLayout_14 = new cpr.controls.layouts.FormLayout();
											formLayout_14.topMargin = "0px";
											formLayout_14.rightMargin = "0px";
											formLayout_14.bottomMargin = "0px";
											formLayout_14.leftMargin = "0px";
											formLayout_14.horizontalSpacing = "5px";
											formLayout_14.verticalSpacing = "5px";
											formLayout_14.setColumns(["1fr", "260px"]);
											formLayout_14.setRows(["1fr"]);
											group_21.setLayout(formLayout_14);
											(function(container){
												var userDefinedControl_6 = linker.userDefinedControl_6 = new udc.com.comTitle("comtitle3");
												container.addChild(userDefinedControl_6, {
													"colIndex": 0,
													"rowIndex": 0
												});
												var userDefinedControl_7 = linker.userDefinedControl_7 = new udc.com.comButton("combutton2");
												userDefinedControl_7.focusColumnName = "EMPNO";
												container.addChild(userDefinedControl_7, {
													"colIndex": 1,
													"rowIndex": 0
												});
											})(group_21);
											container.addChild(group_21, {
												"colIndex": 0,
												"rowIndex": 0
											});
											var grid_2 = linker.grid_2 = new cpr.controls.Grid("grdMain2");
											grid_2.fieldLabel = "사원정보";
											grid_2.init({
												"dataSet": app.lookup("dsEmp"),
												"autoFit": "3, 4, 5, 6, 7, 8, 9, 10",
												"showDeletedRow": false,
												"columns": [
													{"width": "25px"},
													{"width": "25px"},
													{"width": "40px"},
													{"width": "100px"},
													{"width": "100px"},
													{"width": "100px"},
													{"width": "120px"},
													{"width": "100px"},
													{"width": "100px"},
													{"width": "100px"},
													{"width": "100px"}
												],
												"header": {
													"rows": [{"height": "27px"}],
													"cells": [
														{
															"constraint": {"rowIndex": 0, "colIndex": 0},
															"configurator": function(cell){
																cell.columnType = "checkbox";
															}
														},
														{
															"constraint": {"rowIndex": 0, "colIndex": 1},
															"configurator": function(cell){
																cell.text = "F";
															}
														},
														{
															"constraint": {"rowIndex": 0, "colIndex": 2},
															"configurator": function(cell){
																cell.text = "No";
															}
														},
														{
															"constraint": {"rowIndex": 0, "colIndex": 3},
															"configurator": function(cell){
																cell.text = "사원번호";
																cell.style.setClasses(["require"]);
															}
														},
														{
															"constraint": {"rowIndex": 0, "colIndex": 4},
															"configurator": function(cell){
																cell.text = "사원명";
															}
														},
														{
															"constraint": {"rowIndex": 0, "colIndex": 10},
															"configurator": function(cell){
																cell.text = "부서코드";
															}
														},
														{
															"constraint": {"rowIndex": 0, "colIndex": 9},
															"configurator": function(cell){
																cell.text = "성과금";
															}
														},
														{
															"constraint": {"rowIndex": 0, "colIndex": 8},
															"configurator": function(cell){
																cell.text = "급여";
															}
														},
														{
															"constraint": {"rowIndex": 0, "colIndex": 7},
															"configurator": function(cell){
																cell.text = "입사일";
															}
														},
														{
															"constraint": {"rowIndex": 0, "colIndex": 6},
															"configurator": function(cell){
																cell.text = "관리자 사원번호";
															}
														},
														{
															"constraint": {"rowIndex": 0, "colIndex": 5},
															"configurator": function(cell){
																cell.text = "직급";
															}
														}
													]
												},
												"detail": {
													"rows": [{"height": "25px"}],
													"cells": [
														{
															"constraint": {"rowIndex": 0, "colIndex": 0},
															"configurator": function(cell){
																cell.columnType = "checkbox";
																cell.style.css({
																	"text-align" : "center"
																});
															}
														},
														{
															"constraint": {"rowIndex": 0, "colIndex": 1},
															"configurator": function(cell){
																cell.control = (function(){
																	var output_12 = new cpr.controls.Output();
																	output_12.style.css({
																		"text-align" : "center"
																	});
																	return output_12;
																})();
															}
														},
														{
															"constraint": {"rowIndex": 0, "colIndex": 2},
															"configurator": function(cell){
																cell.columnType = "rowindex";
																cell.style.css({
																	"text-align" : "center"
																});
															}
														},
														{
															"constraint": {"rowIndex": 0, "colIndex": 3},
															"configurator": function(cell){
																cell.columnName = "EMPNO";
																cell.control = (function(){
																	var inputBox_8 = new cpr.controls.InputBox("ipb7");
																	inputBox_8.inputFilter = "[0-9]";
																	inputBox_8.userAttr({"required": "Y"});
																	inputBox_8.style.css({
																		"text-align" : "center"
																	});
																	inputBox_8.bind("value").toDataColumn("EMPNO");
																	return inputBox_8;
																})();
															}
														},
														{
															"constraint": {"rowIndex": 0, "colIndex": 4},
															"configurator": function(cell){
																cell.columnName = "ENAME";
																cell.control = (function(){
																	var inputBox_9 = new cpr.controls.InputBox("ipb8");
																	inputBox_9.style.css({
																		"text-align" : "center"
																	});
																	inputBox_9.bind("value").toDataColumn("ENAME");
																	return inputBox_9;
																})();
															}
														},
														{
															"constraint": {"rowIndex": 0, "colIndex": 10},
															"configurator": function(cell){
																cell.columnName = "DEPTNO";
																cell.control = (function(){
																	var inputBox_10 = new cpr.controls.InputBox("ipb9");
																	inputBox_10.style.css({
																		"text-align" : "center"
																	});
																	inputBox_10.bind("value").toDataColumn("DEPTNO");
																	return inputBox_10;
																})();
															}
														},
														{
															"constraint": {"rowIndex": 0, "colIndex": 9},
															"configurator": function(cell){
																cell.columnName = "COMM";
																cell.control = (function(){
																	var numberEditor_3 = new cpr.controls.NumberEditor("nbe2");
																	numberEditor_3.bind("value").toDataColumn("COMM");
																	return numberEditor_3;
																})();
															}
														},
														{
															"constraint": {"rowIndex": 0, "colIndex": 8},
															"configurator": function(cell){
																cell.columnName = "SAL";
																cell.control = (function(){
																	var numberEditor_4 = new cpr.controls.NumberEditor("nbe3");
																	numberEditor_4.bind("value").toDataColumn("SAL");
																	return numberEditor_4;
																})();
															}
														},
														{
															"constraint": {"rowIndex": 0, "colIndex": 7},
															"configurator": function(cell){
																cell.columnName = "HIREDATE";
																cell.control = (function(){
																	var dateInput_2 = new cpr.controls.DateInput("dti2");
																	dateInput_2.format = "YYYY-MM-DD";
																	dateInput_2.bind("value").toDataColumn("HIREDATE");
																	return dateInput_2;
																})();
															}
														},
														{
															"constraint": {"rowIndex": 0, "colIndex": 6},
															"configurator": function(cell){
																cell.columnName = "MGR";
																cell.control = (function(){
																	var inputBox_11 = new cpr.controls.InputBox("ipb10");
																	inputBox_11.style.css({
																		"text-align" : "center"
																	});
																	inputBox_11.bind("value").toDataColumn("MGR");
																	return inputBox_11;
																})();
															}
														},
														{
															"constraint": {"rowIndex": 0, "colIndex": 5},
															"configurator": function(cell){
																cell.columnName = "JOB";
																cell.control = (function(){
																	var inputBox_12 = new cpr.controls.InputBox("ipb14");
																	inputBox_12.style.css({
																		"text-align" : "center"
																	});
																	inputBox_12.bind("value").toDataColumn("JOB");
																	return inputBox_12;
																})();
																cell.controlConstraint = {};
															}
														}
													]
												}
											});
											container.addChild(grid_2, {
												"colIndex": 0,
												"rowIndex": 1,
												"colSpan": 1,
												"rowSpan": 1
											});
											var userDefinedControl_8 = new udc.com.udcSplit("udcsplit1");
											userDefinedControl_8.leftGrpId = "grpMain";
											userDefinedControl_8.rightGrpId = "grpSub";
											userDefinedControl_8.leftGridId = "grdMain";
											container.addChild(userDefinedControl_8, {
												"colIndex": 1,
												"rowIndex": 1
											});
										})(group_20);
										container.addChild(group_20, {
											"colIndex": 0,
											"rowIndex": 0
										});
										var group_22 = new cpr.controls.Container("grpSub");
										// Layout
										var formLayout_15 = new cpr.controls.layouts.FormLayout();
										formLayout_15.horizontalSpacing = "5px";
										formLayout_15.verticalSpacing = "5px";
										formLayout_15.setColumns(["1fr"]);
										formLayout_15.setRows(["25px", "1fr"]);
										group_22.setLayout(formLayout_15);
										(function(container){
											var group_23 = new cpr.controls.Container("grp18");
											// Layout
											var formLayout_16 = new cpr.controls.layouts.FormLayout();
											formLayout_16.topMargin = "0px";
											formLayout_16.rightMargin = "0px";
											formLayout_16.bottomMargin = "0px";
											formLayout_16.leftMargin = "0px";
											formLayout_16.horizontalSpacing = "5px";
											formLayout_16.verticalSpacing = "5px";
											formLayout_16.setColumns(["1fr", "260px"]);
											formLayout_16.setRows(["1fr"]);
											group_23.setLayout(formLayout_16);
											(function(container){
												var userDefinedControl_9 = linker.userDefinedControl_9 = new udc.com.comTitle("comtitle2");
												container.addChild(userDefinedControl_9, {
													"colIndex": 0,
													"rowIndex": 0
												});
												var userDefinedControl_10 = linker.userDefinedControl_10 = new udc.com.comButton("combutton3");
												userDefinedControl_10.focusColumnName = "DEPTNO";
												container.addChild(userDefinedControl_10, {
													"colIndex": 1,
													"rowIndex": 0
												});
											})(group_23);
											container.addChild(group_23, {
												"colIndex": 0,
												"rowIndex": 0
											});
											var grid_3 = linker.grid_3 = new cpr.controls.Grid("grdSub");
											grid_3.fieldLabel = "부서정보";
											grid_3.init({
												"dataSet": app.lookup("dsDept"),
												"autoFit": "3, 4, 5",
												"showDeletedRow": false,
												"columns": [
													{"width": "25px"},
													{"width": "25px"},
													{"width": "40px"},
													{"width": "100px"},
													{"width": "100px"},
													{"width": "100px"}
												],
												"header": {
													"rows": [{"height": "27px"}],
													"cells": [
														{
															"constraint": {"rowIndex": 0, "colIndex": 0},
															"configurator": function(cell){
																cell.columnType = "checkbox";
															}
														},
														{
															"constraint": {"rowIndex": 0, "colIndex": 1},
															"configurator": function(cell){
																cell.text = "F";
															}
														},
														{
															"constraint": {"rowIndex": 0, "colIndex": 2},
															"configurator": function(cell){
																cell.text = "번호";
															}
														},
														{
															"constraint": {"rowIndex": 0, "colIndex": 5},
															"configurator": function(cell){
																cell.targetColumnName = "LOC";
																cell.text = "장소";
															}
														},
														{
															"constraint": {"rowIndex": 0, "colIndex": 4},
															"configurator": function(cell){
																cell.targetColumnName = "DNAME";
																cell.text = "부서명";
															}
														},
														{
															"constraint": {"rowIndex": 0, "colIndex": 3},
															"configurator": function(cell){
																cell.targetColumnName = "DEPTNO";
																cell.text = "부서코드";
																cell.style.setClasses(["require"]);
															}
														}
													]
												},
												"detail": {
													"rows": [{"height": "25px"}],
													"cells": [
														{
															"constraint": {"rowIndex": 0, "colIndex": 0},
															"configurator": function(cell){
																cell.columnType = "checkbox";
																cell.style.css({
																	"text-align" : "center"
																});
															}
														},
														{
															"constraint": {"rowIndex": 0, "colIndex": 1},
															"configurator": function(cell){
																cell.control = (function(){
																	var output_13 = new cpr.controls.Output("opt2");
																	output_13.style.css({
																		"text-align" : "center"
																	});
																	return output_13;
																})();
															}
														},
														{
															"constraint": {"rowIndex": 0, "colIndex": 2},
															"configurator": function(cell){
																cell.columnType = "rowindex";
																cell.style.css({
																	"text-align" : "center"
																});
															}
														},
														{
															"constraint": {"rowIndex": 0, "colIndex": 5},
															"configurator": function(cell){
																cell.columnName = "LOC";
																cell.control = (function(){
																	var inputBox_13 = new cpr.controls.InputBox("ipb3");
																	inputBox_13.style.css({
																		"text-align" : "center"
																	});
																	inputBox_13.bind("value").toDataColumn("LOC");
																	return inputBox_13;
																})();
															}
														},
														{
															"constraint": {"rowIndex": 0, "colIndex": 4},
															"configurator": function(cell){
																cell.columnName = "DNAME";
																cell.control = (function(){
																	var inputBox_14 = new cpr.controls.InputBox("ipb11");
																	inputBox_14.style.css({
																		"text-align" : "center"
																	});
																	inputBox_14.bind("value").toDataColumn("DNAME");
																	return inputBox_14;
																})();
															}
														},
														{
															"constraint": {"rowIndex": 0, "colIndex": 3},
															"configurator": function(cell){
																cell.columnName = "DEPTNO";
																cell.control = (function(){
																	var inputBox_15 = new cpr.controls.InputBox("ipb12");
																	inputBox_15.userAttr({"required": "Y"});
																	inputBox_15.style.css({
																		"text-align" : "center"
																	});
																	inputBox_15.bind("value").toDataColumn("DEPTNO");
																	return inputBox_15;
																})();
															}
														}
													]
												}
											});
											container.addChild(grid_3, {
												"colIndex": 0,
												"rowIndex": 1
											});
										})(group_22);
										container.addChild(group_22, {
											"colIndex": 1,
											"rowIndex": 0
										});
									})(group_19);
									container.addChild(group_19, {
										"colIndex": 0,
										"rowIndex": 2
									});
								})(group_15);
								tabItem_2.content = group_15;
								return tabItem_2;
							})(tabFolder_1);
							tabFolder_1.addTabItem(tabItem_2);
							tabFolder_1.setSelectedTabItem(tabItem_1);
							if(typeof onTab1SelectionChange == "function") {
								tabFolder_1.addEventListener("selection-change", onTab1SelectionChange);
							}
							container.addChild(tabFolder_1, {
								"autoSize": "none",
								"width": "1310px",
								"height": "635px"
							});
						})(group_8);
						container.addChild(group_8, {
							"autoSize": "height",
							"width": "1210px",
							"height": "700px"
						});
					})(group_7);
					container.addChild(group_7, {
						"autoSize": "height",
						"width": "1270px",
						"height": "700px"
					});
				})(group_6);
				container.addChild(group_6, {
					"autoSize": "height",
					"width": "1270px",
					"height": "700px"
				});
				var output_14 = new cpr.controls.Output();
				output_14.value = "주요코드";
				output_14.style.setClasses(["h1", "pl-3", "bg-primary", "text-white"]);
				output_14.style.css({
					"font-weight" : "bold",
					"padding-left" : "1rem",
					"font-size" : "1.75rem"
				});
				container.addChild(output_14, {
					"autoSize": "none",
					"width": "1210px",
					"height": "40px"
				});
				var group_24 = new cpr.controls.Container("grp15");
				// Layout
				var verticalLayout_9 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_9.spacing = 20;
				verticalLayout_9.leftMargin = 30;
				verticalLayout_9.rightMargin = 30;
				verticalLayout_9.topMargin = 0;
				verticalLayout_9.bottomMargin = 0;
				group_24.setLayout(verticalLayout_9);
				(function(container){
					var group_25 = new cpr.controls.Container("grp7");
					// Layout
					var formLayout_17 = new cpr.controls.layouts.FormLayout();
					formLayout_17.scrollable = false;
					formLayout_17.topMargin = "0px";
					formLayout_17.rightMargin = "0px";
					formLayout_17.bottomMargin = "0px";
					formLayout_17.leftMargin = "0px";
					formLayout_17.horizontalSpacing = "5px";
					formLayout_17.verticalSpacing = "5px";
					formLayout_17.setColumns(["1fr"]);
					formLayout_17.setRows(["1fr"]);
					group_25.setLayout(formLayout_17);
					(function(container){
						var group_26 = new cpr.controls.Container("grp9");
						group_26.style.setClasses(["form-box"]);
						// Layout
						var verticalLayout_10 = new cpr.controls.layouts.VerticalLayout();
						group_26.setLayout(verticalLayout_10);
						(function(container){
							var userDefinedControl_11 = new udc.tmp.Ace("ace1");
							if(typeof onAce1AfterLoad == "function") {
								userDefinedControl_11.addEventListener("afterLoad", onAce1AfterLoad);
							}
							container.addChild(userDefinedControl_11, {
								"autoSize": "height",
								"width": "300px",
								"height": "300px"
							});
						})(group_26);
						container.addChild(group_26, {
							"colIndex": 0,
							"rowIndex": 0
						});
					})(group_25);
					container.addChild(group_25, {
						"autoSize": "height",
						"width": "1210px",
						"height": "310px"
					});
				})(group_24);
				container.addChild(group_24, {
					"autoSize": "height",
					"width": "1270px",
					"height": "350px"
				});
			})(group_2);
			container.addChild(group_2, {
				"autoSize": "height",
				"width": "1320px",
				"height": "2056px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_3.ctrl = linker.grid_1;
			linker.userDefinedControl_4.grid = linker.grid_1;
			linker.userDefinedControl_6.ctrl = linker.grid_2;
			linker.userDefinedControl_7.grid = linker.grid_2;
			linker.userDefinedControl_9.ctrl = linker.grid_3;
			linker.userDefinedControl_10.grid = linker.grid_3;
		}
	});
	app.title = "그리드행이동";
	cpr.core.Platform.INSTANCE.register(app);
})();
