/*
 * App URI: app/exam/appSmpl/faq&qna/embeddedParam
 * Source Location: app/exam/appSmpl/faq&qna/embeddedParam.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/exam/appSmpl/faq&qna/embeddedParam", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			* embeddedParam.js
			 * Created at 2022. 3. 21. 오전 11:22:17.
			 *
			 * @author 1amthomas
			 ************************************************/
			
			
			//QnA나 FAQ 예제가 아닌 경우 삭제
			/*
			 * "https://techdom.tomatosystem.co.kr/p/00001" 버튼(btn5)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn5Click2(e){
				//질의문자열 중 ps의 value 값에 해당 qna,faq 요청번호 입력
			    //ex) window.open('https://techdom.tomatosystem.co.kr/p/00019/?bn=eXBuilder6&tn=qna&ps=12461');
				var selOpt = app.lookup("selOpt").value;
				var selNum = app.lookup("selNum").value;
				var vsLink = "https://techdom.tomatosystem.co.kr/p/00019/?bn=eXBuilder6&tn="+selOpt+"&ps="+selNum;
				window.open(vsLink);
			}
			
			/*
			 * "실행" 버튼(btn3)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn3Click(e){
				var btnBeforeChange = e.control;
				var vsParam = app.lookup("cmb2").value;
				//loadApp(vsParam);
				/* 에디터에 소스 표시 */
				var vcAceEditor = app.lookup("ace2");
				vcAceEditor.value = loadApp;
			}
			
			/**
			 * 
			 * @param {String} vsParam
			 */
			function loadApp(vsParam){
				cpr.core.App.load("app/exam/appSmpl/faq&qna/embedded/embeddedParam_A", function(loadedApp){
					app.close();
					var newInst = loadedApp.createNewInstance();
					newInst.setAppProperty("param",vsParam);
					newInst.run();
				});
			}
			
			function initParam(){
				
				var vcEmbeddedApp = app.lookup("ea2");
				
				var vsParam = app.lookup("cmb2").value;
				
				//이미 임베디드 앱에 호출된 앱이 있다면 호출된 앱을 닫습니다.
				var voEmbeddedAppInstance = vcEmbeddedApp.getEmbeddedAppInstance();
				if(voEmbeddedAppInstance != null){
					voEmbeddedAppInstance.dispose();
				}
				//initValue로 임베디드앱에 값을 전달해 줍니다.
				cpr.core.App.load("app/exam/appSmpl/faq&qna/embedded/embeddedParam_A", function(loadedApp){
					if(loadedApp){
						vcEmbeddedApp.initValue = vsParam;
						vcEmbeddedApp.app = loadedApp;
					}
				});	
			}
			
			/*
			 * "실행" 버튼(btn4)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn4Click(e){
				//임베디드 앱 객체를 가져옵니다.
				initParam();
				/* 에디터에 소스 표시 */
				var vcAceEditor = app.lookup("ace2");
				vcAceEditor.value = initParam;	
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsList");
			dataSet_1.parseData({
				"columns": [
					{
						"name": "label",
						"dataType": "string"
					},
					{"name": "value"}
				],
				"rows": [
					{"label": "홍길동", "value": "홍길동"},
					{"label": "장보고", "value": "장보고"}
				]
			});
			app.register(dataSet_1);
			
			app.supportMedia("all and (min-width: 1320px)", "eXFrame");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1319px)", "default");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpHeader");
			// Layout
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			group_1.setLayout(verticalLayout_2);
			(function(container){
				var userDefinedControl_1 = new udc.com.appHeader("appheader1");
				container.addChild(userDefinedControl_1, {
					"width": "500px",
					"height": "30px"
				});
			})(group_1);
			container.addChild(group_1, {
				"autoSize": "height",
				"width": "1320px",
				"height": "30px"
			});
			
			var group_2 = new cpr.controls.Container();
			// Layout
			var verticalLayout_3 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_3.leftMargin = 20;
			verticalLayout_3.rightMargin = 30;
			verticalLayout_3.topMargin = 30;
			verticalLayout_3.bottomMargin = 30;
			group_2.setLayout(verticalLayout_3);
			(function(container){
				var group_3 = new cpr.controls.Container("grpTitle");
				// Layout
				var verticalLayout_4 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_4.spacing = 30;
				verticalLayout_4.topMargin = 20;
				verticalLayout_4.bottomMargin = 40;
				group_3.setLayout(verticalLayout_4);
				(function(container){
					var group_4 = new cpr.controls.Container();
					// Layout
					var formLayout_1 = new cpr.controls.layouts.FormLayout();
					formLayout_1.scrollable = false;
					formLayout_1.rightMargin = "50px";
					formLayout_1.horizontalSpacing = "5px";
					formLayout_1.verticalSpacing = "5px";
					formLayout_1.setColumns(["300px", "100px"]);
					formLayout_1.setColumnAutoSizing(0, true);
					formLayout_1.setColumnAutoSizing(1, true);
					formLayout_1.setRows(["1fr"]);
					group_4.setLayout(formLayout_1);
					(function(container){
						var output_1 = new cpr.controls.Output("optTitle");
						output_1.value = "임베디드앱 파라미터전달";
						output_1.style.css({
							"font-weight" : "bold",
							"padding-left" : "1rem",
							"font-size" : "2.5rem"
						});
						container.addChild(output_1, {
							"colIndex": 0,
							"rowIndex": 0
						});
					})(group_4);
					container.addChild(group_4, {
						"autoSize": "height",
						"width": "1270px",
						"height": "40px"
					});
					var output_2 = new cpr.controls.Output("optSummary");
					output_2.value = "이 문서는 서로 다른 clx 파일에서 화면 로드 시점에 값을 넘겨주는 방법에 대해 설명합니다.\r\n임베디드 앱을 통해 호출된 앱에서 getHostAppInstance API를 통해 부모 앱에 접근합니다.";
					output_2.style.setClasses(["opt-tmpl"]);
					output_2.style.css({
						"padding-left" : "1rem",
						"font-size" : "1rem"
					});
					container.addChild(output_2, {
						"autoSize": "height",
						"width": "1210px",
						"height": "46px"
					});
				})(group_3);
				container.addChild(group_3, {
					"autoSize": "height",
					"width": "1270px",
					"height": "150px"
				});
				var group_5 = new cpr.controls.Container("scenarioGrp");
				// Layout
				var verticalLayout_5 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_5.spacing = 30;
				verticalLayout_5.topMargin = 10;
				verticalLayout_5.bottomMargin = 30;
				group_5.setLayout(verticalLayout_5);
				(function(container){
					var output_3 = new cpr.controls.Output();
					output_3.value = "시나리오";
					output_3.style.setClasses(["h1", "pl-3", "bg-primary", "text-white"]);
					output_3.style.css({
						"font-weight" : "bold",
						"padding-left" : "1rem",
						"font-size" : "1.75rem"
					});
					container.addChild(output_3, {
						"width": "100px",
						"height": "40px"
					});
					var output_4 = new cpr.controls.Output();
					output_4.value = "1. setAppProperty API를 이용하여, 화면(앱)을 호출할 떄 값을 전달하는 기능을 확인합니다.\r\n2. 임베디드앱을 로드하는 시점에 initValue API를 이용하여, 화면(앱)을 호출할 때 값을 전달하는 기능을 확인합니다.";
					output_4.style.setClasses(["opt-tmpl"]);
					output_4.style.css({
						"padding-left" : "1rem",
						"font-size" : "1rem"
					});
					container.addChild(output_4, {
						"autoSize": "height",
						"width": "1210px",
						"height": "107px"
					});
					var group_6 = new cpr.controls.Container("groAddExp");
					group_6.style.css({
						"background-color" : "#dff7fb"
					});
					// Layout
					var verticalLayout_6 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_6.spacing = 10;
					verticalLayout_6.leftMargin = 30;
					verticalLayout_6.rightMargin = 30;
					verticalLayout_6.topMargin = 20;
					verticalLayout_6.bottomMargin = 20;
					group_6.setLayout(verticalLayout_6);
					(function(container){
						var output_5 = new cpr.controls.Output();
						output_5.value = "추가설명";
						output_5.style.setClasses(["ref-title"]);
						output_5.style.css({
							"color" : "#09c2de",
							"font-weight" : "bold"
						});
						container.addChild(output_5, {
							"width": "100px",
							"height": "25px"
						});
						var output_6 = new cpr.controls.Output();
						output_6.value = "clx 내에서 사용하는 app 객체는 AppInstance 입니다. 임베디드앱, MDI의 탭 아이템, 다이얼로그에서 getAppInstance 또는 getEmbeddedAppInstance API 를 통해 clx의 app을 가져올 수 있습니다.\r\n";
						output_6.style.css({
							"color" : "#09c2de"
						});
						container.addChild(output_6, {
							"autoSize": "height",
							"width": "100px",
							"height": "25px"
						});
					})(group_6);
					container.addChild(group_6, {
						"autoSize": "height",
						"width": "1100px",
						"height": "150px"
					});
				})(group_5);
				container.addChild(group_5, {
					"autoSize": "height",
					"width": "1270px",
					"height": "370px"
				});
				var group_7 = new cpr.controls.Container("grpFunction");
				// Layout
				var verticalLayout_7 = new cpr.controls.layouts.VerticalLayout();
				group_7.setLayout(verticalLayout_7);
				(function(container){
					var group_8 = new cpr.controls.Container("grpFuncFloating");
					group_8.userAttr({"floating-header": "true"});
					// Layout
					var verticalLayout_8 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_8.bottomMargin = 30;
					group_8.setLayout(verticalLayout_8);
					(function(container){
						var output_7 = new cpr.controls.Output();
						output_7.value = "기능확인";
						output_7.style.setClasses(["h1", "pl-3", "bg-primary", "text-white"]);
						output_7.style.css({
							"font-weight" : "bold",
							"padding-left" : "1rem",
							"font-size" : "1.75rem"
						});
						container.addChild(output_7, {
							"autoSize": "none",
							"width": "1270px",
							"height": "40px"
						});
						var group_9 = new cpr.controls.Container();
						group_9.style.css({
							"border-right-style" : "solid",
							"border-top-width" : "1px",
							"border-bottom-color" : "#dedede",
							"border-right-width" : "1px",
							"border-left-color" : "#dedede",
							"border-right-color" : "#dedede",
							"border-left-width" : "1px",
							"border-top-style" : "solid",
							"background-color" : "#F0F0F0",
							"border-left-style" : "solid",
							"border-bottom-width" : "1px",
							"border-top-color" : "#dedede",
							"border-bottom-style" : "solid"
						});
						// Layout
						var verticalLayout_9 = new cpr.controls.layouts.VerticalLayout();
						verticalLayout_9.leftMargin = 30;
						verticalLayout_9.rightMargin = 30;
						verticalLayout_9.topMargin = 5;
						verticalLayout_9.bottomMargin = 10;
						group_9.setLayout(verticalLayout_9);
						(function(container){
							var group_10 = new cpr.controls.Container();
							// Layout
							var formLayout_2 = new cpr.controls.layouts.FormLayout();
							formLayout_2.topMargin = "0px";
							formLayout_2.rightMargin = "0px";
							formLayout_2.bottomMargin = "0px";
							formLayout_2.leftMargin = "0px";
							formLayout_2.horizontalSpacing = "5px";
							formLayout_2.verticalSpacing = "5px";
							formLayout_2.setColumns(["1fr"]);
							formLayout_2.setRows(["1fr", "20px"]);
							group_10.setLayout(formLayout_2);
							(function(container){
								var output_8 = new cpr.controls.Output();
								output_8.value = "<기능 확인 컨트롤>";
								output_8.style.setClasses(["text-center"]);
								container.addChild(output_8, {
									"colIndex": 0,
									"rowIndex": 1
								});
								var embeddedApp_1 = new cpr.controls.EmbeddedApp("ea2");
								embeddedApp_1.style.setClasses(["border-dashed"]);
								cpr.core.App.load("app/exam/appSmpl/faq&qna/embedded/embeddedParam_A", function(app) {
									if(app){
										embeddedApp_1.app = app;
									}
								});
								container.addChild(embeddedApp_1, {
									"colIndex": 0,
									"rowIndex": 0
								});
							})(group_10);
							container.addChild(group_10, {
								"autoSize": "none",
								"width": "200px",
								"height": "300px"
							});
						})(group_9);
						container.addChild(group_9, {
							"autoSize": "height",
							"width": "1210px",
							"height": "400px"
						});
					})(group_8);
					container.addChild(group_8, {
						"autoSize": "height",
						"width": "1270px",
						"height": "450px"
					});
				})(group_7);
				container.addChild(group_7, {
					"autoSize": "height",
					"width": "1270px",
					"height": "450px"
				});
				var output_9 = new cpr.controls.Output();
				output_9.value = "주요코드";
				output_9.style.setClasses(["h1", "pl-3", "bg-primary", "text-white"]);
				output_9.style.css({
					"font-weight" : "bold",
					"padding-left" : "1rem",
					"font-size" : "1.75rem"
				});
				container.addChild(output_9, {
					"autoSize": "none",
					"width": "1210px",
					"height": "40px"
				});
				var group_11 = new cpr.controls.Container();
				// Layout
				var formLayout_3 = new cpr.controls.layouts.FormLayout();
				formLayout_3.userResizingMode = "standard";
				formLayout_3.topMargin = "0px";
				formLayout_3.rightMargin = "0px";
				formLayout_3.bottomMargin = "0px";
				formLayout_3.leftMargin = "0px";
				formLayout_3.horizontalSpacing = "5px";
				formLayout_3.verticalSpacing = "5px";
				formLayout_3.setColumns(["1fr", "700px"]);
				formLayout_3.setRows(["1fr"]);
				group_11.setLayout(formLayout_3);
				(function(container){
					var group_12 = new cpr.controls.Container();
					group_12.style.setClasses(["form-box"]);
					// Layout
					var verticalLayout_10 = new cpr.controls.layouts.VerticalLayout();
					group_12.setLayout(verticalLayout_10);
					(function(container){
						var userDefinedControl_2 = new udc.tmp.Ace("ace2");
						container.addChild(userDefinedControl_2, {
							"autoSize": "height",
							"width": "438px",
							"height": "295px"
						});
					})(group_12);
					container.addChild(group_12, {
						"colIndex": 1,
						"rowIndex": 0
					});
					var group_13 = new cpr.controls.Container();
					// Layout
					var formLayout_4 = new cpr.controls.layouts.FormLayout();
					formLayout_4.horizontalSpacing = "5px";
					formLayout_4.verticalSpacing = "10px";
					formLayout_4.setColumns(["1fr", "10px"]);
					formLayout_4.setColumnAutoSizing(1, true);
					formLayout_4.setRows(["1fr"]);
					group_13.setLayout(formLayout_4);
					(function(container){
						var userDefinedControl_3 = new udc.com.udcSplit("udcsplit1");
						userDefinedControl_3.leftGrpId = "grp6";
						userDefinedControl_3.rightGrpId = "grp7";
						container.addChild(userDefinedControl_3, {
							"colIndex": 1,
							"rowIndex": 0,
							"colSpan": 1,
							"rowSpan": 1,
							"horizontalAlign": "right",
							"width": 9
						});
						var group_14 = new cpr.controls.Container();
						// Layout
						var formLayout_5 = new cpr.controls.layouts.FormLayout();
						formLayout_5.scrollable = false;
						formLayout_5.topMargin = "0px";
						formLayout_5.rightMargin = "0px";
						formLayout_5.bottomMargin = "0px";
						formLayout_5.leftMargin = "0px";
						formLayout_5.horizontalSpacing = "10px";
						formLayout_5.verticalSpacing = "10px";
						formLayout_5.setColumns(["1fr"]);
						formLayout_5.setRows(["40px", "1fr"]);
						formLayout_5.setRowAutoSizing(0, true);
						group_14.setLayout(formLayout_5);
						(function(container){
							var group_15 = new cpr.controls.Container("grpFormFunc");
							group_15.style.setClasses(["form-box"]);
							// Layout
							var formLayout_6 = new cpr.controls.layouts.FormLayout();
							formLayout_6.topMargin = "5px";
							formLayout_6.rightMargin = "5px";
							formLayout_6.bottomMargin = "5px";
							formLayout_6.leftMargin = "5px";
							formLayout_6.horizontalSpacing = "5px";
							formLayout_6.verticalSpacing = "5px";
							formLayout_6.setColumns(["1fr"]);
							formLayout_6.setRows(["25px", "25px", "25px", "25px", "25px", "25px", "25px", "25px"]);
							formLayout_6.setRowAutoSizing(1, true);
							formLayout_6.setRowAutoSizing(2, true);
							formLayout_6.setRowAutoSizing(3, true);
							formLayout_6.setRowAutoSizing(4, true);
							formLayout_6.setRowAutoSizing(5, true);
							formLayout_6.setRowAutoSizing(6, true);
							formLayout_6.setRowAutoSizing(7, true);
							group_15.setLayout(formLayout_6);
							(function(container){
								var group_16 = new cpr.controls.Container("grp1");
								// Layout
								var formLayout_7 = new cpr.controls.layouts.FormLayout();
								formLayout_7.horizontalSpacing = "5px";
								formLayout_7.verticalSpacing = "5px";
								formLayout_7.setColumns(["24px", "200px", "1fr", "170px", "120px"]);
								formLayout_7.setColumnAutoSizing(1, true);
								formLayout_7.setRows(["25px"]);
								group_16.setLayout(formLayout_7);
								(function(container){
									var output_10 = new cpr.controls.Output();
									output_10.value = "No";
									output_10.style.css({
										"background-color" : "#e1edfe",
										"background-image" : "none",
										"text-align" : "center"
									});
									container.addChild(output_10, {
										"colIndex": 0,
										"rowIndex": 0
									});
									var output_11 = new cpr.controls.Output();
									output_11.value = "함수";
									output_11.style.css({
										"background-color" : "#e1edfe",
										"background-image" : "none",
										"text-align" : "center"
									});
									container.addChild(output_11, {
										"colIndex": 1,
										"rowIndex": 0
									});
									var output_12 = new cpr.controls.Output();
									output_12.value = "설명";
									output_12.style.css({
										"background-color" : "#e1edfe",
										"background-image" : "none",
										"text-align" : "center"
									});
									container.addChild(output_12, {
										"colIndex": 2,
										"rowIndex": 0
									});
									var output_13 = new cpr.controls.Output();
									output_13.value = "입력값";
									output_13.style.css({
										"background-color" : "#e1edfe",
										"background-image" : "none",
										"text-align" : "center"
									});
									container.addChild(output_13, {
										"colIndex": 3,
										"rowIndex": 0
									});
									var output_14 = new cpr.controls.Output();
									output_14.value = "동작";
									output_14.style.css({
										"background-color" : "#e1edfe",
										"background-image" : "none",
										"text-align" : "center"
									});
									container.addChild(output_14, {
										"colIndex": 4,
										"rowIndex": 0
									});
								})(group_16);
								container.addChild(group_16, {
									"colIndex": 0,
									"rowIndex": 0,
									"colSpan": 1,
									"rowSpan": 1
								});
								var group_17 = new cpr.controls.Container("grp2");
								// Layout
								var formLayout_8 = new cpr.controls.layouts.FormLayout();
								formLayout_8.horizontalSpacing = "5px";
								formLayout_8.verticalSpacing = "5px";
								formLayout_8.setColumns(["24px", "200px", "1fr", "170px", "120px"]);
								formLayout_8.setColumnAutoSizing(1, true);
								formLayout_8.setRows(["25px"]);
								formLayout_8.setRowAutoSizing(0, true);
								group_17.setLayout(formLayout_8);
								(function(container){
									var output_15 = new cpr.controls.Output();
									output_15.value = "1";
									output_15.style.css({
										"background-color" : "#e1edfe",
										"border-right-style" : "none",
										"border-left-style" : "none",
										"border-bottom-style" : "none",
										"background-image" : "none",
										"border-top-style" : "none",
										"text-align" : "center"
									});
									container.addChild(output_15, {
										"colIndex": 0,
										"rowIndex": 0
									});
									var inputBox_1 = new cpr.controls.InputBox("ipb1");
									inputBox_1.tooltip = "입력값 입력";
									inputBox_1.placeholder = "입력값 입력";
									container.addChild(inputBox_1, {
										"colIndex": 3,
										"rowIndex": 0
									});
									var inputBox_2 = new cpr.controls.InputBox("ipb2");
									inputBox_2.readOnly = true;
									inputBox_2.value = "setAppProperty(\"속성명\",\"param\")";
									container.addChild(inputBox_2, {
										"colIndex": 1,
										"rowIndex": 0
									});
									var inputBox_3 = new cpr.controls.InputBox("ipb3");
									inputBox_3.readOnly = true;
									inputBox_3.value = "app.core.App.load 를 통해 화면을 로드할 경우 앱 속성을 통해 파라미터 값을 넘겨줄 수 있습니다. 현 화면에서 실제 기능은 동작하지 않고, 스크립트를 확인 할 수 있습니다.";
									container.addChild(inputBox_3, {
										"colIndex": 2,
										"rowIndex": 0
									});
									var button_1 = new cpr.controls.Button("btn3");
									button_1.value = "실행";
									button_1.style.setClasses(["btn-primary"]);
									if(typeof onBtn3Click == "function") {
										button_1.addEventListener("click", onBtn3Click);
									}
									container.addChild(button_1, {
										"colIndex": 4,
										"rowIndex": 0
									});
								})(group_17);
								container.addChild(group_17, {
									"colIndex": 0,
									"rowIndex": 1,
									"colSpan": 1,
									"rowSpan": 1
								});
								var group_18 = new cpr.controls.Container("grp3");
								// Layout
								var formLayout_9 = new cpr.controls.layouts.FormLayout();
								formLayout_9.horizontalSpacing = "5px";
								formLayout_9.verticalSpacing = "5px";
								formLayout_9.setColumns(["24px", "200px", "1fr", "170px", "120px"]);
								formLayout_9.setColumnAutoSizing(1, true);
								formLayout_9.setRows(["25px"]);
								formLayout_9.setRowAutoSizing(0, true);
								group_18.setLayout(formLayout_9);
								(function(container){
									var output_16 = new cpr.controls.Output();
									output_16.value = "2";
									output_16.style.css({
										"background-color" : "#e1edfe",
										"border-right-style" : "none",
										"border-left-style" : "none",
										"border-bottom-style" : "none",
										"background-image" : "none",
										"border-top-style" : "none",
										"text-align" : "center"
									});
									container.addChild(output_16, {
										"colIndex": 0,
										"rowIndex": 0
									});
									var inputBox_4 = new cpr.controls.InputBox("ipb4");
									inputBox_4.readOnly = true;
									inputBox_4.value = "임베디드앱을 통해 화면 B를 로드하는 경우 initValue를 통해 값을 넘겨줄 수 있습니다.";
									container.addChild(inputBox_4, {
										"colIndex": 2,
										"rowIndex": 0
									});
									var inputBox_5 = new cpr.controls.InputBox("ipb5");
									inputBox_5.readOnly = true;
									inputBox_5.value = "initValue";
									container.addChild(inputBox_5, {
										"colIndex": 1,
										"rowIndex": 0
									});
									var button_2 = new cpr.controls.Button("btn4");
									button_2.value = "실행";
									button_2.style.setClasses(["btn-primary"]);
									if(typeof onBtn4Click == "function") {
										button_2.addEventListener("click", onBtn4Click);
									}
									container.addChild(button_2, {
										"colIndex": 4,
										"rowIndex": 0
									});
									var comboBox_1 = new cpr.controls.ComboBox("cmb2");
									(function(comboBox_1){
										comboBox_1.setItemSet(app.lookup("dsList"), {
											"label": "label",
											"value": "value"
										});
									})(comboBox_1);
									container.addChild(comboBox_1, {
										"colIndex": 3,
										"rowIndex": 0
									});
								})(group_18);
								container.addChild(group_18, {
									"colIndex": 0,
									"rowIndex": 2,
									"colSpan": 1,
									"rowSpan": 1
								});
							})(group_15);
							container.addChild(group_15, {
								"colIndex": 0,
								"rowIndex": 1
							});
							var group_19 = new cpr.controls.Container("grpRslt");
							group_19.style.setClasses(["form-box"]);
							// Layout
							var formLayout_10 = new cpr.controls.layouts.FormLayout();
							formLayout_10.scrollable = false;
							formLayout_10.topMargin = "5px";
							formLayout_10.rightMargin = "30px";
							formLayout_10.bottomMargin = "5px";
							formLayout_10.leftMargin = "5px";
							formLayout_10.horizontalSpacing = "5px";
							formLayout_10.verticalSpacing = "5px";
							formLayout_10.setColumns(["100px", "1fr"]);
							formLayout_10.setRows(["1fr"]);
							group_19.setLayout(formLayout_10);
							(function(container){
								var output_17 = new cpr.controls.Output();
								output_17.value = "결과값";
								output_17.style.css({
									"background-color" : "#e1edfe",
									"background-image" : "none",
									"padding-right" : "1rem"
								});
								container.addChild(output_17, {
									"colIndex": 0,
									"rowIndex": 0
								});
								var output_18 = new cpr.controls.Output("optRslt");
								output_18.value = "";
								output_18.style.css({
									"background-color" : "white",
									"border-right-style" : "none",
									"border-left-style" : "none",
									"padding-left" : "1rem",
									"border-bottom-style" : "none",
									"border-top-style" : "none",
									"text-align" : "left"
								});
								container.addChild(output_18, {
									"colIndex": 1,
									"rowIndex": 0
								});
							})(group_19);
							container.addChild(group_19, {
								"colIndex": 0,
								"rowIndex": 0
							});
						})(group_14);
						container.addChild(group_14, {
							"colIndex": 0,
							"rowIndex": 0,
							"colSpan": 1,
							"rowSpan": 1
						});
					})(group_13);
					container.addChild(group_13, {
						"colIndex": 0,
						"rowIndex": 0,
						"colSpan": 1,
						"rowSpan": 1
					});
				})(group_11);
				container.addChild(group_11, {
					"autoSize": "none",
					"width": "1270px",
					"height": "295px"
				});
				var group_20 = new cpr.controls.Container("grpTechdom");
				group_20.style.setClasses(["card-inner"]);
				// Layout
				var verticalLayout_11 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_11.spacing = 15;
				verticalLayout_11.leftMargin = 0;
				verticalLayout_11.rightMargin = 0;
				verticalLayout_11.topMargin = 20;
				verticalLayout_11.bottomMargin = 40;
				group_20.setLayout(verticalLayout_11);
				(function(container){
					var output_19 = new cpr.controls.Output();
					output_19.value = "토마토 시스템 기술지원(Techdom)";
					output_19.style.setClasses(["h1", "pl-3", "bg-primary", "text-white"]);
					output_19.style.css({
						"font-weight" : "bold",
						"padding-left" : "1rem",
						"font-size" : "1.75rem"
					});
					container.addChild(output_19, {
						"autoSize": "none",
						"width": "1270px",
						"height": "40px"
					});
					var group_21 = new cpr.controls.Container();
					group_21.style.css({
						"background-color" : "#fef6e0",
						"background-image" : "none"
					});
					// Layout
					var verticalLayout_12 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_12.leftMargin = 30;
					verticalLayout_12.rightMargin = 30;
					verticalLayout_12.topMargin = 20;
					verticalLayout_12.bottomMargin = 20;
					group_21.setLayout(verticalLayout_12);
					(function(container){
						var output_20 = new cpr.controls.Output();
						output_20.style.css({
							"color" : "#FF9149",
							"font-weight" : "bolder"
						});
						output_20.bind("value").toExpression("#selOpt.value + ' ' + #selNum.value");
						container.addChild(output_20, {
							"width": "100px",
							"height": "25px"
						});
						var output_21 = new cpr.controls.Output("selOpt");
						output_21.visible = false;
						output_21.value = "FAQ";
						output_21.style.css({
							"color" : "#FF9149"
						});
						container.addChild(output_21, {
							"autoSize": "height",
							"width": "1210px",
							"height": "25px"
						});
						var output_22 = new cpr.controls.Output("selNum");
						output_22.visible = false;
						output_22.value = "52";
						output_22.style.css({
							"color" : "#FF9149"
						});
						if(typeof onSelNumValueChange == "function") {
							output_22.addEventListener("value-change", onSelNumValueChange);
						}
						container.addChild(output_22, {
							"autoSize": "height",
							"width": "100px",
							"height": "25px"
						});
						var output_23 = new cpr.controls.Output();
						output_23.value = "우측하단 '이동' 버튼을 통해 관련글을 조회할 수 있습니다.";
						output_23.style.css({
							"color" : "#FF9149"
						});
						container.addChild(output_23, {
							"autoSize": "height",
							"width": "1210px",
							"height": "25px"
						});
						var group_22 = new cpr.controls.Container();
						// Layout
						var formLayout_11 = new cpr.controls.layouts.FormLayout();
						formLayout_11.scrollable = false;
						formLayout_11.topMargin = "0px";
						formLayout_11.rightMargin = "0px";
						formLayout_11.bottomMargin = "0px";
						formLayout_11.leftMargin = "0px";
						formLayout_11.horizontalSpacing = "0px";
						formLayout_11.verticalSpacing = "0px";
						formLayout_11.setColumns(["1fr", "50px"]);
						formLayout_11.setRows(["1fr"]);
						group_22.setLayout(formLayout_11);
						(function(container){
							var button_3 = new cpr.controls.Button("moveButton");
							button_3.value = "이동";
							button_3.ariaButtonType = "link";
							button_3.style.css({
								"border-right-style" : "none",
								"color" : "#FF9149",
								"border-bottom-color" : "none",
								"font-weight" : "bolder",
								"border-left-color" : "none",
								"border-right-color" : "none",
								"border-top-style" : "none",
								"background-color" : "#fef6e0",
								"border-left-style" : "none",
								"border-top-color" : "none",
								"border-bottom-style" : "none",
								"background-image" : "none",
								"text-align" : "center"
							});
							if(typeof onBtn5Click2 == "function") {
								button_3.addEventListener("click", onBtn5Click2);
							}
							container.addChild(button_3, {
								"colIndex": 1,
								"rowIndex": 0
							});
						})(group_22);
						container.addChild(group_22, {
							"width": "400px",
							"height": "20px"
						});
					})(group_21);
					container.addChild(group_21, {
						"autoSize": "height",
						"width": "1040px",
						"height": "200px"
					});
				})(group_20);
				container.addChild(group_20, {
					"autoSize": "height",
					"width": "1270px",
					"height": "300px"
				});
			})(group_2);
			container.addChild(group_2, {
				"autoSize": "height",
				"width": "1320px",
				"height": "2800px"
			});
		}
	});
	app.title = "FAQ52";
	cpr.core.Platform.INSTANCE.register(app);
})();
