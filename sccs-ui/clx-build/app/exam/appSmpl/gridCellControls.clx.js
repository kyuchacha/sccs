/*
 * App URI: app/exam/appSmpl/gridCellControls
 * Source Location: app/exam/appSmpl/gridCellControls.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/exam/appSmpl/gridCellControls", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			* gridCellControls.js
			 * Created at 2022. 3. 22. 오전 10:27:41.
			 *
			 * @author 1amthomas
			 ************************************************/
			
			
			
			function grdUdConstraint(){
				var vcGrid = app.lookup("grd2");
				
				var vsConstraint = app.lookup("cmbCol").value;
				
				/* 입력값 */
				var vnVal = app.lookup("cmbHrz").value;
				
				var vcControl = app.lookup(vsConstraint)
				
				vcGrid.updateConstraint(vcControl, {
					"horizontalAlign": vnVal,
					"width": "100px"
				});
				
			}
			
			function grdUdConstraintSpacing(){
				var vcGrid = app.lookup("grd2");
				
				var vsConstraint = app.lookup("cmbCol2").value;
				
				/* 입력값 */
				var vnVal = app.lookup("ipbSp").value;
				
				var vcControl = app.lookup(vsConstraint)
				
				
				vcGrid.updateConstraint(vcControl, {
					 "leftSpacing" : vnVal,
					 "rightSpacing" : vnVal
				});
			}
			
			function grdUdConstraintHeight(){
				var vcGrid = app.lookup("grd2");
				
				var vsConstraint = app.lookup("cmbCol3").value;
				
				/* 입력값 */
				var vnVal = app.lookup("ipbWd").value;
				
				var vcControl = app.lookup(vsConstraint)
				
				var vcControlVt = vcGrid.getConstraint(vcControl).verticalAlign;
				
				/* 입력값이 없으면 */
				if (vnVal == '') {
					vcGrid.updateConstraint(vcControl, {
						"verticalAlign": "fill"
					});
					
					/* 그리드 row의 height 초기값 설정 */
					for (var i = 0; i < vcGrid.getDataRowCount(); i++) {
						vcGrid.setRowHeight(i, [40]);
					}
					
				}else {
					
					if (vcControlVt == "fill") {
						vcGrid.updateConstraint(vcControl, {
							"verticalAlign": "center"
						});
					}
					
					vcGrid.updateConstraint(vcControl, {
						"height": vnVal
					});
					
					var vnRowHeight = Number(vnVal) + 10;
					
					/* 그리드 row의 height 설정 */
					for (var i = 0; i < vcGrid.getDataRowCount(); i++) {
						vcGrid.setRowHeight(i, [vnRowHeight]);
					}
				}
				
			}
			
			function grdReset(){
				var vcGrd = app.lookup("grd2");
				
				vcGrd.resetGrid();
				
				vcGrd.clearAllRowHeight();
			}
			
			/*
			 * "실행" 버튼(btn3)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn3Click(e){
				/* 동작 실행 */	
				grdUdConstraintSpacing();
				
				/* 에디터에 소스표시 */
				var vcAceEditor = app.lookup("ace2");
				vcAceEditor.value = grdUdConstraintSpacing;
				
			}
			
			/*
			 * "실행" 버튼(btn4)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn4Click(e){
				/* 동작 실행 */
				grdUdConstraint();
				
				/* 에디터에 소스표시 */
				var vcAceEditor = app.lookup("ace2");
				vcAceEditor.value = grdUdConstraint;
			}
			
			/*
			 * "실행" 버튼(btn2)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn2Click(e){
				/* 동작 실행 */
				grdUdConstraintHeight();
				
				/* 에디터에 소스표시 */
				var vcAceEditor = app.lookup("ace2");
				vcAceEditor.value = grdUdConstraintHeight;	
			}
			
			/*
			 * "실행" 버튼(btn5)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn5Click(e){
				/* 동작 실행 */
				grdReset();
				
				/* 에디터에 소스표시 */
				var vcAceEditor = app.lookup("ace2");
				vcAceEditor.value = grdReset;
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsList");
			dataSet_1.parseData({
				"columns": [
					{"name": "productNm"},
					{"name": "brand"},
					{"name": "product"},
					{"name": "price"}
				],
				"rows": [
					{"productNm": "Galaxy S21", "brand": "Samsung", "product": "핸드폰", "price": "1,080,000"},
					{"productNm": "Galaxy S20", "brand": "Samsung", "product": "핸드폰", "price": "750,000"},
					{"productNm": "Galaxy Note20", "brand": "Samsung", "product": "핸드폰", "price": "700,000"},
					{"productNm": "Galaxy Tab S7", "brand": "Samsung", "product": "태블릿", "price": "950,000"},
					{"productNm": "Galaxy Tab A7", "brand": "Samsung", "product": "태블릿", "price": "350,000"},
					{"productNm": "iPhone 12", "brand": "Apple", "product": "핸드폰", "price": "1,235,000"},
					{"productNm": "iPhone 11", "brand": "Apple", "product": "핸드폰", "price": "1,160,000"},
					{"productNm": "iPhone XS", "brand": "Apple", "product": "핸드폰", "price": "485,000"},
					{"productNm": "iPad Pro", "brand": "Apple", "product": "태블릿", "price": "1,005,000"},
					{"productNm": "iPad Air", "brand": "Apple", "product": "태블릿", "price": "743,000"},
					{"productNm": "V3 ThinQ", "brand": "LG", "product": "핸드폰", "price": "500,000"},
					{"productNm": "V35 ThinQ", "brand": "LG", "product": "핸드폰", "price": "350,000"},
					{"productNm": "V10", "brand": "LG", "product": "핸드폰", "price": "170,000"}
				]
			});
			(function(dataSet){
				var dataView_1 = new cpr.data.DataView("dvList", dataSet);
				dataView_1.parseData({});
				app.register(dataView_1);
			})(dataSet_1);
			app.register(dataSet_1);
			
			app.supportMedia("all and (min-width: 1320px)", "eXFrame");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1319px)", "default");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpHeader");
			// Layout
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			group_1.setLayout(verticalLayout_2);
			(function(container){
				var userDefinedControl_1 = new udc.com.appHeader("appheader1");
				container.addChild(userDefinedControl_1, {
					"width": "500px",
					"height": "30px"
				});
			})(group_1);
			container.addChild(group_1, {
				"autoSize": "height",
				"width": "1320px",
				"height": "30px"
			});
			
			var group_2 = new cpr.controls.Container();
			// Layout
			var verticalLayout_3 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_3.leftMargin = 20;
			verticalLayout_3.rightMargin = 30;
			verticalLayout_3.topMargin = 30;
			verticalLayout_3.bottomMargin = 30;
			group_2.setLayout(verticalLayout_3);
			(function(container){
				var group_3 = new cpr.controls.Container("grpTitle");
				// Layout
				var verticalLayout_4 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_4.spacing = 30;
				verticalLayout_4.topMargin = 20;
				verticalLayout_4.bottomMargin = 40;
				group_3.setLayout(verticalLayout_4);
				(function(container){
					var group_4 = new cpr.controls.Container();
					// Layout
					var formLayout_1 = new cpr.controls.layouts.FormLayout();
					formLayout_1.scrollable = false;
					formLayout_1.rightMargin = "50px";
					formLayout_1.horizontalSpacing = "5px";
					formLayout_1.verticalSpacing = "5px";
					formLayout_1.setColumns(["300px", "100px"]);
					formLayout_1.setColumnAutoSizing(0, true);
					formLayout_1.setColumnAutoSizing(1, true);
					formLayout_1.setRows(["1fr"]);
					group_4.setLayout(formLayout_1);
					(function(container){
						var output_1 = new cpr.controls.Output("optTitle");
						output_1.value = "그리드 셀에 임베딩된 컨트롤 배치 동적 변경";
						output_1.style.css({
							"font-weight" : "bold",
							"padding-left" : "1rem",
							"font-size" : "2.5rem"
						});
						container.addChild(output_1, {
							"colIndex": 0,
							"rowIndex": 0
						});
					})(group_4);
					container.addChild(group_4, {
						"autoSize": "height",
						"width": "1270px",
						"height": "40px"
					});
					var output_2 = new cpr.controls.Output("optSummary");
					output_2.value = "이 문서는 그리드 셀에 임베딩 된 컨트롤의 동적 변경 기능에 대하여 설명합니다.\r\n그리드에서 제공하는 API를 사용하여 컨트롤의 Constraint를 변경할 수 있습니다.";
					output_2.style.setClasses(["opt-tmpl"]);
					output_2.style.css({
						"padding-left" : "1rem",
						"font-size" : "1rem"
					});
					container.addChild(output_2, {
						"autoSize": "height",
						"width": "1210px",
						"height": "46px"
					});
				})(group_3);
				container.addChild(group_3, {
					"autoSize": "height",
					"width": "1270px",
					"height": "150px"
				});
				var group_5 = new cpr.controls.Container("scenarioGrp");
				// Layout
				var verticalLayout_5 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_5.spacing = 30;
				verticalLayout_5.topMargin = 10;
				verticalLayout_5.bottomMargin = 30;
				group_5.setLayout(verticalLayout_5);
				(function(container){
					var output_3 = new cpr.controls.Output();
					output_3.value = "시나리오";
					output_3.style.setClasses(["h1", "pl-3", "bg-primary", "text-white"]);
					output_3.style.css({
						"font-weight" : "bold",
						"padding-left" : "1rem",
						"font-size" : "1.75rem"
					});
					container.addChild(output_3, {
						"width": "100px",
						"height": "40px"
					});
					var output_4 = new cpr.controls.Output();
					output_4.value = "1. updateConstraint()를 사용하여 그리드 셀에 임베딩된 컨트롤의 leftspacing, rightspacing이 적용되는 것을 확인한다.\r\n2. updateConstraint()를 사용하여 그리드 셀에 임베딩된 컨트롤의 horizontal이 변경되는 것을 확인한다.\r\n3. updateConstraint()를 사용하여 그리드 셀에 임베딩된 컨트롤의 height가 변경되는 것을 확인한다.\r\n4. 그리드의 설정이 초기 설정값으로 리셋되는 것을 확인한다.";
					output_4.style.setClasses(["opt-tmpl"]);
					output_4.style.css({
						"padding-left" : "1rem",
						"font-size" : "1rem"
					});
					container.addChild(output_4, {
						"autoSize": "height",
						"width": "1210px",
						"height": "107px"
					});
					var group_6 = new cpr.controls.Container("groAddExp");
					group_6.style.css({
						"background-color" : "#dff7fb"
					});
					// Layout
					var verticalLayout_6 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_6.spacing = 10;
					verticalLayout_6.leftMargin = 30;
					verticalLayout_6.rightMargin = 30;
					verticalLayout_6.topMargin = 20;
					verticalLayout_6.bottomMargin = 20;
					group_6.setLayout(verticalLayout_6);
					(function(container){
						var output_5 = new cpr.controls.Output();
						output_5.value = "그리드 디테일셀";
						output_5.style.setClasses(["ref-title"]);
						output_5.style.css({
							"color" : "#09c2de",
							"font-weight" : "bold"
						});
						container.addChild(output_5, {
							"width": "100px",
							"height": "25px"
						});
						var output_6 = new cpr.controls.Output();
						output_6.value = "그리드 디테일셀에 임베딩된 컨트롤을 보다 쉽게 확인하기 위해 컨트롤에 spacing을 적용하였습니다.";
						output_6.style.css({
							"color" : "#09c2de"
						});
						container.addChild(output_6, {
							"autoSize": "height",
							"width": "100px",
							"height": "25px"
						});
					})(group_6);
					container.addChild(group_6, {
						"autoSize": "height",
						"width": "1100px",
						"height": "150px"
					});
				})(group_5);
				container.addChild(group_5, {
					"autoSize": "height",
					"width": "1270px",
					"height": "370px"
				});
				var group_7 = new cpr.controls.Container("grpFunction");
				// Layout
				var verticalLayout_7 = new cpr.controls.layouts.VerticalLayout();
				group_7.setLayout(verticalLayout_7);
				(function(container){
					var group_8 = new cpr.controls.Container("grpFuncFloating");
					group_8.userAttr({"floating-header": "true"});
					// Layout
					var verticalLayout_8 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_8.bottomMargin = 30;
					group_8.setLayout(verticalLayout_8);
					(function(container){
						var output_7 = new cpr.controls.Output();
						output_7.value = "기능확인";
						output_7.style.setClasses(["h1", "pl-3", "bg-primary", "text-white"]);
						output_7.style.css({
							"font-weight" : "bold",
							"padding-left" : "1rem",
							"font-size" : "1.75rem"
						});
						container.addChild(output_7, {
							"autoSize": "none",
							"width": "1270px",
							"height": "40px"
						});
						var group_9 = new cpr.controls.Container();
						group_9.style.css({
							"border-right-style" : "solid",
							"border-top-width" : "1px",
							"border-bottom-color" : "#dedede",
							"border-right-width" : "1px",
							"border-left-color" : "#dedede",
							"border-right-color" : "#dedede",
							"border-left-width" : "1px",
							"border-top-style" : "solid",
							"background-color" : "#F0F0F0",
							"border-left-style" : "solid",
							"border-bottom-width" : "1px",
							"border-top-color" : "#dedede",
							"border-bottom-style" : "solid"
						});
						// Layout
						var verticalLayout_9 = new cpr.controls.layouts.VerticalLayout();
						verticalLayout_9.leftMargin = 30;
						verticalLayout_9.rightMargin = 30;
						verticalLayout_9.topMargin = 5;
						verticalLayout_9.bottomMargin = 10;
						group_9.setLayout(verticalLayout_9);
						(function(container){
							var group_10 = new cpr.controls.Container();
							// Layout
							var formLayout_2 = new cpr.controls.layouts.FormLayout();
							formLayout_2.topMargin = "0px";
							formLayout_2.rightMargin = "0px";
							formLayout_2.bottomMargin = "0px";
							formLayout_2.leftMargin = "0px";
							formLayout_2.horizontalSpacing = "5px";
							formLayout_2.verticalSpacing = "5px";
							formLayout_2.setColumns(["1fr"]);
							formLayout_2.setRows(["1fr", "20px"]);
							group_10.setLayout(formLayout_2);
							(function(container){
								var output_8 = new cpr.controls.Output();
								output_8.value = "<기능 확인 컨트롤>";
								output_8.style.setClasses(["text-center"]);
								container.addChild(output_8, {
									"colIndex": 0,
									"rowIndex": 1
								});
								var grid_1 = new cpr.controls.Grid("grd2");
								grid_1.init({
									"dataSet": app.lookup("dsList"),
									"clickMode": "edit",
									"columns": [
										{"width": "100px"},
										{"width": "100px"},
										{"width": "100px"},
										{"width": "100px"}
									],
									"header": {
										"rows": [{"height": "35px"}],
										"cells": [
											{
												"constraint": {"rowIndex": 0, "colIndex": 0},
												"configurator": function(cell){
													cell.targetColumnName = "productNm";
													cell.filterable = false;
													cell.sortable = false;
													cell.text = "productNm";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 1},
												"configurator": function(cell){
													cell.targetColumnName = "brand";
													cell.filterable = false;
													cell.sortable = false;
													cell.text = "brand";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 2},
												"configurator": function(cell){
													cell.targetColumnName = "product";
													cell.filterable = false;
													cell.sortable = false;
													cell.text = "product";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 3},
												"configurator": function(cell){
													cell.targetColumnName = "price";
													cell.filterable = false;
													cell.sortable = false;
													cell.text = "price";
												}
											}
										]
									},
									"detail": {
										"rows": [{"height": "40px"}],
										"cells": [
											{
												"constraint": {"rowIndex": 0, "colIndex": 0},
												"configurator": function(cell){
													cell.columnName = "productNm";
													cell.control = (function(){
														var output_9 = new cpr.controls.Output("productNm");
														output_9.value = "Output";
														output_9.style.setClasses(["border", "text-center"]);
														output_9.bind("value").toDataColumn("productNm");
														return output_9;
													})();
													cell.controlConstraint = {
														"topSpacing": 3,
														"rightSpacing": 3,
														"bottomSpacing": 3,
														"leftSpacing": 3
													};
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 1},
												"configurator": function(cell){
													cell.columnName = "brand";
													cell.control = (function(){
														var output_10 = new cpr.controls.Output("brand");
														output_10.value = "Output";
														output_10.style.setClasses(["border", "text-center"]);
														output_10.bind("value").toDataColumn("brand");
														return output_10;
													})();
													cell.controlConstraint = {
														"topSpacing": 3,
														"rightSpacing": 3,
														"bottomSpacing": 3,
														"leftSpacing": 3
													};
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 2},
												"configurator": function(cell){
													cell.columnName = "product";
													cell.control = (function(){
														var output_11 = new cpr.controls.Output("product");
														output_11.value = "Output";
														output_11.style.setClasses(["border", "text-center"]);
														output_11.bind("value").toDataColumn("product");
														return output_11;
													})();
													cell.controlConstraint = {
														"topSpacing": 3,
														"rightSpacing": 3,
														"bottomSpacing": 3,
														"leftSpacing": 3
													};
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 3},
												"configurator": function(cell){
													cell.columnName = "price";
													cell.control = (function(){
														var output_12 = new cpr.controls.Output("price");
														output_12.value = "Output";
														output_12.style.setClasses(["border", "text-center"]);
														output_12.bind("value").toDataColumn("price");
														return output_12;
													})();
													cell.controlConstraint = {
														"topSpacing": 3,
														"rightSpacing": 3,
														"bottomSpacing": 3,
														"leftSpacing": 3
													};
												}
											}
										]
									}
								});
								container.addChild(grid_1, {
									"colIndex": 0,
									"rowIndex": 0
								});
							})(group_10);
							container.addChild(group_10, {
								"autoSize": "none",
								"width": "200px",
								"height": "400px"
							});
						})(group_9);
						container.addChild(group_9, {
							"autoSize": "height",
							"width": "1210px",
							"height": "400px"
						});
					})(group_8);
					container.addChild(group_8, {
						"autoSize": "height",
						"width": "1270px",
						"height": "450px"
					});
				})(group_7);
				container.addChild(group_7, {
					"autoSize": "height",
					"width": "1270px",
					"height": "450px"
				});
				var output_13 = new cpr.controls.Output();
				output_13.value = "주요코드";
				output_13.style.setClasses(["h1", "pl-3", "bg-primary", "text-white"]);
				output_13.style.css({
					"font-weight" : "bold",
					"padding-left" : "1rem",
					"font-size" : "1.75rem"
				});
				container.addChild(output_13, {
					"autoSize": "none",
					"width": "1210px",
					"height": "40px"
				});
				var group_11 = new cpr.controls.Container();
				// Layout
				var formLayout_3 = new cpr.controls.layouts.FormLayout();
				formLayout_3.userResizingMode = "standard";
				formLayout_3.topMargin = "0px";
				formLayout_3.rightMargin = "0px";
				formLayout_3.bottomMargin = "0px";
				formLayout_3.leftMargin = "0px";
				formLayout_3.horizontalSpacing = "5px";
				formLayout_3.verticalSpacing = "5px";
				formLayout_3.setColumns(["1fr", "300px"]);
				formLayout_3.setRows(["1fr"]);
				group_11.setLayout(formLayout_3);
				(function(container){
					var group_12 = new cpr.controls.Container();
					group_12.style.setClasses(["form-box"]);
					// Layout
					var verticalLayout_10 = new cpr.controls.layouts.VerticalLayout();
					group_12.setLayout(verticalLayout_10);
					(function(container){
						var userDefinedControl_2 = new udc.tmp.Ace("ace2");
						container.addChild(userDefinedControl_2, {
							"autoSize": "height",
							"width": "418px",
							"height": "295px"
						});
					})(group_12);
					container.addChild(group_12, {
						"colIndex": 1,
						"rowIndex": 0
					});
					var group_13 = new cpr.controls.Container();
					// Layout
					var formLayout_4 = new cpr.controls.layouts.FormLayout();
					formLayout_4.horizontalSpacing = "5px";
					formLayout_4.verticalSpacing = "10px";
					formLayout_4.setColumns(["1fr", "10px"]);
					formLayout_4.setColumnAutoSizing(1, true);
					formLayout_4.setRows(["1fr"]);
					group_13.setLayout(formLayout_4);
					(function(container){
						var userDefinedControl_3 = new udc.com.udcSplit("udcsplit1");
						userDefinedControl_3.leftGrpId = "grp6";
						userDefinedControl_3.rightGrpId = "grp7";
						container.addChild(userDefinedControl_3, {
							"colIndex": 1,
							"rowIndex": 0,
							"colSpan": 1,
							"rowSpan": 1,
							"horizontalAlign": "right",
							"width": 9
						});
						var group_14 = new cpr.controls.Container();
						// Layout
						var formLayout_5 = new cpr.controls.layouts.FormLayout();
						formLayout_5.scrollable = false;
						formLayout_5.topMargin = "0px";
						formLayout_5.rightMargin = "0px";
						formLayout_5.bottomMargin = "0px";
						formLayout_5.leftMargin = "0px";
						formLayout_5.horizontalSpacing = "10px";
						formLayout_5.verticalSpacing = "10px";
						formLayout_5.setColumns(["1fr"]);
						formLayout_5.setRows(["40px", "1fr"]);
						formLayout_5.setRowAutoSizing(0, true);
						group_14.setLayout(formLayout_5);
						(function(container){
							var group_15 = new cpr.controls.Container("grpFormFunc");
							group_15.style.setClasses(["form-box"]);
							// Layout
							var formLayout_6 = new cpr.controls.layouts.FormLayout();
							formLayout_6.topMargin = "5px";
							formLayout_6.rightMargin = "5px";
							formLayout_6.bottomMargin = "5px";
							formLayout_6.leftMargin = "5px";
							formLayout_6.horizontalSpacing = "5px";
							formLayout_6.verticalSpacing = "5px";
							formLayout_6.setColumns(["1fr"]);
							formLayout_6.setRows(["25px", "25px", "25px", "25px", "25px", "25px", "25px", "25px"]);
							formLayout_6.setRowAutoSizing(1, true);
							formLayout_6.setRowAutoSizing(2, true);
							formLayout_6.setRowAutoSizing(3, true);
							formLayout_6.setRowAutoSizing(4, true);
							formLayout_6.setRowAutoSizing(5, true);
							formLayout_6.setRowAutoSizing(6, true);
							formLayout_6.setRowAutoSizing(7, true);
							group_15.setLayout(formLayout_6);
							(function(container){
								var group_16 = new cpr.controls.Container("grp1");
								// Layout
								var formLayout_7 = new cpr.controls.layouts.FormLayout();
								formLayout_7.horizontalSpacing = "5px";
								formLayout_7.verticalSpacing = "5px";
								formLayout_7.setColumns(["24px", "1fr", "2fr", "1fr", "120px"]);
								formLayout_7.setRows(["25px"]);
								group_16.setLayout(formLayout_7);
								(function(container){
									var output_14 = new cpr.controls.Output();
									output_14.value = "No";
									output_14.style.css({
										"background-color" : "#e1edfe",
										"background-image" : "none",
										"text-align" : "center"
									});
									container.addChild(output_14, {
										"colIndex": 0,
										"rowIndex": 0
									});
									var output_15 = new cpr.controls.Output();
									output_15.value = "함수";
									output_15.style.css({
										"background-color" : "#e1edfe",
										"background-image" : "none",
										"text-align" : "center"
									});
									container.addChild(output_15, {
										"colIndex": 1,
										"rowIndex": 0
									});
									var output_16 = new cpr.controls.Output();
									output_16.value = "설명";
									output_16.style.css({
										"background-color" : "#e1edfe",
										"background-image" : "none",
										"text-align" : "center"
									});
									container.addChild(output_16, {
										"colIndex": 2,
										"rowIndex": 0
									});
									var output_17 = new cpr.controls.Output();
									output_17.value = "입력값";
									output_17.style.css({
										"background-color" : "#e1edfe",
										"background-image" : "none",
										"text-align" : "center"
									});
									container.addChild(output_17, {
										"colIndex": 3,
										"rowIndex": 0
									});
									var output_18 = new cpr.controls.Output();
									output_18.value = "동작";
									output_18.style.css({
										"background-color" : "#e1edfe",
										"background-image" : "none",
										"text-align" : "center"
									});
									container.addChild(output_18, {
										"colIndex": 4,
										"rowIndex": 0
									});
								})(group_16);
								container.addChild(group_16, {
									"colIndex": 0,
									"rowIndex": 0,
									"colSpan": 1,
									"rowSpan": 1
								});
								var group_17 = new cpr.controls.Container("grp2");
								// Layout
								var formLayout_8 = new cpr.controls.layouts.FormLayout();
								formLayout_8.horizontalSpacing = "5px";
								formLayout_8.verticalSpacing = "5px";
								formLayout_8.setColumns(["24px", "1fr", "2fr", "1fr", "120px"]);
								formLayout_8.setRows(["25px"]);
								formLayout_8.setRowAutoSizing(0, true);
								group_17.setLayout(formLayout_8);
								(function(container){
									var output_19 = new cpr.controls.Output();
									output_19.value = "1";
									output_19.style.css({
										"background-color" : "#e1edfe",
										"border-right-style" : "none",
										"border-left-style" : "none",
										"border-bottom-style" : "none",
										"background-image" : "none",
										"border-top-style" : "none",
										"text-align" : "center"
									});
									container.addChild(output_19, {
										"colIndex": 0,
										"rowIndex": 0
									});
									var inputBox_1 = new cpr.controls.InputBox("ipb2");
									inputBox_1.readOnly = true;
									inputBox_1.value = "Grid.updateConstraint\r\n(leftspacing, rightSpacing)";
									container.addChild(inputBox_1, {
										"colIndex": 1,
										"rowIndex": 0
									});
									var inputBox_2 = new cpr.controls.InputBox("ipb3");
									inputBox_2.readOnly = true;
									inputBox_2.value = "그리드 내에 임베딩 되어있는 컨트롤의 Constraint의 spacing을 변경합니다.";
									container.addChild(inputBox_2, {
										"colIndex": 2,
										"rowIndex": 0
									});
									var button_1 = new cpr.controls.Button("btn3");
									button_1.value = "실행";
									button_1.style.setClasses(["btn-primary"]);
									if(typeof onBtn3Click == "function") {
										button_1.addEventListener("click", onBtn3Click);
									}
									container.addChild(button_1, {
										"colIndex": 4,
										"rowIndex": 0
									});
									var group_18 = new cpr.controls.Container("grp8");
									// Layout
									var formLayout_9 = new cpr.controls.layouts.FormLayout();
									formLayout_9.topMargin = "0px";
									formLayout_9.rightMargin = "0px";
									formLayout_9.bottomMargin = "0px";
									formLayout_9.leftMargin = "0px";
									formLayout_9.horizontalSpacing = "5px";
									formLayout_9.verticalSpacing = "5px";
									formLayout_9.setColumns(["1fr", "1fr"]);
									formLayout_9.setRows(["1fr"]);
									group_18.setLayout(formLayout_9);
									(function(container){
										var comboBox_1 = new cpr.controls.ComboBox("cmbCol2");
										comboBox_1.placeholder = "선택 컬럼";
										(function(comboBox_1){
											comboBox_1.addItem(new cpr.controls.Item("productNm", "productNm"));
											comboBox_1.addItem(new cpr.controls.Item("brand", "brand"));
											comboBox_1.addItem(new cpr.controls.Item("product", "product"));
											comboBox_1.addItem(new cpr.controls.Item("price", "price"));
										})(comboBox_1);
										container.addChild(comboBox_1, {
											"colIndex": 0,
											"rowIndex": 0
										});
										var inputBox_3 = new cpr.controls.InputBox("ipbSp");
										inputBox_3.placeholder = "spacing";
										container.addChild(inputBox_3, {
											"colIndex": 1,
											"rowIndex": 0
										});
									})(group_18);
									container.addChild(group_18, {
										"colIndex": 3,
										"rowIndex": 0
									});
								})(group_17);
								container.addChild(group_17, {
									"colIndex": 0,
									"rowIndex": 1,
									"colSpan": 1,
									"rowSpan": 1
								});
								var group_19 = new cpr.controls.Container("grp3");
								// Layout
								var formLayout_10 = new cpr.controls.layouts.FormLayout();
								formLayout_10.horizontalSpacing = "5px";
								formLayout_10.verticalSpacing = "5px";
								formLayout_10.setColumns(["24px", "1fr", "2fr", "1fr", "120px"]);
								formLayout_10.setRows(["25px"]);
								formLayout_10.setRowAutoSizing(0, true);
								group_19.setLayout(formLayout_10);
								(function(container){
									var output_20 = new cpr.controls.Output();
									output_20.value = "2";
									output_20.style.css({
										"background-color" : "#e1edfe",
										"border-right-style" : "none",
										"border-left-style" : "none",
										"border-bottom-style" : "none",
										"background-image" : "none",
										"border-top-style" : "none",
										"text-align" : "center"
									});
									container.addChild(output_20, {
										"colIndex": 0,
										"rowIndex": 0
									});
									var inputBox_4 = new cpr.controls.InputBox("ipb4");
									inputBox_4.readOnly = true;
									inputBox_4.value = "그리드 내에 임베딩 되어있는 컨트롤의 Constraint의 horizontal을 변경합니다.";
									container.addChild(inputBox_4, {
										"colIndex": 2,
										"rowIndex": 0
									});
									var inputBox_5 = new cpr.controls.InputBox("ipb5");
									inputBox_5.readOnly = true;
									inputBox_5.value = "Grid.updateConstraint(horizontal)";
									container.addChild(inputBox_5, {
										"colIndex": 1,
										"rowIndex": 0
									});
									var button_2 = new cpr.controls.Button("btn4");
									button_2.value = "실행";
									button_2.style.setClasses(["btn-primary"]);
									if(typeof onBtn4Click == "function") {
										button_2.addEventListener("click", onBtn4Click);
									}
									container.addChild(button_2, {
										"colIndex": 4,
										"rowIndex": 0
									});
									var group_20 = new cpr.controls.Container("grp7");
									// Layout
									var formLayout_11 = new cpr.controls.layouts.FormLayout();
									formLayout_11.topMargin = "0px";
									formLayout_11.rightMargin = "0px";
									formLayout_11.bottomMargin = "0px";
									formLayout_11.leftMargin = "0px";
									formLayout_11.horizontalSpacing = "5px";
									formLayout_11.verticalSpacing = "5px";
									formLayout_11.setColumns(["1fr", "1fr"]);
									formLayout_11.setRows(["1fr"]);
									group_20.setLayout(formLayout_11);
									(function(container){
										var comboBox_2 = new cpr.controls.ComboBox("cmbCol");
										comboBox_2.placeholder = "선택 컬럼";
										(function(comboBox_2){
											comboBox_2.addItem(new cpr.controls.Item("productNm", "productNm"));
											comboBox_2.addItem(new cpr.controls.Item("brand", "brand"));
											comboBox_2.addItem(new cpr.controls.Item("product", "product"));
											comboBox_2.addItem(new cpr.controls.Item("price", "price"));
										})(comboBox_2);
										container.addChild(comboBox_2, {
											"colIndex": 0,
											"rowIndex": 0
										});
										var comboBox_3 = new cpr.controls.ComboBox("cmbHrz");
										comboBox_3.placeholder = "horizontal";
										(function(comboBox_3){
											comboBox_3.addItem(new cpr.controls.Item("left", "left"));
											comboBox_3.addItem(new cpr.controls.Item("center", "center"));
											comboBox_3.addItem(new cpr.controls.Item("right", "right"));
										})(comboBox_3);
										container.addChild(comboBox_3, {
											"colIndex": 1,
											"rowIndex": 0
										});
									})(group_20);
									container.addChild(group_20, {
										"colIndex": 3,
										"rowIndex": 0
									});
								})(group_19);
								container.addChild(group_19, {
									"colIndex": 0,
									"rowIndex": 2,
									"colSpan": 1,
									"rowSpan": 1
								});
								var group_21 = new cpr.controls.Container("grp4");
								// Layout
								var formLayout_12 = new cpr.controls.layouts.FormLayout();
								formLayout_12.horizontalSpacing = "5px";
								formLayout_12.verticalSpacing = "5px";
								formLayout_12.setColumns(["24px", "1fr", "2fr", "1fr", "120px"]);
								formLayout_12.setRows(["25px"]);
								formLayout_12.setRowAutoSizing(0, true);
								group_21.setLayout(formLayout_12);
								(function(container){
									var output_21 = new cpr.controls.Output();
									output_21.value = "3";
									output_21.style.css({
										"background-color" : "#e1edfe",
										"border-right-style" : "none",
										"border-left-style" : "none",
										"border-bottom-style" : "none",
										"background-image" : "none",
										"border-top-style" : "none",
										"text-align" : "center"
									});
									container.addChild(output_21, {
										"colIndex": 0,
										"rowIndex": 0
									});
									var inputBox_6 = new cpr.controls.InputBox("ipb6");
									inputBox_6.readOnly = true;
									inputBox_6.value = "그리드 내에 임베딩 되어있는 컨트롤의 Constraint의 height를 변경합니다.";
									container.addChild(inputBox_6, {
										"colIndex": 2,
										"rowIndex": 0
									});
									var inputBox_7 = new cpr.controls.InputBox("ipb7");
									inputBox_7.readOnly = true;
									inputBox_7.value = "Grid.updateConstraint(height)";
									container.addChild(inputBox_7, {
										"colIndex": 1,
										"rowIndex": 0
									});
									var button_3 = new cpr.controls.Button("btn2");
									button_3.value = "실행";
									button_3.style.setClasses(["btn-primary"]);
									if(typeof onBtn2Click == "function") {
										button_3.addEventListener("click", onBtn2Click);
									}
									container.addChild(button_3, {
										"colIndex": 4,
										"rowIndex": 0
									});
									var group_22 = new cpr.controls.Container("grp6");
									// Layout
									var formLayout_13 = new cpr.controls.layouts.FormLayout();
									formLayout_13.topMargin = "0px";
									formLayout_13.rightMargin = "0px";
									formLayout_13.bottomMargin = "0px";
									formLayout_13.leftMargin = "0px";
									formLayout_13.horizontalSpacing = "5px";
									formLayout_13.verticalSpacing = "5px";
									formLayout_13.setColumns(["1fr", "1fr"]);
									formLayout_13.setRows(["1fr"]);
									group_22.setLayout(formLayout_13);
									(function(container){
										var comboBox_4 = new cpr.controls.ComboBox("cmbCol3");
										comboBox_4.placeholder = "선택 컬럼";
										(function(comboBox_4){
											comboBox_4.addItem(new cpr.controls.Item("productNm", "productNm"));
											comboBox_4.addItem(new cpr.controls.Item("brand", "brand"));
											comboBox_4.addItem(new cpr.controls.Item("product", "product"));
											comboBox_4.addItem(new cpr.controls.Item("price", "price"));
										})(comboBox_4);
										container.addChild(comboBox_4, {
											"colIndex": 0,
											"rowIndex": 0
										});
										var inputBox_8 = new cpr.controls.InputBox("ipbWd");
										inputBox_8.placeholder = "height";
										container.addChild(inputBox_8, {
											"colIndex": 1,
											"rowIndex": 0
										});
									})(group_22);
									container.addChild(group_22, {
										"colIndex": 3,
										"rowIndex": 0
									});
								})(group_21);
								container.addChild(group_21, {
									"colIndex": 0,
									"rowIndex": 3
								});
								var group_23 = new cpr.controls.Container("grp5");
								// Layout
								var formLayout_14 = new cpr.controls.layouts.FormLayout();
								formLayout_14.horizontalSpacing = "5px";
								formLayout_14.verticalSpacing = "5px";
								formLayout_14.setColumns(["24px", "1fr", "2fr", "1fr", "120px"]);
								formLayout_14.setRows(["25px"]);
								formLayout_14.setRowAutoSizing(0, true);
								group_23.setLayout(formLayout_14);
								(function(container){
									var output_22 = new cpr.controls.Output();
									output_22.value = "4";
									output_22.style.css({
										"background-color" : "#e1edfe",
										"border-right-style" : "none",
										"border-left-style" : "none",
										"border-bottom-style" : "none",
										"background-image" : "none",
										"border-top-style" : "none",
										"text-align" : "center"
									});
									container.addChild(output_22, {
										"colIndex": 0,
										"rowIndex": 0
									});
									var inputBox_9 = new cpr.controls.InputBox("ipb8");
									inputBox_9.readOnly = true;
									inputBox_9.value = "설정된 그리드 정보를 초기화합니다.";
									container.addChild(inputBox_9, {
										"colIndex": 2,
										"rowIndex": 0
									});
									var inputBox_10 = new cpr.controls.InputBox("ipb9");
									inputBox_10.readOnly = true;
									inputBox_10.value = "Grid.resetGrid";
									container.addChild(inputBox_10, {
										"colIndex": 1,
										"rowIndex": 0
									});
									var button_4 = new cpr.controls.Button("btn5");
									button_4.value = "실행";
									button_4.style.setClasses(["btn-primary"]);
									if(typeof onBtn5Click == "function") {
										button_4.addEventListener("click", onBtn5Click);
									}
									container.addChild(button_4, {
										"colIndex": 4,
										"rowIndex": 0
									});
								})(group_23);
								container.addChild(group_23, {
									"colIndex": 0,
									"rowIndex": 4
								});
							})(group_15);
							container.addChild(group_15, {
								"colIndex": 0,
								"rowIndex": 1
							});
							var group_24 = new cpr.controls.Container("grpRslt");
							group_24.style.setClasses(["form-box"]);
							// Layout
							var formLayout_15 = new cpr.controls.layouts.FormLayout();
							formLayout_15.scrollable = false;
							formLayout_15.topMargin = "5px";
							formLayout_15.rightMargin = "30px";
							formLayout_15.bottomMargin = "5px";
							formLayout_15.leftMargin = "5px";
							formLayout_15.horizontalSpacing = "5px";
							formLayout_15.verticalSpacing = "5px";
							formLayout_15.setColumns(["100px", "1fr"]);
							formLayout_15.setRows(["1fr"]);
							group_24.setLayout(formLayout_15);
							(function(container){
								var output_23 = new cpr.controls.Output();
								output_23.value = "결과값";
								output_23.style.css({
									"background-color" : "#e1edfe",
									"background-image" : "none",
									"padding-right" : "1rem"
								});
								container.addChild(output_23, {
									"colIndex": 0,
									"rowIndex": 0
								});
								var output_24 = new cpr.controls.Output("optRslt");
								output_24.value = "";
								output_24.style.css({
									"background-color" : "white",
									"border-right-style" : "none",
									"border-left-style" : "none",
									"padding-left" : "1rem",
									"border-bottom-style" : "none",
									"border-top-style" : "none",
									"text-align" : "left"
								});
								container.addChild(output_24, {
									"colIndex": 1,
									"rowIndex": 0
								});
							})(group_24);
							container.addChild(group_24, {
								"colIndex": 0,
								"rowIndex": 0
							});
						})(group_14);
						container.addChild(group_14, {
							"colIndex": 0,
							"rowIndex": 0,
							"colSpan": 1,
							"rowSpan": 1
						});
					})(group_13);
					container.addChild(group_13, {
						"colIndex": 0,
						"rowIndex": 0,
						"colSpan": 1,
						"rowSpan": 1
					});
				})(group_11);
				container.addChild(group_11, {
					"autoSize": "none",
					"width": "1270px",
					"height": "295px"
				});
				var group_25 = new cpr.controls.Container("grpThirdParty");
				group_25.style.setClasses(["card-inner"]);
				// Layout
				var verticalLayout_11 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_11.spacing = 15;
				verticalLayout_11.leftMargin = 0;
				verticalLayout_11.rightMargin = 0;
				verticalLayout_11.topMargin = 20;
				verticalLayout_11.bottomMargin = 40;
				group_25.setLayout(verticalLayout_11);
				(function(container){
					var output_25 = new cpr.controls.Output();
					output_25.value = "유의 사항";
					output_25.style.setClasses(["h1", "pl-3", "bg-primary", "text-white"]);
					output_25.style.css({
						"font-weight" : "bold",
						"padding-left" : "1rem",
						"font-size" : "1.75rem"
					});
					container.addChild(output_25, {
						"autoSize": "none",
						"width": "1270px",
						"height": "40px"
					});
					var group_26 = new cpr.controls.Container();
					group_26.style.css({
						"background-color" : "#FFF5EF"
					});
					// Layout
					var verticalLayout_12 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_12.leftMargin = 30;
					verticalLayout_12.rightMargin = 30;
					verticalLayout_12.topMargin = 20;
					verticalLayout_12.bottomMargin = 20;
					group_26.setLayout(verticalLayout_12);
					(function(container){
						var output_26 = new cpr.controls.Output();
						output_26.value = "임베딩 컨트롤";
						output_26.style.css({
							"color" : "#FF9149",
							"font-weight" : "bolder"
						});
						container.addChild(output_26, {
							"width": "100px",
							"height": "25px"
						});
						var output_27 = new cpr.controls.Output();
						output_27.value = "그리드 디테일 셀 내 컨트롤의 컨스트레인트를 동적으로 변경할 때는 반드시 그리드 디테일 셀에 컨트롤이 임베딩되어 있어야 합니다. 또한 그리드 디테일 셀에 임베딩된 컨트롤의 그리드 영역이나 셀 인덱스는 변경할 수 없습니다.";
						output_27.style.css({
							"color" : "#FF9149"
						});
						container.addChild(output_27, {
							"autoSize": "height",
							"width": "100px",
							"height": "25px"
						});
					})(group_26);
					container.addChild(group_26, {
						"autoSize": "height",
						"width": "1040px",
						"height": "100px"
					});
				})(group_25);
				container.addChild(group_25, {
					"autoSize": "height",
					"width": "1100px",
					"height": "500px"
				});
			})(group_2);
			container.addChild(group_2, {
				"autoSize": "height",
				"width": "1320px",
				"height": "2800px"
			});
		}
	});
	app.title = "gridCellControls";
	cpr.core.Platform.INSTANCE.register(app);
})();
