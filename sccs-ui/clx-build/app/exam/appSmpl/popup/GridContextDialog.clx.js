/*
 * App URI: app/exam/appSmpl/popup/GridContextDialog
 * Source Location: app/exam/appSmpl/popup/GridContextDialog.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/exam/appSmpl/popup/GridContextDialog", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * GridContextDialog.js
			 * Created at 2022. 3. 10. 오후 1:57:20.
			 *
			 * @author aaajd
			 ************************************************/
			
			/*
			 * "취소하기" 버튼(btn2)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn2Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn2 = e.control;
				app.close();
			}
			
			/*
			 * "추가하기" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click2(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
				//타입 강제지정
				/** @type cpr.data.DataSet */
				var ds1 = app.getHostAppInstance().lookup("ds1");
				var grd1 = app.getHostAppInstance().lookup("grd1");
				
				var label = app.lookup("ipb1").value;
				var value = app.lookup("ipb2").value;
				var parent = app.lookup("ipb3").value;
				
				//value값 이 있는지 check
				if((ds1.getConditionalRowCount("value === '"+value+"'"))>0){
					//value값이 있는것
					alert("중복된 value값은 추가할 수 없습니다.");
					return false;
				}else if(label == null || value == null){
					alert("값을 전부 제대로 입력해 주세요");
					return false;
				}else{ 
					ds1.insertRowData(grd1.getSelectedRowIndices()[0], true, 
						{"label":label,
						 "value":value,
						 "parent": parent
						})
					
					//행 추가시, comtitle안의 숫자 업데이트
					/** @type udc.com.comTitle */
					var comtitle = app.getHostAppInstance().lookup("comtitle1");
					
					/** @type cpr.controls.Grid */	
					var grd1 = app.getHostAppInstance().lookup("grd1");
					
					var counts = grd1.rowCount;
					
					comtitle.rowCount = counts;
					
					//추가된 행 선택상태로 변경시켜줌
					var vcRow = grd1.findFirstRow("value == '"+value+"'").getIndex();
					grd1.selectRows(vcRow);
					app.close();
				}
			}
			
			
			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				app.lookup("ipb1").focus();
			};
			// End - User Script
			
			// Header
			
			app.supportMedia("all and (min-width: 1320px)", "eXFrame");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1319px)", "default");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.scrollable = true;
			formLayout_1.topMargin = "0px";
			formLayout_1.rightMargin = "0px";
			formLayout_1.bottomMargin = "0px";
			formLayout_1.leftMargin = "0px";
			formLayout_1.horizontalSpacing = "5px";
			formLayout_1.verticalSpacing = "5px";
			formLayout_1.setColumns(["1fr", "1fr"]);
			formLayout_1.setRows(["1fr", "1fr", "1fr", "1fr"]);
			container.setLayout(formLayout_1);
			
			// UI Configuration
			var inputBox_1 = new cpr.controls.InputBox("ipb2");
			container.addChild(inputBox_1, {
				"colIndex": 1,
				"rowIndex": 1,
				"verticalAlign": "center"
			});
			
			var output_1 = new cpr.controls.Output();
			output_1.value = "value :";
			output_1.style.css({
				"font-weight" : "bold",
				"font-size" : "16px",
				"text-align" : "left"
			});
			container.addChild(output_1, {
				"colIndex": 0,
				"rowIndex": 1,
				"verticalAlign": "center"
			});
			
			var inputBox_2 = new cpr.controls.InputBox("ipb1");
			container.addChild(inputBox_2, {
				"colIndex": 1,
				"rowIndex": 0,
				"verticalAlign": "center"
			});
			
			var output_2 = new cpr.controls.Output();
			output_2.value = "label :";
			output_2.style.css({
				"font-weight" : "bold",
				"font-size" : "16px",
				"text-align" : "left"
			});
			container.addChild(output_2, {
				"colIndex": 0,
				"rowIndex": 0,
				"verticalAlign": "center"
			});
			
			var button_1 = new cpr.controls.Button("btn2");
			button_1.value = "취소하기";
			button_1.style.setClasses(["btn-warning"]);
			if(typeof onBtn2Click == "function") {
				button_1.addEventListener("click", onBtn2Click);
			}
			container.addChild(button_1, {
				"colIndex": 0,
				"rowIndex": 3,
				"verticalAlign": "center"
			});
			
			var button_2 = new cpr.controls.Button("btn1");
			button_2.value = "추가하기";
			if(typeof onBtn1Click2 == "function") {
				button_2.addEventListener("click", onBtn1Click2);
			}
			container.addChild(button_2, {
				"colIndex": 1,
				"rowIndex": 3,
				"verticalAlign": "center"
			});
			
			var output_3 = new cpr.controls.Output();
			output_3.value = "parent :";
			output_3.style.css({
				"font-weight" : "bold",
				"font-size" : "16px",
				"text-align" : "left"
			});
			container.addChild(output_3, {
				"colIndex": 0,
				"rowIndex": 2,
				"verticalAlign": "center"
			});
			
			var inputBox_3 = new cpr.controls.InputBox("ipb3");
			container.addChild(inputBox_3, {
				"colIndex": 1,
				"rowIndex": 2,
				"verticalAlign": "center"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "GridContextDialog";
	cpr.core.Platform.INSTANCE.register(app);
})();
