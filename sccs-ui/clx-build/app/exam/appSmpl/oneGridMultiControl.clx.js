/*
 * App URI: app/exam/appSmpl/oneGridMultiControl
 * Source Location: app/exam/appSmpl/oneGridMultiControl.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/exam/appSmpl/oneGridMultiControl", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			* oneGridMultiControl.js
			 * Created at 2022. 3. 18. 오후 4:44:28.
			 *
			 * @author aaajd
			 ************************************************/
			
			
			/*
			 * "https://techdom.tomatosystem.co.kr/p/00001" 버튼(btn5)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn5Click2(e){
				//질의문자열 중 ps의 value 값에 해당 qna 요청번호 입력
				//faq인 경우, 질의문자열 중 tn의 value 값을 faq로 수정
				window.open('https://techdom.tomatosystem.co.kr/p/00019/?bn=eXBuilder6&tn=qna&ps=11611');
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsList");
			dataSet_1.parseData({
				"columns": [
					{"name": "controlNm"},
					{"name": "value"}
				],
				"rows": [
					{"controlNm": "inputbox", "value": "value1"},
					{"controlNm": "button", "value": "value2"},
					{"controlNm": "output", "value": "value3"},
					{"controlNm": "inputbox", "value": "value4"},
					{"controlNm": "inputbox", "value": "value5"},
					{"controlNm": "button", "value": "value6"}
				]
			});
			(function(dataSet){
				var dataView_1 = new cpr.data.DataView("dvList", dataSet);
				dataView_1.parseData({});
				app.register(dataView_1);
			})(dataSet_1);
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsComboControlNm");
			dataSet_2.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"}
				],
				"rows": [
					{"label": "인풋박스", "value": "inputbox"},
					{"label": "버튼", "value": "button"},
					{"label": "아웃풋", "value": "output"}
				]
			});
			app.register(dataSet_2);
			
			app.supportMedia("all and (min-width: 1320px)", "eXFrame");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1319px)", "default");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpHeader");
			// Layout
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			group_1.setLayout(verticalLayout_2);
			(function(container){
				var userDefinedControl_1 = new udc.com.appHeader("appheader1");
				container.addChild(userDefinedControl_1, {
					"width": "500px",
					"height": "30px"
				});
			})(group_1);
			container.addChild(group_1, {
				"autoSize": "height",
				"width": "1320px",
				"height": "30px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var verticalLayout_3 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_3.leftMargin = 20;
			verticalLayout_3.rightMargin = 30;
			verticalLayout_3.topMargin = 30;
			verticalLayout_3.bottomMargin = 30;
			group_2.setLayout(verticalLayout_3);
			(function(container){
				var group_3 = new cpr.controls.Container("grp1");
				// Layout
				var verticalLayout_4 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_4.spacing = 30;
				verticalLayout_4.topMargin = 20;
				verticalLayout_4.bottomMargin = 40;
				group_3.setLayout(verticalLayout_4);
				(function(container){
					var group_4 = new cpr.controls.Container("grp3");
					// Layout
					var formLayout_1 = new cpr.controls.layouts.FormLayout();
					formLayout_1.scrollable = false;
					formLayout_1.rightMargin = "50px";
					formLayout_1.horizontalSpacing = "5px";
					formLayout_1.verticalSpacing = "5px";
					formLayout_1.setColumns(["300px", "100px"]);
					formLayout_1.setColumnAutoSizing(0, true);
					formLayout_1.setColumnAutoSizing(1, true);
					formLayout_1.setRows(["1fr"]);
					group_4.setLayout(formLayout_1);
					(function(container){
						var output_1 = new cpr.controls.Output();
						output_1.value = "한 그리드에서 여러 컨트롤 사용 예제";
						output_1.style.css({
							"font-weight" : "bold",
							"padding-left" : "1rem",
							"font-size" : "2.5rem"
						});
						container.addChild(output_1, {
							"colIndex": 0,
							"rowIndex": 0
						});
					})(group_4);
					container.addChild(group_4, {
						"autoSize": "height",
						"width": "1270px",
						"height": "40px"
					});
					var output_2 = new cpr.controls.Output();
					output_2.value = "이 문서는 그리드에서 데이터에 따라 컨트롤의 종류가 변경되는 기능에 대하여 설명합니다.\r\n\r\nUDC를 이용하여 구현할 수 있습니다.";
					output_2.style.setClasses(["opt-tmpl"]);
					output_2.style.css({
						"padding-left" : "1rem",
						"font-size" : "1rem"
					});
					container.addChild(output_2, {
						"autoSize": "height",
						"width": "1210px",
						"height": "46px"
					});
				})(group_3);
				container.addChild(group_3, {
					"autoSize": "height",
					"width": "1270px",
					"height": "150px"
				});
				var group_5 = new cpr.controls.Container("grp2");
				// Layout
				var verticalLayout_5 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_5.spacing = 30;
				verticalLayout_5.topMargin = 10;
				verticalLayout_5.bottomMargin = 30;
				group_5.setLayout(verticalLayout_5);
				(function(container){
					var output_3 = new cpr.controls.Output();
					output_3.value = "시나리오";
					output_3.style.setClasses(["h1", "pl-3", "bg-primary", "text-white"]);
					output_3.style.css({
						"font-weight" : "bold",
						"padding-left" : "1rem",
						"font-size" : "1.75rem"
					});
					container.addChild(output_3, {
						"width": "100px",
						"height": "40px"
					});
					var output_4 = new cpr.controls.Output("ipbScenario");
					output_4.value = "1. controlNm 컬럼의 콤보박스 컨트롤에서 값을 변경해가며 value 컬럼의 컨트롤이 변경되는지 확인한다.";
					output_4.style.setClasses(["opt-tmpl"]);
					output_4.style.css({
						"padding-left" : "1rem",
						"font-size" : "1rem"
					});
					container.addChild(output_4, {
						"autoSize": "height",
						"width": "1210px",
						"height": "107px"
					});
				})(group_5);
				container.addChild(group_5, {
					"autoSize": "height",
					"width": "1270px",
					"height": "370px"
				});
				var group_6 = new cpr.controls.Container("grpFunction");
				// Layout
				var verticalLayout_6 = new cpr.controls.layouts.VerticalLayout();
				group_6.setLayout(verticalLayout_6);
				(function(container){
					var group_7 = new cpr.controls.Container("grpFuncFloating");
					group_7.userAttr({"floating-header": "true"});
					// Layout
					var verticalLayout_7 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_7.bottomMargin = 30;
					group_7.setLayout(verticalLayout_7);
					(function(container){
						var output_5 = new cpr.controls.Output();
						output_5.value = "기능확인";
						output_5.style.setClasses(["h1", "pl-3", "bg-primary", "text-white"]);
						output_5.style.css({
							"font-weight" : "bold",
							"padding-left" : "1rem",
							"font-size" : "1.75rem"
						});
						container.addChild(output_5, {
							"autoSize": "none",
							"width": "1270px",
							"height": "40px"
						});
						var group_8 = new cpr.controls.Container("grp11");
						group_8.style.css({
							"border-right-style" : "solid",
							"border-top-width" : "1px",
							"border-bottom-color" : "#dedede",
							"border-right-width" : "1px",
							"border-left-color" : "#dedede",
							"border-right-color" : "#dedede",
							"border-left-width" : "1px",
							"border-top-style" : "solid",
							"background-color" : "#F0F0F0",
							"border-left-style" : "solid",
							"border-bottom-width" : "1px",
							"border-top-color" : "#dedede",
							"border-bottom-style" : "solid"
						});
						// Layout
						var verticalLayout_8 = new cpr.controls.layouts.VerticalLayout();
						verticalLayout_8.leftMargin = 30;
						verticalLayout_8.rightMargin = 30;
						verticalLayout_8.topMargin = 5;
						verticalLayout_8.bottomMargin = 10;
						group_8.setLayout(verticalLayout_8);
						(function(container){
							var grid_1 = new cpr.controls.Grid("grd2");
							grid_1.init({
								"dataSet": app.lookup("dsList"),
								"columns": [
									{"width": "100px"},
									{"width": "100px"}
								],
								"header": {
									"rows": [{"height": "35px"}],
									"cells": [
										{
											"constraint": {"rowIndex": 0, "colIndex": 0},
											"configurator": function(cell){
												cell.targetColumnName = "controlNm";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "controlNm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 1},
											"configurator": function(cell){
												cell.targetColumnName = "value";
												cell.filterable = false;
												cell.sortable = false;
												cell.columnType = "normal";
												cell.text = "value";
												cell.emptyValueSort = "emptyString";
											}
										}
									]
								},
								"detail": {
									"rows": [{"height": "30px"}],
									"cells": [
										{
											"constraint": {"rowIndex": 0, "colIndex": 0},
											"configurator": function(cell){
												cell.columnName = "controlNm";
												cell.control = (function(){
													var comboBox_1 = new cpr.controls.ComboBox("cmb2");
													(function(comboBox_1){
														comboBox_1.setItemSet(app.lookup("dsComboControlNm"), {
															"label": "label",
															"value": "value"
														});
													})(comboBox_1);
													comboBox_1.bind("value").toDataColumn("controlNm");
													return comboBox_1;
												})();
												cell.controlConstraint = {};
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 1},
											"configurator": function(cell){
												cell.control = (function(){
													var userDefinedControl_2 = new udc.com.oneGridMultiControl_UDC();
													userDefinedControl_2.bind("cellValue").toDataColumn("value");
													userDefinedControl_2.bind("inputboxVisible").toExpression("controlNm == \"inputbox\" ? true : false");
													userDefinedControl_2.bind("buttonVisible").toExpression("controlNm == \"button\" ? true : false");
													userDefinedControl_2.bind("outputVisible").toExpression("controlNm == \"output\" ? true : false");
													return userDefinedControl_2;
												})();
												cell.controlConstraint = {};
											}
										}
									]
								}
							});
							container.addChild(grid_1, {
								"autoSize": "none",
								"width": "800px",
								"height": "275px"
							});
						})(group_8);
						container.addChild(group_8, {
							"autoSize": "height",
							"width": "1210px",
							"height": "400px"
						});
					})(group_7);
					container.addChild(group_7, {
						"autoSize": "height",
						"width": "1270px",
						"height": "450px"
					});
				})(group_6);
				container.addChild(group_6, {
					"autoSize": "height",
					"width": "1270px",
					"height": "450px"
				});
				var output_6 = new cpr.controls.Output();
				output_6.value = "주요코드";
				output_6.style.setClasses(["h1", "pl-3", "bg-primary", "text-white"]);
				output_6.style.css({
					"font-weight" : "bold",
					"padding-left" : "1rem",
					"font-size" : "1.75rem"
				});
				container.addChild(output_6, {
					"autoSize": "none",
					"width": "1210px",
					"height": "40px"
				});
				var group_9 = new cpr.controls.Container("grp16");
				// Layout
				var formLayout_2 = new cpr.controls.layouts.FormLayout();
				formLayout_2.userResizingMode = "standard";
				formLayout_2.topMargin = "0px";
				formLayout_2.rightMargin = "0px";
				formLayout_2.bottomMargin = "0px";
				formLayout_2.leftMargin = "0px";
				formLayout_2.horizontalSpacing = "5px";
				formLayout_2.verticalSpacing = "5px";
				formLayout_2.setColumns(["1fr"]);
				formLayout_2.setRows(["1fr"]);
				group_9.setLayout(formLayout_2);
				(function(container){
					var group_10 = new cpr.controls.Container("grp17");
					group_10.style.setClasses(["form-box"]);
					// Layout
					var verticalLayout_9 = new cpr.controls.layouts.VerticalLayout();
					group_10.setLayout(verticalLayout_9);
					(function(container){
						var userDefinedControl_3 = new udc.tmp.Ace("ace1");
						userDefinedControl_3.value = "// UDC 코드\r\n\r\n/**\r\n * UDC 컨트롤이 그리드의 뷰 모드에서 표시할 텍스트를 반환합니다.\r\n */\r\nexports.getText = function(){\r\n\t// TODO: 그리드의 뷰 모드에서 표시할 텍스트를 반환하는 하는 코드를 작성해야 합니다.\r\n\treturn app.getAppProperty(\"cellValue\");\r\n};";
						container.addChild(userDefinedControl_3, {
							"autoSize": "height",
							"width": "418px",
							"height": "295px"
						});
					})(group_10);
					container.addChild(group_10, {
						"colIndex": 0,
						"rowIndex": 0
					});
				})(group_9);
				container.addChild(group_9, {
					"autoSize": "none",
					"width": "1270px",
					"height": "295px"
				});
				var group_11 = new cpr.controls.Container("grp10");
				group_11.style.setClasses(["card-inner"]);
				// Layout
				var verticalLayout_10 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_10.spacing = 15;
				verticalLayout_10.leftMargin = 0;
				verticalLayout_10.rightMargin = 0;
				verticalLayout_10.topMargin = 20;
				verticalLayout_10.bottomMargin = 40;
				group_11.setLayout(verticalLayout_10);
				(function(container){
					var output_7 = new cpr.controls.Output();
					output_7.value = "토마토 시스템 기술지원(Techdom)";
					output_7.style.setClasses(["h1", "pl-3", "bg-primary", "text-white"]);
					output_7.style.css({
						"font-weight" : "bold",
						"padding-left" : "1rem",
						"font-size" : "1.75rem"
					});
					container.addChild(output_7, {
						"autoSize": "none",
						"width": "1270px",
						"height": "40px"
					});
					var group_12 = new cpr.controls.Container("grp12");
					group_12.style.css({
						"background-color" : "#fef6e0",
						"background-image" : "none"
					});
					// Layout
					var verticalLayout_11 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_11.leftMargin = 30;
					verticalLayout_11.rightMargin = 30;
					verticalLayout_11.topMargin = 20;
					verticalLayout_11.bottomMargin = 20;
					group_12.setLayout(verticalLayout_11);
					(function(container){
						var output_8 = new cpr.controls.Output();
						output_8.value = "QnA";
						output_8.style.css({
							"color" : "#FF9149",
							"font-weight" : "bolder"
						});
						container.addChild(output_8, {
							"autoSize": "none",
							"width": "1210px",
							"height": "25px"
						});
						var output_9 = new cpr.controls.Output();
						output_9.value = "11611";
						output_9.style.css({
							"color" : "#FF9149"
						});
						container.addChild(output_9, {
							"autoSize": "height",
							"width": "1210px",
							"height": "25px"
						});
						var group_13 = new cpr.controls.Container("grp7");
						// Layout
						var formLayout_3 = new cpr.controls.layouts.FormLayout();
						formLayout_3.scrollable = false;
						formLayout_3.topMargin = "0px";
						formLayout_3.rightMargin = "0px";
						formLayout_3.bottomMargin = "0px";
						formLayout_3.leftMargin = "0px";
						formLayout_3.horizontalSpacing = "0px";
						formLayout_3.verticalSpacing = "0px";
						formLayout_3.setColumns(["1fr", "50px"]);
						formLayout_3.setRows(["1fr"]);
						group_13.setLayout(formLayout_3);
						(function(container){
							var button_1 = new cpr.controls.Button("btn5");
							button_1.value = "이동";
							button_1.ariaButtonType = "link";
							button_1.style.css({
								"border-right-style" : "none",
								"color" : "#FF9149",
								"border-bottom-color" : "none",
								"font-weight" : "bolder",
								"border-left-color" : "none",
								"border-right-color" : "none",
								"border-top-style" : "none",
								"background-color" : "#fef6e0",
								"border-left-style" : "none",
								"border-top-color" : "none",
								"border-bottom-style" : "none",
								"background-image" : "none",
								"text-align" : "center"
							});
							if(typeof onBtn5Click2 == "function") {
								button_1.addEventListener("click", onBtn5Click2);
							}
							container.addChild(button_1, {
								"colIndex": 1,
								"rowIndex": 0
							});
						})(group_13);
						container.addChild(group_13, {
							"width": "400px",
							"height": "20px"
						});
					})(group_12);
					container.addChild(group_12, {
						"autoSize": "height",
						"width": "1040px",
						"height": "120px"
					});
				})(group_11);
				container.addChild(group_11, {
					"autoSize": "height",
					"width": "1270px",
					"height": "300px"
				});
			})(group_2);
			container.addChild(group_2, {
				"autoSize": "height",
				"width": "1320px",
				"height": "2800px"
			});
		}
	});
	app.title = "원그리드에 여러 컨트롤 구현";
	cpr.core.Platform.INSTANCE.register(app);
})();
