/*
 * App URI: app/exam/guide/data/prev/DataSample01Prev
 * Source Location: app/exam/guide/data/prev/DataSample01Prev.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/exam/guide/data/prev/DataSample01Prev", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * DataSample01.js
			 * Created at 2020. 6. 4. 오전 9:40:49.
			 *
			 * @author 1073727
			 ************************************************/
			
			var util = createCommonUtil();
			
			/*
			 * Body에서 init 이벤트 발생 시 호출.
			 * 앱이 최초 구성될 때 발생하는 이벤트 입니다.
			 */
			function onBodyInit( /* cpr.events.CEvent */ e) {
				
			}
			
			/*
			 * "getValue" 버튼(btnGetValue)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnGetValueClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnGetValue = e.control;
				
				var result = f_onBtnGetValueClick();
				if (!result) return;
				
				//결과표시
				app.lookup("otpRslt").value = util.Control.getValue(app, "cmbGetValueColumn") + "의 값: [" + result + "]";
				//스크립트 내용 표시
				app.lookup("txaScript").value = "" + f_onBtnGetValueClick;
				
			}
			
			function f_onBtnGetValueClick() {
				//콤보박스에서 선택된 값
				var vsSelCol = util.Control.getValue(app, "cmbGetValueColumn");
				if (ValueUtil.isNull(vsSelCol)) {
					util.Msg.alert("값을 가져올 컬럼명을 선택 후 진행해주시기 바랍니다.");
					return false;
				};
				//조건식 
				var vsCondVal = util.Control.getValue(app, "ipbGetValueCondition");
				if (vsCondVal == null) {
					util.Msg.alert("조건식을 입력하고 클릭하시기 바랍니다.");
					return;
				}
				
				//가져오기
				var result = util.DataSet.getCondValue(app, "dsList", vsCondVal, vsSelCol);
				
				return result;
			}
			
			/*
			 * "setValue" 버튼(btnSetValue)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnSetValueClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnSetValue = e.control;
				
				f_onBtnSetValueClick();
				
				//결과표시
				app.lookup("otpRslt").value = "입력 받은 rowIndex와 columnName에 해당되는 데이터를 수정합니다.";
				//스크립트 내용 표시
				app.lookup("txaScript").value = "" + f_onBtnSetValueClick;
				
			}
			
			function f_onBtnSetValueClick() {
				// 그리드에서 선택된 행의 index
				var vnRowIdx = util.Grid.getIndex(app, "grdList");
				if (vnRowIdx < 0) {
					util.Msg.alert("그리드에서 행을 선택 후 진행해 주시기 바랍니다.");
					return false;
				};
				//콤보박스에서 선택된 값
				var vsSelCol = util.Control.getValue(app, "cmbSetValueColumn");
				if (ValueUtil.isNull(vsSelCol)) {
					util.Msg.alert("변경할 컬럼명을 선택 후 진행해주시기 바랍니다.");
					return false;
				};
				//변경할 값 
				var vsSetVal = util.Control.getValue(app, "ipbSetValue");
				if (vsSetVal == null) {
					util.Msg.alert("변경할 값을 입력하고 진행하시기 바랍니다.");
					return;
				}
				
				//변경 
				util.DataSet.setValue(app, "dsList", vnRowIdx, vsSelCol, vsSetVal);
			}
			
			/*
			 * "확인" 버튼(btnGetRowCount)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnGetRowCountClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnGetRowCount = e.control;
				
				var result = f_onBtnGetRowCountClick();
				
				//결과표시
				app.lookup("otpRslt").value = "데이터셋의 전체 Row개수 : [" + result + "]";
				//스크립트 내용 표시
				app.lookup("txaScript").value = "" + f_onBtnGetRowCountClick;
				
			}
			
			function f_onBtnGetRowCountClick() {
				
				var result = util.DataSet.getRowCount(app, "dsList");
				
				return result;
			}
			
			/*
			 * "추가" 버튼(btnInsertRow)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnInsertRowClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnInsertRow = e.control;
				
				f_onBtnInsertRowClick();
				
				//결과표시
				app.lookup("otpRslt").value = "선택한 Row의 뒤에 rowData의 신규행을 추가합니다. rowData는 임시로 설정함";
				//스크립트 내용 표시
				app.lookup("txaScript").value = "" + f_onBtnInsertRowClick;
			}
			
			function f_onBtnInsertRowClick() {
				// 그리드에서 선택된 행의 index
				var vnRowIdx = util.Grid.getIndex(app, "grdList");
				if (vnRowIdx < 0) {
					util.Msg.alert("그리드에서 행을 선택 후 진행해 주시기 바랍니다.");
					return;
				};
				
				//추가할 row data. (key: header명, value: value 를 갖는 json data)
				var poRowData = {
					"id": "ID99999",
					"name": "행추가",
					"tel": "02-7777-9999",
					"addr": "서울시 주소 123"
				};
				
				var pbAfter = true; //해당 row index의 뒤에 삽입할지 여부. (true:뒤 / false:앞)
				//추가
				util.DataSet.insertRow(app, "dsList", vnRowIdx, pbAfter, poRowData);
			}
			
			/*
			 * "확인" 버튼(btnFindRow)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnFindRowClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnFindRow = e.control;
				
				var result = f_onBtnFindRowClick();
				
				//결과표시
				app.lookup("otpRslt").value = "조건식에 해당하는 Row객체 [" + result + "]";
				//스크립트 내용 표시
				app.lookup("txaScript").value = "" + f_onBtnFindRowClick;
			}
			
			function f_onBtnFindRowClick() {
				
				//조건식
				//  ex)"STUD_DIV_RCD == 'CT101REGU' && SA_NM == '컴퓨터정보과'"
				// 	사용가능수식 !=", "!==", "$=", "%", "&&", "(", "*", "*=", "+", ",", "-", ".", "/", "/*", "//", "<", "<=", "==", "===", ">", ">=", "?", "[", "^=", "||"
				var psCondition = util.Control.getValue(app, "ipbFindRow");
				if (psCondition == null) {
					util.Msg.alert("조건식을 입력하고 진행하시기 바랍니다.");
					return;
				}
				
				var pbAllStatus = true; //true : 조건에 맞는 모든 row 리턴, default : 조건에 맞는 첫번째 row 리턴
				
				//결과
				var findRows = util.DataSet.findRow(app, "dsList", psCondition, pbAllStatus);
				
				var resultArray = [];
				findRows.forEach(function(each) {
					resultArray.push(each.getRowData())
				});
				
				var result = JSON.stringify(resultArray);
				
				return result;
			}
			
			/*
			 * "추가" 버튼(btnAddColumn)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnAddColumnClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnAddColumn = e.control;
				
				f_onBtnAddColumnClick();
				
				//alert(JSON.stringify(app.lookup("dsList").getRowDataRanged()));
				//결과표시
				app.lookup("otpRslt").value = "데이터셋 컬럼 정보 [" + app.lookup("dsList").getColumnNames() + "]";
				//스크립트 내용 표시
				app.lookup("txaScript").value = "" + f_onBtnAddColumnClick;
				
			}
			
			function f_onBtnAddColumnClick() {
				//추가하려는 컬럼명
				var psColumnNm = util.Control.getValue(app, "ipbAddColumn");
				if (psColumnNm == null) {
					util.Msg.alert( "추가하려는 컬럼ID를 입력하고 진행하시기 바랍니다.");
					return;
				}
				
				var psColumnType = "string"; //컬럼유형(string/number/decimal/expression)
				
				var resultBoolean = util.DataSet.addColumn(app, "dsList", psColumnNm, psColumnType);
				
				//성공시 true
				return resultBoolean;
			}
			
			/*
			 * "clear" 버튼(btnClear)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnClearClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnClear = e.control;
				
				f_onBtnClearClick();
				
				//결과표시
				app.lookup("otpRslt").value = "모든 데이터셋 정보를 제거합니다.";
				//스크립트 내용 표시
				app.lookup("txaScript").value = "" + f_onBtnClearClick;
				
			}
			
			function f_onBtnClearClick() {
				util.DataSet.clear(app, "dsList");
			}
			
			/*
			 * "그리드 초기화" 버튼(btnSrcGridInit)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnSrcGridInitClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnSrcGridInit = e.control;
				
				util.Grid.reset(app, "grdTargetList");
			}
			
			/*
			 * "복사" 버튼(btnCopyToDataSet)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnCopyToDataSetClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnCopyToDataSet = e.control;
				
				f_onBtnCopyToDataSetClick();
				
				//결과표시
				app.lookup("otpRslt").value = "데이터셋을 Target데이터셋으로 복사합니다. target의 기존 데이터는 삭제됨";
				//스크립트 내용 표시
				app.lookup("txaScript").value = "" + f_onBtnCopyToDataSetClick;
				
			}
			
			function f_onBtnCopyToDataSetClick() {
				util.DataSet.copyToDataSet(app, "dsList", "dsListTarget");
			}
			
			/*
			 * "그리드 원상태로" 버튼(btnOrgInit)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnOrgInitClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnOrgInit = e.control;
				
				var dsList = app.lookup("dsList");
				
				util.DataSet.copyToDataSet(app, "dsListOrg", "dsList");
				dsList.setRowStateAll(cpr.data.tabledata.RowState.UNCHANGED);
				
			}
			
			/*
			 * "확인" 버튼(btnGetFindRowValue)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnGetFindRowValueClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnGetFindRowValue = e.control;
				
				var result = f_onBtnGetFindRowValueClick();
				
				//결과표시
				app.lookup("otpRslt").value = "지정범위 Row중 조건에 맞는 첫번째 Row객체의 지정한 컬럼value 반환 [" + result + "]";
				//스크립트 내용 표시
				app.lookup("txaScript").value = "" + f_onBtnGetFindRowValueClick;
				
			}
			
			function f_onBtnGetFindRowValueClick() {
				
				//콤보박스에서 선택된 값
				var vsSelCol = util.Control.getValue(app, "cmbGetFindRowValue");
				if (ValueUtil.isNull(vsSelCol)) {
					util.Msg.alert("가져올 컬럼을 선택 후 진행해주시기 바랍니다.");
					return false;
				};
				
				//조건식
				//  ex)"STUD_DIV_RCD == 'CT101REGU' && SA_NM == '컴퓨터정보과'"
				// 	사용가능수식 !=", "!==", "$=", "%", "&&", "(", "*", "*=", "+", ",", "-", ".", "/", "/*", "//", "<", "<=", "==", "===", ">", ">=", "?", "[", "^=", "||"
				var psCondition = util.Control.getValue(app, "ipbGetFindRowValue");
				if (psCondition == null) {
					util.Msg.alert( "조건식을 입력하고 진행하시기 바랍니다.");
					return;
				}
				
				var pbAllStatus = true; //true : 조건에 맞는 모든 row 리턴, default : 조건에 맞는 첫번째 row 리턴
				
				//결과
				var result = util.DataSet.getFindRowValue(app, "dsList", psCondition, vsSelCol);
				
				return result;
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsList");
			dataSet_1.parseData({
				"columns": [
					{"name": "id"},
					{"name": "name"},
					{"name": "tel"},
					{"name": "addr"}
				],
				"rows": [
					{"id": "ID0001", "name": "박보검", "tel": "010-1234-5678", "addr": "서울시 여의도"},
					{"id": "ID0002", "name": "홍길동", "tel": "02-3414-5678", "addr": "서울시 동작구 123"},
					{"id": "ID0003", "name": "이순신", "tel": "010-1234-5678", "addr": "경기도 의정부시 111"},
					{"id": "ID0004", "name": "송혜교", "tel": "010-1234-5678", "addr": "서울시 노원구 중계동"},
					{"id": "ID0004", "name": "이보영", "tel": "010-1234-5678", "addr": "서울시 강북구"},
					{"id": "ID0005", "name": "임장군", "tel": "010-1234-5678", "addr": "서울시 여의도 영등포동"},
					{"id": "ID0005", "name": "김토마토", "tel": "010-1234-5678", "addr": "서울시 여의도 영등포동"},
					{"id": "ID0005", "name": "김퇴직", "tel": "010-1234-5678", "addr": "서울시 여의도 영등포동"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsListTarget");
			dataSet_2.parseData({
				"columns": [
					{"name": "id"},
					{"name": "name"},
					{"name": "tel"},
					{"name": "addr"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsListOrg");
			dataSet_3.parseData({
				"columns": [
					{"name": "id"},
					{"name": "name"},
					{"name": "tel"},
					{"name": "addr"}
				],
				"rows": [
					{"id": "ID0001", "name": "박보검", "tel": "010-1234-5678", "addr": "서울시 여의도"},
					{"id": "ID0002", "name": "홍길동", "tel": "02-3414-5678", "addr": "서울시 동작구 123"},
					{"id": "ID0003", "name": "이순신", "tel": "010-1234-5678", "addr": "경기도 의정부시 111"},
					{"id": "ID0004", "name": "송혜교", "tel": "010-1234-5678", "addr": "서울시 노원구 중계동"},
					{"id": "ID0004", "name": "이보영", "tel": "010-1234-5678", "addr": "서울시 강북구"},
					{"id": "ID0005", "name": "임장군", "tel": "010-1234-5678", "addr": "서울시 여의도 영등포동"},
					{"id": "ID0005", "name": "김토마토", "tel": "010-1234-5678", "addr": "서울시 여의도 영등포동"},
					{"id": "ID0005", "name": "김퇴직", "tel": "010-1234-5678", "addr": "서울시 여의도 영등포동"}
				]
			});
			app.register(dataSet_3);
			
			app.supportMedia("all and (min-width: 1320px)", "eXFrame");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1319px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader");
			userDefinedControl_1.initializeYn = "N";
			userDefinedControl_1.groupBoxIds = "grp1";
			container.addChild(userDefinedControl_1, {
				"autoSize": "none",
				"width": "998px",
				"height": "30px"
			});
			
			var group_1 = new cpr.controls.Container("grp1");
			group_1.userAttr({"fillLayout": "Y"});
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.verticalSpacing = "5px";
			formLayout_1.setColumns(["1fr", "2fr"]);
			formLayout_1.setRows(["25px", "300px", "25px", "110px", "25px", "30px", "25px", "1fr"]);
			formLayout_1.setRowAutoSizing(1, true);
			group_1.setLayout(formLayout_1);
			(function(container){
				var group_2 = new cpr.controls.Container("grp4");
				// Layout
				var formLayout_2 = new cpr.controls.layouts.FormLayout();
				formLayout_2.setColumns(["1fr", "120px"]);
				formLayout_2.setRows(["1fr"]);
				group_2.setLayout(formLayout_2);
				(function(container){
					var userDefinedControl_2 = new udc.com.comFormTitle("comformtitle3");
					userDefinedControl_2.title = "소스(Source) 그리드";
					container.addChild(userDefinedControl_2, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var button_1 = new cpr.controls.Button("btnOrgInit");
					button_1.value = "그리드 원상태로";
					button_1.style.setClasses(["btnBlue"]);
					if(typeof onBtnOrgInitClick == "function") {
						button_1.addEventListener("click", onBtnOrgInitClick);
					}
					container.addChild(button_1, {
						"colIndex": 1,
						"rowIndex": 0,
						"verticalAlign": "center"
					});
				})(group_2);
				container.addChild(group_2, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var userDefinedControl_3 = new udc.com.comFormTitle("comformtitle2");
				userDefinedControl_3.title = "기능(함수)";
				container.addChild(userDefinedControl_3, {
					"colIndex": 1,
					"rowIndex": 0
				});
				var grid_1 = new cpr.controls.Grid("grdList");
				grid_1.readOnly = true;
				grid_1.init({
					"dataSet": app.lookup("dsList"),
					"columnMovable": true,
					"resizableColumns": "all",
					"columns": [
						{"width": "35px"},
						{"width": "50px"},
						{"width": "78px"},
						{"width": "78px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.targetColumnName = "id";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "ID";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.targetColumnName = "name";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "성명";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.targetColumnName = "tel";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "전화번호";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.targetColumnName = "addr";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "주소";
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "24px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnName = "id";
									cell.control = (function(){
										var inputBox_1 = new cpr.controls.InputBox("ipb1");
										inputBox_1.bind("value").toDataColumn("id");
										return inputBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "name";
									cell.control = (function(){
										var inputBox_2 = new cpr.controls.InputBox("ipb2");
										inputBox_2.bind("value").toDataColumn("name");
										return inputBox_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "tel";
									cell.control = (function(){
										var inputBox_3 = new cpr.controls.InputBox("ipb3");
										inputBox_3.bind("value").toDataColumn("tel");
										return inputBox_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "addr";
									cell.style.css({
										"text-align" : "left"
									});
									cell.control = (function(){
										var inputBox_4 = new cpr.controls.InputBox("ipb4");
										inputBox_4.bind("value").toDataColumn("addr");
										return inputBox_4;
									})();
								}
							}
						]
					}
				});
				container.addChild(grid_1, {
					"colIndex": 0,
					"rowIndex": 1
				});
				var group_3 = new cpr.controls.Container("grpFormFunc");
				group_3.style.setClasses(["form-box"]);
				// Layout
				var formLayout_3 = new cpr.controls.layouts.FormLayout();
				formLayout_3.topMargin = "5px";
				formLayout_3.rightMargin = "5px";
				formLayout_3.bottomMargin = "5px";
				formLayout_3.leftMargin = "5px";
				formLayout_3.setColumns(["24px", "140px", "1fr", "210px", "100px"]);
				formLayout_3.setRows(["25px", "25px", "25px", "25px", "25px", "25px", "25px", "25px", "25px", "25px"]);
				formLayout_3.setRowMinHeight(1, 1);
				formLayout_3.setRowMinHeight(2, 1);
				formLayout_3.setRowMinHeight(3, 1);
				formLayout_3.setRowMinHeight(4, 1);
				formLayout_3.setRowMinHeight(5, 1);
				formLayout_3.setRowMinHeight(6, 1);
				formLayout_3.setRowMinHeight(7, 1);
				formLayout_3.setRowMinHeight(8, 1);
				formLayout_3.setRowMinHeight(9, 1);
				group_3.setLayout(formLayout_3);
				(function(container){
					var output_1 = new cpr.controls.Output("otp1");
					output_1.value = "No";
					output_1.style.css({
						"text-align" : "center"
					});
					container.addChild(output_1, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var output_2 = new cpr.controls.Output("otp6");
					output_2.value = "1";
					output_2.style.css({
						"text-align" : "center"
					});
					container.addChild(output_2, {
						"colIndex": 0,
						"rowIndex": 1
					});
					var output_3 = new cpr.controls.Output("otp8");
					output_3.value = "3";
					output_3.style.css({
						"text-align" : "center"
					});
					container.addChild(output_3, {
						"colIndex": 0,
						"rowIndex": 3
					});
					var output_4 = new cpr.controls.Output("otp12");
					output_4.value = "2";
					output_4.style.css({
						"text-align" : "center"
					});
					container.addChild(output_4, {
						"colIndex": 0,
						"rowIndex": 2
					});
					var output_5 = new cpr.controls.Output("otp2");
					output_5.value = "5";
					output_5.style.css({
						"text-align" : "center"
					});
					container.addChild(output_5, {
						"colIndex": 0,
						"rowIndex": 5
					});
					var output_6 = new cpr.controls.Output("otp17");
					output_6.value = "4";
					output_6.style.css({
						"text-align" : "center"
					});
					container.addChild(output_6, {
						"colIndex": 0,
						"rowIndex": 4
					});
					var output_7 = new cpr.controls.Output("otp4");
					output_7.value = "함수";
					output_7.style.css({
						"text-align" : "center"
					});
					container.addChild(output_7, {
						"colIndex": 1,
						"rowIndex": 0
					});
					var output_8 = new cpr.controls.Output("otp42");
					output_8.value = "설명";
					output_8.style.css({
						"text-align" : "center"
					});
					container.addChild(output_8, {
						"colIndex": 2,
						"rowIndex": 0
					});
					var output_9 = new cpr.controls.Output("otp44");
					output_9.value = "동작";
					output_9.style.css({
						"text-align" : "center"
					});
					container.addChild(output_9, {
						"colIndex": 4,
						"rowIndex": 0
					});
					var output_10 = new cpr.controls.Output("otp45");
					output_10.value = "6";
					output_10.style.css({
						"text-align" : "center"
					});
					container.addChild(output_10, {
						"colIndex": 0,
						"rowIndex": 6
					});
					var button_2 = new cpr.controls.Button("btnInsertRow");
					button_2.value = "추가";
					if(typeof onBtnInsertRowClick == "function") {
						button_2.addEventListener("click", onBtnInsertRowClick);
					}
					container.addChild(button_2, {
						"colIndex": 4,
						"rowIndex": 4,
						"horizontalAlign": "fill",
						"verticalAlign": "fill",
						"width": 80
					});
					var output_11 = new cpr.controls.Output("otp63");
					output_11.value = "입력값";
					output_11.style.css({
						"text-align" : "center"
					});
					container.addChild(output_11, {
						"colIndex": 3,
						"rowIndex": 0
					});
					var button_3 = new cpr.controls.Button("btnFindRow");
					button_3.value = "확인";
					if(typeof onBtnFindRowClick == "function") {
						button_3.addEventListener("click", onBtnFindRowClick);
					}
					container.addChild(button_3, {
						"colIndex": 4,
						"rowIndex": 5,
						"horizontalAlign": "fill",
						"verticalAlign": "fill",
						"width": 80
					});
					var button_4 = new cpr.controls.Button("btnGetRowCount");
					button_4.value = "확인";
					if(typeof onBtnGetRowCountClick == "function") {
						button_4.addEventListener("click", onBtnGetRowCountClick);
					}
					container.addChild(button_4, {
						"colIndex": 4,
						"rowIndex": 3,
						"horizontalAlign": "fill",
						"verticalAlign": "fill",
						"width": 80
					});
					var button_5 = new cpr.controls.Button("btnGetValue");
					button_5.value = "getCondValue";
					if(typeof onBtnGetValueClick == "function") {
						button_5.addEventListener("click", onBtnGetValueClick);
					}
					container.addChild(button_5, {
						"colIndex": 4,
						"rowIndex": 1,
						"horizontalAlign": "fill",
						"verticalAlign": "fill",
						"width": 80
					});
					var button_6 = new cpr.controls.Button("btnSetValue");
					button_6.value = "setValue";
					if(typeof onBtnSetValueClick == "function") {
						button_6.addEventListener("click", onBtnSetValueClick);
					}
					container.addChild(button_6, {
						"colIndex": 4,
						"rowIndex": 2,
						"horizontalAlign": "fill",
						"verticalAlign": "fill",
						"width": 80
					});
					var button_7 = new cpr.controls.Button("btnGetFindRowValue");
					button_7.value = "확인";
					if(typeof onBtnGetFindRowValueClick == "function") {
						button_7.addEventListener("click", onBtnGetFindRowValueClick);
					}
					container.addChild(button_7, {
						"colIndex": 4,
						"rowIndex": 6,
						"horizontalAlign": "fill",
						"verticalAlign": "fill",
						"width": 80
					});
					var group_4 = new cpr.controls.Container("grp6");
					// Layout
					var formLayout_4 = new cpr.controls.layouts.FormLayout();
					formLayout_4.setColumns(["100px", "1fr"]);
					formLayout_4.setRows(["1fr"]);
					group_4.setLayout(formLayout_4);
					(function(container){
						var comboBox_1 = new cpr.controls.ComboBox("cmbGetValueColumn");
						comboBox_1.placeholder = "Get컬럼";
						(function(comboBox_1){
							comboBox_1.addItem(new cpr.controls.Item("ID", "id"));
							comboBox_1.addItem(new cpr.controls.Item("성명", "name"));
							comboBox_1.addItem(new cpr.controls.Item("전화번호", "tel"));
							comboBox_1.addItem(new cpr.controls.Item("주소", "addr"));
						})(comboBox_1);
						container.addChild(comboBox_1, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var inputBox_5 = new cpr.controls.InputBox("ipbGetValueCondition");
						inputBox_5.value = "name^= '김'";
						inputBox_5.placeholder = "조건식 ex: name^= '김'";
						container.addChild(inputBox_5, {
							"colIndex": 1,
							"rowIndex": 0
						});
					})(group_4);
					container.addChild(group_4, {
						"colIndex": 3,
						"rowIndex": 1
					});
					var group_5 = new cpr.controls.Container("grp7");
					// Layout
					var formLayout_5 = new cpr.controls.layouts.FormLayout();
					formLayout_5.setColumns(["90px", "1fr"]);
					formLayout_5.setRows(["1fr"]);
					group_5.setLayout(formLayout_5);
					(function(container){
						var comboBox_2 = new cpr.controls.ComboBox("cmbSetValueColumn");
						comboBox_2.placeholder = "Set컬럼";
						(function(comboBox_2){
							comboBox_2.addItem(new cpr.controls.Item("ID", "id"));
							comboBox_2.addItem(new cpr.controls.Item("성명", "name"));
							comboBox_2.addItem(new cpr.controls.Item("전화번호", "tel"));
							comboBox_2.addItem(new cpr.controls.Item("주소", "addr"));
						})(comboBox_2);
						container.addChild(comboBox_2, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var inputBox_6 = new cpr.controls.InputBox("ipbSetValue");
						inputBox_6.placeholder = "변경값";
						container.addChild(inputBox_6, {
							"colIndex": 1,
							"rowIndex": 0
						});
					})(group_5);
					container.addChild(group_5, {
						"colIndex": 3,
						"rowIndex": 2
					});
					var inputBox_7 = new cpr.controls.InputBox("ipbFindRow");
					inputBox_7.value = "name == '임장군'";
					container.addChild(inputBox_7, {
						"colIndex": 3,
						"rowIndex": 5
					});
					var group_6 = new cpr.controls.Container("grp3");
					// Layout
					var formLayout_6 = new cpr.controls.layouts.FormLayout();
					formLayout_6.setColumns(["100px", "1fr"]);
					formLayout_6.setRows(["1fr"]);
					group_6.setLayout(formLayout_6);
					(function(container){
						var comboBox_3 = new cpr.controls.ComboBox("cmbGetFindRowValue");
						comboBox_3.placeholder = "Get컬럼";
						(function(comboBox_3){
							comboBox_3.addItem(new cpr.controls.Item("ID", "id"));
							comboBox_3.addItem(new cpr.controls.Item("성명", "name"));
							comboBox_3.addItem(new cpr.controls.Item("전화번호", "tel"));
							comboBox_3.addItem(new cpr.controls.Item("주소", "addr"));
						})(comboBox_3);
						container.addChild(comboBox_3, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var inputBox_8 = new cpr.controls.InputBox("ipbGetFindRowValue");
						inputBox_8.value = "name == '임장군'";
						container.addChild(inputBox_8, {
							"colIndex": 1,
							"rowIndex": 0
						});
					})(group_6);
					container.addChild(group_6, {
						"colIndex": 3,
						"rowIndex": 6
					});
					var button_8 = new cpr.controls.Button("btnAddColumn");
					button_8.value = "추가";
					if(typeof onBtnAddColumnClick == "function") {
						button_8.addEventListener("click", onBtnAddColumnClick);
					}
					container.addChild(button_8, {
						"colIndex": 4,
						"rowIndex": 7,
						"horizontalAlign": "fill",
						"verticalAlign": "fill",
						"width": 80
					});
					var inputBox_9 = new cpr.controls.InputBox("ipbAddColumn");
					inputBox_9.value = "DataSetAddColumnId";
					container.addChild(inputBox_9, {
						"colIndex": 3,
						"rowIndex": 7
					});
					var button_9 = new cpr.controls.Button("btnClear");
					button_9.value = "clear";
					if(typeof onBtnClearClick == "function") {
						button_9.addEventListener("click", onBtnClearClick);
					}
					container.addChild(button_9, {
						"colIndex": 4,
						"rowIndex": 9,
						"horizontalAlign": "fill",
						"verticalAlign": "fill",
						"width": 80
					});
					var button_10 = new cpr.controls.Button("btnCopyToDataSet");
					button_10.value = "복사";
					if(typeof onBtnCopyToDataSetClick == "function") {
						button_10.addEventListener("click", onBtnCopyToDataSetClick);
					}
					container.addChild(button_10, {
						"colIndex": 4,
						"rowIndex": 8,
						"horizontalAlign": "fill",
						"verticalAlign": "fill",
						"width": 80
					});
					var output_12 = new cpr.controls.Output("otp16");
					output_12.value = "7";
					output_12.style.css({
						"text-align" : "center"
					});
					container.addChild(output_12, {
						"colIndex": 0,
						"rowIndex": 7
					});
					var output_13 = new cpr.controls.Output("otp18");
					output_13.value = "8";
					output_13.style.css({
						"text-align" : "center"
					});
					container.addChild(output_13, {
						"colIndex": 0,
						"rowIndex": 8
					});
					var output_14 = new cpr.controls.Output("otp20");
					output_14.value = "9";
					output_14.style.css({
						"text-align" : "center"
					});
					container.addChild(output_14, {
						"colIndex": 0,
						"rowIndex": 9
					});
					var inputBox_10 = new cpr.controls.InputBox("ipb9");
					inputBox_10.readOnly = true;
					inputBox_10.value = "getCondValue";
					container.addChild(inputBox_10, {
						"colIndex": 1,
						"rowIndex": 1
					});
					var inputBox_11 = new cpr.controls.InputBox("ipb10");
					inputBox_11.readOnly = true;
					inputBox_11.value = "setValue";
					container.addChild(inputBox_11, {
						"colIndex": 1,
						"rowIndex": 2
					});
					var inputBox_12 = new cpr.controls.InputBox("ipb11");
					inputBox_12.readOnly = true;
					inputBox_12.value = "getRowCount";
					container.addChild(inputBox_12, {
						"colIndex": 1,
						"rowIndex": 3
					});
					var inputBox_13 = new cpr.controls.InputBox("ipb12");
					inputBox_13.readOnly = true;
					inputBox_13.value = "insertRow";
					container.addChild(inputBox_13, {
						"colIndex": 1,
						"rowIndex": 4
					});
					var inputBox_14 = new cpr.controls.InputBox("ipb13");
					inputBox_14.readOnly = true;
					inputBox_14.value = "findRow";
					container.addChild(inputBox_14, {
						"colIndex": 1,
						"rowIndex": 5
					});
					var inputBox_15 = new cpr.controls.InputBox("ipb14");
					inputBox_15.readOnly = true;
					inputBox_15.value = "getFindRowValue";
					container.addChild(inputBox_15, {
						"colIndex": 1,
						"rowIndex": 6
					});
					var inputBox_16 = new cpr.controls.InputBox("ipb15");
					inputBox_16.readOnly = true;
					inputBox_16.value = "addColumn";
					container.addChild(inputBox_16, {
						"colIndex": 1,
						"rowIndex": 7
					});
					var inputBox_17 = new cpr.controls.InputBox("ipb16");
					inputBox_17.readOnly = true;
					inputBox_17.value = "copyToDataSet";
					container.addChild(inputBox_17, {
						"colIndex": 1,
						"rowIndex": 8
					});
					var inputBox_18 = new cpr.controls.InputBox("ipb17");
					inputBox_18.readOnly = true;
					inputBox_18.value = "clear";
					container.addChild(inputBox_18, {
						"colIndex": 1,
						"rowIndex": 9
					});
					var inputBox_19 = new cpr.controls.InputBox("ipb18");
					inputBox_19.readOnly = true;
					inputBox_19.value = "조건에 맞는 데이터셋의 해당컬럼의 값을 가져옴";
					container.addChild(inputBox_19, {
						"colIndex": 2,
						"rowIndex": 1
					});
					var inputBox_20 = new cpr.controls.InputBox("ipb19");
					inputBox_20.readOnly = true;
					inputBox_20.value = "입력받은 rowIndex와 columnName에 해당되는 데이터를 변경";
					container.addChild(inputBox_20, {
						"colIndex": 2,
						"rowIndex": 2
					});
					var inputBox_21 = new cpr.controls.InputBox("ipb20");
					inputBox_21.readOnly = true;
					inputBox_21.value = "데이터셋의 현재Row수 반환";
					container.addChild(inputBox_21, {
						"colIndex": 2,
						"rowIndex": 3
					});
					var inputBox_22 = new cpr.controls.InputBox("ipb21");
					inputBox_22.readOnly = true;
					inputBox_22.value = "rowData를 입력받아 원하는 특정 row index의 앞이나 뒤에 신규Row 추가";
					container.addChild(inputBox_22, {
						"colIndex": 2,
						"rowIndex": 4
					});
					var inputBox_23 = new cpr.controls.InputBox("ipb22");
					inputBox_23.readOnly = true;
					inputBox_23.value = "지정범위 Row중 조건에 맞는 Row객체 배열 반환";
					container.addChild(inputBox_23, {
						"colIndex": 2,
						"rowIndex": 5
					});
					var inputBox_24 = new cpr.controls.InputBox("ipb23");
					inputBox_24.readOnly = true;
					inputBox_24.value = "지정범위 Row중 조건에 맞는 첫번째 Row객체의 지정한 컬럼value 반환";
					container.addChild(inputBox_24, {
						"colIndex": 2,
						"rowIndex": 6
					});
					var inputBox_25 = new cpr.controls.InputBox("ipb24");
					inputBox_25.readOnly = true;
					inputBox_25.value = "데이터셋에 컬럼 추가";
					container.addChild(inputBox_25, {
						"colIndex": 2,
						"rowIndex": 7
					});
					var inputBox_26 = new cpr.controls.InputBox("ipb25");
					inputBox_26.readOnly = true;
					inputBox_26.value = "데이터셋을 Target데이터셋으로 복사\r\ntarget의 기존 데이터는 삭제됨";
					container.addChild(inputBox_26, {
						"colIndex": 2,
						"rowIndex": 8
					});
					var inputBox_27 = new cpr.controls.InputBox("ipb26");
					inputBox_27.readOnly = true;
					inputBox_27.value = "데이터셋 정보 clear";
					container.addChild(inputBox_27, {
						"colIndex": 2,
						"rowIndex": 9
					});
				})(group_3);
				container.addChild(group_3, {
					"colIndex": 1,
					"rowIndex": 1,
					"colSpan": 1,
					"rowSpan": 1
				});
				var group_7 = new cpr.controls.Container("grp5");
				// Layout
				var formLayout_7 = new cpr.controls.layouts.FormLayout();
				formLayout_7.setColumns(["1fr", "120px"]);
				formLayout_7.setRows(["1fr"]);
				group_7.setLayout(formLayout_7);
				(function(container){
					var button_11 = new cpr.controls.Button("btnSrcGridInit");
					button_11.value = "그리드 초기화";
					button_11.style.setClasses(["btnBlue"]);
					if(typeof onBtnSrcGridInitClick == "function") {
						button_11.addEventListener("click", onBtnSrcGridInitClick);
					}
					container.addChild(button_11, {
						"colIndex": 1,
						"rowIndex": 0,
						"colSpan": 1,
						"rowSpan": 1,
						"horizontalAlign": "fill",
						"verticalAlign": "center",
						"width": 160
					});
					var userDefinedControl_4 = new udc.com.comFormTitle("comformtitle4");
					userDefinedControl_4.title = "대상(Target) 그리드";
					container.addChild(userDefinedControl_4, {
						"colIndex": 0,
						"rowIndex": 0
					});
				})(group_7);
				container.addChild(group_7, {
					"colIndex": 0,
					"rowIndex": 2
				});
				var userDefinedControl_5 = new udc.com.comFormTitle("comformtitle5");
				userDefinedControl_5.title = "시나리오";
				container.addChild(userDefinedControl_5, {
					"colIndex": 1,
					"rowIndex": 2
				});
				var grid_2 = new cpr.controls.Grid("grdTargetList");
				grid_2.readOnly = true;
				grid_2.init({
					"dataSet": app.lookup("dsListTarget"),
					"columnMovable": true,
					"resizableColumns": "all",
					"columns": [
						{"width": "40px"},
						{"width": "49px"},
						{"width": "83px"},
						{"width": "90px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.targetColumnName = "id";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "ID";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.targetColumnName = "name";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "성명";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.targetColumnName = "tel";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "전화번호";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.targetColumnName = "addr";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "주소";
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "24px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnName = "id";
									cell.control = (function(){
										var inputBox_28 = new cpr.controls.InputBox("ipb5");
										inputBox_28.bind("value").toDataColumn("id");
										return inputBox_28;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "name";
									cell.control = (function(){
										var inputBox_29 = new cpr.controls.InputBox("ipb6");
										inputBox_29.bind("value").toDataColumn("name");
										return inputBox_29;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "tel";
									cell.control = (function(){
										var inputBox_30 = new cpr.controls.InputBox("ipb7");
										inputBox_30.bind("value").toDataColumn("tel");
										return inputBox_30;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "addr";
									cell.style.css({
										"text-align" : "left"
									});
									cell.control = (function(){
										var inputBox_31 = new cpr.controls.InputBox("ipb8");
										inputBox_31.bind("value").toDataColumn("addr");
										return inputBox_31;
									})();
								}
							}
						]
					}
				});
				container.addChild(grid_2, {
					"colIndex": 0,
					"rowIndex": 3,
					"colSpan": 1,
					"rowSpan": 5
				});
				var group_8 = new cpr.controls.Container("grpFormCont");
				group_8.style.setClasses(["form-box"]);
				// Layout
				var formLayout_8 = new cpr.controls.layouts.FormLayout();
				formLayout_8.topMargin = "5px";
				formLayout_8.rightMargin = "5px";
				formLayout_8.bottomMargin = "5px";
				formLayout_8.leftMargin = "5px";
				formLayout_8.setColumns(["100px", "1fr"]);
				formLayout_8.setRows(["1fr"]);
				group_8.setLayout(formLayout_8);
				(function(container){
					var output_15 = new cpr.controls.Output("otp25");
					output_15.value = "시나리오";
					container.addChild(output_15, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var textArea_1 = new cpr.controls.TextArea("txa1");
					textArea_1.readOnly = true;
					textArea_1.value = "1. 소스 그리드를 선택하고 동작 버튼을 클릭한다. (필요시 입력값 선택)\r\n2. 그리드의 기능동작 및 결과값을 확인한다. \r\n3. 하단의 스크립트내용을 확인한다.\r\n4. 스크립트내용을 복사하여 코딩에 활용한다.";
					container.addChild(textArea_1, {
						"colIndex": 1,
						"rowIndex": 0
					});
				})(group_8);
				container.addChild(group_8, {
					"colIndex": 1,
					"rowIndex": 3
				});
				var userDefinedControl_6 = new udc.com.comFormTitle("comformtitle6");
				userDefinedControl_6.title = "결과값";
				container.addChild(userDefinedControl_6, {
					"colIndex": 1,
					"rowIndex": 4
				});
				var userDefinedControl_7 = new udc.com.comFormTitle("comformtitle7");
				userDefinedControl_7.title = "스크립트 내용";
				container.addChild(userDefinedControl_7, {
					"colIndex": 1,
					"rowIndex": 6
				});
				var textArea_2 = new cpr.controls.TextArea("txaScript");
				textArea_2.style.setClasses(["form-box"]);
				container.addChild(textArea_2, {
					"colIndex": 1,
					"rowIndex": 7,
					"colSpan": 1,
					"rowSpan": 1
				});
				var inputBox_32 = new cpr.controls.InputBox("otpRslt");
				container.addChild(inputBox_32, {
					"colIndex": 1,
					"rowIndex": 5
				});
			})(group_1);
			container.addChild(group_1, {
				"autoSize": "none",
				"width": "972px",
				"height": "645px"
			});
			if(typeof onBodyInit == "function"){
				app.addEventListener("init", onBodyInit);
			}
		}
	});
	app.title = "데이터셋 기능";
	cpr.core.Platform.INSTANCE.register(app);
})();
