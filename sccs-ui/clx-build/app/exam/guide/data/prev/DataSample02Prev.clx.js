/*
 * App URI: app/exam/guide/data/prev/DataSample02Prev
 * Source Location: app/exam/guide/data/prev/DataSample02Prev.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/exam/guide/data/prev/DataSample02Prev", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * DataSample02.js
			 * Created at 2020. 6. 4. 오후 4:44:57.
			 *
			 * @author 1073727
			 ************************************************/
			
			var util = createCommonUtil();
			
			/*
			 * Body에서 init 이벤트 발생 시 호출.
			 * 앱이 최초 구성될 때 발생하는 이벤트 입니다.
			 */
			function onBodyInit( /* cpr.events.CEvent */ e) {
			}
			
			/*
			 * "getValue" 버튼(btnGetValue)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnGetValueClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnGetValue = e.control;
				
				var result = f_onBtnGetValueClick();
				if (!result) return;
				
				//결과표시
				app.lookup("otpRslt").value = "가져온 컬럼 값 [" + result + "]";
				//스크립트 내용 표시
				app.lookup("txaScript").value = "" + f_onBtnGetValueClick;
			}
			
			function f_onBtnGetValueClick() {
				//콤보박스에서 선택된 값
				var vsSelVal = util.Control.getValue(app, "cmbGetValueColumn");
				if (ValueUtil.isNull(vsSelVal)) {
					util.Msg.alert( "가져올 컬럼명을 선택 후 진행해주시기 바랍니다.");
					return false;
				}
				
				var result = util.DataMap.getValue(app, "dmInfo", vsSelVal);
				
				return result;
			}
			
			/*
			 * "setValue" 버튼(btnSetValue)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnSetValueClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnSetValue = e.control;
				
				var result = f_onBtnSetValueClick();
				
				if (result) {
					//결과표시
					app.lookup("otpRslt").value = "입력 받은 columnName에 해당되는 데이터를 수정합니다.";
					//스크립트 내용 표시
					app.lookup("txaScript").value = "" + f_onBtnSetValueClick;
				}
			}
			
			function f_onBtnSetValueClick() {
				//콤보박스에서 선택된 값
				var vsSelVal = util.Control.getValue(app, "cmbSetValueColumn");
				if (ValueUtil.isNull(vsSelVal)) {
					util.Msg.alert( "값을 변경할 컬럼명을 선택 후 진행해주시기 바랍니다.");
					return false;
				}
				//변경할 값 
				var vsSetVal = util.Control.getValue(app, "ipbSetValue");
				if (vsSetVal == null) {
					util.Msg.alert( "변경할 값을 입력하고 진행하시기 바랍니다.");
					return false;
				}
				
				//변경
				var result = util.DataMap.setValue(app, "dmInfo", vsSelVal, vsSetVal);
				app.lookup("grpFreeForm").redraw();
				
				return result;
			}
			
			/*
			 * "초기화" 버튼(btnReset)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnResetClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnReset = e.control;
				
				f_onBtnResetClick();
				
				//결과표시
				app.lookup("otpRslt").value = "";
				//스크립트 내용 표시
				app.lookup("txaScript").value = "" + f_onBtnResetClick;
			}
			
			function f_onBtnResetClick() {
				util.DataMap.reset(app, "dmInfo");
				app.lookup("grpFreeForm").redraw();
			}
			
			/*
			 * "clear" 버튼(btnClear)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnClearClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnClear = e.control;
				
				f_onBtnClearClick();
				
				//결과표시
				app.lookup("otpRslt").value = "";
				//스크립트 내용 표시
				app.lookup("txaScript").value = "" + f_onBtnClearClick;
			}
			
			function f_onBtnClearClick() {
				util.DataMap.clear(app, "dmInfo");
				app.lookup("grpFreeForm").redraw();
			}
			
			/*
			 * "복사" 버튼(btnCopyToDataSet)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnCopyToDataSetClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnCopyToDataSet = e.control;
				
				f_onBtnCopyToDataSetClick();
				
				//결과표시
				app.lookup("otpRslt").value = "";
				//스크립트 내용 표시
				app.lookup("txaScript").value = "" + f_onBtnCopyToDataSetClick;
			}
			
			function f_onBtnCopyToDataSetClick() {
				
				util.DataMap.copyToDataMap(app, "dmInfo", "dmInfoTarget");
				app.lookup("grpFreeFormTarget").redraw();
			}
			
			/*
			 * "컬럼삭제" 버튼(btnDeleteColumn)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnDeleteColumnClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnDeleteColumn = e.control;
				
				//삭제 전 
				var vsBefCols = app.lookup("dmInfo").getColumnNames().toString();
				
				var result = f_onBtnDeleteColumnClick();
				
				if (result) {
					//삭제 후
					var vsAftCols = app.lookup("dmInfo").getColumnNames().toString();
					
					//결과표시
					app.lookup("otpRslt").value = "삭제 전 dataMap의 Column : [" + vsBefCols + "] \n삭제 후 DataMap의 Column : [" + vsAftCols + "]";
					//스크립트 내용 표시
					app.lookup("txaScript").value = "" + f_onBtnDeleteColumnClick;
				}
			}
			
			function f_onBtnDeleteColumnClick() {
				//콤보박스에서 선택된 값
				var vsSelVal = util.Control.getValue(app, "cmbDeleteColumn");
				if (ValueUtil.isNull(vsSelVal)) {
					util.Msg.alert( "삭제할 컬럼명을 선택 후 진행해주시기 바랍니다.");
					return false;
				}
				
				//삭제
				var result = util.DataMap.deleteColumn(app, "dmInfo", vsSelVal);
				app.lookup("grpFreeForm").redraw();
				return result;
			}
			
			/*
			 * "컬럼추가" 버튼(btnAddColumn)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnAddColumnClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnAddColumn = e.control;
				
				//추가 전
				var vsBefCols = JSON.stringify(app.lookup("dmInfo").getDatas());
				
				var result = f_onBtnAddColumnClick();
				if (!result) return;
				
				if (result) {
					//추가 후
					var vsAftCols = JSON.stringify(app.lookup("dmInfo").getDatas());
					
					//결과표시
					app.lookup("otpRslt").value = "추가 전 : " + vsBefCols +
						"\n추가 후 : " + vsAftCols;
					//스크립트 내용 표시
					app.lookup("txaScript").value = "" + f_onBtnAddColumnClick;
				}
			}
			
			function f_onBtnAddColumnClick() {
				//추가하려는 컬럼명
				var psColumnNm = util.Control.getValue(app, "ipbAddColumn");
				if (psColumnNm == null) {
					util.Msg.alert( "추가하려는 컬럼ID를 입력하고 진행하시기 바랍니다.");
					return false;
				}
				//초기값		
				var psColumnValue = util.Control.getValue(app, "ipbAddColumnValue");
				
				var result = util.DataMap.addColumn(app, "dmInfo", psColumnNm, psColumnValue);
				
				return result;
			}
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsCode03");
			dataSet_1.parseData({
				"columns": [
					{"name": "cd"},
					{
						"name": "cd_nm",
						"displayOnly": false
					}
				],
				"rows": [
					{"cd": "Y", "cd_nm": "Y"},
					{"cd": "N", "cd_nm": "N"}
				]
			});
			app.register(dataSet_1);
			var dataMap_1 = new cpr.data.DataMap("dmInfo");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "id",
						"defaultValue": "ID12345"
					},
					{
						"name": "name",
						"defaultValue": "임장군"
					},
					{
						"name": "tel",
						"defaultValue": "01012345678"
					},
					{
						"name": "price",
						"dataType": "number",
						"defaultValue": "350000"
					},
					{
						"name": "chkYn",
						"defaultValue": "Y"
					},
					{
						"name": "useYn",
						"defaultValue": "N"
					},
					{
						"name": "addr",
						"defaultValue": "서울시 여의도 63빌딩 18층"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmInfoTarget");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "id",
						"defaultValue": ""
					},
					{
						"name": "name",
						"defaultValue": ""
					},
					{
						"name": "tel",
						"defaultValue": ""
					},
					{
						"name": "price",
						"dataType": "number",
						"defaultValue": ""
					},
					{
						"name": "chkYn",
						"defaultValue": ""
					},
					{
						"name": "useYn",
						"defaultValue": ""
					},
					{
						"name": "addr",
						"defaultValue": ""
					}
				]
			});
			app.register(dataMap_2);
			
			app.supportMedia("all and (min-width: 1320px)", "eXFrame");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1319px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader");
			userDefinedControl_1.initializeYn = "N";
			userDefinedControl_1.groupBoxIds = "grp1";
			container.addChild(userDefinedControl_1, {
				"autoSize": "none",
				"width": "998px",
				"height": "30px"
			});
			
			var group_1 = new cpr.controls.Container("grp1");
			group_1.userAttr({"fillLayout": "Y"});
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.verticalSpacing = "5px";
			formLayout_1.setColumns(["2fr", "3fr"]);
			formLayout_1.setRows(["25px", "130px", "25px", "130px", "25px", "100px", "25px", "1fr"]);
			formLayout_1.setRowAutoSizing(5, true);
			group_1.setLayout(formLayout_1);
			(function(container){
				var userDefinedControl_2 = new udc.com.comFormTitle("comformtitle1");
				userDefinedControl_2.title = "소스(Source) Form";
				container.addChild(userDefinedControl_2, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var userDefinedControl_3 = new udc.com.comFormTitle("comformtitle2");
				userDefinedControl_3.title = "기능(함수)";
				container.addChild(userDefinedControl_3, {
					"colIndex": 1,
					"rowIndex": 0,
					"colSpan": 1,
					"rowSpan": 1
				});
				var group_2 = new cpr.controls.Container("grpFreeForm");
				group_2.style.setClasses(["form-box"]);
				var dataMapContext_1 = new cpr.bind.DataMapContext(app.lookup("dmInfo"));
				group_2.setBindContext(dataMapContext_1);
				// Layout
				var formLayout_2 = new cpr.controls.layouts.FormLayout();
				formLayout_2.scrollable = true;
				formLayout_2.topMargin = "5px";
				formLayout_2.rightMargin = "5px";
				formLayout_2.bottomMargin = "5px";
				formLayout_2.leftMargin = "5px";
				formLayout_2.setColumns(["67px", "1fr", "67px", "1fr"]);
				formLayout_2.setRows(["1fr", "1fr", "1fr", "1fr"]);
				group_2.setLayout(formLayout_2);
				(function(container){
					var output_1 = new cpr.controls.Output("otp8");
					output_1.value = "ID";
					container.addChild(output_1, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var inputBox_1 = new cpr.controls.InputBox("ipbID");
					inputBox_1.readOnly = true;
					inputBox_1.bind("value").toDataColumn("id");
					container.addChild(inputBox_1, {
						"colIndex": 1,
						"rowIndex": 0
					});
					var output_2 = new cpr.controls.Output("otp19");
					output_2.value = "성명";
					container.addChild(output_2, {
						"colIndex": 2,
						"rowIndex": 0
					});
					var inputBox_2 = new cpr.controls.InputBox("ipbName");
					inputBox_2.bind("value").toDataColumn("name");
					container.addChild(inputBox_2, {
						"colIndex": 3,
						"rowIndex": 0
					});
					var output_3 = new cpr.controls.Output("otp11");
					output_3.value = "전화번호";
					container.addChild(output_3, {
						"colIndex": 0,
						"rowIndex": 1
					});
					var maskEditor_1 = new cpr.controls.MaskEditor("medTel");
					maskEditor_1.mask = "XXX-XXXX-XXXX";
					maskEditor_1.bind("value").toDataColumn("tel");
					container.addChild(maskEditor_1, {
						"colIndex": 1,
						"rowIndex": 1
					});
					var output_4 = new cpr.controls.Output("otp23");
					output_4.value = "확인여부";
					container.addChild(output_4, {
						"colIndex": 2,
						"rowIndex": 1
					});
					var comboBox_1 = new cpr.controls.ComboBox("cmbChkYn");
					comboBox_1.bind("value").toDataColumn("chkYn");
					(function(comboBox_1){
						comboBox_1.addItem(new cpr.controls.Item("전체", ""));
						comboBox_1.setItemSet(app.lookup("dsCode03"), {
							"label": "cd_nm",
							"value": "cd"
						});
					})(comboBox_1);
					container.addChild(comboBox_1, {
						"colIndex": 3,
						"rowIndex": 1
					});
					var output_5 = new cpr.controls.Output("otp17");
					output_5.value = "해지여부";
					container.addChild(output_5, {
						"colIndex": 0,
						"rowIndex": 2
					});
					var comboBox_2 = new cpr.controls.ComboBox("cmbUseYn");
					comboBox_2.bind("value").toDataColumn("useYn");
					(function(comboBox_2){
						comboBox_2.addItem(new cpr.controls.Item("전체", ""));
						comboBox_2.setItemSet(app.lookup("dsCode03"), {
							"label": "cd_nm",
							"value": "cd"
						});
					})(comboBox_2);
					container.addChild(comboBox_2, {
						"colIndex": 1,
						"rowIndex": 2
					});
					var output_6 = new cpr.controls.Output("otp26");
					output_6.value = "금액";
					container.addChild(output_6, {
						"colIndex": 2,
						"rowIndex": 2
					});
					var numberEditor_1 = new cpr.controls.NumberEditor("nedPrice");
					numberEditor_1.spinButton = false;
					numberEditor_1.bind("value").toDataColumn("price");
					container.addChild(numberEditor_1, {
						"colIndex": 3,
						"rowIndex": 2
					});
					var output_7 = new cpr.controls.Output("otp27");
					output_7.value = "주소";
					container.addChild(output_7, {
						"colIndex": 0,
						"rowIndex": 3
					});
					var inputBox_3 = new cpr.controls.InputBox("ipbCdAddr");
					inputBox_3.bind("value").toDataColumn("addr");
					container.addChild(inputBox_3, {
						"colIndex": 1,
						"rowIndex": 3,
						"colSpan": 3,
						"rowSpan": 1
					});
				})(group_2);
				container.addChild(group_2, {
					"colIndex": 0,
					"rowIndex": 1
				});
				var group_3 = new cpr.controls.Container("grpFormFunc");
				group_3.style.setClasses(["form-box"]);
				// Layout
				var formLayout_3 = new cpr.controls.layouts.FormLayout();
				formLayout_3.topMargin = "5px";
				formLayout_3.rightMargin = "5px";
				formLayout_3.bottomMargin = "5px";
				formLayout_3.leftMargin = "5px";
				formLayout_3.setColumns(["24px", "100px", "1fr", "200px", "80px"]);
				formLayout_3.setRows(["25px", "25px", "25px", "25px", "25px", "25px", "25px", "25px"]);
				formLayout_3.setRowMinHeight(1, 1);
				formLayout_3.setRowMinHeight(2, 1);
				formLayout_3.setRowMinHeight(3, 1);
				formLayout_3.setRowMinHeight(4, 1);
				formLayout_3.setRowMinHeight(5, 1);
				formLayout_3.setRowMinHeight(6, 1);
				formLayout_3.setRowMinHeight(7, 1);
				group_3.setLayout(formLayout_3);
				(function(container){
					var output_8 = new cpr.controls.Output("otp1");
					output_8.value = "No";
					output_8.style.css({
						"text-align" : "center"
					});
					container.addChild(output_8, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var output_9 = new cpr.controls.Output("otp4");
					output_9.value = "함수";
					output_9.style.css({
						"text-align" : "center"
					});
					container.addChild(output_9, {
						"colIndex": 1,
						"rowIndex": 0
					});
					var output_10 = new cpr.controls.Output("otp42");
					output_10.value = "설명";
					output_10.style.css({
						"text-align" : "center"
					});
					container.addChild(output_10, {
						"colIndex": 2,
						"rowIndex": 0
					});
					var output_11 = new cpr.controls.Output("otp63");
					output_11.value = "입력값";
					output_11.style.css({
						"text-align" : "center"
					});
					container.addChild(output_11, {
						"colIndex": 3,
						"rowIndex": 0
					});
					var output_12 = new cpr.controls.Output("otp44");
					output_12.value = "동작";
					output_12.style.css({
						"text-align" : "center"
					});
					container.addChild(output_12, {
						"colIndex": 4,
						"rowIndex": 0
					});
					var output_13 = new cpr.controls.Output("otp6");
					output_13.value = "1";
					output_13.style.css({
						"text-align" : "center"
					});
					container.addChild(output_13, {
						"colIndex": 0,
						"rowIndex": 1
					});
					var inputBox_4 = new cpr.controls.InputBox("ipb1");
					inputBox_4.readOnly = true;
					inputBox_4.value = "getValue";
					container.addChild(inputBox_4, {
						"colIndex": 1,
						"rowIndex": 1
					});
					var inputBox_5 = new cpr.controls.InputBox("ipb8");
					inputBox_5.readOnly = true;
					inputBox_5.value = "입력받은 columnName에 해당되는 데이터 반환";
					container.addChild(inputBox_5, {
						"colIndex": 2,
						"rowIndex": 1
					});
					var group_4 = new cpr.controls.Container("grp6");
					// Layout
					var formLayout_4 = new cpr.controls.layouts.FormLayout();
					formLayout_4.setColumns(["1fr"]);
					formLayout_4.setRows(["1fr"]);
					group_4.setLayout(formLayout_4);
					(function(container){
						var comboBox_3 = new cpr.controls.ComboBox("cmbGetValueColumn");
						comboBox_3.placeholder = "값을 가져올 컬럼";
						(function(comboBox_3){
							comboBox_3.addItem(new cpr.controls.Item("ID", "id"));
							comboBox_3.addItem(new cpr.controls.Item("성명", "name"));
							comboBox_3.addItem(new cpr.controls.Item("전화번호", "tel"));
							comboBox_3.addItem(new cpr.controls.Item("주소", "addr"));
							comboBox_3.addItem(new cpr.controls.Item("금액", "price"));
							comboBox_3.addItem(new cpr.controls.Item("확인여부", "chkYn"));
							comboBox_3.addItem(new cpr.controls.Item("해지여부", "useYn"));
						})(comboBox_3);
						container.addChild(comboBox_3, {
							"colIndex": 0,
							"rowIndex": 0
						});
					})(group_4);
					container.addChild(group_4, {
						"colIndex": 3,
						"rowIndex": 1
					});
					var button_1 = new cpr.controls.Button("btnGetValue");
					button_1.value = "getValue";
					if(typeof onBtnGetValueClick == "function") {
						button_1.addEventListener("click", onBtnGetValueClick);
					}
					container.addChild(button_1, {
						"colIndex": 4,
						"rowIndex": 1,
						"horizontalAlign": "fill",
						"verticalAlign": "fill",
						"width": 80
					});
					var output_14 = new cpr.controls.Output("otp12");
					output_14.value = "2";
					output_14.style.css({
						"text-align" : "center"
					});
					container.addChild(output_14, {
						"colIndex": 0,
						"rowIndex": 2
					});
					var inputBox_6 = new cpr.controls.InputBox("ipb2");
					inputBox_6.readOnly = true;
					inputBox_6.value = "setValue";
					container.addChild(inputBox_6, {
						"colIndex": 1,
						"rowIndex": 2
					});
					var inputBox_7 = new cpr.controls.InputBox("ipb9");
					inputBox_7.readOnly = true;
					inputBox_7.value = "입력받은 columnName에 해당되는 데이터를 변경";
					container.addChild(inputBox_7, {
						"colIndex": 2,
						"rowIndex": 2
					});
					var group_5 = new cpr.controls.Container("grp7");
					// Layout
					var formLayout_5 = new cpr.controls.layouts.FormLayout();
					formLayout_5.setColumns(["90px", "1fr"]);
					formLayout_5.setRows(["1fr"]);
					group_5.setLayout(formLayout_5);
					(function(container){
						var inputBox_8 = new cpr.controls.InputBox("ipbSetValue");
						inputBox_8.placeholder = "변경값";
						container.addChild(inputBox_8, {
							"colIndex": 1,
							"rowIndex": 0
						});
						var comboBox_4 = new cpr.controls.ComboBox("cmbSetValueColumn");
						comboBox_4.placeholder = "Set 컬럼";
						(function(comboBox_4){
							comboBox_4.addItem(new cpr.controls.Item("ID", "id"));
							comboBox_4.addItem(new cpr.controls.Item("성명", "name"));
							comboBox_4.addItem(new cpr.controls.Item("전화번호", "tel"));
							comboBox_4.addItem(new cpr.controls.Item("주소", "addr"));
							comboBox_4.addItem(new cpr.controls.Item("금액", "price"));
							comboBox_4.addItem(new cpr.controls.Item("확인여부", "chkYn"));
							comboBox_4.addItem(new cpr.controls.Item("해지여부", "useYn"));
						})(comboBox_4);
						container.addChild(comboBox_4, {
							"colIndex": 0,
							"rowIndex": 0
						});
					})(group_5);
					container.addChild(group_5, {
						"colIndex": 3,
						"rowIndex": 2
					});
					var button_2 = new cpr.controls.Button("btnSetValue");
					button_2.value = "setValue";
					if(typeof onBtnSetValueClick == "function") {
						button_2.addEventListener("click", onBtnSetValueClick);
					}
					container.addChild(button_2, {
						"colIndex": 4,
						"rowIndex": 2,
						"horizontalAlign": "fill",
						"verticalAlign": "fill",
						"width": 80
					});
					var output_15 = new cpr.controls.Output("otp2");
					output_15.value = "3";
					output_15.style.css({
						"text-align" : "center"
					});
					container.addChild(output_15, {
						"colIndex": 0,
						"rowIndex": 3
					});
					var inputBox_9 = new cpr.controls.InputBox("ipb3");
					inputBox_9.readOnly = true;
					inputBox_9.value = "reset";
					container.addChild(inputBox_9, {
						"colIndex": 1,
						"rowIndex": 3
					});
					var inputBox_10 = new cpr.controls.InputBox("ipb10");
					inputBox_10.readOnly = true;
					inputBox_10.value = "데이터 모두 초기화";
					container.addChild(inputBox_10, {
						"colIndex": 2,
						"rowIndex": 3
					});
					var button_3 = new cpr.controls.Button("btnReset");
					button_3.value = "초기화";
					if(typeof onBtnResetClick == "function") {
						button_3.addEventListener("click", onBtnResetClick);
					}
					container.addChild(button_3, {
						"colIndex": 4,
						"rowIndex": 3,
						"horizontalAlign": "fill",
						"verticalAlign": "fill",
						"width": 80
					});
					var output_16 = new cpr.controls.Output("otp45");
					output_16.value = "4";
					output_16.style.css({
						"text-align" : "center"
					});
					container.addChild(output_16, {
						"colIndex": 0,
						"rowIndex": 4
					});
					var inputBox_11 = new cpr.controls.InputBox("ipb4");
					inputBox_11.readOnly = true;
					inputBox_11.value = "deleteColumn";
					container.addChild(inputBox_11, {
						"colIndex": 1,
						"rowIndex": 4
					});
					var inputBox_12 = new cpr.controls.InputBox("ipb11");
					inputBox_12.readOnly = true;
					inputBox_12.value = "데이터맵에서 컬럼 삭제";
					container.addChild(inputBox_12, {
						"colIndex": 2,
						"rowIndex": 4
					});
					var group_6 = new cpr.controls.Container("grp3");
					// Layout
					var formLayout_6 = new cpr.controls.layouts.FormLayout();
					formLayout_6.setColumns(["1fr"]);
					formLayout_6.setRows(["1fr"]);
					group_6.setLayout(formLayout_6);
					(function(container){
						var comboBox_5 = new cpr.controls.ComboBox("cmbDeleteColumn");
						comboBox_5.placeholder = "삭제할 컬럼";
						(function(comboBox_5){
							comboBox_5.addItem(new cpr.controls.Item("ID", "id"));
							comboBox_5.addItem(new cpr.controls.Item("성명", "name"));
							comboBox_5.addItem(new cpr.controls.Item("전화번호", "tel"));
							comboBox_5.addItem(new cpr.controls.Item("주소", "addr"));
							comboBox_5.addItem(new cpr.controls.Item("금액", "price"));
							comboBox_5.addItem(new cpr.controls.Item("확인여부", "chkYn"));
							comboBox_5.addItem(new cpr.controls.Item("해지여부", "useYn"));
						})(comboBox_5);
						container.addChild(comboBox_5, {
							"colIndex": 0,
							"rowIndex": 0
						});
					})(group_6);
					container.addChild(group_6, {
						"colIndex": 3,
						"rowIndex": 4
					});
					var button_4 = new cpr.controls.Button("btnDeleteColumn");
					button_4.value = "컬럼삭제";
					if(typeof onBtnDeleteColumnClick == "function") {
						button_4.addEventListener("click", onBtnDeleteColumnClick);
					}
					container.addChild(button_4, {
						"colIndex": 4,
						"rowIndex": 4,
						"horizontalAlign": "fill",
						"verticalAlign": "fill",
						"width": 80
					});
					var output_17 = new cpr.controls.Output("otp16");
					output_17.value = "5";
					output_17.style.css({
						"text-align" : "center"
					});
					container.addChild(output_17, {
						"colIndex": 0,
						"rowIndex": 5
					});
					var inputBox_13 = new cpr.controls.InputBox("ipb5");
					inputBox_13.readOnly = true;
					inputBox_13.value = "addColumn";
					container.addChild(inputBox_13, {
						"colIndex": 1,
						"rowIndex": 5
					});
					var inputBox_14 = new cpr.controls.InputBox("ipb12");
					inputBox_14.readOnly = true;
					inputBox_14.value = "데이터맵에 컬럼 추가";
					container.addChild(inputBox_14, {
						"colIndex": 2,
						"rowIndex": 5
					});
					var group_7 = new cpr.controls.Container("grp8");
					// Layout
					var formLayout_7 = new cpr.controls.layouts.FormLayout();
					formLayout_7.setColumns(["100px", "1fr"]);
					formLayout_7.setRows(["1fr"]);
					group_7.setLayout(formLayout_7);
					(function(container){
						var inputBox_15 = new cpr.controls.InputBox("ipbAddColumn");
						inputBox_15.value = "addColumnId";
						container.addChild(inputBox_15, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var inputBox_16 = new cpr.controls.InputBox("ipbAddColumnValue");
						inputBox_16.value = "초기값";
						container.addChild(inputBox_16, {
							"colIndex": 1,
							"rowIndex": 0
						});
					})(group_7);
					container.addChild(group_7, {
						"colIndex": 3,
						"rowIndex": 5
					});
					var button_5 = new cpr.controls.Button("btnAddColumn");
					button_5.value = "컬럼추가";
					if(typeof onBtnAddColumnClick == "function") {
						button_5.addEventListener("click", onBtnAddColumnClick);
					}
					container.addChild(button_5, {
						"colIndex": 4,
						"rowIndex": 5,
						"horizontalAlign": "fill",
						"verticalAlign": "fill",
						"width": 80
					});
					var output_18 = new cpr.controls.Output("otp18");
					output_18.value = "6";
					output_18.style.css({
						"text-align" : "center"
					});
					container.addChild(output_18, {
						"colIndex": 0,
						"rowIndex": 6
					});
					var inputBox_17 = new cpr.controls.InputBox("ipb6");
					inputBox_17.readOnly = true;
					inputBox_17.value = "copyToDataMap";
					container.addChild(inputBox_17, {
						"colIndex": 1,
						"rowIndex": 6
					});
					var inputBox_18 = new cpr.controls.InputBox("ipb13");
					inputBox_18.readOnly = true;
					inputBox_18.value = "현재 데이터맵의 데이터를 타겟 데이터맵으로 복사";
					container.addChild(inputBox_18, {
						"colIndex": 2,
						"rowIndex": 6
					});
					var button_6 = new cpr.controls.Button("btnCopyToDataSet");
					button_6.value = "복사";
					if(typeof onBtnCopyToDataSetClick == "function") {
						button_6.addEventListener("click", onBtnCopyToDataSetClick);
					}
					container.addChild(button_6, {
						"colIndex": 4,
						"rowIndex": 6,
						"horizontalAlign": "fill",
						"verticalAlign": "fill",
						"width": 80
					});
					var output_19 = new cpr.controls.Output("otp20");
					output_19.value = "7";
					output_19.style.css({
						"text-align" : "center"
					});
					container.addChild(output_19, {
						"colIndex": 0,
						"rowIndex": 7
					});
					var inputBox_19 = new cpr.controls.InputBox("ipb7");
					inputBox_19.readOnly = true;
					inputBox_19.value = "clear";
					container.addChild(inputBox_19, {
						"colIndex": 1,
						"rowIndex": 7
					});
					var inputBox_20 = new cpr.controls.InputBox("ipb14");
					inputBox_20.readOnly = true;
					inputBox_20.value = "데이터 모두 제거";
					container.addChild(inputBox_20, {
						"colIndex": 2,
						"rowIndex": 7
					});
					var button_7 = new cpr.controls.Button("btnClear");
					button_7.value = "clear";
					if(typeof onBtnClearClick == "function") {
						button_7.addEventListener("click", onBtnClearClick);
					}
					container.addChild(button_7, {
						"colIndex": 4,
						"rowIndex": 7,
						"horizontalAlign": "fill",
						"verticalAlign": "fill",
						"width": 80
					});
				})(group_3);
				container.addChild(group_3, {
					"colIndex": 1,
					"rowIndex": 1,
					"colSpan": 1,
					"rowSpan": 3
				});
				var userDefinedControl_4 = new udc.com.comFormTitle("comformtitle6");
				userDefinedControl_4.title = "대상(Target) Form";
				container.addChild(userDefinedControl_4, {
					"colIndex": 0,
					"rowIndex": 2
				});
				var group_8 = new cpr.controls.Container("grpFreeFormTarget");
				group_8.style.setClasses(["form-box"]);
				var dataMapContext_2 = new cpr.bind.DataMapContext(app.lookup("dmInfoTarget"));
				group_8.setBindContext(dataMapContext_2);
				// Layout
				var formLayout_8 = new cpr.controls.layouts.FormLayout();
				formLayout_8.scrollable = true;
				formLayout_8.topMargin = "5px";
				formLayout_8.rightMargin = "5px";
				formLayout_8.bottomMargin = "5px";
				formLayout_8.leftMargin = "5px";
				formLayout_8.setColumns(["67px", "1fr", "67px", "1fr"]);
				formLayout_8.setUseColumnShade(2, true);
				formLayout_8.setRows(["1fr", "1fr", "1fr", "1fr"]);
				group_8.setLayout(formLayout_8);
				(function(container){
					var output_20 = new cpr.controls.Output("otp30");
					output_20.value = "ID";
					container.addChild(output_20, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var inputBox_21 = new cpr.controls.InputBox("ipbID2");
					inputBox_21.readOnly = true;
					inputBox_21.bind("value").toDataColumn("id");
					container.addChild(inputBox_21, {
						"colIndex": 1,
						"rowIndex": 0
					});
					var output_21 = new cpr.controls.Output("otp33");
					output_21.value = "성명";
					container.addChild(output_21, {
						"colIndex": 2,
						"rowIndex": 0
					});
					var inputBox_22 = new cpr.controls.InputBox("ipbName2");
					inputBox_22.bind("value").toDataColumn("name");
					container.addChild(inputBox_22, {
						"colIndex": 3,
						"rowIndex": 0
					});
					var output_22 = new cpr.controls.Output("otp31");
					output_22.value = "전화번호";
					container.addChild(output_22, {
						"colIndex": 0,
						"rowIndex": 1
					});
					var maskEditor_2 = new cpr.controls.MaskEditor("medTel2");
					maskEditor_2.mask = "XXX-XXXX-XXXX";
					maskEditor_2.bind("value").toDataColumn("tel");
					container.addChild(maskEditor_2, {
						"colIndex": 1,
						"rowIndex": 1
					});
					var output_23 = new cpr.controls.Output("otp34");
					output_23.value = "확인여부";
					container.addChild(output_23, {
						"colIndex": 2,
						"rowIndex": 1
					});
					var comboBox_6 = new cpr.controls.ComboBox("cmbChkYn2");
					comboBox_6.bind("value").toDataColumn("chkYn");
					(function(comboBox_6){
						comboBox_6.addItem(new cpr.controls.Item("전체", ""));
						comboBox_6.setItemSet(app.lookup("dsCode03"), {
							"label": "cd_nm",
							"value": "cd"
						});
					})(comboBox_6);
					container.addChild(comboBox_6, {
						"colIndex": 3,
						"rowIndex": 1
					});
					var output_24 = new cpr.controls.Output("otp32");
					output_24.value = "해지여부";
					container.addChild(output_24, {
						"colIndex": 0,
						"rowIndex": 2
					});
					var comboBox_7 = new cpr.controls.ComboBox("cmbUseYn2");
					comboBox_7.bind("value").toDataColumn("useYn");
					(function(comboBox_7){
						comboBox_7.addItem(new cpr.controls.Item("전체", ""));
						comboBox_7.setItemSet(app.lookup("dsCode03"), {
							"label": "cd_nm",
							"value": "cd"
						});
					})(comboBox_7);
					container.addChild(comboBox_7, {
						"colIndex": 1,
						"rowIndex": 2
					});
					var output_25 = new cpr.controls.Output("otp35");
					output_25.value = "금액";
					container.addChild(output_25, {
						"colIndex": 2,
						"rowIndex": 2
					});
					var numberEditor_2 = new cpr.controls.NumberEditor("nedPrice2");
					numberEditor_2.spinButton = false;
					numberEditor_2.bind("value").toDataColumn("price");
					container.addChild(numberEditor_2, {
						"colIndex": 3,
						"rowIndex": 2
					});
					var output_26 = new cpr.controls.Output("otp36");
					output_26.value = "주소";
					container.addChild(output_26, {
						"colIndex": 0,
						"rowIndex": 3
					});
					var inputBox_23 = new cpr.controls.InputBox("ipbCdAddr2");
					inputBox_23.bind("value").toDataColumn("addr");
					container.addChild(inputBox_23, {
						"colIndex": 1,
						"rowIndex": 3,
						"colSpan": 3,
						"rowSpan": 1
					});
				})(group_8);
				container.addChild(group_8, {
					"colIndex": 0,
					"rowIndex": 3
				});
				var userDefinedControl_5 = new udc.com.comFormTitle("comformtitle4");
				userDefinedControl_5.title = "시나리오";
				container.addChild(userDefinedControl_5, {
					"colIndex": 0,
					"rowIndex": 4
				});
				var userDefinedControl_6 = new udc.com.comFormTitle("comformtitle5");
				userDefinedControl_6.title = "결과값";
				container.addChild(userDefinedControl_6, {
					"colIndex": 1,
					"rowIndex": 4,
					"colSpan": 1,
					"rowSpan": 1
				});
				var group_9 = new cpr.controls.Container("grpFormCont");
				group_9.style.setClasses(["form-box"]);
				// Layout
				var formLayout_9 = new cpr.controls.layouts.FormLayout();
				formLayout_9.topMargin = "5px";
				formLayout_9.rightMargin = "5px";
				formLayout_9.bottomMargin = "5px";
				formLayout_9.leftMargin = "5px";
				formLayout_9.setColumns(["100px", "1fr"]);
				formLayout_9.setRows(["1fr"]);
				group_9.setLayout(formLayout_9);
				(function(container){
					var output_27 = new cpr.controls.Output("otp25");
					output_27.value = "시나리오";
					container.addChild(output_27, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var output_28 = new cpr.controls.Output("otp24");
					output_28.value = "1. 소스 Form을 확인하고 동작 버튼을 클릭한다.\r\n   (필요시 입력값 선택)\r\n2. 기능동작 및 결과값을 확인한다. \r\n3. 하단의 스크립트내용을 확인한다.\r\n4. 스크립트내용을 복사하여 코딩에 활용한다.";
					output_28.style.css({
						"background-color" : "white",
						"font-weight" : "normal",
						"text-align" : "left"
					});
					container.addChild(output_28, {
						"colIndex": 1,
						"rowIndex": 0,
						"colSpan": 1,
						"rowSpan": 1
					});
				})(group_9);
				container.addChild(group_9, {
					"colIndex": 0,
					"rowIndex": 5,
					"colSpan": 1,
					"rowSpan": 1
				});
				var inputBox_24 = new cpr.controls.InputBox("otpRslt");
				inputBox_24.readOnly = true;
				container.addChild(inputBox_24, {
					"colIndex": 1,
					"rowIndex": 5,
					"colSpan": 1,
					"rowSpan": 1
				});
				var userDefinedControl_7 = new udc.com.comFormTitle("comformtitle3");
				userDefinedControl_7.title = "스크립트 내용";
				container.addChild(userDefinedControl_7, {
					"colIndex": 0,
					"rowIndex": 6,
					"colSpan": 2,
					"rowSpan": 1
				});
				var textArea_1 = new cpr.controls.TextArea("txaScript");
				textArea_1.style.setClasses(["form-box"]);
				container.addChild(textArea_1, {
					"colIndex": 0,
					"rowIndex": 7,
					"colSpan": 2,
					"rowSpan": 1
				});
			})(group_1);
			container.addChild(group_1, {
				"autoSize": "none",
				"width": "972px",
				"height": "645px"
			});
			if(typeof onBodyInit == "function"){
				app.addEventListener("init", onBodyInit);
			}
		}
	});
	app.title = "데이터맵 기능";
	cpr.core.Platform.INSTANCE.register(app);
})();
