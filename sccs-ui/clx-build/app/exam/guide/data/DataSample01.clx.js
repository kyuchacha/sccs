/*
 * App URI: app/exam/guide/data/DataSample01
 * Source Location: app/exam/guide/data/DataSample01.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/exam/guide/data/DataSample01", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * DataSample01.js
			 * Created at 2022. 3. 10. 오후 1:35:43.
			 *
			 * @author jiyeon
			 ************************************************/
			
			var util = createCommonUtil();
			
			/*
			 * "그리드 원상태로 되돌리기" 버튼(btnSrcGridInit)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnSrcGridInitClick(e){
				var btnSrcGridInit = e.control;
				
				var dsList = app.lookup("dsList");
				
				util.DataSet.copyToDataSet(app, "dsListOrg", "dsList");
				dsList.setRowStateAll(cpr.data.tabledata.RowState.UNCHANGED);
			}
			
			/*
			 * "그리드 초기화" 버튼(btnTrgGridInit)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnTrgGridInitClick(e){
				var btnTrgGridInit = e.control;
				
				util.Grid.reset(app, "grdTargetList");
			}
			
			
			
			/*
			 * "getCondValue" 버튼(btnGetValue)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnGetValueClick(e){
				var btnGetValue = e.control;
				
				//함수 실행
				var result = f_onGetValue();
				if (!result) return;
				
				//스크립트 출력
				printSource(f_onGetValue);
				
				//결과 표시
				printResult(f_onGetValue());
			}
			
			function f_onGetValue() {
				//콤보박스에서 선택된 값
				var vsSelCol = util.Control.getValue(app, "cmbGetValueColumn");
				if (ValueUtil.isNull(vsSelCol)) {
					util.Msg.alert("값을 가져올 컬럼명을 선택 후 진행해주시기 바랍니다.");
					return false;
				};
				//조건식 
				var vsCondVal = util.Control.getValue(app, "ipbGetValueCondition");
				if (vsCondVal == null) {
					util.Msg.alert("조건식을 입력하고 클릭하시기 바랍니다.");
					return;
				}
				
				//가져오기
				var result = util.DataSet.getCondValue(app, "dsList", vsCondVal, vsSelCol);
				
				return result;
			}
			
			
			/*
			 * "setValue" 버튼(btnSetValue)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnSetValueClick(e){
				var btnSetValue = e.control;
				
				//함수 실행
				f_onSetValue();
				
				//스크립트 출력
				printSource(f_onSetValue);
				
				//결과 표시
				printResult("입력 받은 rowIndex와 columnName에 해당되는 데이터를 수정합니다.");
			}
			
			function f_onSetValue() {
				// 그리드에서 선택된 행의 index
				var vnRowIdx = util.Grid.getIndex(app, "grdList");
				if (vnRowIdx < 0) {
					util.Msg.alert("그리드에서 행을 선택 후 진행해 주시기 바랍니다.");
					return false;
				};
				//콤보박스에서 선택된 값
				var vsSelCol = util.Control.getValue(app, "cmbSetValueColumn");
				if (ValueUtil.isNull(vsSelCol)) {
					util.Msg.alert("변경할 컬럼명을 선택 후 진행해주시기 바랍니다.");
					return false;
				};
				//변경할 값 
				var vsSetVal = util.Control.getValue(app, "ipbSetValue");
				if (vsSetVal == null) {
					util.Msg.alert("변경할 값을 입력하고 진행하시기 바랍니다.");
					return;
				}
				
				//변경 
				util.DataSet.setValue(app, "dsList", vnRowIdx, vsSelCol, vsSetVal);
			}
			
			
			/*
			 * "확인" 버튼(btnGetRowCount)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnGetRowCountClick(e){
				var btnGetRowCount = e.control;
				
				//함수 실행
				var result = f_onGetRowCount();
				
				//스크립트 출력
				printSource(f_onGetRowCount);
				
				//결과 표시
				var txt = "데이터셋의 전체 Row개수 : [" + result + "]";
				printResult(txt);
			}
			
			function f_onGetRowCount() {
				
				var result = util.DataSet.getRowCount(app, "dsList");
				
				return result;
			}
			
			
			/*
			 * "추가" 버튼(btnInsertRow)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnInsertRowClick(e){
				var btnInsertRow = e.control;
				
				//함수 실행
				f_onInsertRow();
				
				//스크립트 출력
				printSource(f_onInsertRow);
				
				//결과 표시
				printResult("선택한 Row의 뒤에 rowData의 신규행을 추가합니다. rowData는 임시로 설정함");
			}
			
			function f_onInsertRow() {
				// 그리드에서 선택된 행의 index
				var vnRowIdx = util.Grid.getIndex(app, "grdList");
				if (vnRowIdx < 0) {
					util.Msg.alert("그리드에서 행을 선택 후 진행해 주시기 바랍니다.");
					return;
				};
				
				//추가할 row data. (key: header명, value: value 를 갖는 json data)
				var poRowData = {
					"id": "ID99999",
					"name": "행추가",
					"tel": "02-7777-9999",
					"addr": "서울시 주소 123"
				};
				
				var pbAfter = true; //해당 row index의 뒤에 삽입할지 여부. (true:뒤 / false:앞)
				//추가
				util.DataSet.insertRow(app, "dsList", vnRowIdx, pbAfter, poRowData);
			}
			
			
			/*
			 * "확인" 버튼(btnFindRow)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnFindRowClick(e){
				var btnFindRow = e.control;
				
				//함수 실행
				var result = f_onFindRow();
				
				//스크립트 출력
				printSource(f_onFindRow);
				
				//결과 표시
				var txt = "조건식에 해당하는 Row객체 [ " + result + " ]"
				printResult(txt);
			}
			
			function f_onFindRow() {
				
				//조건식
				//  ex)"STUD_DIV_RCD == 'CT101REGU' && SA_NM == '컴퓨터정보과'"
				// 	사용가능수식 !=", "!==", "$=", "%", "&&", "(", "*", "*=", "+", ",", "-", ".", "/", "/*", "//", "<", "<=", "==", "===", ">", ">=", "?", "[", "^=", "||"
				var psCondition = util.Control.getValue(app, "ipbFindRow");
				if (psCondition == null) {
					util.Msg.alert("조건식을 입력하고 진행하시기 바랍니다.");
					return;
				}
				
				var pbAllStatus = true; //true : 조건에 맞는 모든 row 리턴, default : 조건에 맞는 첫번째 row 리턴
				
				//결과
				var findRows = util.DataSet.findRow(app, "dsList", psCondition, pbAllStatus);
				
				var resultArray = [];
				findRows.forEach(function(each) {
					resultArray.push(each.getRowData())
				});
				
				var result = JSON.stringify(resultArray);
				
				return result;
			}
			
			/*
			 * "확인" 버튼(btnGetFindRowValue)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnGetFindRowValueClick(e){
				var btnGetFindRowValue = e.control;
				
				//함수 실행
				var result = f_BtnGetFindRowValue();
				
				//스크립트 출력
				printSource(f_BtnGetFindRowValue);
				
				//결과 표시
				var txt = "지정범위 Row중 조건에 맞는 첫번째 Row객체의 지정한 컬럼value 반환 [ " + result + " ]"
				printResult(txt);
			}
			
			function f_BtnGetFindRowValue() {
				
				//콤보박스에서 선택된 값
				var vsSelCol = util.Control.getValue(app, "cmbGetFindRowValue");
				if (ValueUtil.isNull(vsSelCol)) {
					util.Msg.alert("가져올 컬럼을 선택 후 진행해주시기 바랍니다.");
					return false;
				};
				
				//조건식
				//  ex)"STUD_DIV_RCD == 'CT101REGU' && SA_NM == '컴퓨터정보과'"
				// 	사용가능수식 !=", "!==", "$=", "%", "&&", "(", "*", "*=", "+", ",", "-", ".", "/", "/*", "//", "<", "<=", "==", "===", ">", ">=", "?", "[", "^=", "||"
				var psCondition = util.Control.getValue(app, "ipbGetFindRowValue");
				if (psCondition == null) {
					util.Msg.alert( "조건식을 입력하고 진행하시기 바랍니다.");
					return;
				}
				
				var pbAllStatus = true; //true : 조건에 맞는 모든 row 리턴, default : 조건에 맞는 첫번째 row 리턴
				
				//결과
				var result = util.DataSet.getFindRowValue(app, "dsList", psCondition, vsSelCol);
				
				return result;
			}
			
			
			/*
			 * "추가" 버튼(btnAddColumn)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnAddColumnClick(e){
				var btnAddColumn = e.control;
				
				//함수 실행
				f_onAddColumn();
				
				//alert(JSON.stringify(app.lookup("dsList").getRowDataRanged()));
				
				//스크립트 출력
				printSource(f_onAddColumn);
				
				//결과 표시
				var txt = "데이터셋 컬럼 정보 [ " + app.lookup("dsList").getColumnNames() + " ]";
				printResult(txt);
			}
			
			function f_onAddColumn() {
				//추가하려는 컬럼명
				var psColumnNm = util.Control.getValue(app, "ipbAddColumn");
				if (psColumnNm == null) {
					util.Msg.alert( "추가하려는 컬럼ID를 입력하고 진행하시기 바랍니다.");
					return;
				}
				
				var psColumnType = "string"; //컬럼유형(string/number/decimal/expression)
				
				var resultBoolean = util.DataSet.addColumn(app, "dsList", psColumnNm, psColumnType);
				
				//성공시 true
				return resultBoolean;
			}
			
			
			/*
			 * "복사" 버튼(btnCopyToDataSet)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnCopyToDataSetClick(e){
				var btnCopyToDataSet = e.control;
				
				//함수 실행
				f_onCopyToDataSet();
				
				//스크립트 출력
				printSource(f_onCopyToDataSet);
				
				//결과 표시
				printResult("데이터셋을 Target데이터셋으로 복사합니다. target의 기존 데이터는 삭제됨");
			}
			
			function f_onCopyToDataSet() {
				util.DataSet.copyToDataSet(app, "dsList", "dsListTarget");
			}
			
			
			/*
			 * "clear" 버튼(btnClear)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnClearClick(e){
				var btnClear = e.control;
				
				//함수 실행
				f_onClear();
				
				//스크립트 출력
				printSource(f_onClear);
				
				//결과 표시
				printResult("모든 데이터셋 정보를 제거합니다.");
			}
			
			function f_onClear() {
				util.DataSet.clear(app, "dsList");
			}
			
			
			
			//== 스크립트 출력 ==//
			function printSource(value) {
				/* 에디터에 소스 표시 */
				var vcAceEditor = app.lookup("ace1");
				vcAceEditor.value = value;	
			}
			
			
			
			//== 결과 표시 ==//
			function printResult(value) {
				app.lookup("optRslt").value = value;
			}
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsList");
			dataSet_1.parseData({
				"columns": [
					{"name": "id"},
					{"name": "name"},
					{"name": "tel"},
					{"name": "addr"}
				],
				"rows": [
					{"id": "ID0001", "name": "박보검", "tel": "010-1234-5678", "addr": "서울시 여의도"},
					{"id": "ID0002", "name": "홍길동", "tel": "010-1234-5678", "addr": "서울시 동작구 123"},
					{"id": "ID0003", "name": "이순신", "tel": "010-1234-5678", "addr": "경기도 의정부시 111"},
					{"id": "ID0004", "name": "송혜교", "tel": "010-1234-5678", "addr": "서울시 노원구 중계동"},
					{"id": "ID0004", "name": "이보영", "tel": "010-1234-5678", "addr": "서울시 강북구"},
					{"id": "ID0005", "name": "임장군", "tel": "010-1234-5678", "addr": "서울시 여의도 영등포동"},
					{"id": "ID0005", "name": "김토마토", "tel": "010-1234-5678", "addr": "서울시 여의도 영등포동"},
					{"id": "ID0005", "name": "김퇴직", "tel": "010-1234-5678", "addr": "서울시 여의도 영등포동"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsListOrg");
			dataSet_2.parseData({
				"columns": [
					{"name": "id"},
					{"name": "name"},
					{"name": "tel"},
					{"name": "addr"}
				],
				"rows": [
					{"id": "ID0001", "name": "박보검", "tel": "010-1234-5678", "addr": "서울시 여의도"},
					{"id": "ID0002", "name": "홍길동", "tel": "010-1234-5678", "addr": "서울시 동작구 123"},
					{"id": "ID0003", "name": "이순신", "tel": "010-1234-5678", "addr": "경기도 의정부시 111"},
					{"id": "ID0004", "name": "송혜교", "tel": "010-1234-5678", "addr": "서울시 노원구 중계동"},
					{"id": "ID0004", "name": "이보영", "tel": "010-1234-5678", "addr": "서울시 강북구"},
					{"id": "ID0005", "name": "임장군", "tel": "010-1234-5678", "addr": "서울시 여의도 영등포동"},
					{"id": "ID0005", "name": "김토마토", "tel": "010-1234-5678", "addr": "서울시 여의도 영등포동"},
					{"id": "ID0005", "name": "김퇴직", "tel": "010-1234-5678", "addr": "서울시 여의도 영등포동"}
				]
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsListTarget");
			dataSet_3.parseData({
				"columns" : [
					{"name": "id"},
					{"name": "name"},
					{"name": "tel"},
					{"name": "addr"}
				]
			});
			app.register(dataSet_3);
			
			app.supportMedia("all and (min-width: 1320px)", "eXFrame");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1319px)", "default");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpHeader");
			// Layout
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			group_1.setLayout(verticalLayout_2);
			(function(container){
				var userDefinedControl_1 = new udc.com.appHeader("appheader1");
				container.addChild(userDefinedControl_1, {
					"width": "500px",
					"height": "30px"
				});
			})(group_1);
			container.addChild(group_1, {
				"autoSize": "height",
				"width": "400px",
				"height": "30px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var verticalLayout_3 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_3.leftMargin = 20;
			verticalLayout_3.rightMargin = 30;
			verticalLayout_3.topMargin = 30;
			verticalLayout_3.bottomMargin = 20;
			group_2.setLayout(verticalLayout_3);
			(function(container){
				var group_3 = new cpr.controls.Container();
				// Layout
				var verticalLayout_4 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_4.spacing = 20;
				verticalLayout_4.topMargin = 20;
				verticalLayout_4.bottomMargin = 40;
				group_3.setLayout(verticalLayout_4);
				(function(container){
					var group_4 = new cpr.controls.Container("grp1");
					// Layout
					var formLayout_1 = new cpr.controls.layouts.FormLayout();
					formLayout_1.scrollable = false;
					formLayout_1.rightMargin = "50px";
					formLayout_1.horizontalSpacing = "5px";
					formLayout_1.verticalSpacing = "5px";
					formLayout_1.setColumns(["150px", "100px"]);
					formLayout_1.setColumnAutoSizing(0, true);
					formLayout_1.setColumnAutoSizing(1, true);
					formLayout_1.setRows(["1fr"]);
					group_4.setLayout(formLayout_1);
					(function(container){
						var output_1 = new cpr.controls.Output();
						output_1.value = "데이터 셋 기능";
						output_1.style.css({
							"font-weight" : "bold",
							"padding-left" : "1rem",
							"font-size" : "2.5rem"
						});
						container.addChild(output_1, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var output_2 = new cpr.controls.Output();
						output_2.value = "util.DataSet";
						output_2.style.setClasses(["text-primary"]);
						output_2.style.css({
							"font-weight" : "bold",
							"padding-left" : "3rem",
							"font-size" : "1.25rem",
							"text-align" : "left"
						});
						container.addChild(output_2, {
							"colIndex": 1,
							"rowIndex": 0,
							"verticalAlign": "bottom",
							"height": 35
						});
					})(group_4);
					container.addChild(group_4, {
						"autoSize": "height",
						"width": "1270px",
						"height": "40px"
					});
					var output_3 = new cpr.controls.Output();
					output_3.value = "이 페이지에서는 데이터 셋에서 사용하는 공통모듈에 대해 설명합니다.";
					output_3.style.setClasses(["opt-tmpl"]);
					output_3.style.css({
						"padding-left" : "1rem",
						"font-size" : "1rem"
					});
					container.addChild(output_3, {
						"autoSize": "height",
						"width": "1210px",
						"height": "46px"
					});
				})(group_3);
				container.addChild(group_3, {
					"autoSize": "height",
					"width": "1270px",
					"height": "120px"
				});
				var group_5 = new cpr.controls.Container();
				// Layout
				var verticalLayout_5 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_5.spacing = 20;
				verticalLayout_5.topMargin = 20;
				verticalLayout_5.bottomMargin = 40;
				group_5.setLayout(verticalLayout_5);
				(function(container){
					var output_4 = new cpr.controls.Output();
					output_4.value = "시나리오";
					output_4.style.setClasses(["h1", "pl-3", "bg-primary", "text-white"]);
					output_4.style.css({
						"font-weight" : "bold",
						"padding-left" : "1rem",
						"font-size" : "1.75rem"
					});
					container.addChild(output_4, {
						"width": "100px",
						"height": "40px"
					});
					var output_5 = new cpr.controls.Output("ipbScenario");
					output_5.value = "1. 소스 그리드를 선택하고 동작 버튼을 클릭한다. (필요시 입력값 선택)\r\n2. 그리드의 기능 동작 및 결과값을 확인한다.\r\n3. 스크립트를 확인한다.\r\n4. 스크립트를 복하사여 코딩에 활용한다.";
					output_5.style.setClasses(["opt-tmpl"]);
					output_5.style.css({
						"padding-left" : "1rem",
						"font-size" : "1rem"
					});
					if(typeof onIpbScenarioValueChange == "function") {
						output_5.addEventListener("value-change", onIpbScenarioValueChange);
					}
					container.addChild(output_5, {
						"autoSize": "height",
						"width": "1210px",
						"height": "107px"
					});
					var group_6 = new cpr.controls.Container("grp2");
					group_6.visible = false;
					group_6.style.css({
						"background-color" : "#dff7fb"
					});
					// Layout
					var verticalLayout_6 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_6.leftMargin = 30;
					verticalLayout_6.rightMargin = 30;
					verticalLayout_6.topMargin = 20;
					verticalLayout_6.bottomMargin = 20;
					group_6.setLayout(verticalLayout_6);
					(function(container){
						var output_6 = new cpr.controls.Output();
						output_6.value = "추가설명";
						output_6.style.setClasses(["text-info", "opt-tmpl"]);
						output_6.style.css({
							"font-weight" : "bold"
						});
						container.addChild(output_6, {
							"width": "100px",
							"height": "25px"
						});
						var output_7 = new cpr.controls.Output();
						output_7.value = "추가적으로 설명할 정보가 있다면 작성해주세요.";
						output_7.style.setClasses(["text-info", "opt-tmpl"]);
						container.addChild(output_7, {
							"autoSize": "height",
							"width": "100px",
							"height": "25px"
						});
					})(group_6);
					container.addChild(group_6, {
						"autoSize": "height",
						"width": "1100px",
						"height": "100px"
					});
				})(group_5);
				container.addChild(group_5, {
					"autoSize": "height",
					"width": "1270px",
					"height": "345px"
				});
				var group_7 = new cpr.controls.Container();
				group_7.userAttr({"floating-header": "true"});
				// Layout
				var verticalLayout_7 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_7.spacing = 15;
				verticalLayout_7.topMargin = 20;
				verticalLayout_7.bottomMargin = 0;
				group_7.setLayout(verticalLayout_7);
				(function(container){
					var output_8 = new cpr.controls.Output();
					output_8.value = "기능 확인";
					output_8.style.setClasses(["h1", "pl-3", "bg-primary", "text-white"]);
					output_8.style.css({
						"font-weight" : "bold",
						"padding-left" : "1rem",
						"font-size" : "1.75rem"
					});
					container.addChild(output_8, {
						"autoSize": "none",
						"width": "1270px",
						"height": "40px"
					});
					var group_8 = new cpr.controls.Container("grp3");
					group_8.style.css({
						"border-right-style" : "solid",
						"border-top-width" : "1px",
						"border-bottom-color" : "#dedede",
						"border-right-width" : "1px",
						"border-left-color" : "#dedede",
						"border-right-color" : "#dedede",
						"border-left-width" : "1px",
						"border-top-style" : "solid",
						"background-color" : "#F0F0F0",
						"border-left-style" : "solid",
						"border-bottom-width" : "1px",
						"border-top-color" : "#dedede",
						"border-bottom-style" : "solid"
					});
					// Layout
					var verticalLayout_8 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_8.leftMargin = 30;
					verticalLayout_8.rightMargin = 30;
					verticalLayout_8.topMargin = 5;
					verticalLayout_8.bottomMargin = 10;
					group_8.setLayout(verticalLayout_8);
					(function(container){
						var group_9 = new cpr.controls.Container("grp5");
						// Layout
						var formLayout_2 = new cpr.controls.layouts.FormLayout();
						formLayout_2.scrollable = false;
						formLayout_2.topMargin = "0px";
						formLayout_2.rightMargin = "0px";
						formLayout_2.leftMargin = "0px";
						formLayout_2.horizontalSpacing = "10px";
						formLayout_2.verticalSpacing = "5px";
						formLayout_2.setColumns(["1fr", "1fr"]);
						formLayout_2.setRows(["25px", "25px", "1fr"]);
						group_9.setLayout(formLayout_2);
						(function(container){
							var group_10 = new cpr.controls.Container("grp8");
							// Layout
							var verticalLayout_9 = new cpr.controls.layouts.VerticalLayout();
							group_10.setLayout(verticalLayout_9);
							(function(container){
								var grid_1 = new cpr.controls.Grid("grdList");
								grid_1.init({
									"dataSet": app.lookup("dsList"),
									"columns": [
										{"width": "100px"},
										{"width": "100px"},
										{"width": "100px"},
										{"width": "100px"}
									],
									"header": {
										"rows": [{"height": "24px"}],
										"cells": [
											{
												"constraint": {"rowIndex": 0, "colIndex": 0},
												"configurator": function(cell){
													cell.targetColumnName = "id";
													cell.filterable = false;
													cell.sortable = false;
													cell.text = "ID";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 1},
												"configurator": function(cell){
													cell.targetColumnName = "name";
													cell.filterable = false;
													cell.sortable = false;
													cell.text = "성명";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 2},
												"configurator": function(cell){
													cell.targetColumnName = "tel";
													cell.filterable = false;
													cell.sortable = false;
													cell.text = "전화번호";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 3},
												"configurator": function(cell){
													cell.targetColumnName = "addr";
													cell.filterable = false;
													cell.sortable = false;
													cell.text = "주소";
												}
											}
										]
									},
									"detail": {
										"rows": [{"height": "24px"}],
										"cells": [
											{
												"constraint": {"rowIndex": 0, "colIndex": 0},
												"configurator": function(cell){
													cell.columnName = "id";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 1},
												"configurator": function(cell){
													cell.columnName = "name";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 2},
												"configurator": function(cell){
													cell.columnName = "tel";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 3},
												"configurator": function(cell){
													cell.columnName = "addr";
												}
											}
										]
									}
								});
								container.addChild(grid_1, {
									"autoSize": "none",
									"width": "633px",
									"height": "220px"
								});
							})(group_10);
							container.addChild(group_10, {
								"colIndex": 0,
								"rowIndex": 2,
								"colSpan": 1,
								"rowSpan": 1
							});
							var output_9 = new cpr.controls.Output();
							output_9.value = "<소스(Source) 그리드>";
							output_9.style.setClasses(["opt-tmpl"]);
							output_9.style.css({
								"text-align" : "center"
							});
							output_9.bind("tooltip").toExpression("#ipbScenario.value");
							container.addChild(output_9, {
								"colIndex": 0,
								"rowIndex": 0
							});
							var button_1 = new cpr.controls.Button("btnSrcGridInit");
							button_1.value = "그리드 원상태로 되돌리기";
							button_1.style.setClasses(["btn-secondary"]);
							if(typeof onBtn1Click == "function") {
								button_1.addEventListener("click", onBtn1Click);
							}
							if(typeof onBtnSrcGridInitClick == "function") {
								button_1.addEventListener("click", onBtnSrcGridInitClick);
							}
							container.addChild(button_1, {
								"colIndex": 0,
								"rowIndex": 1,
								"horizontalAlign": "right",
								"width": 200
							});
							var output_10 = new cpr.controls.Output();
							output_10.value = "<타겟(Target) 그리드>";
							output_10.style.setClasses(["opt-tmpl"]);
							output_10.style.css({
								"text-align" : "center"
							});
							output_10.bind("tooltip").toExpression("#ipbScenario.value");
							container.addChild(output_10, {
								"colIndex": 1,
								"rowIndex": 0
							});
							var button_2 = new cpr.controls.Button("btnTrgGridInit");
							button_2.value = "그리드 초기화";
							button_2.style.setClasses(["btn-secondary"]);
							if(typeof onBtnTrgGridInitClick == "function") {
								button_2.addEventListener("click", onBtnTrgGridInitClick);
							}
							container.addChild(button_2, {
								"colIndex": 1,
								"rowIndex": 1,
								"horizontalAlign": "right",
								"width": 200
							});
							var grid_2 = new cpr.controls.Grid("grdTargetList");
							grid_2.init({
								"dataSet": app.lookup("dsListTarget"),
								"resizableColumns": "all",
								"columns": [
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"}
								],
								"header": {
									"rows": [{"height": "24px"}],
									"cells": [
										{
											"constraint": {"rowIndex": 0, "colIndex": 0},
											"configurator": function(cell){
												cell.targetColumnName = "id";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "ID";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 1},
											"configurator": function(cell){
												cell.targetColumnName = "name";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "성명";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 2},
											"configurator": function(cell){
												cell.targetColumnName = "tel";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "전화번호";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 3},
											"configurator": function(cell){
												cell.targetColumnName = "addr";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "주소";
											}
										}
									]
								},
								"detail": {
									"rows": [{"height": "24px"}],
									"cells": [
										{
											"constraint": {"rowIndex": 0, "colIndex": 0},
											"configurator": function(cell){
												cell.columnName = "id";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 1},
											"configurator": function(cell){
												cell.columnName = "name";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 2},
											"configurator": function(cell){
												cell.columnName = "tel";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 3},
											"configurator": function(cell){
												cell.columnName = "addr";
											}
										}
									]
								}
							});
							container.addChild(grid_2, {
								"colIndex": 1,
								"rowIndex": 2
							});
						})(group_9);
						container.addChild(group_9, {
							"autoSize": "height",
							"width": "860px",
							"height": "250px"
						});
					})(group_8);
					if(typeof onGrp11Click == "function") {
						group_8.addEventListener("click", onGrp11Click);
					}
					container.addChild(group_8, {
						"autoSize": "height",
						"width": "1210px",
						"height": "300px"
					});
					var group_11 = new cpr.controls.Container("grp4");
					// Layout
					var formLayout_3 = new cpr.controls.layouts.FormLayout();
					formLayout_3.userResizingMode = "standard";
					formLayout_3.topMargin = "0px";
					formLayout_3.rightMargin = "0px";
					formLayout_3.bottomMargin = "0px";
					formLayout_3.leftMargin = "0px";
					formLayout_3.horizontalSpacing = "5px";
					formLayout_3.verticalSpacing = "5px";
					formLayout_3.setColumns(["1fr", "470px"]);
					formLayout_3.setRows(["1fr"]);
					group_11.setLayout(formLayout_3);
					(function(container){
						var group_12 = new cpr.controls.Container("grp7");
						group_12.style.setClasses(["form-box"]);
						// Layout
						var verticalLayout_10 = new cpr.controls.layouts.VerticalLayout();
						group_12.setLayout(verticalLayout_10);
						(function(container){
							var userDefinedControl_2 = new udc.tmp.Ace("ace1");
							container.addChild(userDefinedControl_2, {
								"autoSize": "height",
								"width": "418px",
								"height": "295px"
							});
						})(group_12);
						container.addChild(group_12, {
							"colIndex": 1,
							"rowIndex": 0
						});
						var group_13 = new cpr.controls.Container("grp6");
						// Layout
						var formLayout_4 = new cpr.controls.layouts.FormLayout();
						formLayout_4.horizontalSpacing = "5px";
						formLayout_4.verticalSpacing = "10px";
						formLayout_4.setColumns(["1fr", "10px"]);
						formLayout_4.setColumnAutoSizing(1, true);
						formLayout_4.setRows(["1fr"]);
						group_13.setLayout(formLayout_4);
						(function(container){
							var userDefinedControl_3 = new udc.com.udcSplit("udcsplit1");
							userDefinedControl_3.leftGrpId = "grp6";
							userDefinedControl_3.rightGrpId = "grp7";
							container.addChild(userDefinedControl_3, {
								"colIndex": 1,
								"rowIndex": 0,
								"colSpan": 1,
								"rowSpan": 1,
								"horizontalAlign": "right",
								"width": 9
							});
							var group_14 = new cpr.controls.Container("grp9");
							// Layout
							var formLayout_5 = new cpr.controls.layouts.FormLayout();
							formLayout_5.scrollable = false;
							formLayout_5.topMargin = "0px";
							formLayout_5.rightMargin = "0px";
							formLayout_5.bottomMargin = "0px";
							formLayout_5.leftMargin = "0px";
							formLayout_5.horizontalSpacing = "10px";
							formLayout_5.verticalSpacing = "10px";
							formLayout_5.setColumns(["1fr"]);
							formLayout_5.setRows(["40px", "1fr"]);
							formLayout_5.setRowAutoSizing(0, true);
							group_14.setLayout(formLayout_5);
							(function(container){
								var group_15 = new cpr.controls.Container("grp10");
								group_15.style.setClasses(["form-box"]);
								// Layout
								var formLayout_6 = new cpr.controls.layouts.FormLayout();
								formLayout_6.scrollable = false;
								formLayout_6.topMargin = "5px";
								formLayout_6.rightMargin = "30px";
								formLayout_6.bottomMargin = "5px";
								formLayout_6.leftMargin = "5px";
								formLayout_6.horizontalSpacing = "5px";
								formLayout_6.verticalSpacing = "5px";
								formLayout_6.setColumns(["100px", "1fr"]);
								formLayout_6.setRows(["1fr"]);
								group_15.setLayout(formLayout_6);
								(function(container){
									var output_11 = new cpr.controls.Output();
									output_11.value = "결과값";
									output_11.style.css({
										"background-color" : "#e1edfe",
										"background-image" : "none",
										"padding-right" : "1rem"
									});
									container.addChild(output_11, {
										"colIndex": 0,
										"rowIndex": 0
									});
									var output_12 = new cpr.controls.Output("optRslt");
									output_12.value = "";
									output_12.style.css({
										"background-color" : "white",
										"border-right-style" : "none",
										"border-left-style" : "none",
										"padding-left" : "1rem",
										"border-bottom-style" : "none",
										"border-top-style" : "none",
										"text-align" : "left"
									});
									container.addChild(output_12, {
										"colIndex": 1,
										"rowIndex": 0
									});
								})(group_15);
								container.addChild(group_15, {
									"colIndex": 0,
									"rowIndex": 0
								});
								var group_16 = new cpr.controls.Container("grpFormFunc");
								group_16.style.setClasses(["form-box"]);
								// Layout
								var formLayout_7 = new cpr.controls.layouts.FormLayout();
								formLayout_7.topMargin = "5px";
								formLayout_7.rightMargin = "5px";
								formLayout_7.bottomMargin = "5px";
								formLayout_7.leftMargin = "5px";
								formLayout_7.horizontalSpacing = "5px";
								formLayout_7.verticalSpacing = "5px";
								formLayout_7.setColumns(["24px", "200px", "1fr", "170px", "120px"]);
								formLayout_7.setColumnAutoSizing(1, true);
								formLayout_7.setRows(["25px", "25px", "25px", "25px", "25px", "25px", "25px", "25px", "25px", "25px"]);
								formLayout_7.setRowAutoSizing(1, true);
								formLayout_7.setRowAutoSizing(2, true);
								formLayout_7.setRowAutoSizing(3, true);
								formLayout_7.setRowAutoSizing(4, true);
								formLayout_7.setRowAutoSizing(5, true);
								formLayout_7.setRowAutoSizing(6, true);
								formLayout_7.setRowAutoSizing(7, true);
								formLayout_7.setRowAutoSizing(8, true);
								formLayout_7.setRowAutoSizing(9, true);
								group_16.setLayout(formLayout_7);
								(function(container){
									var output_13 = new cpr.controls.Output();
									output_13.value = "No";
									output_13.style.css({
										"background-color" : "#e1edfe",
										"background-image" : "none",
										"text-align" : "center"
									});
									container.addChild(output_13, {
										"colIndex": 0,
										"rowIndex": 0
									});
									var output_14 = new cpr.controls.Output();
									output_14.value = "함수";
									output_14.style.css({
										"background-color" : "#e1edfe",
										"background-image" : "none",
										"text-align" : "center"
									});
									container.addChild(output_14, {
										"colIndex": 1,
										"rowIndex": 0
									});
									var output_15 = new cpr.controls.Output();
									output_15.value = "설명";
									output_15.style.css({
										"background-color" : "#e1edfe",
										"background-image" : "none",
										"text-align" : "center"
									});
									container.addChild(output_15, {
										"colIndex": 2,
										"rowIndex": 0
									});
									var output_16 = new cpr.controls.Output();
									output_16.value = "입력값";
									output_16.style.css({
										"background-color" : "#e1edfe",
										"background-image" : "none",
										"text-align" : "center"
									});
									container.addChild(output_16, {
										"colIndex": 3,
										"rowIndex": 0
									});
									var output_17 = new cpr.controls.Output();
									output_17.value = "동작";
									output_17.style.css({
										"background-color" : "#e1edfe",
										"background-image" : "none",
										"text-align" : "center"
									});
									container.addChild(output_17, {
										"colIndex": 4,
										"rowIndex": 0
									});
									var output_18 = new cpr.controls.Output();
									output_18.value = "1";
									output_18.style.css({
										"background-color" : "#e1edfe",
										"border-right-style" : "none",
										"border-left-style" : "none",
										"border-bottom-style" : "none",
										"background-image" : "none",
										"border-top-style" : "none",
										"text-align" : "center"
									});
									container.addChild(output_18, {
										"colIndex": 0,
										"rowIndex": 1
									});
									var output_19 = new cpr.controls.Output();
									output_19.value = "2";
									output_19.style.css({
										"background-color" : "#e1edfe",
										"border-right-style" : "none",
										"border-left-style" : "none",
										"border-bottom-style" : "none",
										"background-image" : "none",
										"border-top-style" : "none",
										"text-align" : "center"
									});
									container.addChild(output_19, {
										"colIndex": 0,
										"rowIndex": 2
									});
									var button_3 = new cpr.controls.Button("btnGetValue");
									button_3.value = "getCondValue";
									button_3.style.setClasses(["btn-primary"]);
									if(typeof onButtonClick == "function") {
										button_3.addEventListener("click", onButtonClick);
									}
									if(typeof onBtnGetValueClick == "function") {
										button_3.addEventListener("click", onBtnGetValueClick);
									}
									container.addChild(button_3, {
										"colIndex": 4,
										"rowIndex": 1
									});
									var button_4 = new cpr.controls.Button("btnSetValue");
									button_4.value = "setValue";
									button_4.style.setClasses(["btn-primary"]);
									if(typeof onButtonClick2 == "function") {
										button_4.addEventListener("click", onButtonClick2);
									}
									if(typeof onBtnSetValueClick == "function") {
										button_4.addEventListener("click", onBtnSetValueClick);
									}
									container.addChild(button_4, {
										"colIndex": 4,
										"rowIndex": 2
									});
									var inputBox_1 = new cpr.controls.InputBox("ipb1");
									inputBox_1.readOnly = true;
									inputBox_1.value = "getCondValue";
									container.addChild(inputBox_1, {
										"colIndex": 1,
										"rowIndex": 1
									});
									var inputBox_2 = new cpr.controls.InputBox("ipb2");
									inputBox_2.readOnly = true;
									inputBox_2.value = "데이터 셋에서 조건에 맞는 컬럼의 값을 가져옴";
									container.addChild(inputBox_2, {
										"colIndex": 2,
										"rowIndex": 1
									});
									var inputBox_3 = new cpr.controls.InputBox("ipb3");
									inputBox_3.readOnly = true;
									inputBox_3.value = "입력받은 rowIndex와 columnName에 해당되는 데이터를 변경";
									container.addChild(inputBox_3, {
										"colIndex": 2,
										"rowIndex": 2
									});
									var inputBox_4 = new cpr.controls.InputBox("ipb4");
									inputBox_4.readOnly = true;
									inputBox_4.value = "setValue";
									container.addChild(inputBox_4, {
										"colIndex": 1,
										"rowIndex": 2
									});
									var output_20 = new cpr.controls.Output();
									output_20.value = "3";
									output_20.style.css({
										"background-color" : "#e1edfe",
										"border-right-style" : "none",
										"border-left-style" : "none",
										"border-bottom-style" : "none",
										"background-image" : "none",
										"border-top-style" : "none",
										"text-align" : "center"
									});
									container.addChild(output_20, {
										"colIndex": 0,
										"rowIndex": 3
									});
									var output_21 = new cpr.controls.Output();
									output_21.value = "4";
									output_21.style.css({
										"background-color" : "#e1edfe",
										"border-right-style" : "none",
										"border-left-style" : "none",
										"border-bottom-style" : "none",
										"background-image" : "none",
										"border-top-style" : "none",
										"text-align" : "center"
									});
									container.addChild(output_21, {
										"colIndex": 0,
										"rowIndex": 4
									});
									var output_22 = new cpr.controls.Output();
									output_22.value = "5";
									output_22.style.css({
										"background-color" : "#e1edfe",
										"border-right-style" : "none",
										"border-left-style" : "none",
										"border-bottom-style" : "none",
										"background-image" : "none",
										"border-top-style" : "none",
										"text-align" : "center"
									});
									container.addChild(output_22, {
										"colIndex": 0,
										"rowIndex": 5
									});
									var output_23 = new cpr.controls.Output();
									output_23.value = "6";
									output_23.style.css({
										"background-color" : "#e1edfe",
										"border-right-style" : "none",
										"border-left-style" : "none",
										"border-bottom-style" : "none",
										"background-image" : "none",
										"border-top-style" : "none",
										"text-align" : "center"
									});
									container.addChild(output_23, {
										"colIndex": 0,
										"rowIndex": 6
									});
									var output_24 = new cpr.controls.Output();
									output_24.value = "7";
									output_24.style.css({
										"background-color" : "#e1edfe",
										"border-right-style" : "none",
										"border-left-style" : "none",
										"border-bottom-style" : "none",
										"background-image" : "none",
										"border-top-style" : "none",
										"text-align" : "center"
									});
									container.addChild(output_24, {
										"colIndex": 0,
										"rowIndex": 7
									});
									var output_25 = new cpr.controls.Output();
									output_25.value = "8";
									output_25.style.css({
										"background-color" : "#e1edfe",
										"border-right-style" : "none",
										"border-left-style" : "none",
										"border-bottom-style" : "none",
										"background-image" : "none",
										"border-top-style" : "none",
										"text-align" : "center"
									});
									container.addChild(output_25, {
										"colIndex": 0,
										"rowIndex": 8
									});
									var output_26 = new cpr.controls.Output();
									output_26.value = "9";
									output_26.style.css({
										"background-color" : "#e1edfe",
										"border-right-style" : "none",
										"border-left-style" : "none",
										"border-bottom-style" : "none",
										"background-image" : "none",
										"border-top-style" : "none",
										"text-align" : "center"
									});
									container.addChild(output_26, {
										"colIndex": 0,
										"rowIndex": 9
									});
									var inputBox_5 = new cpr.controls.InputBox("ipb5");
									inputBox_5.readOnly = true;
									inputBox_5.value = "getRowCount";
									container.addChild(inputBox_5, {
										"colIndex": 1,
										"rowIndex": 3
									});
									var inputBox_6 = new cpr.controls.InputBox("ipb6");
									inputBox_6.readOnly = true;
									inputBox_6.value = "insertRow";
									container.addChild(inputBox_6, {
										"colIndex": 1,
										"rowIndex": 4
									});
									var inputBox_7 = new cpr.controls.InputBox("ipb7");
									inputBox_7.readOnly = true;
									inputBox_7.value = "findRow";
									container.addChild(inputBox_7, {
										"colIndex": 1,
										"rowIndex": 5
									});
									var inputBox_8 = new cpr.controls.InputBox("ipb8");
									inputBox_8.readOnly = true;
									inputBox_8.value = "getFindRowValue";
									container.addChild(inputBox_8, {
										"colIndex": 1,
										"rowIndex": 6
									});
									var inputBox_9 = new cpr.controls.InputBox("ipb9");
									inputBox_9.readOnly = true;
									inputBox_9.value = "addColumn";
									container.addChild(inputBox_9, {
										"colIndex": 1,
										"rowIndex": 7
									});
									var inputBox_10 = new cpr.controls.InputBox("ipb10");
									inputBox_10.readOnly = true;
									inputBox_10.value = "copyToDataSet";
									container.addChild(inputBox_10, {
										"colIndex": 1,
										"rowIndex": 8
									});
									var inputBox_11 = new cpr.controls.InputBox("ipb11");
									inputBox_11.readOnly = true;
									inputBox_11.value = "clear";
									container.addChild(inputBox_11, {
										"colIndex": 1,
										"rowIndex": 9
									});
									var inputBox_12 = new cpr.controls.InputBox("ipb12");
									inputBox_12.readOnly = true;
									inputBox_12.value = "데이터 셋의 현재 Row 수 반환";
									container.addChild(inputBox_12, {
										"colIndex": 2,
										"rowIndex": 3
									});
									var inputBox_13 = new cpr.controls.InputBox("ipb13");
									inputBox_13.readOnly = true;
									inputBox_13.value = "rowData를 입력받아 원하는 특정 row index의 앞이나 뒤에 신규 Row 추가";
									container.addChild(inputBox_13, {
										"colIndex": 2,
										"rowIndex": 4
									});
									var inputBox_14 = new cpr.controls.InputBox("ipb14");
									inputBox_14.readOnly = true;
									inputBox_14.value = "지정 범위 Row 중 조건에 맞는 Row 객체 배열 반환";
									container.addChild(inputBox_14, {
										"colIndex": 2,
										"rowIndex": 5
									});
									var inputBox_15 = new cpr.controls.InputBox("ipb15");
									inputBox_15.readOnly = true;
									inputBox_15.value = "지정 범위 Row 중 조건에 맞는 첫 번째 Row 객체에서 지정한 컬럼의 value 반환";
									container.addChild(inputBox_15, {
										"colIndex": 2,
										"rowIndex": 6
									});
									var inputBox_16 = new cpr.controls.InputBox("ipb16");
									inputBox_16.readOnly = true;
									inputBox_16.value = "데이터 셋을 Target 데이터 셋으로 복사 (Target의 기존 데이터는 삭제됨)";
									container.addChild(inputBox_16, {
										"colIndex": 2,
										"rowIndex": 8
									});
									var inputBox_17 = new cpr.controls.InputBox("ipb17");
									inputBox_17.readOnly = true;
									inputBox_17.value = "데이터 셋에 컬럼 추가";
									container.addChild(inputBox_17, {
										"colIndex": 2,
										"rowIndex": 7
									});
									var inputBox_18 = new cpr.controls.InputBox("ipb18");
									inputBox_18.readOnly = true;
									inputBox_18.value = "데이터 셋 정보 clear";
									container.addChild(inputBox_18, {
										"colIndex": 2,
										"rowIndex": 9
									});
									var button_5 = new cpr.controls.Button("btnGetRowCount");
									button_5.value = "확인";
									button_5.style.setClasses(["btn-primary"]);
									if(typeof onBtn3Click == "function") {
										button_5.addEventListener("click", onBtn3Click);
									}
									if(typeof onBtnGetRowCountClick == "function") {
										button_5.addEventListener("click", onBtnGetRowCountClick);
									}
									container.addChild(button_5, {
										"colIndex": 4,
										"rowIndex": 3
									});
									var button_6 = new cpr.controls.Button("btnInsertRow");
									button_6.value = "추가";
									button_6.style.setClasses(["btn-primary"]);
									if(typeof onBtn4Click == "function") {
										button_6.addEventListener("click", onBtn4Click);
									}
									if(typeof onBtnInsertRowClick == "function") {
										button_6.addEventListener("click", onBtnInsertRowClick);
									}
									container.addChild(button_6, {
										"colIndex": 4,
										"rowIndex": 4
									});
									var button_7 = new cpr.controls.Button("btnFindRow");
									button_7.value = "확인";
									button_7.style.setClasses(["btn-primary"]);
									if(typeof onBtn5Click == "function") {
										button_7.addEventListener("click", onBtn5Click);
									}
									if(typeof onBtnFindRowClick == "function") {
										button_7.addEventListener("click", onBtnFindRowClick);
									}
									container.addChild(button_7, {
										"colIndex": 4,
										"rowIndex": 5
									});
									var button_8 = new cpr.controls.Button("btnGetFindRowValue");
									button_8.value = "확인";
									button_8.style.setClasses(["btn-primary"]);
									if(typeof onBtn6Click == "function") {
										button_8.addEventListener("click", onBtn6Click);
									}
									if(typeof onBtnGetFindRowValueClick == "function") {
										button_8.addEventListener("click", onBtnGetFindRowValueClick);
									}
									container.addChild(button_8, {
										"colIndex": 4,
										"rowIndex": 6
									});
									var button_9 = new cpr.controls.Button("btnCopyToDataSet");
									button_9.value = "복사";
									button_9.style.setClasses(["btn-primary"]);
									if(typeof onBtn7Click == "function") {
										button_9.addEventListener("click", onBtn7Click);
									}
									if(typeof onBtnCopyToDataSetClick == "function") {
										button_9.addEventListener("click", onBtnCopyToDataSetClick);
									}
									container.addChild(button_9, {
										"colIndex": 4,
										"rowIndex": 8
									});
									var button_10 = new cpr.controls.Button("btnAddColumn");
									button_10.value = "추가";
									button_10.style.setClasses(["btn-primary"]);
									if(typeof onBtn8Click == "function") {
										button_10.addEventListener("click", onBtn8Click);
									}
									if(typeof onBtnAddColumnClick == "function") {
										button_10.addEventListener("click", onBtnAddColumnClick);
									}
									container.addChild(button_10, {
										"colIndex": 4,
										"rowIndex": 7
									});
									var button_11 = new cpr.controls.Button("btnClear");
									button_11.value = "clear";
									button_11.style.setClasses(["btn-primary"]);
									if(typeof onBtn9Click == "function") {
										button_11.addEventListener("click", onBtn9Click);
									}
									if(typeof onBtnClearClick == "function") {
										button_11.addEventListener("click", onBtnClearClick);
									}
									container.addChild(button_11, {
										"colIndex": 4,
										"rowIndex": 9
									});
									var group_17 = new cpr.controls.Container("grp11");
									// Layout
									var formLayout_8 = new cpr.controls.layouts.FormLayout();
									formLayout_8.setColumns(["90px", "1fr"]);
									formLayout_8.setRows(["1fr"]);
									group_17.setLayout(formLayout_8);
									(function(container){
										var comboBox_1 = new cpr.controls.ComboBox("cmbGetValueColumn");
										comboBox_1.tooltip = "Get컬럼";
										comboBox_1.placeholder = "Get컬럼";
										(function(comboBox_1){
											comboBox_1.addItem(new cpr.controls.Item("ID", "id"));
											comboBox_1.addItem(new cpr.controls.Item("성명", "name"));
											comboBox_1.addItem(new cpr.controls.Item("전화번호", "tel"));
											comboBox_1.addItem(new cpr.controls.Item("주소", "addr"));
										})(comboBox_1);
										container.addChild(comboBox_1, {
											"colIndex": 0,
											"rowIndex": 0
										});
										var inputBox_19 = new cpr.controls.InputBox("ipbGetValueCondition");
										inputBox_19.tooltip = "name^= '김'";
										inputBox_19.value = "name^= '김'";
										inputBox_19.placeholder = "조건식 ex: name^= '김'";
										container.addChild(inputBox_19, {
											"colIndex": 1,
											"rowIndex": 0
										});
									})(group_17);
									container.addChild(group_17, {
										"colIndex": 3,
										"rowIndex": 1
									});
									var group_18 = new cpr.controls.Container("grp12");
									// Layout
									var formLayout_9 = new cpr.controls.layouts.FormLayout();
									formLayout_9.setColumns(["90px", "1fr"]);
									formLayout_9.setRows(["1fr"]);
									group_18.setLayout(formLayout_9);
									(function(container){
										var comboBox_2 = new cpr.controls.ComboBox("cmbSetValueColumn");
										comboBox_2.placeholder = "Set컬럼";
										(function(comboBox_2){
											comboBox_2.addItem(new cpr.controls.Item("ID", "id"));
											comboBox_2.addItem(new cpr.controls.Item("성명", "name"));
											comboBox_2.addItem(new cpr.controls.Item("전화번호", "tel"));
											comboBox_2.addItem(new cpr.controls.Item("주소", "addr"));
										})(comboBox_2);
										container.addChild(comboBox_2, {
											"colIndex": 0,
											"rowIndex": 0
										});
										var inputBox_20 = new cpr.controls.InputBox("ipbSetValue");
										inputBox_20.placeholder = "변경값";
										container.addChild(inputBox_20, {
											"colIndex": 1,
											"rowIndex": 0
										});
									})(group_18);
									container.addChild(group_18, {
										"colIndex": 3,
										"rowIndex": 2
									});
									var inputBox_21 = new cpr.controls.InputBox("ipbFindRow");
									inputBox_21.value = "name == '임장군'";
									container.addChild(inputBox_21, {
										"colIndex": 3,
										"rowIndex": 5
									});
									var group_19 = new cpr.controls.Container("grp13");
									// Layout
									var formLayout_10 = new cpr.controls.layouts.FormLayout();
									formLayout_10.setColumns(["100px", "1fr"]);
									formLayout_10.setRows(["1fr"]);
									group_19.setLayout(formLayout_10);
									(function(container){
										var comboBox_3 = new cpr.controls.ComboBox("cmbGetFindRowValue");
										comboBox_3.placeholder = "Get컬럼";
										(function(comboBox_3){
											comboBox_3.addItem(new cpr.controls.Item("ID", "id"));
											comboBox_3.addItem(new cpr.controls.Item("성명", "name"));
											comboBox_3.addItem(new cpr.controls.Item("전화번호", "tel"));
											comboBox_3.addItem(new cpr.controls.Item("주소", "addr"));
										})(comboBox_3);
										container.addChild(comboBox_3, {
											"colIndex": 0,
											"rowIndex": 0
										});
										var inputBox_22 = new cpr.controls.InputBox("ipbGetFindRowValue");
										inputBox_22.value = "name == '임장군'";
										container.addChild(inputBox_22, {
											"colIndex": 1,
											"rowIndex": 0
										});
									})(group_19);
									container.addChild(group_19, {
										"colIndex": 3,
										"rowIndex": 6
									});
									var inputBox_23 = new cpr.controls.InputBox("ipbAddColumn");
									inputBox_23.value = "DataSetAddColumnId";
									container.addChild(inputBox_23, {
										"colIndex": 3,
										"rowIndex": 7
									});
								})(group_16);
								container.addChild(group_16, {
									"colIndex": 0,
									"rowIndex": 1
								});
							})(group_14);
							container.addChild(group_14, {
								"colIndex": 0,
								"rowIndex": 0,
								"colSpan": 1,
								"rowSpan": 1
							});
						})(group_13);
						container.addChild(group_13, {
							"colIndex": 0,
							"rowIndex": 0,
							"colSpan": 1,
							"rowSpan": 1
						});
					})(group_11);
					container.addChild(group_11, {
						"autoSize": "none",
						"width": "1210px",
						"height": "295px"
					});
				})(group_7);
				container.addChild(group_7, {
					"autoSize": "height",
					"width": "1270px",
					"height": "1000px"
				});
			})(group_2);
			container.addChild(group_2, {
				"autoSize": "height",
				"width": "400px",
				"height": "1800px"
			});
		}
	});
	app.title = "데이터셋 기능";
	cpr.core.Platform.INSTANCE.register(app);
})();
