/*
 * App URI: app/exam/guide/file/prev/FileSample02prev
 * Source Location: app/exam/guide/file/prev/FileSample02prev.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/exam/guide/file/prev/FileSample02prev", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * Template101.js
			 * Created at 2020. 3. 7. 오전 9:52:37.
			 *
			 * @author 1073727
			 ************************************************/
			
			//공통모듈 선언
			var util = createCommonUtil();
			
			/*
			 * Body에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad( /* cpr.events.CEvent */ e) {
				//*************화면 load 스크립트
				
				//화면 하단 플로팅 영역 set
			//	util.Group.setFloatGrp(app, app.lookup("grpFloat"));
				
				//화면이 로드 된후 공통코드 등을 바인딩 하기 위해 전체 그룹을 redraw 해준다.
				util.Control.redraw(app, ["grpContent"]);
				
				//현재 날짜를 화면에 셋팅해준다.
				var toDate = DateUtil.format(new Date(), "YYYYMMDD");
				app.lookup("udccomdatepicker1").setAppProperty("value", toDate + app.lookup("udccomdatepicker1").getAppProperty("delimiter") + DateUtil.addDate(toDate, 10));
				
				doList();
				
			};
			
			/*
			 * "조회" 버튼(btnSearch)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnSearchClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnSearch = e.control;
				
				//조회조건 필수값 유효성 체크
				if (!util.validate(app, ["grpSearch"])) return false;
				
				//조회
				doList();
			};
			
			//조회
			function doList() {
				//*************조회 사전체크(조회조건필수값체크)는 화면 스크립트로 직접 확인
			//	util.Submit.send(app, "subList", function(pbSuccess) {
			//		if (pbSuccess) {
			//			//조회 후 그리드 redraw
			//			util.Control.redraw(app, ["grd1"]);
			//			app.lookup("grd1").setCellValue(1, "FILE_MNG_SEQ", "2020092113222300032601")
			//			app.lookup("grd1").setCellValue(0, "FILE_MNG_SEQ", "2020092114542900034601")
			//			
			//		};
			//	});
			};
			
			/*
			 * "저장" 버튼(btnSave)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnSaveClick( /* cpr.events.CMouseEvent */ e) {
				//*******저장 전 체크 로직	
				//그리드 변경여부 체크
				if (!util.Grid.isModified(app, ["grd1"], "MSG")) return false;
				
				//그리드 필수값 체크
				if (!util.validate(app, ["grd1"])) return false;
				
				doSave();
				
			}
			
			//저장
			function doSave() {
				//첨부파일 Attach
				
				//서브미션 send
				util.Submit.send(app, "subSave", function(pbSuccess) {
					if (pbSuccess) {
						//저장 후 재 조회 한다.
						//			doList();
						app.lookup("grd1").setCellValue(util.Grid.getIndex(app, "grd1"), "FILE_MNG_SEQ", app.lookup("dmFileInfo").getValue("FILE_MNG_SEQ"));
					}
				});
			}
			
			/*
			 * "삭제" 버튼(btnDelete)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnDeleteClick( /* cpr.events.CMouseEvent */ e) {
				
				//현재 선택 되어있는 행 삭제플래그
				util.Grid.deleteRow(app, "grd1");
				
				doSave();
				
			}
			
			/*
			 * "초기화" 버튼(btnFormClear)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnFormClearClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnFormClear = e.control;
				
				util.Group.clear(app, "grpForm1");
			}
			
			
			/*
			 * 그리드에서 selection-change 이벤트 발생 시 호출.
			 * detail의 cell 클릭하여 설정된 selectionunit에 해당되는 단위가 선택될 때 발생하는 이벤트.
			 */
			function onGrd1SelectionChange( /* cpr.events.CSelectionEvent */ e) {
				/** 
				 * @type cpr.controls.Grid
				 */
				var grd1 = e.control;
				var fileMngSeq = util.Grid.getCellValue(app, "grd1", "FILE_MNG_SEQ");
			}
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsCombo");
			dataSet_1.parseData({
				"columns": [
					{"name": "L"},
					{"name": "V"}
				],
				"rows": [
					{"L": "남", "V": "M"},
					{"L": "여", "V": "F"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsSubList");
			dataSet_2.parseData({
				"columns": [
					{"name": "GRCD"},
					{"name": "CD"},
					{"name": "CNM"},
					{"name": "CD_DESC"},
					{"name": "SORT_ODR"},
					{"name": "LOAD_YN"},
					{"name": "OUT_YN"},
					{"name": "USE_YN"},
					{"name": "FRST_REG_DT"},
					{"name": "LAST_UPT_DT"},
					{"name": "LAST_UPTR_ID"},
					{"name": "ATTACH_FILE_ID"},
					{"name": "ATTACH_FILE_NAME"},
					{"name": "FILE_MNG_SEQ"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsCode33");
			dataSet_3.parseData({
				"columns": [
					{"name": "GRCD"},
					{"name": "CD"},
					{"name": "CNM"},
					{"name": "CD_DESC"},
					{"name": "SORT_ODR"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsCode03");
			dataSet_4.parseData({
				"columns": [
					{"name": "cd"},
					{
						"name": "cd_nm",
						"displayOnly": false
					}
				],
				"rows": [
					{"cd": "Y", "cd_nm": "Y"},
					{"cd": "N", "cd_nm": "N"}
				]
			});
			app.register(dataSet_4);
			var dataMap_1 = new cpr.data.DataMap("dmParam2");
			dataMap_1.parseData({
				"columns" : [
					{"name": "st_dt"},
					{"name": "end_dt"},
					{"name": "ssn"},
					{"name": "goodsID"},
					{"name": "join_div_cd"}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmFileDown");
			dataMap_2.parseData({
				"columns" : [{"name": "ATTACH_FILE_ID"}]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmFileInfo");
			dataMap_3.parseData({
				"columns" : [
					{"name": "FILE_MNG_SEQ"},
					{"name": "FILE_SEQ"}
				]
			});
			app.register(dataMap_3);
			var submission_1 = new cpr.protocols.Submission("subList");
			submission_1.action = "com/selectCommonMng.do";
			submission_1.mediaType = "application/json";
			submission_1.addRequestData(dataMap_1);
			submission_1.addResponseData(dataSet_2, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subSave");
			submission_2.action = "UI/fileUpLoadTest.do";
			submission_2.mediaType = "multipart/form-data;encoding=json";
			submission_2.addRequestData(dataSet_2, cpr.protocols.PayloadType.modified);
			submission_2.addResponseData(dataMap_3, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subFileDown");
			submission_3.responseType = "blob";
			submission_3.addRequestData(dataMap_2);
			app.register(submission_3);
			
			app.supportMedia("all and (min-width: 1320px)", "eXFrame");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1319px)", "default");
			app.supportMedia("all and (min-width: 800px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 799px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grp4");
			group_1.style.setClasses(["header-box"]);
			// Layout
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			group_1.setLayout(verticalLayout_2);
			(function(container){
				var userDefinedControl_1 = new udc.com.appHeader("appheader");
				userDefinedControl_1.initializeYn = "N";
				userDefinedControl_1.groupBoxIds = "grpContent";
				container.addChild(userDefinedControl_1, {
					"autoSize": "none",
					"width": "998px",
					"height": "30px"
				});
				var group_2 = new cpr.controls.Container("grpSearch");
				group_2.style.setClasses(["search-box"]);
				// Layout
				var formLayout_1 = new cpr.controls.layouts.FormLayout();
				formLayout_1.topMargin = "5px";
				formLayout_1.rightMargin = "5px";
				formLayout_1.bottomMargin = "5px";
				formLayout_1.leftMargin = "5px";
				formLayout_1.setColumns(["400px", "1fr"]);
				formLayout_1.setRows(["25px"]);
				formLayout_1.setRowAutoSizing(0, true);
				group_2.setLayout(formLayout_1);
				(function(container){
					var group_3 = new cpr.controls.Container("grp3");
					// Layout
					var formLayout_2 = new cpr.controls.layouts.FormLayout();
					formLayout_2.rightMargin = "0px";
					formLayout_2.leftMargin = "0px";
					formLayout_2.horizontalSpacing = "3px";
					formLayout_2.verticalSpacing = "0px";
					formLayout_2.setColumns(["1fr", "60px"]);
					formLayout_2.setRows(["1fr"]);
					group_3.setLayout(formLayout_2);
					(function(container){
						var button_1 = new cpr.controls.Button("btnSearch");
						button_1.value = "조회";
						button_1.style.setClasses(["btn-search"]);
						if(typeof onBtnSearchClick == "function") {
							button_1.addEventListener("click", onBtnSearchClick);
						}
						container.addChild(button_1, {
							"colIndex": 1,
							"rowIndex": 0,
							"verticalAlign": "fill"
						});
					})(group_3);
					container.addChild(group_3, {
						"colIndex": 1,
						"rowIndex": 0
					});
					var group_4 = new cpr.controls.Container("grp2");
					// Layout
					var formLayout_3 = new cpr.controls.layouts.FormLayout();
					formLayout_3.setColumns(["100px", "1fr"]);
					formLayout_3.setRows(["1fr"]);
					group_4.setLayout(formLayout_3);
					(function(container){
						var output_1 = new cpr.controls.Output("otpJoinDt");
						output_1.value = "가입일자";
						output_1.style.setClasses(["label"]);
						container.addChild(output_1, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var userDefinedControl_2 = new udc.com.udcComDatepicker("udccomdatepicker1");
						container.addChild(userDefinedControl_2, {
							"colIndex": 1,
							"rowIndex": 0,
							"verticalAlign": "center"
						});
					})(group_4);
					container.addChild(group_4, {
						"colIndex": 0,
						"rowIndex": 0
					});
				})(group_2);
				container.addChild(group_2, {
					"autoSize": "none",
					"width": "998px",
					"height": "37px"
				});
			})(group_1);
			container.addChild(group_1, {
				"autoSize": "height",
				"width": "998px",
				"height": "67px"
			});
			
			var group_5 = new cpr.controls.Container("grpContent");
			group_5.userAttr({"fillLayout": "Y"});
			// Layout
			var formLayout_4 = new cpr.controls.layouts.FormLayout();
			formLayout_4.scrollable = false;
			formLayout_4.horizontalSpacing = "5px";
			formLayout_4.verticalSpacing = "0px";
			formLayout_4.setColumns(["1fr", "1fr"]);
			formLayout_4.setRows(["1fr", "200px", "25px"]);
			formLayout_4.setRowAutoSizing(2, true);
			group_5.setLayout(formLayout_4);
			(function(container){
				var group_6 = new cpr.controls.Container("grpData");
				// Layout
				var formLayout_5 = new cpr.controls.layouts.FormLayout();
				formLayout_5.setColumns(["1fr"]);
				formLayout_5.setRows(["25px", "1fr"]);
				group_6.setLayout(formLayout_5);
				(function(container){
					var grid_1 = linker.grid_1 = new cpr.controls.Grid("grd1");
					grid_1.fieldLabel = "그리드 제목";
					grid_1.init({
						"dataSet": app.lookup("dsSubList"),
						"columns": [
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"}
						],
						"header": {
							"rows": [{"height": "27px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.targetColumnName = "GRCD";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "GRCD";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.targetColumnName = "CD";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "CD";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.targetColumnName = "CNM";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "CNM";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3},
									"configurator": function(cell){
										cell.targetColumnName = "CD_DESC";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "CD_DESC";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 4},
									"configurator": function(cell){
										cell.targetColumnName = "SORT_ODR";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "SORT_ODR";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 5},
									"configurator": function(cell){
										cell.targetColumnName = "LOAD_YN";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "LOAD_YN";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 6},
									"configurator": function(cell){
										cell.targetColumnName = "OUT_YN";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "OUT_YN";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 7},
									"configurator": function(cell){
										cell.targetColumnName = "USE_YN";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "USE_YN";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 8},
									"configurator": function(cell){
										cell.targetColumnName = "FRST_REG_DT";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "FRST_REG_DT";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 9},
									"configurator": function(cell){
										cell.targetColumnName = "LAST_UPT_DT";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "LAST_UPT_DT";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 10},
									"configurator": function(cell){
										cell.targetColumnName = "LAST_UPTR_ID";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "LAST_UPTR_ID";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 11},
									"configurator": function(cell){
										cell.targetColumnName = "ATTACH_FILE_ID";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "ATTACH_FILE_ID";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 12},
									"configurator": function(cell){
										cell.targetColumnName = "ATTACH_FILE_NAME";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "ATTACH_FILE_NAME";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 13},
									"configurator": function(cell){
										cell.targetColumnName = "FILE_MNG_SEQ";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "FILE_MNG_SEQ";
									}
								}
							]
						},
						"detail": {
							"rows": [{"height": "24px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.columnName = "GRCD";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.columnName = "CD";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.columnName = "CNM";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3},
									"configurator": function(cell){
										cell.columnName = "CD_DESC";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 4},
									"configurator": function(cell){
										cell.columnName = "SORT_ODR";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 5},
									"configurator": function(cell){
										cell.columnName = "LOAD_YN";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 6},
									"configurator": function(cell){
										cell.columnName = "OUT_YN";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 7},
									"configurator": function(cell){
										cell.columnName = "USE_YN";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 8},
									"configurator": function(cell){
										cell.columnName = "FRST_REG_DT";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 9},
									"configurator": function(cell){
										cell.columnName = "LAST_UPT_DT";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 10},
									"configurator": function(cell){
										cell.columnName = "LAST_UPTR_ID";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 11},
									"configurator": function(cell){
										cell.columnName = "ATTACH_FILE_ID";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 12},
									"configurator": function(cell){
										cell.columnName = "ATTACH_FILE_NAME";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 13},
									"configurator": function(cell){
										cell.columnName = "FILE_MNG_SEQ";
									}
								}
							]
						}
					});
					if(typeof onGrd1SelectionChange == "function") {
						grid_1.addEventListener("selection-change", onGrd1SelectionChange);
					}
					container.addChild(grid_1, {
						"colIndex": 0,
						"rowIndex": 1,
						"verticalAlign": "fill"
					});
					var userDefinedControl_3 = new udc.com.comFormTitle("comformtitle3");
					userDefinedControl_3.title = "멀티데이터 서브미션";
					container.addChild(userDefinedControl_3, {
						"colIndex": 0,
						"rowIndex": 0
					});
				})(group_6);
				container.addChild(group_6, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var group_7 = new cpr.controls.Container("grp5");
				// Layout
				var formLayout_6 = new cpr.controls.layouts.FormLayout();
				formLayout_6.setColumns(["1fr"]);
				formLayout_6.setRows(["30px", "1fr"]);
				group_7.setLayout(formLayout_6);
				(function(container){
					var group_8 = new cpr.controls.Container("grp6");
					// Layout
					var formLayout_7 = new cpr.controls.layouts.FormLayout();
					formLayout_7.setColumns(["1fr"]);
					formLayout_7.setRows(["25px", "1fr"]);
					group_8.setLayout(formLayout_7);
					(function(container){
						var group_9 = new cpr.controls.Container("grpFormCont");
						group_9.style.setClasses(["form-box"]);
						// Layout
						var formLayout_8 = new cpr.controls.layouts.FormLayout();
						formLayout_8.topMargin = "5px";
						formLayout_8.rightMargin = "5px";
						formLayout_8.bottomMargin = "5px";
						formLayout_8.leftMargin = "5px";
						formLayout_8.setColumns(["20px", "1fr", "20px", "1fr"]);
						formLayout_8.setRows(["1fr"]);
						group_9.setLayout(formLayout_8);
						(function(container){
							var output_2 = new cpr.controls.Output("otp24");
							output_2.value = "";
							output_2.style.css({
								"background-color" : "white",
								"text-align" : "left"
							});
							container.addChild(output_2, {
								"colIndex": 1,
								"rowIndex": 0,
								"colSpan": 1,
								"rowSpan": 1
							});
							var output_3 = new cpr.controls.Output("otp25");
							output_3.value = "시\r\n나\r\n리\r\n오";
							output_3.style.css({
								"text-align" : "center"
							});
							container.addChild(output_3, {
								"colIndex": 0,
								"rowIndex": 0,
								"colSpan": 1,
								"rowSpan": 1
							});
							var output_4 = new cpr.controls.Output("otp26");
							output_4.value = "추\r\n가\r\n설\r\n명";
							output_4.style.css({
								"text-align" : "center"
							});
							container.addChild(output_4, {
								"colIndex": 2,
								"rowIndex": 0,
								"colSpan": 1,
								"rowSpan": 1
							});
							var output_5 = new cpr.controls.Output("otp23");
							output_5.value = "";
							output_5.style.css({
								"background-color" : "white",
								"text-align" : "left"
							});
							container.addChild(output_5, {
								"colIndex": 3,
								"rowIndex": 0,
								"colSpan": 1,
								"rowSpan": 1
							});
						})(group_9);
						container.addChild(group_9, {
							"colIndex": 0,
							"rowIndex": 1
						});
						var userDefinedControl_4 = new udc.com.comFormTitle("comformtitle4");
						userDefinedControl_4.title = "시나리오";
						container.addChild(userDefinedControl_4, {
							"colIndex": 0,
							"rowIndex": 0
						});
					})(group_8);
					container.addChild(group_8, {
						"colIndex": 0,
						"rowIndex": 0,
						"colSpan": 1,
						"rowSpan": 2
					});
				})(group_7);
				container.addChild(group_7, {
					"colIndex": 0,
					"rowIndex": 1,
					"colSpan": 2,
					"rowSpan": 1
				});
				var group_10 = new cpr.controls.Container("grpFloat");
				// Layout
				var formLayout_9 = new cpr.controls.layouts.FormLayout();
				formLayout_9.topMargin = "5px";
				formLayout_9.rightMargin = "5px";
				formLayout_9.bottomMargin = "5px";
				formLayout_9.leftMargin = "5px";
				formLayout_9.setColumns(["1fr", "60px", "60px"]);
				formLayout_9.setRows(["25px"]);
				group_10.setLayout(formLayout_9);
				(function(container){
					var button_2 = new cpr.controls.Button("btnDelete");
					button_2.value = "삭제";
					button_2.style.setClasses(["btn-delete"]);
					if(typeof onBtnDeleteClick == "function") {
						button_2.addEventListener("click", onBtnDeleteClick);
					}
					container.addChild(button_2, {
						"colIndex": 2,
						"rowIndex": 0
					});
					var button_3 = new cpr.controls.Button("btnSave");
					button_3.value = "저장";
					button_3.style.setClasses(["btn-save"]);
					if(typeof onBtnSaveClick == "function") {
						button_3.addEventListener("click", onBtnSaveClick);
					}
					container.addChild(button_3, {
						"colIndex": 1,
						"rowIndex": 0
					});
				})(group_10);
				container.addChild(group_10, {
					"colIndex": 0,
					"rowIndex": 2,
					"colSpan": 2,
					"rowSpan": 1
				});
				var group_11 = new cpr.controls.Container("grp8");
				// Layout
				var formLayout_10 = new cpr.controls.layouts.FormLayout();
				formLayout_10.setColumns(["1fr"]);
				formLayout_10.setRows(["25px", "1fr"]);
				group_11.setLayout(formLayout_10);
				(function(container){
					var group_12 = new cpr.controls.Container("grp9");
					group_12.style.setClasses(["grpTitle"]);
					// Layout
					var formLayout_11 = new cpr.controls.layouts.FormLayout();
					formLayout_11.setColumns(["1fr", "60px"]);
					formLayout_11.setRows(["1fr"]);
					group_12.setLayout(formLayout_11);
					(function(container){
						var userDefinedControl_5 = new udc.com.comFormTitle("comformtitle2");
						userDefinedControl_5.title = "상세 입력폼 ";
						container.addChild(userDefinedControl_5, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var button_4 = new cpr.controls.Button("btnFormClear");
						button_4.value = "초기화";
						button_4.style.setClasses(["btnFormClear"]);
						if(typeof onBtnFormClearClick == "function") {
							button_4.addEventListener("click", onBtnFormClearClick);
						}
						container.addChild(button_4, {
							"colIndex": 1,
							"rowIndex": 0
						});
					})(group_12);
					container.addChild(group_12, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var group_13 = linker.group_13 = new cpr.controls.Container("grpForm1");
					group_13.style.setClasses(["form-box"]);
					// Layout
					var formLayout_12 = new cpr.controls.layouts.FormLayout();
					formLayout_12.scrollable = true;
					formLayout_12.topMargin = "5px";
					formLayout_12.rightMargin = "5px";
					formLayout_12.bottomMargin = "5px";
					formLayout_12.leftMargin = "5px";
					formLayout_12.setColumns(["100px", "1fr", "100px", "1fr"]);
					formLayout_12.setRows(["25px", "25px", "25px", "25px", "25px", "25px"]);
					group_13.setLayout(formLayout_12);
					(function(container){
						var output_6 = new cpr.controls.Output("otp9");
						output_6.value = "코드";
						container.addChild(output_6, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var output_7 = new cpr.controls.Output("otp10");
						output_7.value = "로드여부";
						container.addChild(output_7, {
							"colIndex": 0,
							"rowIndex": 1
						});
						var output_8 = new cpr.controls.Output("otp11");
						output_8.value = "사용여부";
						container.addChild(output_8, {
							"colIndex": 0,
							"rowIndex": 2
						});
						var output_9 = new cpr.controls.Output("otp12");
						output_9.value = "코드명";
						container.addChild(output_9, {
							"colIndex": 2,
							"rowIndex": 0
						});
						var output_10 = new cpr.controls.Output("otp13");
						output_10.value = "출력여부";
						container.addChild(output_10, {
							"colIndex": 2,
							"rowIndex": 1
						});
						var output_11 = new cpr.controls.Output("otp14");
						output_11.value = "정렬순서";
						container.addChild(output_11, {
							"colIndex": 2,
							"rowIndex": 2
						});
						var output_12 = new cpr.controls.Output("otp16");
						output_12.value = "코드설명";
						container.addChild(output_12, {
							"colIndex": 0,
							"rowIndex": 3
						});
						var inputBox_1 = new cpr.controls.InputBox("ipbCnm");
						inputBox_1.bind("value").toDataColumn("CNM");
						container.addChild(inputBox_1, {
							"colIndex": 3,
							"rowIndex": 0
						});
						var inputBox_2 = new cpr.controls.InputBox("ipbCd");
						inputBox_2.readOnly = true;
						inputBox_2.bind("value").toDataColumn("CD");
						container.addChild(inputBox_2, {
							"colIndex": 1,
							"rowIndex": 0
						});
						var inputBox_3 = new cpr.controls.InputBox("ipbCdDesc");
						inputBox_3.bind("value").toDataColumn("CD_DESC");
						container.addChild(inputBox_3, {
							"colIndex": 1,
							"rowIndex": 3,
							"colSpan": 3,
							"rowSpan": 1
						});
						var inputBox_4 = new cpr.controls.InputBox("ipbStOd");
						inputBox_4.bind("value").toDataColumn("SORT_ODR");
						container.addChild(inputBox_4, {
							"colIndex": 3,
							"rowIndex": 2
						});
						var comboBox_1 = new cpr.controls.ComboBox("cmbLdYn");
						comboBox_1.bind("value").toDataColumn("LOAD_YN");
						(function(comboBox_1){
							comboBox_1.addItem(new cpr.controls.Item("전체", ""));
							comboBox_1.setItemSet(app.lookup("dsCode03"), {
								"label": "cd_nm",
								"value": "cd"
							});
						})(comboBox_1);
						container.addChild(comboBox_1, {
							"colIndex": 1,
							"rowIndex": 1
						});
						var comboBox_2 = new cpr.controls.ComboBox("cmbUsYn");
						comboBox_2.bind("value").toDataColumn("USE_YN");
						(function(comboBox_2){
							comboBox_2.addItem(new cpr.controls.Item("전체", ""));
							comboBox_2.setItemSet(app.lookup("dsCode03"), {
								"label": "cd_nm",
								"value": "cd"
							});
						})(comboBox_2);
						container.addChild(comboBox_2, {
							"colIndex": 1,
							"rowIndex": 2
						});
						var comboBox_3 = new cpr.controls.ComboBox("cmbOtYn");
						comboBox_3.bind("value").toDataColumn("OUT_YN");
						(function(comboBox_3){
							comboBox_3.addItem(new cpr.controls.Item("전체", ""));
							comboBox_3.setItemSet(app.lookup("dsCode03"), {
								"label": "cd_nm",
								"value": "cd"
							});
						})(comboBox_3);
						container.addChild(comboBox_3, {
							"colIndex": 3,
							"rowIndex": 1
						});
						var output_13 = new cpr.controls.Output("otp1");
						output_13.unselectable = false;
						output_13.style.css({
							"background-color" : "white",
							"text-align" : "left"
						});
						output_13.bind("value").toDataColumn("FILE_MNG_SEQ");
						container.addChild(output_13, {
							"colIndex": 1,
							"rowIndex": 5,
							"colSpan": 2,
							"rowSpan": 1
						});
						var output_14 = new cpr.controls.Output("otp3");
						output_14.value = "파일관리번호";
						container.addChild(output_14, {
							"colIndex": 0,
							"rowIndex": 5
						});
						var output_15 = new cpr.controls.Output("otp4");
						output_15.value = "첨부파일";
						container.addChild(output_15, {
							"colIndex": 0,
							"rowIndex": 4
						});
						var userDefinedControl_6 = new udc.cmn.udcCmnPFileUpload("udccmnpfileupload1");
						container.addChild(userDefinedControl_6, {
							"colIndex": 1,
							"rowIndex": 4,
							"colSpan": 1,
							"rowSpan": 1
						});
					})(group_13);
					container.addChild(group_13, {
						"colIndex": 0,
						"rowIndex": 1
					});
				})(group_11);
				container.addChild(group_11, {
					"colIndex": 1,
					"rowIndex": 0
				});
			})(group_5);
			container.addChild(group_5, {
				"width": "972px",
				"height": "607px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			if(typeof onBodyInit == "function"){
				app.addEventListener("init", onBodyInit);
			}
			// Linking
			linker.group_13.setBindContext(new cpr.bind.GridSelectionContext(linker.grid_1));
		}
	});
	app.title = "단일 파일업로드";
	cpr.core.Platform.INSTANCE.register(app);
})();
