/*
 * App URI: app/exam/guide/form/FormSample01
 * Source Location: app/exam/guide/form/FormSample01.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/exam/guide/form/FormSample01", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * FormSample01.js
			 * Created at 2022. 3. 8. 오후 7:30:25.
			 *
			 * @author jiyeon
			 ************************************************/
			
			var util = createCommonUtil();
			var column, inputVal;
			
			/*
			 * 루트 컨테이너에서 init 이벤트 발생 시 호출.
			 * 앱이 최초 구성될 때 발생하는 이벤트 입니다.
			 */
			function onBodyInit(e){
				//그리드 초기화
				util.Grid.init(app, ["grd1"]);
				
				//폼 초기화
				util.FreeForm.init(app, ["grpFormFunc", "grpFreeForm"]);
			}
			
			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(e){
				util.Grid.selectRow(app, "grdList", 0);
			}
			
			/*
			 * 콤보 박스에서 selection-change 이벤트 발생 시 호출.
			 * ComboBox Item을 선택하여 선택된 값이 저장된 후에 발생하는 이벤트.
			 */
			function onCmbInputValSelectionChange(e){
				var cmbInputVal = e.control;
				
				column = cmbInputVal.value;
			}
			
			/*
			 * 인풋 박스에서 value-change 이벤트 발생 시 호출.
			 * 변경된 value가 저장된 후에 발생하는 이벤트.
			 */
			function onIpbInputValValueChange(e){
				var ipbInputVal = e.control;
				
				inputVal = ipbInputVal.value;
			}
			
			
			
			
			
			/*
			 * "init" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click(e){
				var btn1 = e.control;
				
				//스크립트 출력
				printSource(onBodyInit);
				
				//결과값 표시
				printResult("");
			}
			
			
			/*
			 * "insertRow" 버튼(btn2)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn2Click(e){
				var btn2 = e.control;
				
				//함수 실행
				var voRow = f_insertRow();
				
				//스크립트 출력
				printSource(f_insertRow);
				
				//결과 표시
				var result = "추가된 행의 인덱스 : [ " + voRow.getIndex() + " ]"
				printResult(result);
			}
			
			function f_insertRow() {
				//신규행 추가
				return util.FreeForm.insertRow(app, "grpFreeForm", column);
			}
			
			
			/*
			 * "deleteRow" 버튼(btn3)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn3Click(e){
				var btn3 = e.control;
				
				//함수 실행
				f_deleteRow();
				
				//스크립트 출력
				printSource(f_deleteRow);
				
				//결과 표시
				printResult("");
			}
			
			function f_deleteRow() {
				//행삭제 
				//세번째 파라미터    
				//true : 삭제하시겠습니까? 메세지 확인 후 삭제처리
				//false: 메세지 없이 삭제             
				//미입력시 false 
				util.FreeForm.deleteRow(app, "grpFreeForm", false);
			}
			
			
			/*
			 * "getValue" 버튼(btn4)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn4Click(e){
				var btn4 = e.control;
				
				//유효성 체크
				if (!util.validate(app, "cmbInputVal")) return false;
				
				if (util.Grid.getIndex(app, "grdList") == -1) util.Msg.alert( "INF-M008");
				
				//함수 실행
				f_getValue();
				
				//스크립트 출력
				printSource(f_getValue);
				
				//결과 표시
				printResult(util.FreeForm.getValue(app, "grpFreeForm", column));
			}
			
			function f_getValue() {
				//컬럼의 값을 다져온다.
				util.FreeForm.getValue(app, "grpFreeForm", column);
			}
			
			
			/*
			 * "setValue" 버튼(btn5)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn5Click(e){
				var btn5 = e.control;
				
				//유효성 검사
				if (!util.validate(app, ["cmbInputVal", "ipbInputVal"])) return false;
				
				if (util.Grid.getIndex(app, "grdList") == -1) util.Msg.alert( "INF-M008");
				
				//함수 실행
				f_setValue();
				
				//스크립트 출력
				printSource(f_setValue);
				
				//결과 표시
				printResult("");
			}
			
			function f_setValue() {
				//해당컬럼에 값을 셋팅한다.
				util.FreeForm.setValue(app, "grpFreeForm", column, inputVal);
			};
			
			
			/*
			 * "setFocus" 버튼(btn6)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn6Click(e){
				var btn6 = e.control;
				
				//유효성
				if (!util.validate(app, "cmbInputVal")) return false;
				
				//함수 실행
				f_setFocus();
				
				//스크립트 출력
				printSource(f_setFocus);
				
				//결과 표시
				printResult("");
			}
			
			function f_setFocus() {
				util.FreeForm.setFocus(app, "grpFreeForm", column);
			};
			
			
			/*
			 * "revertRow" 버튼(btn7)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn7Click(e){
				var btn7 = e.control;
				
				//유효성
				if (!util.validate(app, "cmbInputVal")) return false;
				
				if (!util.FreeForm.isModified(app, "grpFreeForm", "MSG")) return false;
				
				//함수 실행
				f_revertRow();
				
				//스크립트 출력
				printSource(f_revertRow);
				
				//결과 표시
				printResult("");
			}
			
			function f_revertRow() {
				//현재 선택되어있는 행 또는 선택한 행의 값을 초기값으로 되돌린다.
				util.FreeForm.revertRow(app, "grpFreeForm", util.Grid.getIndex(app, "grdList"), column);
			}
			
			
			/*
			 * "revertAllData" 버튼(btn8)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn8Click(e){
				var btn8 = e.control;
				
				//유효성
				if (!util.FreeForm.isModified(app, "grpFreeForm", "MSG")) return false;
				
				//함수 실행
				f_revertAllRow();
				
				//스크립트 출력
				printSource(f_revertAllRow);
				
				//결과 표시
				printResult("");
			}
			
			function f_revertAllRow() {
				//전체행의 데이터를 초기값으로 되돌린다.
				util.FreeForm.revertAllData(app, "grpFreeForm");
			}
			
			
			/*
			 * "isModified" 버튼(btn9)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn9Click(e){
				var btn9 = e.control;
				
				//함수 실행
				f_isModify();
				
				//스크립트 출력
				printSource(f_isModify);
				
				//결과 표시
				printResult(util.FreeForm.isModified(app, "grpFreeForm"));
			}
			
			function f_isModify() {
				//변경여부를 체크한다.
				//세번째 인자값
				// MSG : 변경된 사항이 없습니다.(alert)
				// CRM : 변경사항이 반영되지 않았습니다. 계속 하시겠습니까?(confirm)
				//util.FreeForm.isModified(app, "grpFreeForm", "CRM");
				
				if (util.FreeForm.isModified(app, "grpFreeForm")) {
					util.FreeForm.isModified(app, "grpFreeForm", "CRM", function() {
						util.Msg.alert( "확인버튼 클릭");
					}, function() {
						util.Msg.alert( "취소버튼 클릭");
					});
				} else {
					util.FreeForm.isModified(app, "grpFreeForm", "MSG");
				}
				
			}
			
			
			
			//== 스크립트 출력 ==//
			function printSource(value) {
				/* 에디터에 소스 표시 */
				var vcAceEditor = app.lookup("ace1");
				vcAceEditor.value = value;	
			}
			
			
			
			//== 결과 표시 ==//
			function printResult(value) {
				app.lookup("optRslt").value = value;
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsList");
			dataSet_1.parseData({
				"columns": [
					{"name": "col1"},
					{"name": "col2"},
					{"name": "col3"},
					{"name": "col4"}
				],
				"rows": [
					{"col1": "ID0001", "col2": "박보검", "col3": "010-1234-5678", "col4": "서울시 여의도"},
					{"col1": "ID0002", "col2": "홍길동", "col3": "010-1234-5678", "col4": "서울시 동작구 123"},
					{"col1": "ID0003", "col2": "이순신", "col3": "010-1234-5678", "col4": "경기도 의정부시 111"},
					{"col1": "ID0004", "col2": "송혜교", "col3": "010-1234-5678", "col4": "서울시 노원구 중계동"},
					{"col1": "ID0004", "col2": "이보영", "col3": "010-1234-5678", "col4": "서울시 강북구"},
					{"col1": "ID0005", "col2": "임장군", "col3": "010-1234-5678", "col4": "서울시 여의도 영등포동"},
					{"col1": "ID0005", "col2": "김토마토", "col3": "010-1234-5678", "col4": "서울시 여의도 영등포동"},
					{"col1": "ID0005", "col2": "김퇴직", "col3": "010-1234-5678", "col4": "서울시 여의도 영등포동"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsListOrg");
			dataSet_2.parseData({
				"columns": [
					{"name": "col1"},
					{"name": "col2"},
					{"name": "col3"},
					{"name": "col4"}
				],
				"rows": [
					{"col1": "ID0001", "col2": "박보검", "col3": "010-1234-5678", "col4": "서울시 여의도"},
					{"col1": "ID0002", "col2": "홍길동", "col3": "010-1234-5678", "col4": "서울시 동작구 123"},
					{"col1": "ID0003", "col2": "이순신", "col3": "010-1234-5678", "col4": "경기도 의정부시 111"},
					{"col1": "ID0004", "col2": "송혜교", "col3": "010-1234-5678", "col4": "서울시 노원구 중계동"},
					{"col1": "ID0004", "col2": "이보영", "col3": "010-1234-5678", "col4": "서울시 강북구"},
					{"col1": "ID0005", "col2": "임장군", "col3": "010-1234-5678", "col4": "서울시 여의도 영등포동"},
					{"col1": "ID0005", "col2": "김토마토", "col3": "010-1234-5678", "col4": "서울시 여의도 영등포동"},
					{"col1": "ID0005", "col2": "김퇴직", "col3": "010-1234-5678", "col4": "서울시 여의도 영등포동"}
				]
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("ds1");
			dataSet_3.parseData({
				"columns": [
					{"name": "L"},
					{"name": "V"}
				],
				"rows": [
					{"L": "코드", "V": "CD"},
					{"L": "코드명", "V": "CNM"},
					{"L": "로드여부", "V": "LOAD_YN"},
					{"L": "출력여부", "V": "OUT_YN"},
					{"L": "사용여부", "V": "USE_YN"},
					{"L": "정렬순서", "V": "SORT_ODR"},
					{"L": "코드설명", "V": "CD_DESC"}
				]
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsSubList");
			dataSet_4.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CNM"},
					{"name": "CD_DESC"},
					{"name": "SORT_ODR"},
					{"name": "LOAD_YN"},
					{"name": "OUT_YN"},
					{"name": "USE_YN"}
				],
				"rows": [
					{"CD": "00001", "CNM": "코드1", "CD_DESC": "코드설명1", "SORT_ODR": "0001", "LOAD_YN": "N", "OUT_YN": "Y", "USE_YN": "Y"},
					{"CD": "00002", "CNM": "코드2", "CD_DESC": "코드설명2", "SORT_ODR": "0002", "LOAD_YN": "N", "OUT_YN": "N", "USE_YN": "Y"},
					{"CD": "00003", "CNM": "코드3", "CD_DESC": "코드설명3", "SORT_ODR": "0003", "LOAD_YN": "Y", "OUT_YN": "Y", "USE_YN": "N"},
					{"CD": "00004", "CNM": "코드4", "CD_DESC": "코드설명4", "SORT_ODR": "0004", "LOAD_YN": "Y", "OUT_YN": "Y", "USE_YN": "N"},
					{"CD": "00005", "CNM": "코드5", "CD_DESC": "코드설명5", "SORT_ODR": "0005", "LOAD_YN": "Y", "OUT_YN": "N", "USE_YN": "Y"}
				]
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsCode03");
			dataSet_5.parseData({
				"columns": [
					{"name": "cd"},
					{"name": "cd_nm"}
				],
				"rows": [
					{"cd": "Y", "cd_nm": "Y"},
					{"cd": "N", "cd_nm": "N"}
				]
			});
			app.register(dataSet_5);
			var submission_1 = new cpr.protocols.Submission("subList");
			submission_1.action = "com/selectCommonMng.do";
			submission_1.addResponseData(dataSet_4, false);
			app.register(submission_1);
			
			app.supportMedia("all and (min-width: 1320px)", "eXFrame");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1319px)", "default");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpHeader");
			// Layout
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			group_1.setLayout(verticalLayout_2);
			(function(container){
				var userDefinedControl_1 = new udc.com.appHeader("appheader1");
				container.addChild(userDefinedControl_1, {
					"width": "500px",
					"height": "30px"
				});
			})(group_1);
			container.addChild(group_1, {
				"autoSize": "height",
				"width": "400px",
				"height": "30px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var verticalLayout_3 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_3.leftMargin = 20;
			verticalLayout_3.rightMargin = 30;
			verticalLayout_3.topMargin = 30;
			verticalLayout_3.bottomMargin = 20;
			group_2.setLayout(verticalLayout_3);
			(function(container){
				var group_3 = new cpr.controls.Container();
				// Layout
				var verticalLayout_4 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_4.spacing = 20;
				verticalLayout_4.topMargin = 20;
				verticalLayout_4.bottomMargin = 40;
				group_3.setLayout(verticalLayout_4);
				(function(container){
					var group_4 = new cpr.controls.Container("grp1");
					// Layout
					var formLayout_1 = new cpr.controls.layouts.FormLayout();
					formLayout_1.scrollable = false;
					formLayout_1.rightMargin = "50px";
					formLayout_1.horizontalSpacing = "5px";
					formLayout_1.verticalSpacing = "5px";
					formLayout_1.setColumns(["150px", "100px"]);
					formLayout_1.setColumnAutoSizing(0, true);
					formLayout_1.setColumnAutoSizing(1, true);
					formLayout_1.setRows(["1fr"]);
					group_4.setLayout(formLayout_1);
					(function(container){
						var output_1 = new cpr.controls.Output();
						output_1.value = "프리폼 기능";
						output_1.style.css({
							"font-weight" : "bold",
							"padding-left" : "1rem",
							"font-size" : "2.5rem"
						});
						container.addChild(output_1, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var output_2 = new cpr.controls.Output();
						output_2.value = "util.FreeForm";
						output_2.style.setClasses(["text-primary"]);
						output_2.style.css({
							"font-weight" : "bold",
							"padding-left" : "3rem",
							"font-size" : "1.25rem",
							"text-align" : "left"
						});
						container.addChild(output_2, {
							"colIndex": 1,
							"rowIndex": 0,
							"verticalAlign": "bottom",
							"height": 35
						});
					})(group_4);
					container.addChild(group_4, {
						"autoSize": "height",
						"width": "1270px",
						"height": "40px"
					});
					var output_3 = new cpr.controls.Output();
					output_3.value = "이 페이지에서는 공통모듈 내 프리폼 기능에 대해 설명합니다.";
					output_3.style.setClasses(["opt-tmpl"]);
					output_3.style.css({
						"padding-left" : "1rem",
						"font-size" : "1rem"
					});
					container.addChild(output_3, {
						"autoSize": "height",
						"width": "1210px",
						"height": "46px"
					});
				})(group_3);
				container.addChild(group_3, {
					"autoSize": "height",
					"width": "1270px",
					"height": "120px"
				});
				var group_5 = new cpr.controls.Container();
				// Layout
				var verticalLayout_5 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_5.spacing = 20;
				verticalLayout_5.topMargin = 20;
				verticalLayout_5.bottomMargin = 40;
				group_5.setLayout(verticalLayout_5);
				(function(container){
					var output_4 = new cpr.controls.Output();
					output_4.value = "시나리오";
					output_4.style.setClasses(["h1", "pl-3", "bg-primary", "text-white"]);
					output_4.style.css({
						"font-weight" : "bold",
						"padding-left" : "1rem",
						"font-size" : "1.75rem"
					});
					container.addChild(output_4, {
						"width": "100px",
						"height": "40px"
					});
					var output_5 = new cpr.controls.Output("ipbScenario");
					output_5.value = "1. 기준컬럼과 입력값을 입력 후 가각 기능 버튼을 클릭하여 스크립트와 결과값을 확인합니다.";
					output_5.style.setClasses(["opt-tmpl"]);
					output_5.style.css({
						"padding-left" : "1rem",
						"font-size" : "1rem"
					});
					container.addChild(output_5, {
						"autoSize": "height",
						"width": "1210px",
						"height": "107px"
					});
					var group_6 = new cpr.controls.Container("grp2");
					group_6.style.css({
						"background-color" : "#dff7fb"
					});
					// Layout
					var verticalLayout_6 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_6.leftMargin = 30;
					verticalLayout_6.rightMargin = 30;
					verticalLayout_6.topMargin = 20;
					verticalLayout_6.bottomMargin = 20;
					group_6.setLayout(verticalLayout_6);
					(function(container){
						var output_6 = new cpr.controls.Output();
						output_6.value = "추가설명";
						output_6.style.setClasses(["text-info", "opt-tmpl"]);
						output_6.style.css({
							"font-weight" : "bold"
						});
						container.addChild(output_6, {
							"width": "100px",
							"height": "25px"
						});
						var output_7 = new cpr.controls.Output();
						output_7.value = "1. 그리드 데이터 맵핑방법\r\n- 폼 선택 > properties > 바인딩 > 문맥 더블클릭 > 문맥유형 : 선택형 컨텍스트, 컨트롤 : 그리드ID 선택";
						output_7.style.setClasses(["text-info", "opt-tmpl"]);
						container.addChild(output_7, {
							"autoSize": "height",
							"width": "100px",
							"height": "25px"
						});
					})(group_6);
					container.addChild(group_6, {
						"autoSize": "height",
						"width": "1100px",
						"height": "100px"
					});
				})(group_5);
				container.addChild(group_5, {
					"autoSize": "height",
					"width": "1270px",
					"height": "345px"
				});
				var group_7 = new cpr.controls.Container();
				group_7.userAttr({"floating-header": "true"});
				// Layout
				var verticalLayout_7 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_7.spacing = 15;
				verticalLayout_7.topMargin = 20;
				verticalLayout_7.bottomMargin = 0;
				group_7.setLayout(verticalLayout_7);
				(function(container){
					var output_8 = new cpr.controls.Output();
					output_8.value = "기능 확인";
					output_8.style.setClasses(["h1", "pl-3", "bg-primary", "text-white"]);
					output_8.style.css({
						"font-weight" : "bold",
						"padding-left" : "1rem",
						"font-size" : "1.75rem"
					});
					container.addChild(output_8, {
						"autoSize": "none",
						"width": "1270px",
						"height": "40px"
					});
					var group_8 = new cpr.controls.Container("grp3");
					group_8.style.css({
						"border-right-style" : "solid",
						"border-top-width" : "1px",
						"border-bottom-color" : "#dedede",
						"border-right-width" : "1px",
						"border-left-color" : "#dedede",
						"border-right-color" : "#dedede",
						"border-left-width" : "1px",
						"border-top-style" : "solid",
						"background-color" : "#F0F0F0",
						"border-left-style" : "solid",
						"border-bottom-width" : "1px",
						"border-top-color" : "#dedede",
						"border-bottom-style" : "solid"
					});
					// Layout
					var verticalLayout_8 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_8.leftMargin = 30;
					verticalLayout_8.rightMargin = 30;
					verticalLayout_8.topMargin = 5;
					verticalLayout_8.bottomMargin = 10;
					group_8.setLayout(verticalLayout_8);
					(function(container){
						var group_9 = new cpr.controls.Container("grp5");
						// Layout
						var formLayout_2 = new cpr.controls.layouts.FormLayout();
						formLayout_2.scrollable = false;
						formLayout_2.topMargin = "0px";
						formLayout_2.rightMargin = "0px";
						formLayout_2.leftMargin = "0px";
						formLayout_2.horizontalSpacing = "10px";
						formLayout_2.verticalSpacing = "5px";
						formLayout_2.setColumns(["2fr", "3fr"]);
						formLayout_2.setRows(["25px", "1fr"]);
						group_9.setLayout(formLayout_2);
						(function(container){
							var group_10 = new cpr.controls.Container("grp8");
							// Layout
							var verticalLayout_9 = new cpr.controls.layouts.VerticalLayout();
							group_10.setLayout(verticalLayout_9);
							(function(container){
								var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdList");
								grid_1.fieldLabel = "그리드 제목";
								grid_1.init({
									"dataSet": app.lookup("dsSubList"),
									"resizableColumns": "all",
									"columns": [
										{"width": "100px"},
										{"width": "100px"},
										{"width": "100px"},
										{"width": "100px"},
										{"width": "100px"},
										{"width": "100px"},
										{"width": "100px"}
									],
									"header": {
										"rows": [{"height": "24px"}],
										"cells": [
											{
												"constraint": {"rowIndex": 0, "colIndex": 0},
												"configurator": function(cell){
													cell.targetColumnName = "CD";
													cell.filterable = false;
													cell.sortable = false;
													cell.text = "CD";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 1},
												"configurator": function(cell){
													cell.targetColumnName = "CNM";
													cell.filterable = false;
													cell.sortable = false;
													cell.text = "CNM";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 2},
												"configurator": function(cell){
													cell.targetColumnName = "CD_DESC";
													cell.filterable = false;
													cell.sortable = false;
													cell.text = "CD_DESC";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 3},
												"configurator": function(cell){
													cell.targetColumnName = "SORT_ODR";
													cell.filterable = false;
													cell.sortable = false;
													cell.text = "SORT_ODR";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 4},
												"configurator": function(cell){
													cell.targetColumnName = "LOAD_YN";
													cell.filterable = false;
													cell.sortable = false;
													cell.text = "LOAD_YN";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 5},
												"configurator": function(cell){
													cell.targetColumnName = "OUT_YN";
													cell.filterable = false;
													cell.sortable = false;
													cell.text = "OUT_YN";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 6},
												"configurator": function(cell){
													cell.targetColumnName = "USE_YN";
													cell.filterable = false;
													cell.sortable = false;
													cell.text = "USE_YN";
												}
											}
										]
									},
									"detail": {
										"rows": [{"height": "24px"}],
										"cells": [
											{
												"constraint": {"rowIndex": 0, "colIndex": 0},
												"configurator": function(cell){
													cell.columnName = "CD";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 1},
												"configurator": function(cell){
													cell.columnName = "CNM";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 2},
												"configurator": function(cell){
													cell.columnName = "CD_DESC";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 3},
												"configurator": function(cell){
													cell.columnName = "SORT_ODR";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 4},
												"configurator": function(cell){
													cell.columnName = "LOAD_YN";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 5},
												"configurator": function(cell){
													cell.columnName = "OUT_YN";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 6},
												"configurator": function(cell){
													cell.columnName = "USE_YN";
												}
											}
										]
									}
								});
								container.addChild(grid_1, {
									"autoSize": "height",
									"width": "633px",
									"height": "200px"
								});
							})(group_10);
							container.addChild(group_10, {
								"colIndex": 1,
								"rowIndex": 1,
								"colSpan": 1,
								"rowSpan": 1
							});
							var output_9 = new cpr.controls.Output();
							output_9.value = "<프리폼 연결그리드>";
							output_9.style.setClasses(["opt-tmpl"]);
							output_9.style.css({
								"font-weight" : "ㅠㅐㅣㅇ",
								"text-align" : "center"
							});
							output_9.bind("tooltip").toExpression("#ipbScenario.value");
							container.addChild(output_9, {
								"colIndex": 1,
								"rowIndex": 0
							});
							var group_11 = linker.group_11 = new cpr.controls.Container("grpFreeForm");
							group_11.fieldLabel = "상세입력폼";
							group_11.style.setClasses(["form-box"]);
							// Layout
							var formLayout_3 = new cpr.controls.layouts.FormLayout();
							formLayout_3.scrollable = true;
							formLayout_3.topMargin = "5px";
							formLayout_3.rightMargin = "5px";
							formLayout_3.bottomMargin = "5px";
							formLayout_3.leftMargin = "5px";
							formLayout_3.setColumns(["85px", "1fr", "85px", "1fr"]);
							formLayout_3.setRows(["25px", "25px", "25px", "25px"]);
							group_11.setLayout(formLayout_3);
							(function(container){
								var output_10 = new cpr.controls.Output();
								output_10.value = "코드";
								container.addChild(output_10, {
									"colIndex": 0,
									"rowIndex": 0
								});
								var output_11 = new cpr.controls.Output();
								output_11.value = "로드여부";
								container.addChild(output_11, {
									"colIndex": 0,
									"rowIndex": 1
								});
								var output_12 = new cpr.controls.Output();
								output_12.value = "사용여부";
								container.addChild(output_12, {
									"colIndex": 0,
									"rowIndex": 2
								});
								var output_13 = new cpr.controls.Output();
								output_13.value = "코드명";
								container.addChild(output_13, {
									"colIndex": 2,
									"rowIndex": 0
								});
								var output_14 = new cpr.controls.Output();
								output_14.value = "출력여부";
								container.addChild(output_14, {
									"colIndex": 2,
									"rowIndex": 1
								});
								var output_15 = new cpr.controls.Output();
								output_15.value = "정렬순서";
								container.addChild(output_15, {
									"colIndex": 2,
									"rowIndex": 2
								});
								var output_16 = new cpr.controls.Output();
								output_16.value = "코드설명";
								container.addChild(output_16, {
									"colIndex": 0,
									"rowIndex": 3
								});
								var inputBox_1 = new cpr.controls.InputBox("ipbCnm2");
								inputBox_1.bind("value").toDataColumn("CNM");
								container.addChild(inputBox_1, {
									"colIndex": 3,
									"rowIndex": 0
								});
								var inputBox_2 = new cpr.controls.InputBox("ipbCd2");
								inputBox_2.readOnly = true;
								inputBox_2.bind("value").toDataColumn("CD");
								container.addChild(inputBox_2, {
									"colIndex": 1,
									"rowIndex": 0
								});
								var inputBox_3 = new cpr.controls.InputBox("ipbCdDesc2");
								inputBox_3.bind("value").toDataColumn("CD_DESC");
								container.addChild(inputBox_3, {
									"colIndex": 1,
									"rowIndex": 3,
									"colSpan": 3,
									"rowSpan": 1
								});
								var inputBox_4 = new cpr.controls.InputBox("ipbStOd2");
								inputBox_4.bind("value").toDataColumn("SORT_ODR");
								container.addChild(inputBox_4, {
									"colIndex": 3,
									"rowIndex": 2
								});
								var comboBox_1 = new cpr.controls.ComboBox("cmbLdYn2");
								comboBox_1.bind("value").toDataColumn("LOAD_YN");
								(function(comboBox_1){
									comboBox_1.addItem(new cpr.controls.Item("전체", ""));
									comboBox_1.setItemSet(app.lookup("dsCode03"), {
										"label": "cd_nm",
										"value": "cd"
									});
								})(comboBox_1);
								container.addChild(comboBox_1, {
									"colIndex": 1,
									"rowIndex": 1
								});
								var comboBox_2 = new cpr.controls.ComboBox("cmbUsYn2");
								comboBox_2.bind("value").toDataColumn("USE_YN");
								(function(comboBox_2){
									comboBox_2.addItem(new cpr.controls.Item("전체", ""));
									comboBox_2.setItemSet(app.lookup("dsCode03"), {
										"label": "cd_nm",
										"value": "cd"
									});
								})(comboBox_2);
								container.addChild(comboBox_2, {
									"colIndex": 1,
									"rowIndex": 2
								});
								var comboBox_3 = new cpr.controls.ComboBox("cmbOtYn2");
								comboBox_3.bind("value").toDataColumn("OUT_YN");
								(function(comboBox_3){
									comboBox_3.addItem(new cpr.controls.Item("전체", ""));
									comboBox_3.setItemSet(app.lookup("dsCode03"), {
										"label": "cd_nm",
										"value": "cd"
									});
								})(comboBox_3);
								container.addChild(comboBox_3, {
									"colIndex": 3,
									"rowIndex": 1
								});
							})(group_11);
							container.addChild(group_11, {
								"colIndex": 0,
								"rowIndex": 1
							});
							var output_17 = new cpr.controls.Output();
							output_17.value = "<상세 입력폼>";
							output_17.style.setClasses(["opt-tmpl"]);
							output_17.style.css({
								"text-align" : "center"
							});
							output_17.bind("tooltip").toExpression("#ipbScenario.value");
							container.addChild(output_17, {
								"colIndex": 0,
								"rowIndex": 0
							});
						})(group_9);
						container.addChild(group_9, {
							"autoSize": "height",
							"width": "860px",
							"height": "230px"
						});
					})(group_8);
					if(typeof onGrp11Click == "function") {
						group_8.addEventListener("click", onGrp11Click);
					}
					container.addChild(group_8, {
						"autoSize": "height",
						"width": "1210px",
						"height": "300px"
					});
					var group_12 = new cpr.controls.Container("grp4");
					// Layout
					var formLayout_4 = new cpr.controls.layouts.FormLayout();
					formLayout_4.userResizingMode = "standard";
					formLayout_4.topMargin = "0px";
					formLayout_4.rightMargin = "0px";
					formLayout_4.bottomMargin = "0px";
					formLayout_4.leftMargin = "0px";
					formLayout_4.horizontalSpacing = "5px";
					formLayout_4.verticalSpacing = "5px";
					formLayout_4.setColumns(["1fr", "470px"]);
					formLayout_4.setRows(["1fr"]);
					group_12.setLayout(formLayout_4);
					(function(container){
						var group_13 = new cpr.controls.Container("grp7");
						group_13.style.setClasses(["form-box"]);
						// Layout
						var verticalLayout_10 = new cpr.controls.layouts.VerticalLayout();
						group_13.setLayout(verticalLayout_10);
						(function(container){
							var userDefinedControl_2 = new udc.tmp.Ace("ace1");
							container.addChild(userDefinedControl_2, {
								"autoSize": "height",
								"width": "418px",
								"height": "295px"
							});
						})(group_13);
						container.addChild(group_13, {
							"colIndex": 1,
							"rowIndex": 0
						});
						var group_14 = new cpr.controls.Container("grp6");
						// Layout
						var formLayout_5 = new cpr.controls.layouts.FormLayout();
						formLayout_5.horizontalSpacing = "5px";
						formLayout_5.verticalSpacing = "10px";
						formLayout_5.setColumns(["1fr", "10px"]);
						formLayout_5.setColumnAutoSizing(1, true);
						formLayout_5.setRows(["1fr"]);
						group_14.setLayout(formLayout_5);
						(function(container){
							var userDefinedControl_3 = new udc.com.udcSplit("udcsplit1");
							userDefinedControl_3.leftGrpId = "grp6";
							userDefinedControl_3.rightGrpId = "grp7";
							container.addChild(userDefinedControl_3, {
								"colIndex": 1,
								"rowIndex": 0,
								"colSpan": 1,
								"rowSpan": 1,
								"horizontalAlign": "right",
								"width": 9
							});
							var group_15 = new cpr.controls.Container("grp9");
							// Layout
							var formLayout_6 = new cpr.controls.layouts.FormLayout();
							formLayout_6.scrollable = false;
							formLayout_6.topMargin = "0px";
							formLayout_6.rightMargin = "0px";
							formLayout_6.bottomMargin = "0px";
							formLayout_6.leftMargin = "0px";
							formLayout_6.horizontalSpacing = "10px";
							formLayout_6.verticalSpacing = "10px";
							formLayout_6.setColumns(["1fr"]);
							formLayout_6.setRows(["40px", "1fr"]);
							formLayout_6.setRowAutoSizing(0, true);
							group_15.setLayout(formLayout_6);
							(function(container){
								var group_16 = new cpr.controls.Container("grp10");
								group_16.style.setClasses(["form-box"]);
								// Layout
								var formLayout_7 = new cpr.controls.layouts.FormLayout();
								formLayout_7.scrollable = false;
								formLayout_7.topMargin = "5px";
								formLayout_7.rightMargin = "30px";
								formLayout_7.bottomMargin = "5px";
								formLayout_7.leftMargin = "5px";
								formLayout_7.horizontalSpacing = "5px";
								formLayout_7.verticalSpacing = "5px";
								formLayout_7.setColumns(["100px", "1fr"]);
								formLayout_7.setRows(["1fr"]);
								group_16.setLayout(formLayout_7);
								(function(container){
									var output_18 = new cpr.controls.Output();
									output_18.value = "결과값";
									output_18.style.css({
										"background-color" : "#e1edfe",
										"background-image" : "none",
										"padding-right" : "1rem"
									});
									container.addChild(output_18, {
										"colIndex": 0,
										"rowIndex": 0
									});
									var output_19 = new cpr.controls.Output("optRslt");
									output_19.value = "";
									output_19.style.css({
										"background-color" : "white",
										"border-right-style" : "none",
										"border-left-style" : "none",
										"padding-left" : "1rem",
										"border-bottom-style" : "none",
										"border-top-style" : "none",
										"text-align" : "left"
									});
									container.addChild(output_19, {
										"colIndex": 1,
										"rowIndex": 0
									});
								})(group_16);
								container.addChild(group_16, {
									"colIndex": 0,
									"rowIndex": 0
								});
								var group_17 = new cpr.controls.Container("grpFormFunc");
								group_17.style.setClasses(["form-box"]);
								// Layout
								var formLayout_8 = new cpr.controls.layouts.FormLayout();
								formLayout_8.topMargin = "5px";
								formLayout_8.rightMargin = "5px";
								formLayout_8.bottomMargin = "5px";
								formLayout_8.leftMargin = "5px";
								formLayout_8.horizontalSpacing = "5px";
								formLayout_8.verticalSpacing = "5px";
								formLayout_8.setColumns(["24px", "200px", "1fr", "130px"]);
								formLayout_8.setColumnAutoSizing(1, true);
								formLayout_8.setRows(["25px", "25px", "25px", "25px", "25px", "25px", "25px", "25px", "25px", "25px", "25px"]);
								formLayout_8.setRowAutoSizing(1, true);
								formLayout_8.setRowAutoSizing(2, true);
								formLayout_8.setRowAutoSizing(3, true);
								formLayout_8.setRowAutoSizing(4, true);
								formLayout_8.setRowAutoSizing(5, true);
								formLayout_8.setRowAutoSizing(6, true);
								formLayout_8.setRowAutoSizing(7, true);
								formLayout_8.setRowAutoSizing(8, true);
								formLayout_8.setRowAutoSizing(9, true);
								formLayout_8.setRowAutoSizing(10, true);
								group_17.setLayout(formLayout_8);
								(function(container){
									var output_20 = new cpr.controls.Output();
									output_20.value = "No";
									output_20.style.css({
										"background-color" : "#e1edfe",
										"background-image" : "none",
										"text-align" : "center"
									});
									container.addChild(output_20, {
										"colIndex": 0,
										"rowIndex": 0
									});
									var output_21 = new cpr.controls.Output();
									output_21.value = "함수";
									output_21.style.css({
										"background-color" : "#e1edfe",
										"background-image" : "none",
										"text-align" : "center"
									});
									container.addChild(output_21, {
										"colIndex": 1,
										"rowIndex": 0
									});
									var output_22 = new cpr.controls.Output();
									output_22.value = "설명";
									output_22.style.css({
										"background-color" : "#e1edfe",
										"background-image" : "none",
										"text-align" : "center"
									});
									container.addChild(output_22, {
										"colIndex": 2,
										"rowIndex": 0
									});
									var output_23 = new cpr.controls.Output();
									output_23.value = "동작";
									output_23.style.css({
										"background-color" : "#e1edfe",
										"background-image" : "none",
										"text-align" : "center"
									});
									container.addChild(output_23, {
										"colIndex": 3,
										"rowIndex": 0
									});
									var output_24 = new cpr.controls.Output();
									output_24.value = "1";
									output_24.style.css({
										"background-color" : "#e1edfe",
										"border-right-style" : "none",
										"border-left-style" : "none",
										"border-bottom-style" : "none",
										"background-image" : "none",
										"border-top-style" : "none",
										"text-align" : "center"
									});
									container.addChild(output_24, {
										"colIndex": 0,
										"rowIndex": 2
									});
									var output_25 = new cpr.controls.Output();
									output_25.value = "2";
									output_25.style.css({
										"background-color" : "#e1edfe",
										"border-right-style" : "none",
										"border-left-style" : "none",
										"border-bottom-style" : "none",
										"background-image" : "none",
										"border-top-style" : "none",
										"text-align" : "center"
									});
									container.addChild(output_25, {
										"colIndex": 0,
										"rowIndex": 3
									});
									var button_1 = new cpr.controls.Button("btn1");
									button_1.value = "init";
									button_1.style.setClasses(["btn-primary"]);
									if(typeof onBtnInitClick == "function") {
										button_1.addEventListener("click", onBtnInitClick);
									}
									if(typeof onBtn1Click == "function") {
										button_1.addEventListener("click", onBtn1Click);
									}
									container.addChild(button_1, {
										"colIndex": 3,
										"rowIndex": 2
									});
									var button_2 = new cpr.controls.Button("btn2");
									button_2.value = "insertRow";
									button_2.style.setClasses(["btn-primary"]);
									if(typeof onBtnResetClick == "function") {
										button_2.addEventListener("click", onBtnResetClick);
									}
									if(typeof onBtn2Click == "function") {
										button_2.addEventListener("click", onBtn2Click);
									}
									container.addChild(button_2, {
										"colIndex": 3,
										"rowIndex": 3
									});
									var inputBox_5 = new cpr.controls.InputBox("ipb1");
									inputBox_5.readOnly = true;
									inputBox_5.value = "init";
									container.addChild(inputBox_5, {
										"colIndex": 1,
										"rowIndex": 2
									});
									var inputBox_6 = new cpr.controls.InputBox("ipb2");
									inputBox_6.readOnly = true;
									inputBox_6.value = "화면의 그룹(프리폼)을 초기화시킨다.";
									container.addChild(inputBox_6, {
										"colIndex": 2,
										"rowIndex": 2
									});
									var inputBox_7 = new cpr.controls.InputBox("ipb3");
									inputBox_7.readOnly = true;
									inputBox_7.value = "프리폼에 연결되어 있는 그리드 또는 트리에 행을 추가한다.";
									container.addChild(inputBox_7, {
										"colIndex": 2,
										"rowIndex": 3
									});
									var inputBox_8 = new cpr.controls.InputBox("ipb4");
									inputBox_8.readOnly = true;
									inputBox_8.value = "insertRow";
									container.addChild(inputBox_8, {
										"colIndex": 1,
										"rowIndex": 3
									});
									var comboBox_4 = new cpr.controls.ComboBox("cmbInputVal");
									comboBox_4.fieldLabel = "기준컬럼";
									comboBox_4.placeholder = "기준컬럼";
									comboBox_4.userAttr({"required": "Y"});
									(function(comboBox_4){
										comboBox_4.setItemSet(app.lookup("ds1"), {
											"label": "L",
											"value": "V"
										});
									})(comboBox_4);
									if(typeof onCmb1SelectionChange == "function") {
										comboBox_4.addEventListener("selection-change", onCmb1SelectionChange);
									}
									if(typeof onCmbInputValSelectionChange == "function") {
										comboBox_4.addEventListener("selection-change", onCmbInputValSelectionChange);
									}
									container.addChild(comboBox_4, {
										"colIndex": 0,
										"rowIndex": 1,
										"colSpan": 2,
										"rowSpan": 1
									});
									var inputBox_9 = new cpr.controls.InputBox("ipbInputVal");
									inputBox_9.fieldLabel = "입력값";
									inputBox_9.placeholder = "입력값";
									inputBox_9.userAttr({"required": "Y"});
									if(typeof onIpbInputValValueChange == "function") {
										inputBox_9.addEventListener("value-change", onIpbInputValValueChange);
									}
									container.addChild(inputBox_9, {
										"colIndex": 2,
										"rowIndex": 1
									});
									var output_26 = new cpr.controls.Output();
									output_26.value = "3";
									output_26.style.css({
										"background-color" : "#e1edfe",
										"border-right-style" : "none",
										"border-left-style" : "none",
										"border-bottom-style" : "none",
										"background-image" : "none",
										"border-top-style" : "none",
										"text-align" : "center"
									});
									container.addChild(output_26, {
										"colIndex": 0,
										"rowIndex": 4
									});
									var output_27 = new cpr.controls.Output();
									output_27.value = "4";
									output_27.style.css({
										"background-color" : "#e1edfe",
										"border-right-style" : "none",
										"border-left-style" : "none",
										"border-bottom-style" : "none",
										"background-image" : "none",
										"border-top-style" : "none",
										"text-align" : "center"
									});
									container.addChild(output_27, {
										"colIndex": 0,
										"rowIndex": 5
									});
									var output_28 = new cpr.controls.Output();
									output_28.value = "5";
									output_28.style.css({
										"background-color" : "#e1edfe",
										"border-right-style" : "none",
										"border-left-style" : "none",
										"border-bottom-style" : "none",
										"background-image" : "none",
										"border-top-style" : "none",
										"text-align" : "center"
									});
									container.addChild(output_28, {
										"colIndex": 0,
										"rowIndex": 6
									});
									var output_29 = new cpr.controls.Output();
									output_29.value = "6";
									output_29.style.css({
										"background-color" : "#e1edfe",
										"border-right-style" : "none",
										"border-left-style" : "none",
										"border-bottom-style" : "none",
										"background-image" : "none",
										"border-top-style" : "none",
										"text-align" : "center"
									});
									container.addChild(output_29, {
										"colIndex": 0,
										"rowIndex": 7
									});
									var output_30 = new cpr.controls.Output();
									output_30.value = "7";
									output_30.style.css({
										"background-color" : "#e1edfe",
										"border-right-style" : "none",
										"border-left-style" : "none",
										"border-bottom-style" : "none",
										"background-image" : "none",
										"border-top-style" : "none",
										"text-align" : "center"
									});
									container.addChild(output_30, {
										"colIndex": 0,
										"rowIndex": 8
									});
									var output_31 = new cpr.controls.Output();
									output_31.value = "8";
									output_31.style.css({
										"background-color" : "#e1edfe",
										"border-right-style" : "none",
										"border-left-style" : "none",
										"border-bottom-style" : "none",
										"background-image" : "none",
										"border-top-style" : "none",
										"text-align" : "center"
									});
									container.addChild(output_31, {
										"colIndex": 0,
										"rowIndex": 9
									});
									var output_32 = new cpr.controls.Output();
									output_32.value = "9";
									output_32.style.css({
										"background-color" : "#e1edfe",
										"border-right-style" : "none",
										"border-left-style" : "none",
										"border-bottom-style" : "none",
										"background-image" : "none",
										"border-top-style" : "none",
										"text-align" : "center"
									});
									container.addChild(output_32, {
										"colIndex": 0,
										"rowIndex": 10
									});
									var inputBox_10 = new cpr.controls.InputBox("ipb6");
									inputBox_10.readOnly = true;
									inputBox_10.value = "deleteRow";
									container.addChild(inputBox_10, {
										"colIndex": 1,
										"rowIndex": 4
									});
									var inputBox_11 = new cpr.controls.InputBox("ipb7");
									inputBox_11.readOnly = true;
									inputBox_11.value = "getValue";
									container.addChild(inputBox_11, {
										"colIndex": 1,
										"rowIndex": 5
									});
									var inputBox_12 = new cpr.controls.InputBox("ipb8");
									inputBox_12.readOnly = true;
									inputBox_12.value = "setValue";
									container.addChild(inputBox_12, {
										"colIndex": 1,
										"rowIndex": 6
									});
									var inputBox_13 = new cpr.controls.InputBox("ipb9");
									inputBox_13.readOnly = true;
									inputBox_13.value = "setFocus";
									container.addChild(inputBox_13, {
										"colIndex": 1,
										"rowIndex": 7
									});
									var inputBox_14 = new cpr.controls.InputBox("ipb10");
									inputBox_14.readOnly = true;
									inputBox_14.value = "revertRow";
									container.addChild(inputBox_14, {
										"colIndex": 1,
										"rowIndex": 8
									});
									var inputBox_15 = new cpr.controls.InputBox("ipb11");
									inputBox_15.readOnly = true;
									inputBox_15.value = "revertAllData";
									container.addChild(inputBox_15, {
										"colIndex": 1,
										"rowIndex": 9
									});
									var inputBox_16 = new cpr.controls.InputBox("ipb12");
									inputBox_16.readOnly = true;
									inputBox_16.value = "isModified";
									container.addChild(inputBox_16, {
										"colIndex": 1,
										"rowIndex": 10
									});
									var inputBox_17 = new cpr.controls.InputBox("ipb13");
									inputBox_17.readOnly = true;
									inputBox_17.value = "프리폼에 연결되어 있는 그리드 또는 트리의 행을 삭제한다.";
									container.addChild(inputBox_17, {
										"colIndex": 2,
										"rowIndex": 4
									});
									var inputBox_18 = new cpr.controls.InputBox("ipb14");
									inputBox_18.readOnly = true;
									inputBox_18.value = "해당 컬럼이 맵핑되어 있는 컨트롤의 값을 가져온다.";
									container.addChild(inputBox_18, {
										"colIndex": 2,
										"rowIndex": 5
									});
									var inputBox_19 = new cpr.controls.InputBox("ipb15");
									inputBox_19.readOnly = true;
									inputBox_19.value = "해당 컬럼이 맵핑되어 있는 컨트롤에 값을 세팅한다.";
									container.addChild(inputBox_19, {
										"colIndex": 2,
										"rowIndex": 6
									});
									var inputBox_20 = new cpr.controls.InputBox("ipb16");
									inputBox_20.readOnly = true;
									inputBox_20.value = "해당 컬럼이 맵핑되어 있는 컨트롤에 포커스를 준다.";
									container.addChild(inputBox_20, {
										"colIndex": 2,
										"rowIndex": 7
									});
									var inputBox_21 = new cpr.controls.InputBox("ipb17");
									inputBox_21.readOnly = true;
									inputBox_21.value = "행의 값을 초기 데이터(가공 전)으로 되돌린다.";
									container.addChild(inputBox_21, {
										"colIndex": 2,
										"rowIndex": 8
									});
									var inputBox_22 = new cpr.controls.InputBox("ipb18");
									inputBox_22.readOnly = true;
									inputBox_22.value = "모든 행의 값을 초기 데이터(가공 전)으로 되돌린다.";
									container.addChild(inputBox_22, {
										"colIndex": 2,
										"rowIndex": 9
									});
									var inputBox_23 = new cpr.controls.InputBox("ipb19");
									inputBox_23.readOnly = true;
									inputBox_23.value = "프리폼의 변경여부를 확인한다.";
									container.addChild(inputBox_23, {
										"colIndex": 2,
										"rowIndex": 10
									});
									var button_3 = new cpr.controls.Button("btn3");
									button_3.value = "deleteRow";
									button_3.style.setClasses(["btn-primary"]);
									if(typeof onBtnReset2Click == "function") {
										button_3.addEventListener("click", onBtnReset2Click);
									}
									if(typeof onBtn3Click == "function") {
										button_3.addEventListener("click", onBtn3Click);
									}
									container.addChild(button_3, {
										"colIndex": 3,
										"rowIndex": 4
									});
									var button_4 = new cpr.controls.Button("btn4");
									button_4.value = "getValue";
									button_4.style.setClasses(["btn-primary"]);
									if(typeof onBtnReset3Click == "function") {
										button_4.addEventListener("click", onBtnReset3Click);
									}
									if(typeof onBtn4Click == "function") {
										button_4.addEventListener("click", onBtn4Click);
									}
									container.addChild(button_4, {
										"colIndex": 3,
										"rowIndex": 5
									});
									var button_5 = new cpr.controls.Button("btn5");
									button_5.value = "setValue";
									button_5.style.setClasses(["btn-primary"]);
									if(typeof onBtnReset4Click == "function") {
										button_5.addEventListener("click", onBtnReset4Click);
									}
									if(typeof onBtn5Click == "function") {
										button_5.addEventListener("click", onBtn5Click);
									}
									container.addChild(button_5, {
										"colIndex": 3,
										"rowIndex": 6
									});
									var button_6 = new cpr.controls.Button("btn6");
									button_6.value = "setFocus";
									button_6.style.setClasses(["btn-primary"]);
									if(typeof onBtnReset5Click == "function") {
										button_6.addEventListener("click", onBtnReset5Click);
									}
									if(typeof onBtn6Click == "function") {
										button_6.addEventListener("click", onBtn6Click);
									}
									container.addChild(button_6, {
										"colIndex": 3,
										"rowIndex": 7
									});
									var button_7 = new cpr.controls.Button("btn7");
									button_7.value = "revertRow";
									button_7.style.setClasses(["btn-primary"]);
									if(typeof onBtnReset6Click == "function") {
										button_7.addEventListener("click", onBtnReset6Click);
									}
									if(typeof onBtn7Click == "function") {
										button_7.addEventListener("click", onBtn7Click);
									}
									container.addChild(button_7, {
										"colIndex": 3,
										"rowIndex": 8
									});
									var button_8 = new cpr.controls.Button("btn8");
									button_8.value = "revertAllData";
									button_8.style.setClasses(["btn-primary"]);
									if(typeof onBtnReset7Click == "function") {
										button_8.addEventListener("click", onBtnReset7Click);
									}
									if(typeof onBtn8Click == "function") {
										button_8.addEventListener("click", onBtn8Click);
									}
									container.addChild(button_8, {
										"colIndex": 3,
										"rowIndex": 9
									});
									var button_9 = new cpr.controls.Button("btn9");
									button_9.value = "isModified";
									button_9.style.setClasses(["btn-primary"]);
									if(typeof onBtnReset8Click == "function") {
										button_9.addEventListener("click", onBtnReset8Click);
									}
									if(typeof onBtn9Click == "function") {
										button_9.addEventListener("click", onBtn9Click);
									}
									container.addChild(button_9, {
										"colIndex": 3,
										"rowIndex": 10
									});
								})(group_17);
								container.addChild(group_17, {
									"colIndex": 0,
									"rowIndex": 1
								});
							})(group_15);
							container.addChild(group_15, {
								"colIndex": 0,
								"rowIndex": 0,
								"colSpan": 1,
								"rowSpan": 1
							});
						})(group_14);
						container.addChild(group_14, {
							"colIndex": 0,
							"rowIndex": 0,
							"colSpan": 1,
							"rowSpan": 1
						});
					})(group_12);
					container.addChild(group_12, {
						"autoSize": "none",
						"width": "1210px",
						"height": "295px"
					});
				})(group_7);
				container.addChild(group_7, {
					"autoSize": "height",
					"width": "1270px",
					"height": "1000px"
				});
			})(group_2);
			container.addChild(group_2, {
				"autoSize": "height",
				"width": "400px",
				"height": "1800px"
			});
			if(typeof onBodyInit == "function"){
				app.addEventListener("init", onBodyInit);
			}
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.group_11.setBindContext(new cpr.bind.GridSelectionContext(linker.grid_1));
		}
	});
	app.title = "프리폼 기능";
	cpr.core.Platform.INSTANCE.register(app);
})();
