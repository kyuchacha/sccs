/*
 * App URI: app/exam/guide/form/FormSampleEtc01
 * Source Location: app/exam/guide/form/FormSampleEtc01.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/exam/guide/form/FormSampleEtc01", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * FormSampleEtc01.js
			 * Created at 2022. 3. 18. 오후 4:04:56.
			 *
			 * @author 1amthomas
			 ************************************************/;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsSubList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CNM"},
					{"name": "CD_DESC"},
					{"name": "SORT_ODR"},
					{"name": "LOAD_YN"},
					{"name": "OUT_YN"},
					{"name": "USE_YN"}
				],
				"rows": [
					{"CD": "00001", "CNM": "코드1", "CD_DESC": "코드설명1", "SORT_ODR": "0001", "LOAD_YN": "N", "OUT_YN": "Y", "USE_YN": "Y"},
					{"CD": "00002", "CNM": "코드2", "CD_DESC": "코드설명2", "SORT_ODR": "0002", "LOAD_YN": "N", "OUT_YN": "N", "USE_YN": "Y"},
					{"CD": "00003", "CNM": "코드3", "CD_DESC": "코드설명3", "SORT_ODR": "0003", "LOAD_YN": "Y", "OUT_YN": "Y", "USE_YN": "N"},
					{"CD": "00004", "CNM": "코드4", "CD_DESC": "코드설명4", "SORT_ODR": "0004", "LOAD_YN": "Y", "OUT_YN": "Y", "USE_YN": "N"},
					{"CD": "00005", "CNM": "코드5", "CD_DESC": "코드설명5", "SORT_ODR": "0005", "LOAD_YN": "Y", "OUT_YN": "N", "USE_YN": "Y"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsCode03");
			dataSet_2.parseData({
				"columns": [
					{"name": "cd"},
					{
						"name": "cd_nm",
						"displayOnly": false
					}
				],
				"rows": [
					{"cd": "Y", "cd_nm": "Y"},
					{"cd": "N", "cd_nm": "N"}
				]
			});
			app.register(dataSet_2);
			
			app.supportMedia("all and (min-width: 1320px)", "eXFrame");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1319px)", "default");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpHeader");
			// Layout
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			group_1.setLayout(verticalLayout_2);
			(function(container){
				var userDefinedControl_1 = new udc.com.appHeader("appheader1");
				container.addChild(userDefinedControl_1, {
					"width": "500px",
					"height": "30px"
				});
			})(group_1);
			container.addChild(group_1, {
				"autoSize": "height",
				"width": "400px",
				"height": "30px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var verticalLayout_3 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_3.leftMargin = 20;
			verticalLayout_3.rightMargin = 30;
			verticalLayout_3.topMargin = 30;
			verticalLayout_3.bottomMargin = 20;
			group_2.setLayout(verticalLayout_3);
			(function(container){
				var group_3 = new cpr.controls.Container();
				// Layout
				var verticalLayout_4 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_4.spacing = 20;
				verticalLayout_4.topMargin = 20;
				verticalLayout_4.bottomMargin = 40;
				group_3.setLayout(verticalLayout_4);
				(function(container){
					var group_4 = new cpr.controls.Container("grp1");
					// Layout
					var formLayout_1 = new cpr.controls.layouts.FormLayout();
					formLayout_1.scrollable = false;
					formLayout_1.rightMargin = "50px";
					formLayout_1.horizontalSpacing = "5px";
					formLayout_1.verticalSpacing = "5px";
					formLayout_1.setColumns(["150px", "100px"]);
					formLayout_1.setColumnAutoSizing(0, true);
					formLayout_1.setColumnAutoSizing(1, true);
					formLayout_1.setRows(["1fr"]);
					group_4.setLayout(formLayout_1);
					(function(container){
						var output_1 = new cpr.controls.Output();
						output_1.value = "그리드 행과 폼 바인딩";
						output_1.style.css({
							"font-weight" : "bold",
							"padding-left" : "1rem",
							"font-size" : "2.5rem"
						});
						container.addChild(output_1, {
							"colIndex": 0,
							"rowIndex": 0
						});
					})(group_4);
					container.addChild(group_4, {
						"autoSize": "height",
						"width": "1270px",
						"height": "40px"
					});
					var output_2 = new cpr.controls.Output();
					output_2.value = "이 페이지에서는 그리드와 프리폼을 바인딩하는 방법에 대해 설명합니다.";
					output_2.style.setClasses(["opt-tmpl"]);
					output_2.style.css({
						"padding-left" : "1rem",
						"font-size" : "1rem"
					});
					container.addChild(output_2, {
						"autoSize": "height",
						"width": "1210px",
						"height": "46px"
					});
				})(group_3);
				container.addChild(group_3, {
					"autoSize": "height",
					"width": "1270px",
					"height": "120px"
				});
				var group_5 = new cpr.controls.Container();
				// Layout
				var verticalLayout_5 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_5.spacing = 20;
				verticalLayout_5.topMargin = 20;
				verticalLayout_5.bottomMargin = 40;
				group_5.setLayout(verticalLayout_5);
				(function(container){
					var output_3 = new cpr.controls.Output();
					output_3.value = "시나리오";
					output_3.style.setClasses(["h1", "pl-3", "bg-primary", "text-white"]);
					output_3.style.css({
						"font-weight" : "bold",
						"padding-left" : "1rem",
						"font-size" : "1.75rem"
					});
					container.addChild(output_3, {
						"width": "100px",
						"height": "40px"
					});
					var output_4 = new cpr.controls.Output("ipbScenario");
					output_4.value = "1. 그리드와 프리폼 간의 데이터 맵핑 방법을 확인한다.";
					output_4.style.setClasses(["opt-tmpl"]);
					output_4.style.css({
						"padding-left" : "1rem",
						"font-size" : "1rem"
					});
					container.addChild(output_4, {
						"autoSize": "height",
						"width": "1210px",
						"height": "107px"
					});
					var group_6 = new cpr.controls.Container("grp2");
					group_6.style.css({
						"background-color" : "#dff7fb"
					});
					// Layout
					var verticalLayout_6 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_6.leftMargin = 30;
					verticalLayout_6.rightMargin = 30;
					verticalLayout_6.topMargin = 20;
					verticalLayout_6.bottomMargin = 20;
					group_6.setLayout(verticalLayout_6);
					(function(container){
						var output_5 = new cpr.controls.Output();
						output_5.value = "추가설명";
						output_5.style.setClasses(["text-info", "opt-tmpl"]);
						output_5.style.css({
							"font-weight" : "bold"
						});
						container.addChild(output_5, {
							"width": "100px",
							"height": "25px"
						});
						var output_6 = new cpr.controls.Output();
						output_6.value = "1. 그리드 데이터 맵핑 방법\r\n- 폼선택 > properties > 바인딩 > '문맥' 더블클릭 > 문맥 유형: 선택 행 컨텍스트,컨트롤 : 그리드ID 선택";
						output_6.style.setClasses(["text-info", "opt-tmpl"]);
						container.addChild(output_6, {
							"autoSize": "height",
							"width": "100px",
							"height": "25px"
						});
					})(group_6);
					container.addChild(group_6, {
						"autoSize": "height",
						"width": "1100px",
						"height": "100px"
					});
				})(group_5);
				container.addChild(group_5, {
					"autoSize": "height",
					"width": "1270px",
					"height": "345px"
				});
				var group_7 = new cpr.controls.Container();
				group_7.userAttr({"floating-header": "true"});
				// Layout
				var verticalLayout_7 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_7.spacing = 15;
				verticalLayout_7.topMargin = 20;
				verticalLayout_7.bottomMargin = 0;
				group_7.setLayout(verticalLayout_7);
				(function(container){
					var output_7 = new cpr.controls.Output();
					output_7.value = "기능 확인";
					output_7.style.setClasses(["h1", "pl-3", "bg-primary", "text-white"]);
					output_7.style.css({
						"font-weight" : "bold",
						"padding-left" : "1rem",
						"font-size" : "1.75rem"
					});
					container.addChild(output_7, {
						"autoSize": "none",
						"width": "1270px",
						"height": "40px"
					});
					var group_8 = new cpr.controls.Container("grp3");
					group_8.style.css({
						"border-right-style" : "solid",
						"border-top-width" : "1px",
						"border-bottom-color" : "#dedede",
						"border-right-width" : "1px",
						"border-left-color" : "#dedede",
						"border-right-color" : "#dedede",
						"border-left-width" : "1px",
						"border-top-style" : "solid",
						"background-color" : "#F0F0F0",
						"border-left-style" : "solid",
						"border-bottom-width" : "1px",
						"border-top-color" : "#dedede",
						"border-bottom-style" : "solid"
					});
					// Layout
					var verticalLayout_8 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_8.leftMargin = 30;
					verticalLayout_8.rightMargin = 30;
					verticalLayout_8.topMargin = 5;
					verticalLayout_8.bottomMargin = 10;
					group_8.setLayout(verticalLayout_8);
					(function(container){
						var group_9 = new cpr.controls.Container("grpData2");
						// Layout
						var formLayout_2 = new cpr.controls.layouts.FormLayout();
						formLayout_2.setColumns(["1fr", "260px"]);
						formLayout_2.setRows(["25px", "1fr"]);
						group_9.setLayout(formLayout_2);
						(function(container){
							var grid_1 = linker.grid_1 = new cpr.controls.Grid("grd1");
							grid_1.fieldLabel = "그리드 제목";
							grid_1.init({
								"dataSet": app.lookup("dsSubList"),
								"columns": [
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"}
								],
								"header": {
									"rows": [{"height": "27px"}],
									"cells": [
										{
											"constraint": {"rowIndex": 0, "colIndex": 0},
											"configurator": function(cell){
												cell.targetColumnName = "CD";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "CD";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 1},
											"configurator": function(cell){
												cell.targetColumnName = "CNM";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "CNM";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 2},
											"configurator": function(cell){
												cell.targetColumnName = "CD_DESC";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "CD_DESC";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 3},
											"configurator": function(cell){
												cell.targetColumnName = "SORT_ODR";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "SORT_ODR";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 4},
											"configurator": function(cell){
												cell.targetColumnName = "LOAD_YN";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "LOAD_YN";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 5},
											"configurator": function(cell){
												cell.targetColumnName = "OUT_YN";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "OUT_YN";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 6},
											"configurator": function(cell){
												cell.targetColumnName = "USE_YN";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "USE_YN";
											}
										}
									]
								},
								"detail": {
									"rows": [{"height": "24px"}],
									"cells": [
										{
											"constraint": {"rowIndex": 0, "colIndex": 0},
											"configurator": function(cell){
												cell.columnName = "CD";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 1},
											"configurator": function(cell){
												cell.columnName = "CNM";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 2},
											"configurator": function(cell){
												cell.columnName = "CD_DESC";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 3},
											"configurator": function(cell){
												cell.columnName = "SORT_ODR";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 4},
											"configurator": function(cell){
												cell.columnName = "LOAD_YN";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 5},
											"configurator": function(cell){
												cell.columnName = "OUT_YN";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 6},
											"configurator": function(cell){
												cell.columnName = "USE_YN";
											}
										}
									]
								}
							});
							container.addChild(grid_1, {
								"colIndex": 0,
								"rowIndex": 1,
								"colSpan": 2,
								"rowSpan": 1,
								"verticalAlign": "fill"
							});
							var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comButton("combutton1");
							container.addChild(userDefinedControl_2, {
								"colIndex": 1,
								"rowIndex": 0
							});
							var userDefinedControl_3 = new udc.com.comFormTitle("comformtitle3");
							userDefinedControl_3.title = "프리폼 연결그리드";
							container.addChild(userDefinedControl_3, {
								"colIndex": 0,
								"rowIndex": 0
							});
						})(group_9);
						container.addChild(group_9, {
							"autoSize": "none",
							"width": "658px",
							"height": "200px"
						});
						var group_10 = new cpr.controls.Container("grp9");
						// Layout
						var formLayout_3 = new cpr.controls.layouts.FormLayout();
						formLayout_3.setColumns(["1fr", "60px"]);
						formLayout_3.setRows(["25px", "1fr"]);
						group_10.setLayout(formLayout_3);
						(function(container){
							var group_11 = linker.group_11 = new cpr.controls.Container("grpFreeForm");
							group_11.style.setClasses(["form-box"]);
							// Layout
							var formLayout_4 = new cpr.controls.layouts.FormLayout();
							formLayout_4.scrollable = true;
							formLayout_4.topMargin = "5px";
							formLayout_4.rightMargin = "5px";
							formLayout_4.bottomMargin = "5px";
							formLayout_4.leftMargin = "5px";
							formLayout_4.setColumns(["85px", "1fr", "85px", "1fr"]);
							formLayout_4.setRows(["25px", "25px", "25px", "25px"]);
							group_11.setLayout(formLayout_4);
							(function(container){
								var output_8 = new cpr.controls.Output("otp9");
								output_8.value = "코드";
								container.addChild(output_8, {
									"colIndex": 0,
									"rowIndex": 0
								});
								var output_9 = new cpr.controls.Output("otp10");
								output_9.value = "로드여부";
								container.addChild(output_9, {
									"colIndex": 0,
									"rowIndex": 1
								});
								var output_10 = new cpr.controls.Output("otp11");
								output_10.value = "사용여부";
								container.addChild(output_10, {
									"colIndex": 0,
									"rowIndex": 2
								});
								var output_11 = new cpr.controls.Output("otp12");
								output_11.value = "코드명";
								container.addChild(output_11, {
									"colIndex": 2,
									"rowIndex": 0
								});
								var output_12 = new cpr.controls.Output("otp13");
								output_12.value = "출력여부";
								container.addChild(output_12, {
									"colIndex": 2,
									"rowIndex": 1
								});
								var output_13 = new cpr.controls.Output("otp14");
								output_13.value = "정렬순서";
								container.addChild(output_13, {
									"colIndex": 2,
									"rowIndex": 2
								});
								var output_14 = new cpr.controls.Output("otp16");
								output_14.value = "코드설명";
								container.addChild(output_14, {
									"colIndex": 0,
									"rowIndex": 3
								});
								var inputBox_1 = new cpr.controls.InputBox("ipbCnm");
								inputBox_1.bind("value").toDataColumn("CNM");
								container.addChild(inputBox_1, {
									"colIndex": 3,
									"rowIndex": 0
								});
								var inputBox_2 = new cpr.controls.InputBox("ipbCd");
								inputBox_2.readOnly = true;
								inputBox_2.bind("value").toDataColumn("CD");
								container.addChild(inputBox_2, {
									"colIndex": 1,
									"rowIndex": 0
								});
								var inputBox_3 = new cpr.controls.InputBox("ipbCdDesc");
								inputBox_3.bind("value").toDataColumn("CD_DESC");
								container.addChild(inputBox_3, {
									"colIndex": 1,
									"rowIndex": 3,
									"colSpan": 3,
									"rowSpan": 1
								});
								var inputBox_4 = new cpr.controls.InputBox("ipbStOd");
								inputBox_4.bind("value").toDataColumn("SORT_ODR");
								container.addChild(inputBox_4, {
									"colIndex": 3,
									"rowIndex": 2
								});
								var comboBox_1 = new cpr.controls.ComboBox("cmbLdYn");
								comboBox_1.bind("value").toDataColumn("LOAD_YN");
								(function(comboBox_1){
									comboBox_1.addItem(new cpr.controls.Item("전체", ""));
									comboBox_1.setItemSet(app.lookup("dsCode03"), {
										"label": "cd_nm",
										"value": "cd"
									});
								})(comboBox_1);
								container.addChild(comboBox_1, {
									"colIndex": 1,
									"rowIndex": 1
								});
								var comboBox_2 = new cpr.controls.ComboBox("cmbUsYn");
								comboBox_2.bind("value").toDataColumn("USE_YN");
								(function(comboBox_2){
									comboBox_2.addItem(new cpr.controls.Item("전체", ""));
									comboBox_2.setItemSet(app.lookup("dsCode03"), {
										"label": "cd_nm",
										"value": "cd"
									});
								})(comboBox_2);
								container.addChild(comboBox_2, {
									"colIndex": 1,
									"rowIndex": 2
								});
								var comboBox_3 = new cpr.controls.ComboBox("cmbOtYn");
								comboBox_3.bind("value").toDataColumn("OUT_YN");
								(function(comboBox_3){
									comboBox_3.addItem(new cpr.controls.Item("전체", ""));
									comboBox_3.setItemSet(app.lookup("dsCode03"), {
										"label": "cd_nm",
										"value": "cd"
									});
								})(comboBox_3);
								container.addChild(comboBox_3, {
									"colIndex": 3,
									"rowIndex": 1
								});
							})(group_11);
							container.addChild(group_11, {
								"colIndex": 0,
								"rowIndex": 1,
								"colSpan": 2,
								"rowSpan": 1
							});
							var button_1 = new cpr.controls.Button("btnFormClear");
							button_1.value = "초기화";
							button_1.style.setClasses(["btnFormClear"]);
							container.addChild(button_1, {
								"colIndex": 1,
								"rowIndex": 0
							});
							var userDefinedControl_4 = new udc.com.comFormTitle("comformtitle2");
							userDefinedControl_4.title = "상세 입력폼 ";
							container.addChild(userDefinedControl_4, {
								"colIndex": 0,
								"rowIndex": 0
							});
						})(group_10);
						container.addChild(group_10, {
							"autoSize": "none",
							"width": "657px",
							"height": "200px"
						});
					})(group_8);
					container.addChild(group_8, {
						"autoSize": "height",
						"width": "1210px",
						"height": "800px"
					});
				})(group_7);
				container.addChild(group_7, {
					"autoSize": "height",
					"width": "1270px",
					"height": "1000px"
				});
			})(group_2);
			container.addChild(group_2, {
				"autoSize": "height",
				"width": "400px",
				"height": "1800px"
			});
			// Linking
			linker.userDefinedControl_2.grid = linker.grid_1;
			linker.group_11.setBindContext(new cpr.bind.GridSelectionContext(linker.grid_1));
		}
	});
	app.title = "그리드 행과 폼 바인딩";
	cpr.core.Platform.INSTANCE.register(app);
})();
