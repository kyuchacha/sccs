/*
 * App URI: app/exam/guide/form/prev/FormSampleEtc01Prev
 * Source Location: app/exam/guide/form/prev/FormSampleEtc01Prev.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/exam/guide/form/prev/FormSampleEtc01Prev", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * FormSampleEtc01.js
			 * Created at 2020. 5. 29. 오후 5:43:51.
			 *
			 * @author 1073903
			 ************************************************/
			
			var util = createCommonUtil();
			
			
			/*
			 * Body에서 init 이벤트 발생 시 호출.
			 * 앱이 최초 구성될 때 발생하는 이벤트 입니다.
			 */
			function onBodyInit( /* cpr.events.CEvent */ e) {
				//그리드 초기화
				util.Grid.init(app, ["grd1"]);
				
				//폼 초기화
				util.FreeForm.init(app, ["grpFormFunc", "grpFormCont", "grp3", "grpFreeForm"]);
			}
			
			
			/*
			 * "초기화" 버튼(btnFormClear)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnFormClearClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnFormClear = e.control;
				util.Group.clear(app, "grpFreeForm");
			}
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsSubList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CNM"},
					{"name": "CD_DESC"},
					{"name": "SORT_ODR"},
					{"name": "LOAD_YN"},
					{"name": "OUT_YN"},
					{"name": "USE_YN"}
				],
				"rows": [
					{"CD": "00001", "CNM": "코드1", "CD_DESC": "코드설명1", "SORT_ODR": "0001", "LOAD_YN": "N", "OUT_YN": "Y", "USE_YN": "Y"},
					{"CD": "00002", "CNM": "코드2", "CD_DESC": "코드설명2", "SORT_ODR": "0002", "LOAD_YN": "N", "OUT_YN": "N", "USE_YN": "Y"},
					{"CD": "00003", "CNM": "코드3", "CD_DESC": "코드설명3", "SORT_ODR": "0003", "LOAD_YN": "Y", "OUT_YN": "Y", "USE_YN": "N"},
					{"CD": "00004", "CNM": "코드4", "CD_DESC": "코드설명4", "SORT_ODR": "0004", "LOAD_YN": "Y", "OUT_YN": "Y", "USE_YN": "N"},
					{"CD": "00005", "CNM": "코드5", "CD_DESC": "코드설명5", "SORT_ODR": "0005", "LOAD_YN": "Y", "OUT_YN": "N", "USE_YN": "Y"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsCode03");
			dataSet_2.parseData({
				"columns": [
					{"name": "cd"},
					{
						"name": "cd_nm",
						"displayOnly": false
					}
				],
				"rows": [
					{"cd": "Y", "cd_nm": "Y"},
					{"cd": "N", "cd_nm": "N"}
				]
			});
			app.register(dataSet_2);
			
			app.supportMedia("all and (min-width: 1320px)", "eXFrame");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1319px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader");
			userDefinedControl_1.initializeYn = "N";
			userDefinedControl_1.groupBoxIds = "grpContent";
			container.addChild(userDefinedControl_1, {
				"autoSize": "none",
				"width": "998px",
				"height": "30px"
			});
			
			var group_1 = new cpr.controls.Container("grpContent");
			group_1.userAttr({"fillLayout": "Y"});
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.scrollable = false;
			formLayout_1.horizontalSpacing = "5px";
			formLayout_1.setColumns(["1fr", "1fr"]);
			formLayout_1.setRows(["200px", "1fr"]);
			group_1.setLayout(formLayout_1);
			(function(container){
				var group_2 = new cpr.controls.Container("grp7");
				// Layout
				var formLayout_2 = new cpr.controls.layouts.FormLayout();
				formLayout_2.setColumns(["1fr"]);
				formLayout_2.setRows(["25px", "1fr"]);
				group_2.setLayout(formLayout_2);
				(function(container){
					var group_3 = new cpr.controls.Container("grpFormCont");
					group_3.style.setClasses(["form-box"]);
					// Layout
					var formLayout_3 = new cpr.controls.layouts.FormLayout();
					formLayout_3.topMargin = "5px";
					formLayout_3.rightMargin = "5px";
					formLayout_3.bottomMargin = "5px";
					formLayout_3.leftMargin = "5px";
					formLayout_3.setColumns(["100px", "1fr"]);
					formLayout_3.setRows(["1fr", "1fr"]);
					group_3.setLayout(formLayout_3);
					(function(container){
						var output_1 = new cpr.controls.Output("otp25");
						output_1.value = "시나리오";
						container.addChild(output_1, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var output_2 = new cpr.controls.Output("otp26");
						output_2.value = "추가설명";
						container.addChild(output_2, {
							"colIndex": 0,
							"rowIndex": 1
						});
						var inputBox_1 = new cpr.controls.InputBox("ipb1");
						inputBox_1.readOnly = true;
						inputBox_1.value = "1. 그리드와 프리폼간의 데이터 맵핑방법을 확인한다.";
						container.addChild(inputBox_1, {
							"colIndex": 1,
							"rowIndex": 0
						});
						var textArea_1 = new cpr.controls.TextArea("txa1");
						textArea_1.readOnly = true;
						textArea_1.value = "1. 그리드 데이터 맵핑방법\r\n : 폼 선택 -> properties -> 바인딩 -> '문맥' 더블클릭 ->  문맥유형: 선택행 컨텍스트, 컨트롤: 그리드ID 선택";
						container.addChild(textArea_1, {
							"colIndex": 1,
							"rowIndex": 1
						});
					})(group_3);
					container.addChild(group_3, {
						"colIndex": 0,
						"rowIndex": 1,
						"colSpan": 1,
						"rowSpan": 1
					});
					var userDefinedControl_2 = new udc.com.comFormTitle("comformtitle4");
					userDefinedControl_2.title = "시나리오";
					container.addChild(userDefinedControl_2, {
						"colIndex": 0,
						"rowIndex": 0
					});
				})(group_2);
				container.addChild(group_2, {
					"colIndex": 0,
					"rowIndex": 1,
					"colSpan": 2,
					"rowSpan": 1
				});
				var group_4 = new cpr.controls.Container("grp9");
				// Layout
				var formLayout_4 = new cpr.controls.layouts.FormLayout();
				formLayout_4.setColumns(["1fr", "60px"]);
				formLayout_4.setRows(["25px", "1fr"]);
				group_4.setLayout(formLayout_4);
				(function(container){
					var group_5 = linker.group_5 = new cpr.controls.Container("grpFreeForm");
					group_5.style.setClasses(["form-box"]);
					// Layout
					var formLayout_5 = new cpr.controls.layouts.FormLayout();
					formLayout_5.scrollable = true;
					formLayout_5.topMargin = "5px";
					formLayout_5.rightMargin = "5px";
					formLayout_5.bottomMargin = "5px";
					formLayout_5.leftMargin = "5px";
					formLayout_5.setColumns(["85px", "1fr", "85px", "1fr"]);
					formLayout_5.setRows(["25px", "25px", "25px", "25px"]);
					group_5.setLayout(formLayout_5);
					(function(container){
						var output_3 = new cpr.controls.Output("otp9");
						output_3.value = "코드";
						container.addChild(output_3, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var output_4 = new cpr.controls.Output("otp10");
						output_4.value = "로드여부";
						container.addChild(output_4, {
							"colIndex": 0,
							"rowIndex": 1
						});
						var output_5 = new cpr.controls.Output("otp11");
						output_5.value = "사용여부";
						container.addChild(output_5, {
							"colIndex": 0,
							"rowIndex": 2
						});
						var output_6 = new cpr.controls.Output("otp12");
						output_6.value = "코드명";
						container.addChild(output_6, {
							"colIndex": 2,
							"rowIndex": 0
						});
						var output_7 = new cpr.controls.Output("otp13");
						output_7.value = "출력여부";
						container.addChild(output_7, {
							"colIndex": 2,
							"rowIndex": 1
						});
						var output_8 = new cpr.controls.Output("otp14");
						output_8.value = "정렬순서";
						container.addChild(output_8, {
							"colIndex": 2,
							"rowIndex": 2
						});
						var output_9 = new cpr.controls.Output("otp16");
						output_9.value = "코드설명";
						container.addChild(output_9, {
							"colIndex": 0,
							"rowIndex": 3
						});
						var inputBox_2 = new cpr.controls.InputBox("ipbCnm");
						inputBox_2.bind("value").toDataColumn("CNM");
						container.addChild(inputBox_2, {
							"colIndex": 3,
							"rowIndex": 0
						});
						var inputBox_3 = new cpr.controls.InputBox("ipbCd");
						inputBox_3.readOnly = true;
						inputBox_3.bind("value").toDataColumn("CD");
						container.addChild(inputBox_3, {
							"colIndex": 1,
							"rowIndex": 0
						});
						var inputBox_4 = new cpr.controls.InputBox("ipbCdDesc");
						inputBox_4.bind("value").toDataColumn("CD_DESC");
						container.addChild(inputBox_4, {
							"colIndex": 1,
							"rowIndex": 3,
							"colSpan": 3,
							"rowSpan": 1
						});
						var inputBox_5 = new cpr.controls.InputBox("ipbStOd");
						inputBox_5.bind("value").toDataColumn("SORT_ODR");
						container.addChild(inputBox_5, {
							"colIndex": 3,
							"rowIndex": 2
						});
						var comboBox_1 = new cpr.controls.ComboBox("cmbLdYn");
						comboBox_1.bind("value").toDataColumn("LOAD_YN");
						(function(comboBox_1){
							comboBox_1.addItem(new cpr.controls.Item("전체", ""));
							comboBox_1.setItemSet(app.lookup("dsCode03"), {
								"label": "cd_nm",
								"value": "cd"
							});
						})(comboBox_1);
						container.addChild(comboBox_1, {
							"colIndex": 1,
							"rowIndex": 1
						});
						var comboBox_2 = new cpr.controls.ComboBox("cmbUsYn");
						comboBox_2.bind("value").toDataColumn("USE_YN");
						(function(comboBox_2){
							comboBox_2.addItem(new cpr.controls.Item("전체", ""));
							comboBox_2.setItemSet(app.lookup("dsCode03"), {
								"label": "cd_nm",
								"value": "cd"
							});
						})(comboBox_2);
						container.addChild(comboBox_2, {
							"colIndex": 1,
							"rowIndex": 2
						});
						var comboBox_3 = new cpr.controls.ComboBox("cmbOtYn");
						comboBox_3.bind("value").toDataColumn("OUT_YN");
						(function(comboBox_3){
							comboBox_3.addItem(new cpr.controls.Item("전체", ""));
							comboBox_3.setItemSet(app.lookup("dsCode03"), {
								"label": "cd_nm",
								"value": "cd"
							});
						})(comboBox_3);
						container.addChild(comboBox_3, {
							"colIndex": 3,
							"rowIndex": 1
						});
					})(group_5);
					container.addChild(group_5, {
						"colIndex": 0,
						"rowIndex": 1,
						"colSpan": 2,
						"rowSpan": 1
					});
					var button_1 = new cpr.controls.Button("btnFormClear");
					button_1.value = "초기화";
					button_1.style.setClasses(["btnFormClear"]);
					if(typeof onBtnFormClearClick == "function") {
						button_1.addEventListener("click", onBtnFormClearClick);
					}
					container.addChild(button_1, {
						"colIndex": 1,
						"rowIndex": 0
					});
					var userDefinedControl_3 = new udc.com.comFormTitle("comformtitle2");
					userDefinedControl_3.title = "상세 입력폼 ";
					container.addChild(userDefinedControl_3, {
						"colIndex": 0,
						"rowIndex": 0
					});
				})(group_4);
				container.addChild(group_4, {
					"colIndex": 1,
					"rowIndex": 0
				});
				var group_6 = new cpr.controls.Container("grpData");
				// Layout
				var formLayout_6 = new cpr.controls.layouts.FormLayout();
				formLayout_6.setColumns(["1fr", "260px"]);
				formLayout_6.setRows(["25px", "1fr"]);
				group_6.setLayout(formLayout_6);
				(function(container){
					var grid_1 = linker.grid_1 = new cpr.controls.Grid("grd1");
					grid_1.fieldLabel = "그리드 제목";
					grid_1.init({
						"dataSet": app.lookup("dsSubList"),
						"columns": [
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"}
						],
						"header": {
							"rows": [{"height": "27px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.targetColumnName = "CD";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "CD";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.targetColumnName = "CNM";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "CNM";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.targetColumnName = "CD_DESC";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "CD_DESC";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3},
									"configurator": function(cell){
										cell.targetColumnName = "SORT_ODR";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "SORT_ODR";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 4},
									"configurator": function(cell){
										cell.targetColumnName = "LOAD_YN";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "LOAD_YN";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 5},
									"configurator": function(cell){
										cell.targetColumnName = "OUT_YN";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "OUT_YN";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 6},
									"configurator": function(cell){
										cell.targetColumnName = "USE_YN";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "USE_YN";
									}
								}
							]
						},
						"detail": {
							"rows": [{"height": "24px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.columnName = "CD";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.columnName = "CNM";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.columnName = "CD_DESC";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3},
									"configurator": function(cell){
										cell.columnName = "SORT_ODR";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 4},
									"configurator": function(cell){
										cell.columnName = "LOAD_YN";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 5},
									"configurator": function(cell){
										cell.columnName = "OUT_YN";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 6},
									"configurator": function(cell){
										cell.columnName = "USE_YN";
									}
								}
							]
						}
					});
					container.addChild(grid_1, {
						"colIndex": 0,
						"rowIndex": 1,
						"colSpan": 2,
						"rowSpan": 1,
						"verticalAlign": "fill"
					});
					var userDefinedControl_4 = linker.userDefinedControl_4 = new udc.com.comButton("combutton1");
					container.addChild(userDefinedControl_4, {
						"colIndex": 1,
						"rowIndex": 0
					});
					var userDefinedControl_5 = new udc.com.comFormTitle("comformtitle3");
					userDefinedControl_5.title = "프리폼 연결그리드";
					container.addChild(userDefinedControl_5, {
						"colIndex": 0,
						"rowIndex": 0
					});
				})(group_6);
				container.addChild(group_6, {
					"colIndex": 0,
					"rowIndex": 0
				});
			})(group_1);
			container.addChild(group_1, {
				"width": "972px",
				"height": "645px"
			});
			if(typeof onBodyInit == "function"){
				app.addEventListener("init", onBodyInit);
			}
			// Linking
			linker.group_5.setBindContext(new cpr.bind.GridSelectionContext(linker.grid_1));
			linker.userDefinedControl_4.grid = linker.grid_1;
		}
	});
	app.title = "그리드행과 폼바인딩";
	cpr.core.Platform.INSTANCE.register(app);
})();
