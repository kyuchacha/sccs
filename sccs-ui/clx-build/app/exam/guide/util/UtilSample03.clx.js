/*
 * App URI: app/exam/guide/util/UtilSample03
 * Source Location: app/exam/guide/util/UtilSample03.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/exam/guide/util/UtilSample03", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * UtilSample03.js
			 * Created at 2022. 3. 11. 오전 10:15:36.
			 *
			 * @author jiyeon
			 ************************************************/
			
			var util = createCommonUtil();
			
			/*
			 * 루트 컨테이너에서 init 이벤트 발생 시 호출.
			 * 앱이 최초 구성될 때 발생하는 이벤트 입니다.
			 */
			function onBodyInit(e){
				util.FreeForm.init(app, ["grpFormFunc"]);
			}
			
			
			/*
			 * "isEmail" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick(e){
				var button = e.control;
				
				//함수 실행
				var result = f_IsEmail();
				
				//스크립트 출력
				printSource(f_IsEmail);
				
				//결과 표시
				var txt = "E-mail 유형인가? [ " + result + " ]";
				printResult(txt);
			}
			
			function f_IsEmail() {
				var psVal = util.Control.getValue(app, "ipbIsEmail");
				//해당 값이 'E-mail' 유형인지 여부를 반환
			//	var result = util.Validator.isEmail(psVal);
				var result = TypeUtil.isEmail(psVal);
				return result;
			}
			
			
			/*
			 * "isURL" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick2(e){
				var button = e.control;
				
				//공통모듈 실행
				var result = f_IsURL();
				
				//스크립트 출력
				printSource(f_IsURL);
				
				//결과 표시
				var txt = "URL 형식인가? [ " + result + " ]";
				printResult(txt);
			}
			
			function f_IsURL() {
				var psVal = util.Control.getValue(app, "ipbIsURL");
				//해당 값이 'URL' 형식에 맞는 문자열인지 여부를 반환
			//	var result = util.Validator.isURL(psVal);
				var result = TypeUtil.isURL(psVal);
				return result;
			}
			
			
			/*
			 * "isBizCSN" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click(e){
				var btn1 = e.control;
				
				//공통모듈 실행
				var result = f_IsBizCSN();
				
				//스크립트 출력
				printSource(f_IsBizCSN);
				
				//결과 표시
				var txt = "사업자번호 형식에 맞는가? [ " + result + " ]";
				printResult(txt);
			}
			
			function f_IsBizCSN() {
				var psVal = util.Control.getValue(app, "ipbIsBiz");
				//해당 값이 '사업자 번호' 형식에 맞는 문자열인지 여부를 반환
			//	var result = util.Validator.isBizCSN(psVal);
				var result = TypeUtil.isBizCSN(psVal);
				return result;
			}
			
			
			/*
			 * "isSSN" 버튼(btn2)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn2Click(e){
				var btn2 = e.control;
				
				//공통모듈 실행
				var result = f_IsSSN();
				
				//스크립트 출력
				printSource(f_IsSSN);
				
				//결과 표시
				var txt = "주민등록번호 형식에 맞는가? [ " + result + " ]";
				printResult(txt);
			}
			
			function f_IsSSN() {
				var psVal = util.Control.getValue(app, "ipbIsSSN");
				//해당 값이 '주민등록번호' 형식에 맞는지 여부를 반환
			//	var result = util.Validator.isSSN(psVal);
				var result = TypeUtil.isSSN(psVal);
				return result;
			}
			
			
			/*
			 * "isTelNo" 버튼(btn3)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn3Click(e){
				var btn3 = e.control;
				
				//공통모듈 실행
				var result = f_IsTelNo();
				
				//스크립트 출력
				printSource(f_IsTelNo);
				
				//결과 표시
				var txt = "전화번호 형식에 맞는가? [ " + result + " ]";
				printResult(txt);
			}
			
			function f_IsTelNo() {
				var psVal = util.Control.getValue(app, "ipbIsTelNo");
				//해당 값이 일반 '전화번호' 형식에 맞는 문자열인지 여부를 반환
			//	var result = util.Validator.isTelNo(psVal);
				var result = TypeUtil.isTelNo(psVal);
				return result;
			}
			
			
			/*
			 * "isTelMobile" 버튼(btn4)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn4Click(e){
				var btn4 = e.control;
				
				//공통모듈 실행
				var result = f_IsTelMobile();
				
				//스크립트 출력
				printSource(f_IsTelMobile);
				
				//결과 표시
				var txt = "핸드폰번호 형식에 맞는가? [ " + result + " ]";
				printResult(txt);
			}
			
			function f_IsTelMobile() {
				var psVal = util.Control.getValue(app, "ipbIsTelMob");
				//해당 값이 '핸드폰번호' 형식에 맞는 문자열인지 여부를 반환
			//	var result = util.Validator.isTelMobile(psVal);
				var result = TypeUtil.isTelMobile(psVal);
				return result;
			}
			
			
			/*
			 * "isFunc" 버튼(btn5)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn5Click(e){
				var btn5 = e.control;
				
				//공통모듈 실행
				var result = f_IsFunc();
				
				//스크립트 출력
				printSource(f_IsFunc);
				
				//결과 표시
				var txt = "function 유형인가? [ " + result + " ]";
				printResult(txt);
			}
			
			function f_IsFunc() {
				var poFunc = util.Control.getValue(app, "rdbIsFunc");
				
				if (poFunc == "Y") {
					var temp = function() {};
				} else {
					var temp = "";
				}
				
				//alert(util.Validator.isFunc(temp));
				//해당 값이 'function' 유형인지 여부를 반환
			//	var result = util.Validator.isFunc(temp);
				var result = util.isFunc(temp);
				return result;
			}
			
			
			
			//== 스크립트 출력 ==//
			function printSource(value) {
				/* 에디터에 소스 표시 */
				var vcAceEditor = app.lookup("ace1");
				vcAceEditor.value = value;	
			}
			
			
			
			//== 결과 표시 ==//
			function printResult(value) {
				app.lookup("optRslt").value = value;
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsList");
			dataSet_1.parseData({
				"columns": [
					{"name": "col1"},
					{"name": "col2"},
					{"name": "col3"},
					{"name": "col4"}
				],
				"rows": [
					{"col1": "ID0001", "col2": "박보검", "col3": "010-1234-5678", "col4": "서울시 여의도"},
					{"col1": "ID0002", "col2": "홍길동", "col3": "010-1234-5678", "col4": "서울시 동작구 123"},
					{"col1": "ID0003", "col2": "이순신", "col3": "010-1234-5678", "col4": "경기도 의정부시 111"},
					{"col1": "ID0004", "col2": "송혜교", "col3": "010-1234-5678", "col4": "서울시 노원구 중계동"},
					{"col1": "ID0004", "col2": "이보영", "col3": "010-1234-5678", "col4": "서울시 강북구"},
					{"col1": "ID0005", "col2": "임장군", "col3": "010-1234-5678", "col4": "서울시 여의도 영등포동"},
					{"col1": "ID0005", "col2": "김토마토", "col3": "010-1234-5678", "col4": "서울시 여의도 영등포동"},
					{"col1": "ID0005", "col2": "김퇴직", "col3": "010-1234-5678", "col4": "서울시 여의도 영등포동"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsListOrg");
			dataSet_2.parseData({
				"columns": [
					{"name": "col1"},
					{"name": "col2"},
					{"name": "col3"},
					{"name": "col4"}
				],
				"rows": [
					{"col1": "ID0001", "col2": "박보검", "col3": "010-1234-5678", "col4": "서울시 여의도"},
					{"col1": "ID0002", "col2": "홍길동", "col3": "010-1234-5678", "col4": "서울시 동작구 123"},
					{"col1": "ID0003", "col2": "이순신", "col3": "010-1234-5678", "col4": "경기도 의정부시 111"},
					{"col1": "ID0004", "col2": "송혜교", "col3": "010-1234-5678", "col4": "서울시 노원구 중계동"},
					{"col1": "ID0004", "col2": "이보영", "col3": "010-1234-5678", "col4": "서울시 강북구"},
					{"col1": "ID0005", "col2": "임장군", "col3": "010-1234-5678", "col4": "서울시 여의도 영등포동"},
					{"col1": "ID0005", "col2": "김토마토", "col3": "010-1234-5678", "col4": "서울시 여의도 영등포동"},
					{"col1": "ID0005", "col2": "김퇴직", "col3": "010-1234-5678", "col4": "서울시 여의도 영등포동"}
				]
			});
			app.register(dataSet_2);
			
			app.supportMedia("all and (min-width: 1320px)", "eXFrame");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1319px)", "default");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpHeader");
			// Layout
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			group_1.setLayout(verticalLayout_2);
			(function(container){
				var userDefinedControl_1 = new udc.com.appHeader("appheader1");
				container.addChild(userDefinedControl_1, {
					"width": "500px",
					"height": "30px"
				});
			})(group_1);
			container.addChild(group_1, {
				"autoSize": "height",
				"width": "400px",
				"height": "30px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var verticalLayout_3 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_3.leftMargin = 20;
			verticalLayout_3.rightMargin = 30;
			verticalLayout_3.topMargin = 30;
			verticalLayout_3.bottomMargin = 20;
			group_2.setLayout(verticalLayout_3);
			(function(container){
				var group_3 = new cpr.controls.Container();
				// Layout
				var verticalLayout_4 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_4.spacing = 20;
				verticalLayout_4.topMargin = 20;
				verticalLayout_4.bottomMargin = 40;
				group_3.setLayout(verticalLayout_4);
				(function(container){
					var group_4 = new cpr.controls.Container("grp1");
					// Layout
					var formLayout_1 = new cpr.controls.layouts.FormLayout();
					formLayout_1.scrollable = false;
					formLayout_1.rightMargin = "50px";
					formLayout_1.horizontalSpacing = "5px";
					formLayout_1.verticalSpacing = "5px";
					formLayout_1.setColumns(["150px", "100px"]);
					formLayout_1.setColumnAutoSizing(0, true);
					formLayout_1.setColumnAutoSizing(1, true);
					formLayout_1.setRows(["1fr"]);
					group_4.setLayout(formLayout_1);
					(function(container){
						var output_1 = new cpr.controls.Output();
						output_1.value = "Validator 기능";
						output_1.style.css({
							"font-weight" : "bold",
							"padding-left" : "1rem",
							"font-size" : "2.5rem"
						});
						container.addChild(output_1, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var output_2 = new cpr.controls.Output();
						output_2.value = "TypeUtil";
						output_2.style.setClasses(["text-primary"]);
						output_2.style.css({
							"font-weight" : "bold",
							"padding-left" : "3rem",
							"font-size" : "1.25rem",
							"text-align" : "left"
						});
						container.addChild(output_2, {
							"colIndex": 1,
							"rowIndex": 0,
							"verticalAlign": "bottom",
							"height": 35
						});
					})(group_4);
					container.addChild(group_4, {
						"autoSize": "height",
						"width": "1270px",
						"height": "40px"
					});
					var output_3 = new cpr.controls.Output();
					output_3.value = "이 페이지에서는 변수의 타입체크 기능을 하는 TypeUtil 공통모듈에 대해 설명합니다.";
					output_3.style.setClasses(["opt-tmpl"]);
					output_3.style.css({
						"padding-left" : "1rem",
						"font-size" : "1rem"
					});
					container.addChild(output_3, {
						"autoSize": "height",
						"width": "1210px",
						"height": "46px"
					});
				})(group_3);
				container.addChild(group_3, {
					"autoSize": "height",
					"width": "1270px",
					"height": "120px"
				});
				var group_5 = new cpr.controls.Container();
				// Layout
				var verticalLayout_5 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_5.spacing = 20;
				verticalLayout_5.topMargin = 20;
				verticalLayout_5.bottomMargin = 40;
				group_5.setLayout(verticalLayout_5);
				(function(container){
					var output_4 = new cpr.controls.Output();
					output_4.value = "시나리오";
					output_4.style.setClasses(["h1", "pl-3", "bg-primary", "text-white"]);
					output_4.style.css({
						"font-weight" : "bold",
						"padding-left" : "1rem",
						"font-size" : "1.75rem"
					});
					container.addChild(output_4, {
						"width": "100px",
						"height": "40px"
					});
					var output_5 = new cpr.controls.Output("ipbScenario");
					output_5.value = "1. 동작 버튼을 클릭한다. (필요시 입력값 입력)\r\n2. 기능 동작 및 결과값을 확인한다.\r\n3. 스크립트를 확인한다.\r\n스크립트를 복사하여 코딩에 활용한다.";
					output_5.style.setClasses(["opt-tmpl"]);
					output_5.style.css({
						"padding-left" : "1rem",
						"font-size" : "1rem"
					});
					container.addChild(output_5, {
						"autoSize": "height",
						"width": "1210px",
						"height": "107px"
					});
					var group_6 = new cpr.controls.Container("grp2");
					group_6.visible = false;
					group_6.style.css({
						"background-color" : "#dff7fb"
					});
					// Layout
					var verticalLayout_6 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_6.leftMargin = 30;
					verticalLayout_6.rightMargin = 30;
					verticalLayout_6.topMargin = 20;
					verticalLayout_6.bottomMargin = 20;
					group_6.setLayout(verticalLayout_6);
					(function(container){
						var output_6 = new cpr.controls.Output();
						output_6.value = "추가설명";
						output_6.style.setClasses(["text-info", "opt-tmpl"]);
						output_6.style.css({
							"font-weight" : "bold"
						});
						container.addChild(output_6, {
							"width": "100px",
							"height": "25px"
						});
						var output_7 = new cpr.controls.Output();
						output_7.value = "추가적으로 설명할 정보가 있다면 작성해주세요.";
						output_7.style.setClasses(["text-info", "opt-tmpl"]);
						container.addChild(output_7, {
							"autoSize": "height",
							"width": "100px",
							"height": "25px"
						});
					})(group_6);
					container.addChild(group_6, {
						"autoSize": "height",
						"width": "1100px",
						"height": "100px"
					});
				})(group_5);
				container.addChild(group_5, {
					"autoSize": "height",
					"width": "1270px",
					"height": "345px"
				});
				var group_7 = new cpr.controls.Container();
				group_7.userAttr({"floating-header": "true"});
				// Layout
				var verticalLayout_7 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_7.spacing = 15;
				verticalLayout_7.topMargin = 20;
				verticalLayout_7.bottomMargin = 0;
				group_7.setLayout(verticalLayout_7);
				(function(container){
					var output_8 = new cpr.controls.Output();
					output_8.value = "기능 확인";
					output_8.style.setClasses(["h1", "pl-3", "bg-primary", "text-white"]);
					output_8.style.css({
						"font-weight" : "bold",
						"padding-left" : "1rem",
						"font-size" : "1.75rem"
					});
					container.addChild(output_8, {
						"autoSize": "none",
						"width": "1270px",
						"height": "40px"
					});
					var group_8 = new cpr.controls.Container("grp3");
					group_8.visible = false;
					group_8.style.css({
						"border-right-style" : "solid",
						"border-top-width" : "1px",
						"border-bottom-color" : "#dedede",
						"border-right-width" : "1px",
						"border-left-color" : "#dedede",
						"border-right-color" : "#dedede",
						"border-left-width" : "1px",
						"border-top-style" : "solid",
						"background-color" : "#F0F0F0",
						"border-left-style" : "solid",
						"border-bottom-width" : "1px",
						"border-top-color" : "#dedede",
						"border-bottom-style" : "solid"
					});
					// Layout
					var verticalLayout_8 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_8.leftMargin = 30;
					verticalLayout_8.rightMargin = 30;
					verticalLayout_8.topMargin = 5;
					verticalLayout_8.bottomMargin = 10;
					group_8.setLayout(verticalLayout_8);
					(function(container){
						var group_9 = new cpr.controls.Container("grp5");
						// Layout
						var formLayout_2 = new cpr.controls.layouts.FormLayout();
						formLayout_2.scrollable = false;
						formLayout_2.topMargin = "0px";
						formLayout_2.rightMargin = "0px";
						formLayout_2.leftMargin = "0px";
						formLayout_2.horizontalSpacing = "5px";
						formLayout_2.verticalSpacing = "5px";
						formLayout_2.setColumns(["1fr"]);
						formLayout_2.setRows(["25px", "1fr"]);
						group_9.setLayout(formLayout_2);
						(function(container){
							var output_9 = new cpr.controls.Output();
							output_9.value = "<기능 확인 컨트롤>";
							output_9.style.setClasses(["opt-tmpl"]);
							output_9.style.css({
								"text-align" : "center"
							});
							output_9.bind("tooltip").toExpression("#ipbScenario.value");
							container.addChild(output_9, {
								"colIndex": 0,
								"rowIndex": 0
							});
							var grid_1 = new cpr.controls.Grid("grdList");
							grid_1.init({
								"dataSet": app.lookup("dsList"),
								"columns": [
									{"width": "25px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"}
								],
								"header": {
									"rows": [{"height": "24px"}],
									"cells": [
										{
											"constraint": {"rowIndex": 0, "colIndex": 0},
											"configurator": function(cell){
												cell.filterable = false;
												cell.sortable = false;
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 1},
											"configurator": function(cell){
												cell.targetColumnName = "col1";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "ID";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 2},
											"configurator": function(cell){
												cell.targetColumnName = "col2";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "성명";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 3},
											"configurator": function(cell){
												cell.targetColumnName = "col3";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "전화번호";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 4},
											"configurator": function(cell){
												cell.targetColumnName = "col4";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "주소";
											}
										}
									]
								},
								"detail": {
									"rows": [{"height": "24px"}],
									"cells": [
										{
											"constraint": {"rowIndex": 0, "colIndex": 0},
											"configurator": function(cell){
												cell.columnType = "rowindex";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 1},
											"configurator": function(cell){
												cell.columnName = "col1";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 2},
											"configurator": function(cell){
												cell.columnName = "col2";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 3},
											"configurator": function(cell){
												cell.columnName = "col3";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 4},
											"configurator": function(cell){
												cell.columnName = "col4";
											}
										}
									]
								}
							});
							container.addChild(grid_1, {
								"colIndex": 0,
								"rowIndex": 1
							});
						})(group_9);
						container.addChild(group_9, {
							"autoSize": "height",
							"width": "860px",
							"height": "250px"
						});
					})(group_8);
					if(typeof onGrp11Click == "function") {
						group_8.addEventListener("click", onGrp11Click);
					}
					container.addChild(group_8, {
						"autoSize": "height",
						"width": "1210px",
						"height": "300px"
					});
					var group_10 = new cpr.controls.Container("grp4");
					// Layout
					var formLayout_3 = new cpr.controls.layouts.FormLayout();
					formLayout_3.userResizingMode = "standard";
					formLayout_3.topMargin = "0px";
					formLayout_3.rightMargin = "0px";
					formLayout_3.bottomMargin = "0px";
					formLayout_3.leftMargin = "0px";
					formLayout_3.horizontalSpacing = "5px";
					formLayout_3.verticalSpacing = "5px";
					formLayout_3.setColumns(["1fr", "470px"]);
					formLayout_3.setRows(["1fr"]);
					group_10.setLayout(formLayout_3);
					(function(container){
						var group_11 = new cpr.controls.Container("grp7");
						group_11.style.setClasses(["form-box"]);
						// Layout
						var verticalLayout_9 = new cpr.controls.layouts.VerticalLayout();
						group_11.setLayout(verticalLayout_9);
						(function(container){
							var userDefinedControl_2 = new udc.tmp.Ace("ace1");
							container.addChild(userDefinedControl_2, {
								"autoSize": "height",
								"width": "418px",
								"height": "295px"
							});
						})(group_11);
						container.addChild(group_11, {
							"colIndex": 1,
							"rowIndex": 0
						});
						var group_12 = new cpr.controls.Container("grp6");
						// Layout
						var formLayout_4 = new cpr.controls.layouts.FormLayout();
						formLayout_4.horizontalSpacing = "5px";
						formLayout_4.verticalSpacing = "10px";
						formLayout_4.setColumns(["1fr", "10px"]);
						formLayout_4.setColumnAutoSizing(1, true);
						formLayout_4.setRows(["1fr"]);
						group_12.setLayout(formLayout_4);
						(function(container){
							var userDefinedControl_3 = new udc.com.udcSplit("udcsplit1");
							userDefinedControl_3.leftGrpId = "grp6";
							userDefinedControl_3.rightGrpId = "grp7";
							container.addChild(userDefinedControl_3, {
								"colIndex": 1,
								"rowIndex": 0,
								"colSpan": 1,
								"rowSpan": 1,
								"horizontalAlign": "right",
								"width": 9
							});
							var group_13 = new cpr.controls.Container("grp9");
							// Layout
							var formLayout_5 = new cpr.controls.layouts.FormLayout();
							formLayout_5.scrollable = false;
							formLayout_5.topMargin = "0px";
							formLayout_5.rightMargin = "0px";
							formLayout_5.bottomMargin = "0px";
							formLayout_5.leftMargin = "0px";
							formLayout_5.horizontalSpacing = "10px";
							formLayout_5.verticalSpacing = "10px";
							formLayout_5.setColumns(["1fr"]);
							formLayout_5.setRows(["40px", "1fr"]);
							formLayout_5.setRowAutoSizing(0, true);
							group_13.setLayout(formLayout_5);
							(function(container){
								var group_14 = new cpr.controls.Container("grp10");
								group_14.style.setClasses(["form-box"]);
								// Layout
								var formLayout_6 = new cpr.controls.layouts.FormLayout();
								formLayout_6.scrollable = false;
								formLayout_6.topMargin = "5px";
								formLayout_6.rightMargin = "30px";
								formLayout_6.bottomMargin = "5px";
								formLayout_6.leftMargin = "5px";
								formLayout_6.horizontalSpacing = "5px";
								formLayout_6.verticalSpacing = "5px";
								formLayout_6.setColumns(["100px", "1fr"]);
								formLayout_6.setRows(["1fr"]);
								group_14.setLayout(formLayout_6);
								(function(container){
									var output_10 = new cpr.controls.Output();
									output_10.value = "결과값";
									output_10.style.css({
										"background-color" : "#e1edfe",
										"background-image" : "none",
										"padding-right" : "1rem"
									});
									container.addChild(output_10, {
										"colIndex": 0,
										"rowIndex": 0
									});
									var output_11 = new cpr.controls.Output("optRslt");
									output_11.value = "";
									output_11.style.css({
										"background-color" : "white",
										"border-right-style" : "none",
										"border-left-style" : "none",
										"padding-left" : "1rem",
										"border-bottom-style" : "none",
										"border-top-style" : "none",
										"text-align" : "left"
									});
									container.addChild(output_11, {
										"colIndex": 1,
										"rowIndex": 0
									});
								})(group_14);
								container.addChild(group_14, {
									"colIndex": 0,
									"rowIndex": 0
								});
								var group_15 = new cpr.controls.Container("grpFormFunc");
								group_15.style.setClasses(["form-box"]);
								// Layout
								var formLayout_7 = new cpr.controls.layouts.FormLayout();
								formLayout_7.topMargin = "5px";
								formLayout_7.rightMargin = "5px";
								formLayout_7.bottomMargin = "5px";
								formLayout_7.leftMargin = "5px";
								formLayout_7.horizontalSpacing = "5px";
								formLayout_7.verticalSpacing = "5px";
								formLayout_7.setColumns(["24px", "200px", "1fr", "170px", "120px"]);
								formLayout_7.setColumnAutoSizing(1, true);
								formLayout_7.setRows(["25px", "25px", "25px", "25px", "25px", "25px", "25px", "25px"]);
								formLayout_7.setRowAutoSizing(1, true);
								formLayout_7.setRowAutoSizing(2, true);
								formLayout_7.setRowAutoSizing(3, true);
								formLayout_7.setRowAutoSizing(4, true);
								formLayout_7.setRowAutoSizing(5, true);
								formLayout_7.setRowAutoSizing(6, true);
								formLayout_7.setRowAutoSizing(7, true);
								group_15.setLayout(formLayout_7);
								(function(container){
									var output_12 = new cpr.controls.Output();
									output_12.value = "No";
									output_12.style.css({
										"background-color" : "#e1edfe",
										"background-image" : "none",
										"text-align" : "center"
									});
									container.addChild(output_12, {
										"colIndex": 0,
										"rowIndex": 0
									});
									var output_13 = new cpr.controls.Output();
									output_13.value = "함수";
									output_13.style.css({
										"background-color" : "#e1edfe",
										"background-image" : "none",
										"text-align" : "center"
									});
									container.addChild(output_13, {
										"colIndex": 1,
										"rowIndex": 0
									});
									var output_14 = new cpr.controls.Output();
									output_14.value = "설명";
									output_14.style.css({
										"background-color" : "#e1edfe",
										"background-image" : "none",
										"text-align" : "center"
									});
									container.addChild(output_14, {
										"colIndex": 2,
										"rowIndex": 0
									});
									var output_15 = new cpr.controls.Output();
									output_15.value = "입력값";
									output_15.style.css({
										"background-color" : "#e1edfe",
										"background-image" : "none",
										"text-align" : "center"
									});
									container.addChild(output_15, {
										"colIndex": 3,
										"rowIndex": 0
									});
									var output_16 = new cpr.controls.Output();
									output_16.value = "동작";
									output_16.style.css({
										"background-color" : "#e1edfe",
										"background-image" : "none",
										"text-align" : "center"
									});
									container.addChild(output_16, {
										"colIndex": 4,
										"rowIndex": 0
									});
									var output_17 = new cpr.controls.Output();
									output_17.value = "1";
									output_17.style.css({
										"background-color" : "#e1edfe",
										"border-right-style" : "none",
										"border-left-style" : "none",
										"border-bottom-style" : "none",
										"background-image" : "none",
										"border-top-style" : "none",
										"text-align" : "center"
									});
									container.addChild(output_17, {
										"colIndex": 0,
										"rowIndex": 1
									});
									var output_18 = new cpr.controls.Output();
									output_18.value = "2";
									output_18.style.css({
										"background-color" : "#e1edfe",
										"border-right-style" : "none",
										"border-left-style" : "none",
										"border-bottom-style" : "none",
										"background-image" : "none",
										"border-top-style" : "none",
										"text-align" : "center"
									});
									container.addChild(output_18, {
										"colIndex": 0,
										"rowIndex": 2
									});
									var button_1 = new cpr.controls.Button();
									button_1.value = "isEmail";
									button_1.style.setClasses(["btn-primary"]);
									if(typeof onButtonClick == "function") {
										button_1.addEventListener("click", onButtonClick);
									}
									container.addChild(button_1, {
										"colIndex": 4,
										"rowIndex": 1
									});
									var button_2 = new cpr.controls.Button();
									button_2.value = "isURL";
									button_2.style.setClasses(["btn-primary"]);
									if(typeof onButtonClick2 == "function") {
										button_2.addEventListener("click", onButtonClick2);
									}
									container.addChild(button_2, {
										"colIndex": 4,
										"rowIndex": 2
									});
									var inputBox_1 = new cpr.controls.InputBox("ipb1");
									inputBox_1.readOnly = true;
									inputBox_1.value = "isEmail";
									container.addChild(inputBox_1, {
										"colIndex": 1,
										"rowIndex": 1
									});
									var inputBox_2 = new cpr.controls.InputBox("ipb2");
									inputBox_2.readOnly = true;
									inputBox_2.value = "해당 값이 'E-mail' 유형인지 여부를 반환";
									container.addChild(inputBox_2, {
										"colIndex": 2,
										"rowIndex": 1
									});
									var inputBox_3 = new cpr.controls.InputBox("ipb3");
									inputBox_3.readOnly = true;
									inputBox_3.value = "해당 값이 'URL' 형식에 맞는 문자열인지 여부를 반환";
									container.addChild(inputBox_3, {
										"colIndex": 2,
										"rowIndex": 2
									});
									var inputBox_4 = new cpr.controls.InputBox("ipb4");
									inputBox_4.readOnly = true;
									inputBox_4.value = "isURL";
									container.addChild(inputBox_4, {
										"colIndex": 1,
										"rowIndex": 2
									});
									var output_19 = new cpr.controls.Output();
									output_19.value = "3";
									output_19.style.css({
										"background-color" : "#e1edfe",
										"border-right-style" : "none",
										"border-left-style" : "none",
										"border-bottom-style" : "none",
										"background-image" : "none",
										"border-top-style" : "none",
										"text-align" : "center"
									});
									container.addChild(output_19, {
										"colIndex": 0,
										"rowIndex": 3
									});
									var output_20 = new cpr.controls.Output();
									output_20.value = "4";
									output_20.style.css({
										"background-color" : "#e1edfe",
										"border-right-style" : "none",
										"border-left-style" : "none",
										"border-bottom-style" : "none",
										"background-image" : "none",
										"border-top-style" : "none",
										"text-align" : "center"
									});
									container.addChild(output_20, {
										"colIndex": 0,
										"rowIndex": 4
									});
									var output_21 = new cpr.controls.Output();
									output_21.value = "5";
									output_21.style.css({
										"background-color" : "#e1edfe",
										"border-right-style" : "none",
										"border-left-style" : "none",
										"border-bottom-style" : "none",
										"background-image" : "none",
										"border-top-style" : "none",
										"text-align" : "center"
									});
									container.addChild(output_21, {
										"colIndex": 0,
										"rowIndex": 5
									});
									var output_22 = new cpr.controls.Output();
									output_22.value = "6";
									output_22.style.css({
										"background-color" : "#e1edfe",
										"border-right-style" : "none",
										"border-left-style" : "none",
										"border-bottom-style" : "none",
										"background-image" : "none",
										"border-top-style" : "none",
										"text-align" : "center"
									});
									container.addChild(output_22, {
										"colIndex": 0,
										"rowIndex": 6
									});
									var output_23 = new cpr.controls.Output();
									output_23.value = "7";
									output_23.style.css({
										"background-color" : "#e1edfe",
										"border-right-style" : "none",
										"border-left-style" : "none",
										"border-bottom-style" : "none",
										"background-image" : "none",
										"border-top-style" : "none",
										"text-align" : "center"
									});
									container.addChild(output_23, {
										"colIndex": 0,
										"rowIndex": 7
									});
									var inputBox_5 = new cpr.controls.InputBox("ipb5");
									inputBox_5.readOnly = true;
									inputBox_5.value = "isBizCSN";
									container.addChild(inputBox_5, {
										"colIndex": 1,
										"rowIndex": 3
									});
									var inputBox_6 = new cpr.controls.InputBox("ipb6");
									inputBox_6.readOnly = true;
									inputBox_6.value = "isSSN";
									container.addChild(inputBox_6, {
										"colIndex": 1,
										"rowIndex": 4
									});
									var inputBox_7 = new cpr.controls.InputBox("ipb7");
									inputBox_7.readOnly = true;
									inputBox_7.value = "isTelNo";
									container.addChild(inputBox_7, {
										"colIndex": 1,
										"rowIndex": 5
									});
									var inputBox_8 = new cpr.controls.InputBox("ipb8");
									inputBox_8.readOnly = true;
									inputBox_8.value = "isTelMobile";
									container.addChild(inputBox_8, {
										"colIndex": 1,
										"rowIndex": 6
									});
									var inputBox_9 = new cpr.controls.InputBox("ipb9");
									inputBox_9.readOnly = true;
									inputBox_9.value = "isFunc";
									container.addChild(inputBox_9, {
										"colIndex": 1,
										"rowIndex": 7
									});
									var inputBox_10 = new cpr.controls.InputBox("ipb10");
									inputBox_10.readOnly = true;
									inputBox_10.value = "해당 값이 '사업자 번호' 형식에 맞는 문자열인지 반환";
									container.addChild(inputBox_10, {
										"colIndex": 2,
										"rowIndex": 3
									});
									var inputBox_11 = new cpr.controls.InputBox("ipb11");
									inputBox_11.readOnly = true;
									inputBox_11.value = "해당 값이 '주민등록번호' 형식에 맞는지 여부를 반환";
									container.addChild(inputBox_11, {
										"colIndex": 2,
										"rowIndex": 4
									});
									var inputBox_12 = new cpr.controls.InputBox("ipb12");
									inputBox_12.readOnly = true;
									inputBox_12.value = "해당 값이 일반 '전화번호' 형식에 맞는 문자열인지 여부를 반환";
									container.addChild(inputBox_12, {
										"colIndex": 2,
										"rowIndex": 5
									});
									var inputBox_13 = new cpr.controls.InputBox("ipb13");
									inputBox_13.readOnly = true;
									inputBox_13.value = "해당 값이 '핸드폰 번호' 형식에 맞는 문자열인지 여부를 반환";
									container.addChild(inputBox_13, {
										"colIndex": 2,
										"rowIndex": 6
									});
									var inputBox_14 = new cpr.controls.InputBox("ipb14");
									inputBox_14.readOnly = true;
									inputBox_14.value = "해당 값이 'function' 유형인지 여부를 반환";
									container.addChild(inputBox_14, {
										"colIndex": 2,
										"rowIndex": 7
									});
									var button_3 = new cpr.controls.Button("btn1");
									button_3.value = "isBizCSN";
									button_3.style.setClasses(["btn-primary"]);
									if(typeof onBtn1Click == "function") {
										button_3.addEventListener("click", onBtn1Click);
									}
									container.addChild(button_3, {
										"colIndex": 4,
										"rowIndex": 3
									});
									var button_4 = new cpr.controls.Button("btn2");
									button_4.value = "isSSN";
									button_4.style.setClasses(["btn-primary"]);
									if(typeof onBtn2Click == "function") {
										button_4.addEventListener("click", onBtn2Click);
									}
									container.addChild(button_4, {
										"colIndex": 4,
										"rowIndex": 4
									});
									var button_5 = new cpr.controls.Button("btn3");
									button_5.value = "isTelNo";
									button_5.style.setClasses(["btn-primary"]);
									if(typeof onBtn3Click == "function") {
										button_5.addEventListener("click", onBtn3Click);
									}
									container.addChild(button_5, {
										"colIndex": 4,
										"rowIndex": 5
									});
									var button_6 = new cpr.controls.Button("btn4");
									button_6.value = "isTelMobile";
									button_6.style.setClasses(["btn-primary"]);
									if(typeof onBtn4Click == "function") {
										button_6.addEventListener("click", onBtn4Click);
									}
									container.addChild(button_6, {
										"colIndex": 4,
										"rowIndex": 6
									});
									var button_7 = new cpr.controls.Button("btn5");
									button_7.value = "isFunc";
									button_7.style.setClasses(["btn-primary"]);
									if(typeof onBtn5Click == "function") {
										button_7.addEventListener("click", onBtn5Click);
									}
									container.addChild(button_7, {
										"colIndex": 4,
										"rowIndex": 7
									});
									var inputBox_15 = new cpr.controls.InputBox("ipbIsEmail");
									inputBox_15.value = "exbuilder6@tomatosystem.co.kr";
									container.addChild(inputBox_15, {
										"colIndex": 3,
										"rowIndex": 1
									});
									var inputBox_16 = new cpr.controls.InputBox("ipbIsURL");
									inputBox_16.value = "www.naver.com";
									container.addChild(inputBox_16, {
										"colIndex": 3,
										"rowIndex": 2
									});
									var inputBox_17 = new cpr.controls.InputBox("ipbIsBiz");
									inputBox_17.placeholder = "숫자만 입력";
									inputBox_17.inputFilter = "[0-9]";
									container.addChild(inputBox_17, {
										"colIndex": 3,
										"rowIndex": 3
									});
									var inputBox_18 = new cpr.controls.InputBox("ipbIsSSN");
									inputBox_18.value = "";
									inputBox_18.placeholder = "숫자만 입력";
									inputBox_18.inputFilter = "[0-9]";
									container.addChild(inputBox_18, {
										"colIndex": 3,
										"rowIndex": 4
									});
									var inputBox_19 = new cpr.controls.InputBox("ipbIsTelNo");
									inputBox_19.placeholder = "숫자만 입력";
									inputBox_19.inputFilter = "[0-9]";
									container.addChild(inputBox_19, {
										"colIndex": 3,
										"rowIndex": 5
									});
									var inputBox_20 = new cpr.controls.InputBox("ipbIsTelMob");
									inputBox_20.placeholder = "숫자만 입력";
									inputBox_20.inputFilter = "[0-9]";
									container.addChild(inputBox_20, {
										"colIndex": 3,
										"rowIndex": 6
									});
									var radioButton_1 = new cpr.controls.RadioButton("rdbIsFunc");
									radioButton_1.value = "Y";
									(function(radioButton_1){
										radioButton_1.addItem(new cpr.controls.Item("함수", "Y"));
										radioButton_1.addItem(new cpr.controls.Item("비함수", "N"));
									})(radioButton_1);
									container.addChild(radioButton_1, {
										"colIndex": 3,
										"rowIndex": 7
									});
								})(group_15);
								container.addChild(group_15, {
									"colIndex": 0,
									"rowIndex": 1
								});
							})(group_13);
							container.addChild(group_13, {
								"colIndex": 0,
								"rowIndex": 0,
								"colSpan": 1,
								"rowSpan": 1
							});
						})(group_12);
						container.addChild(group_12, {
							"colIndex": 0,
							"rowIndex": 0,
							"colSpan": 1,
							"rowSpan": 1
						});
					})(group_10);
					container.addChild(group_10, {
						"autoSize": "none",
						"width": "1210px",
						"height": "295px"
					});
				})(group_7);
				container.addChild(group_7, {
					"autoSize": "height",
					"width": "1270px",
					"height": "1000px"
				});
			})(group_2);
			container.addChild(group_2, {
				"autoSize": "height",
				"width": "400px",
				"height": "1800px"
			});
			if(typeof onBodyInit == "function"){
				app.addEventListener("init", onBodyInit);
			}
		}
	});
	app.title = "Validator 기능";
	cpr.core.Platform.INSTANCE.register(app);
})();
