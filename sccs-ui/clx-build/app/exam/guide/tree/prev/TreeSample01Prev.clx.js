/*
 * App URI: app/exam/guide/tree/prev/TreeSample01Prev
 * Source Location: app/exam/guide/tree/prev/TreeSample01Prev.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/exam/guide/tree/prev/TreeSample01Prev", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * TreeSample01.js
			 * Created at 2020. 6. 8. 오후 3:39:54.
			 *
			 * @author 1073727
			 ************************************************/
			
			var util = createCommonUtil();
			
			/*
			 * Body에서 init 이벤트 발생 시 호출.
			 * 앱이 최초 구성될 때 발생하는 이벤트 입니다.
			 */
			function onBodyInit( /* cpr.events.CEvent */ e) {
				util.FreeForm.init(app, ["grpFormFunc", "grpFormCont"]);
			}
			
			/*
			 * Body에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad( /* cpr.events.CEvent */ e) {
				//'expandAllItems()
				var treItem = app.lookup("tre1");
				treItem.expandAllItems();
			}
			
			/*
			 * "확인" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
				
				var result = f_onBtn1Click();
				
				//결과표시
				app.lookup("otpRslt").value = "트리에서 선택 된 행의 value [" + result + "]";
				//스크립트 내용 표시
				app.lookup("txaScript").value = "" + f_onBtn1Click;
			}
			
			function f_onBtn1Click() {
				
				return util.Tree.getSelectedValue(app, "tre1");
			}
			
			/*
			 * "확인" 버튼(btn2)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn2Click( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btn2 = e.control;
				
				var result = f_onBtn2Click();
				
				//결과표시
				app.lookup("otpRslt").value = "입력한 value에 해당하는 아이템의 " + result;
				//스크립트 내용 표시
				app.lookup("txaScript").value = "" + f_onBtn2Click;
			}
			
			function f_onBtn2Click() {
				var vsVal = util.Control.getValue(app, "ipb2");
				if (vsVal == null) {
					util.Msg.alert( "value값을 입력하고 클릭하시기 바랍니다.");
					return;
				}
				
				//입력한 value에 해당하는 아이템의 label 또는 parentValue를 반환
				var lbResult = util.Tree.getItem(app, "tre1", vsVal, "LABEL");
				var pvResult = util.Tree.getItem(app, "tre1", vsVal, "PVALUE");
				return "label = [" + lbResult + "], parentValue = [" + pvResult + "]";
			}
			
			/*
			 * "펼침" 버튼(btn3)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn3Click( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btn3 = e.control;
				
				f_onBtn3Click();
				
				//결과표시
				app.lookup("otpRslt").value = "";
				//스크립트 내용 표시
				app.lookup("txaScript").value = "" + f_onBtn3Click;
			}
			
			function f_onBtn3Click() {
				//util.Msg.alert( "테스트를 위해 우선 전체접기를 수행합니다.");
				//접기
				util.Tree.expandAllItems(app, "tre1", false);
				
				//var vsSel = util.Tree.getSelectedValue(app, "tre1");
				var vsSel = util.Control.getValue(app, "ipb3");
				var vsItem = app.lookup("tre1").getItemByValue(vsSel);
				
				//해당 아이템의 상위 아이템을 펼친다.
				util.Tree.expandParentItem(app, "tre1", vsItem, true);
			}
			
			/*
			 * "펼침/접기" 버튼(btn4)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn4Click( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btn4 = e.control;
				
				var result = f_onBtn4Click();
				
				//결과표시
				app.lookup("otpRslt").value = result;
				//스크립트 내용 표시
				app.lookup("txaScript").value = "" + f_onBtn4Click;
			}
			
			function f_onBtn4Click() {
				//pbExpand	펴기 : true, 닫기 : false
				var vsSel = util.Control.getValue(app, "cmb4")
				var pbExpand = ValueUtil.fixBoolean(vsSel);
				
				//아이템에 해당하는 모든 child item을 펼치거나 닫습니다.
				util.Tree.expandAllItems(app, "tre1", pbExpand);
				
				if (pbExpand)
					var result = "최상위 아이템 펼치기";
				else
					var result = "최상위 아이템 접기";
				
				return result;
			}
			
			/*
			 * "확인" 버튼(btn6)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn6Click( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btn6 = e.control;
				
				var result = f_onBtn6Click();
				
				//결과표시
				app.lookup("otpRslt").value = result;
				//스크립트 내용 표시
				app.lookup("txaScript").value = "" + f_onBtn6Click;
			}
			
			function f_onBtn6Click() {
				//search value
				var vsVal = util.Control.getValue(app, "ipb6");
				if (vsVal == null) {
					util.Msg.alert( "value값을 입력하고 클릭하시기 바랍니다.");
					return;
				}
				//가지고 오는 구분자 값(VALUE(디폴트), LABEL)
				var psDiv = "VALUE";
				
				//입력한 label 또는 value에 해당하는 트리 아이템을 선택		
				util.Tree.selectItem(app, "tre1", vsVal, psDiv);
				
				return "value가 " + vsVal + "인 트리 아이템 선택"
			}
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds2");
			dataSet_1.parseData({
				"columns": [
					{"name": "L"},
					{"name": "V"},
					{"name": "P"},
					{"name": "Dt"},
					{"name": "Rd"},
					{"name": "Chk"}
				],
				"rows": [
					{"L": "공통", "V": "V1", "P": "", "Dt": ""},
					{"L": "계약관리", "V": "V2", "P": "V1", "Dt": ""},
					{"L": "정정변경", "V": "V3", "P": "V1", "Dt": ""},
					{"L": "부담금", "V": "V4", "P": "V1", "Dt": ""},
					{"L": "지급", "V": "V5", "P": "V1", "Dt": ""},
					{"L": "수수료", "V": "V6", "P": "V1", "Dt": ""},
					{"L": "수수료납입안내", "V": "V7", "P": "V6", "Dt": "2020-05-15", "Rd": "rd1", "Chk": "check1"},
					{"L": "수수료입금", "V": "V8", "P": "V6", "Dt": "2020-05-15", "Rd": "rd1", "Chk": "check1"},
					{"L": "수수료조회", "V": "V9", "P": "V6", "Dt": "2020-05-15", "Rd": "rd1", "Chk": "check1"},
					{"L": "수수료영수증", "V": "V10", "P": "V6", "Dt": "2020-05-15", "Rd": "rd1", "Chk": "check1"},
					{"L": "영수증조회", "V": "V11", "P": "V10", "Dt": "2020-05-15", "Rd": "rd1", "Chk": "check1"},
					{"L": "영수증발행", "V": "V12", "P": "V10", "Dt": "2020-05-11", "Rd": "rd2", "Chk": "check1"},
					{"L": "영수증관리", "V": "V13", "P": "V10", "Dt": "2020-05-11", "Rd": "rd2", "Chk": "check1"},
					{"L": "발행권한설정", "V": "V14", "P": "V13", "Dt": "2020-05-11", "Rd": "rd2", "Chk": "check1"},
					{"L": "수수료영수증관리", "V": "V15", "P": "V13", "Dt": "2020-05-11", "Rd": "rd1", "Chk": "check1"},
					{"L": "연금계", "V": "V16", "P": "P16", "Dt": "2020-05-11", "Rd": "rd1", "Chk": "check1"}
				]
			});
			app.register(dataSet_1);
			
			app.supportMedia("all and (min-width: 1320px)", "eXFrame");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1319px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader");
			userDefinedControl_1.initializeYn = "N";
			userDefinedControl_1.groupBoxIds = "grp1";
			container.addChild(userDefinedControl_1, {
				"autoSize": "none",
				"width": "998px",
				"height": "30px"
			});
			
			var group_1 = new cpr.controls.Container("grp1");
			group_1.userAttr({"fillLayout": "Y"});
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.verticalSpacing = "5px";
			formLayout_1.setColumns(["2fr", "4fr"]);
			formLayout_1.setRows(["25px", "180px", "25px", "120px", "25px", "70px", "25px", "1fr"]);
			formLayout_1.setRowAutoSizing(1, true);
			group_1.setLayout(formLayout_1);
			(function(container){
				var userDefinedControl_2 = new udc.com.comFormTitle("comformtitle3");
				userDefinedControl_2.title = "Tree";
				container.addChild(userDefinedControl_2, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var userDefinedControl_3 = new udc.com.comFormTitle("comformtitle2");
				userDefinedControl_3.title = "기능(함수)";
				container.addChild(userDefinedControl_3, {
					"colIndex": 1,
					"rowIndex": 0
				});
				var tree_1 = new cpr.controls.Tree("tre1");
				tree_1.indent = 0;
				tree_1.displayExp = "label + \"[value = \"+ value +\"]\"";
				tree_1.multiple = true;
				(function(tree_1){
					tree_1.setItemSet(app.lookup("ds2"), {
						"label": "L",
						"value": "V",
						"parentValue": "P"
					});
				})(tree_1);
				container.addChild(tree_1, {
					"colIndex": 0,
					"rowIndex": 1,
					"colSpan": 1,
					"rowSpan": 5
				});
				var group_2 = new cpr.controls.Container("grpFormFunc");
				group_2.style.setClasses(["form-box"]);
				// Layout
				var formLayout_2 = new cpr.controls.layouts.FormLayout();
				formLayout_2.topMargin = "5px";
				formLayout_2.rightMargin = "5px";
				formLayout_2.bottomMargin = "5px";
				formLayout_2.leftMargin = "5px";
				formLayout_2.setColumns(["24px", "150px", "1fr", "140px", "80px"]);
				formLayout_2.setRows(["25px", "25px", "25px", "25px", "25px", "25px"]);
				formLayout_2.setRowMinHeight(1, 1);
				formLayout_2.setRowMinHeight(2, 1);
				formLayout_2.setRowMinHeight(3, 1);
				formLayout_2.setRowMinHeight(4, 1);
				formLayout_2.setRowMinHeight(5, 1);
				group_2.setLayout(formLayout_2);
				(function(container){
					var output_1 = new cpr.controls.Output("otp1");
					output_1.value = "No";
					output_1.style.css({
						"text-align" : "center"
					});
					container.addChild(output_1, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var output_2 = new cpr.controls.Output("otp4");
					output_2.value = "함수";
					output_2.style.css({
						"text-align" : "center"
					});
					container.addChild(output_2, {
						"colIndex": 1,
						"rowIndex": 0
					});
					var output_3 = new cpr.controls.Output("otp42");
					output_3.value = "설명";
					output_3.style.css({
						"text-align" : "center"
					});
					container.addChild(output_3, {
						"colIndex": 2,
						"rowIndex": 0
					});
					var output_4 = new cpr.controls.Output("otp63");
					output_4.value = "입력값";
					output_4.style.css({
						"text-align" : "center"
					});
					container.addChild(output_4, {
						"colIndex": 3,
						"rowIndex": 0
					});
					var output_5 = new cpr.controls.Output("otp44");
					output_5.value = "동작";
					output_5.style.css({
						"text-align" : "center"
					});
					container.addChild(output_5, {
						"colIndex": 4,
						"rowIndex": 0
					});
					var output_6 = new cpr.controls.Output("otp6");
					output_6.value = "1";
					output_6.style.css({
						"text-align" : "center"
					});
					container.addChild(output_6, {
						"colIndex": 0,
						"rowIndex": 1
					});
					var inputBox_1 = new cpr.controls.InputBox("ipb1");
					inputBox_1.readOnly = true;
					inputBox_1.value = "getSelectedValue";
					container.addChild(inputBox_1, {
						"colIndex": 1,
						"rowIndex": 1
					});
					var inputBox_2 = new cpr.controls.InputBox("ipb9");
					inputBox_2.readOnly = true;
					inputBox_2.value = "현재 선택된 아이템의 value를 반환";
					container.addChild(inputBox_2, {
						"colIndex": 2,
						"rowIndex": 1
					});
					var button_1 = new cpr.controls.Button("btn1");
					button_1.value = "확인";
					if(typeof onBtn1Click == "function") {
						button_1.addEventListener("click", onBtn1Click);
					}
					container.addChild(button_1, {
						"colIndex": 4,
						"rowIndex": 1,
						"horizontalAlign": "fill",
						"verticalAlign": "fill",
						"width": 80
					});
					var output_7 = new cpr.controls.Output("otp12");
					output_7.value = "2";
					output_7.style.css({
						"text-align" : "center"
					});
					container.addChild(output_7, {
						"colIndex": 0,
						"rowIndex": 2
					});
					var inputBox_3 = new cpr.controls.InputBox("ipb4");
					inputBox_3.readOnly = true;
					inputBox_3.value = "getItem";
					container.addChild(inputBox_3, {
						"colIndex": 1,
						"rowIndex": 2
					});
					var inputBox_4 = new cpr.controls.InputBox("ipb10");
					inputBox_4.readOnly = true;
					inputBox_4.value = "입력한 value에 해당하는 아이템의 label 또는 parentValue를 반환";
					container.addChild(inputBox_4, {
						"colIndex": 2,
						"rowIndex": 2
					});
					var inputBox_5 = new cpr.controls.InputBox("ipb2");
					inputBox_5.value = "V6";
					container.addChild(inputBox_5, {
						"colIndex": 3,
						"rowIndex": 2
					});
					var button_2 = new cpr.controls.Button("btn2");
					button_2.value = "확인";
					if(typeof onBtn2Click == "function") {
						button_2.addEventListener("click", onBtn2Click);
					}
					container.addChild(button_2, {
						"colIndex": 4,
						"rowIndex": 2,
						"horizontalAlign": "fill",
						"verticalAlign": "fill",
						"width": 80
					});
					var output_8 = new cpr.controls.Output("otp8");
					output_8.value = "3";
					output_8.style.css({
						"text-align" : "center"
					});
					container.addChild(output_8, {
						"colIndex": 0,
						"rowIndex": 3
					});
					var inputBox_6 = new cpr.controls.InputBox("ipb5");
					inputBox_6.readOnly = true;
					inputBox_6.value = "expandParentItem";
					container.addChild(inputBox_6, {
						"colIndex": 1,
						"rowIndex": 3
					});
					var inputBox_7 = new cpr.controls.InputBox("ipb11");
					inputBox_7.readOnly = true;
					inputBox_7.value = "해당 아이템의 상위 아이템을 펼침";
					container.addChild(inputBox_7, {
						"colIndex": 2,
						"rowIndex": 3
					});
					var inputBox_8 = new cpr.controls.InputBox("ipb3");
					inputBox_8.value = "V10";
					container.addChild(inputBox_8, {
						"colIndex": 3,
						"rowIndex": 3
					});
					var button_3 = new cpr.controls.Button("btn3");
					button_3.value = "펼침";
					if(typeof onBtn3Click == "function") {
						button_3.addEventListener("click", onBtn3Click);
					}
					container.addChild(button_3, {
						"colIndex": 4,
						"rowIndex": 3,
						"horizontalAlign": "fill",
						"verticalAlign": "fill",
						"width": 80
					});
					var output_9 = new cpr.controls.Output("otp17");
					output_9.value = "4";
					output_9.style.css({
						"text-align" : "center"
					});
					container.addChild(output_9, {
						"colIndex": 0,
						"rowIndex": 4
					});
					var inputBox_9 = new cpr.controls.InputBox("ipb7");
					inputBox_9.readOnly = true;
					inputBox_9.value = "expandAllItems";
					container.addChild(inputBox_9, {
						"colIndex": 1,
						"rowIndex": 4
					});
					var inputBox_10 = new cpr.controls.InputBox("ipb12");
					inputBox_10.readOnly = true;
					inputBox_10.value = "아이템에 해당하는 모든 child item을 펼치거나 닫음";
					container.addChild(inputBox_10, {
						"colIndex": 2,
						"rowIndex": 4
					});
					var comboBox_1 = new cpr.controls.ComboBox("cmb4");
					comboBox_1.value = "true";
					(function(comboBox_1){
						comboBox_1.addItem(new cpr.controls.Item("펼침", "true"));
						comboBox_1.addItem(new cpr.controls.Item("접기", "false"));
					})(comboBox_1);
					container.addChild(comboBox_1, {
						"colIndex": 3,
						"rowIndex": 4
					});
					var button_4 = new cpr.controls.Button("btn4");
					button_4.value = "펼침/접기";
					if(typeof onBtn4Click == "function") {
						button_4.addEventListener("click", onBtn4Click);
					}
					container.addChild(button_4, {
						"colIndex": 4,
						"rowIndex": 4,
						"horizontalAlign": "fill",
						"verticalAlign": "fill",
						"width": 80
					});
					var output_10 = new cpr.controls.Output("otp45");
					output_10.value = "5";
					output_10.style.css({
						"text-align" : "center"
					});
					container.addChild(output_10, {
						"colIndex": 0,
						"rowIndex": 5
					});
					var inputBox_11 = new cpr.controls.InputBox("ipb8");
					inputBox_11.readOnly = true;
					inputBox_11.value = "selectItem";
					container.addChild(inputBox_11, {
						"colIndex": 1,
						"rowIndex": 5
					});
					var inputBox_12 = new cpr.controls.InputBox("ipb13");
					inputBox_12.readOnly = true;
					inputBox_12.value = "입력한 label 또는 value에 해당하는 트리 아이템을 선택";
					container.addChild(inputBox_12, {
						"colIndex": 2,
						"rowIndex": 5
					});
					var inputBox_13 = new cpr.controls.InputBox("ipb6");
					inputBox_13.value = "V6";
					container.addChild(inputBox_13, {
						"colIndex": 3,
						"rowIndex": 5
					});
					var button_5 = new cpr.controls.Button("btn6");
					button_5.value = "확인";
					if(typeof onBtn6Click == "function") {
						button_5.addEventListener("click", onBtn6Click);
					}
					container.addChild(button_5, {
						"colIndex": 4,
						"rowIndex": 5,
						"horizontalAlign": "fill",
						"verticalAlign": "fill",
						"width": 80
					});
				})(group_2);
				container.addChild(group_2, {
					"colIndex": 1,
					"rowIndex": 1,
					"colSpan": 1,
					"rowSpan": 1
				});
				var userDefinedControl_4 = new udc.com.comFormTitle("comformtitle4");
				userDefinedControl_4.title = "시나리오";
				container.addChild(userDefinedControl_4, {
					"colIndex": 1,
					"rowIndex": 2
				});
				var group_3 = new cpr.controls.Container("grpFormCont");
				group_3.style.setClasses(["form-box"]);
				// Layout
				var formLayout_3 = new cpr.controls.layouts.FormLayout();
				formLayout_3.topMargin = "5px";
				formLayout_3.rightMargin = "5px";
				formLayout_3.bottomMargin = "5px";
				formLayout_3.leftMargin = "5px";
				formLayout_3.setColumns(["100px", "1fr"]);
				formLayout_3.setRows(["1fr"]);
				group_3.setLayout(formLayout_3);
				(function(container){
					var output_11 = new cpr.controls.Output("otp25");
					output_11.value = "시나리오";
					container.addChild(output_11, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var textArea_1 = new cpr.controls.TextArea("txa1");
					textArea_1.readOnly = true;
					textArea_1.value = "1. 트리를 확인하고 동작 버튼을 클릭한다. (필요시 입력값 선택)\r\n2. 트리의 기능동작 및 결과값을 확인한다. \r\n3. 하단의 스크립트내용을 확인한다.\r\n4. 스크립트내용을 복사하여 코딩에 활용한다.";
					container.addChild(textArea_1, {
						"colIndex": 1,
						"rowIndex": 0
					});
				})(group_3);
				container.addChild(group_3, {
					"colIndex": 1,
					"rowIndex": 3
				});
				var userDefinedControl_5 = new udc.com.comFormTitle("comformtitle5");
				userDefinedControl_5.title = "결과값";
				container.addChild(userDefinedControl_5, {
					"colIndex": 1,
					"rowIndex": 4
				});
				var inputBox_14 = new cpr.controls.InputBox("otpRslt");
				container.addChild(inputBox_14, {
					"colIndex": 1,
					"rowIndex": 5
				});
				var userDefinedControl_6 = new udc.com.comFormTitle("comformtitle6");
				userDefinedControl_6.title = "스크립트 내용";
				container.addChild(userDefinedControl_6, {
					"colIndex": 0,
					"rowIndex": 6,
					"colSpan": 2,
					"rowSpan": 1
				});
				var textArea_2 = new cpr.controls.TextArea("txaScript");
				container.addChild(textArea_2, {
					"colIndex": 0,
					"rowIndex": 7,
					"colSpan": 2,
					"rowSpan": 1
				});
			})(group_1);
			container.addChild(group_1, {
				"width": "972px",
				"height": "645px"
			});
			if(typeof onBodyInit == "function"){
				app.addEventListener("init", onBodyInit);
			}
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "트리 기능";
	cpr.core.Platform.INSTANCE.register(app);
})();
