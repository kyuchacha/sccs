/*
 * App URI: app/exam/guide/control/ControlSample02
 * Source Location: app/exam/guide/control/ControlSample02.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/exam/guide/control/ControlSample02", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * ControlSample02.js
			 * Created at 2022. 3. 10. 오후 6:02:45.
			 *
			 * @author jiyeon
			 ************************************************/
			
			var util = createCommonUtil();
			
			var ctrl, inputVal, tf;
			
			/*
			 * 루트 컨테이너에서 init 이벤트 발생 시 호출.
			 * 앱이 최초 구성될 때 발생하는 이벤트 입니다.
			 */
			function onBodyInit(e){
				util.FreeForm.init(app, ["grpFormFunc", "grp8"]);
			}
			
			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(e){
				app.lookup("cmb1").selectItem(0);
				app.lookup("rdb1").selectItem(0);
			}
			
			/*
			 * 콤보 박스에서 selection-change 이벤트 발생 시 호출.
			 * ComboBox Item을 선택하여 선택된 값이 저장된 후에 발생하는 이벤트.
			 */
			function onCmb1SelectionChange(e){
				var cmb1 = e.control;
				
				ctrl = cmb1.value;
			}
			
			/*
			 * 인풋 박스에서 value-change 이벤트 발생 시 호출.
			 * 변경된 value가 저장된 후에 발생하는 이벤트.
			 */
			function onIpbInputValueChange(e){
				var ipbInput = e.control;
				
				inputVal = ipbInput.value;
			}
			
			/*
			 * 라디오 버튼에서 selection-change 이벤트 발생 시 호출.
			 * 라디오버튼 아이템을 선택하여 선택된 값이 저장된 후에 발생하는 이벤트.
			 */
			function onRdb1SelectionChange(e){
				var rdb1 = e.control;
				
				tf = ValueUtil.fixBoolean(rdb1.value);
			}
			
			
			/*
			 * "redraw" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick(e){
				var button = e.control;
				
				//결과값 초기화
				printResult("");
				
				if (!util.validate(app, ["cmb1"])) {
					return false;
				}
				
				//함수 실행
				f_redraw();
				
				//스크립트 출력
				printSource(f_redraw);
				
				//입력값 초기화
				app.lookup("ipbInput").value = "";
			}
			
			function f_redraw() {
				//두번째 파라미터는 ["cmb1", "cmb2"] 배열로 대체 가능
				util.Control.redraw(app, ctrl);
			}
			
			
			/*
			 * "setFocus" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick2(e){
				var button = e.control;
				
				//결과값 초기화
				printResult("");
				
				if (!util.validate(app, ["cmb1"])) return false;
				
				//함수 실행
				f_setFocus();
				
				//스크립트 출력
				printSource(f_setFocus);
				
				//입력값 초기화
				app.lookup("ipbInput").value = "";
			}
			
			function f_setFocus() {
				util.Control.setFocus(app, ctrl);
			}
			
			/*
			 * "setValue" 버튼(btn2)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn2Click(e){
				var btn2 = e.control;
				
				printResult("");
				
				if (!util.validate(app, ["cmb1", "ipb1"])) return false;
				
				f_setValue();
				
				printSource(f_setValue);
				
				//입력값 초기화
				app.lookup("ipbInput").value = "";
			}
			
			function f_setValue() {
				util.Control.setValue(app, ctrl, inputVal);
			}
			
			
			/*
			 * "getValue" 버튼(btn3)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn3Click(e){
				var btn3 = e.control;
				
				printResult("");
				
				if (!util.validate(app, ["cmb1"])) return false;
				
				f_getValue();
				
				printSource(f_getValue);
				printResult(util.Control.getValue(app, ctrl));
				
				//입력값 초기화
				app.lookup("ipbInput").value = "";
			}
			
			function f_getValue() {
				util.Control.getValue(app, ctrl);
			};
			
			
			/*
			 * "reset" 버튼(btn4)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn4Click(e){
				var btn4 = e.control;
				
				printResult("");
				
				if (!util.validate(app, ["cmb1"])) return false;
				
				f_reset();
				
				printSource(f_reset);
				
				//입력값 초기화
				app.lookup("ipbInput").value = "";
			}
			
			function f_reset() {
				//두번째 파라미터는 ["cmb1", "cmb2"] 배열로 대체 가능
				util.Control.reset(app, ctrl);
			}
			
			
			/*
			 * "getConstraint" 버튼(btn5)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn5Click(e){
				var btn5 = e.control;
				
				printResult("");
				
				if (!util.validate(app, ["cmb1"])) return false;
				
				f_getConstraint();
				
				printSource(f_getConstraint);
				printResult(JSON.stringify(util.Control.getConstraint(app, ctrl, "grp8")));
				
				//입력값 초기화
				app.lookup("ipbInput").value = "";
			}
			
			function f_getConstraint() {
				var consts = util.Control.getConstraint(app, ctrl, "grp8");
				
				//아래의 방식으로 사용
				var hori = util.Control.getConstraint(app, ctrl, "grp8")["horizontalAlign"]
			};
			
			
			/*
			 * "getActualRectPosition" 버튼(btn6)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn6Click(e){
				var btn6 = e.control;
				
				printResult("");
				if (!util.validate(app, ["cmb1"])) return false;
				
				f_getActualRectPosition();
				
				printSource(f_getActualRectPosition);
				printResult(util.Control.getActualRectPosition(app, ctrl, app.lookup("cmb3").value));
				
				//입력값 초기화
				app.lookup("ipbInput").value = "";
			}
			
			function f_getActualRectPosition() {
				util.Control.getActualRectPosition(app, ctrl, app.lookup("cmb3").value);
			}
			
			
			/*
			 * "updateConstraint" 버튼(btn7)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn7Click(e){
				var btn7 = e.control;
				
				printResult("");
				
				if (!util.validate(app, ["cmb1"])) return false;
				
				f_updateConstraint();
				
				printSource(f_updateConstraint);
				
				//입력값 초기화
				app.lookup("ipbInput").value = "";
			}
			
			function f_updateConstraint() {
				//내부 제약조건은 상단 getConstraint 함수로 확인할수 있다.
				util.Control.updateConstraint(app, ctrl, "grp8", {
					"horizontalAlign": "center",
					"verticalAlign": "center",
					"width": "100",
					"height": "20"
				});
			};
			
			
			/*
			 * "setReadOnly" 버튼(btn8)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn8Click(e){
				var btn8 = e.control;
				
				printResult("");
				
				if (!util.validate(app, ["cmb1", "rdb1"])) return false;
				
				f_setReadOnly();
				
				printSource(f_setReadOnly);
				
				//입력값 초기화
				app.lookup("ipbInput").value = "";
			}
			
			function f_setReadOnly() {
				//세번째 인자값은 ["ipb1", "cmb1"] 배열로 사용가능
				util.Control.setReadOnly(app, tf, ctrl);
			}
			
			
			/*
			 * "setVisible" 버튼(btn9)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn9Click(e){
				var btn9 = e.control;
				
				printResult("");
				
				if (!util.validate(app, ["cmb1", "rdb1"])) return false;
				
				f_setVisible();
				
				printSource(f_setVisible);
				
				//입력값 초기화
				app.lookup("ipbInput").value = "";
			}
			
			function f_setVisible() {
				//세번째 인자값은 ["ipb1", "cmb1"] 배열로 사용가능
				util.Control.setVisible(app, tf, [ctrl]);
			}
			
			
			/*
			 * "setEnable" 버튼(btn10)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn10Click(e){
				var btn10 = e.control;
				
				printResult("");
				
				if (!util.validate(app, ["cmb1", "rdb1"])) return false;
				
				f_setEnable();
				
				printSource(f_setEnable);
				
				//입력값 초기화
				app.lookup("ipbInput").value = "";
			}
			
			function f_setEnable() {
				//세번째 인자값은 ["ipb1", "cmb1"] 배열로 사용가능
				util.Control.setEnable(app, tf, ctrl);
			}
			
			/*
			 * "dispatchEvent" 버튼(btn11)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn11Click(e){
				var btn11 = e.control;
				
				printResult("");
				
				f_dispatchEvent();
				
				printSource(f_dispatchEvent);
				
				//입력값 초기화
				app.lookup("ipbInput").value = "";
			}
			
			function f_dispatchEvent() {
				util.Control.setValue(app, "ipbInput", "setValue 버튼 클릭 dispatch");
				
				util.Control.dispatchEvent(app, "btn2", "click");
			}
			
			
			
			//== 스크립트 출력 ==//
			function printSource(value) {
				/* 에디터에 소스 표시 */
				var vcAceEditor = app.lookup("ace1");
				vcAceEditor.value = value;	
			}
			
			
			
			//== 결과 표시 ==//
			function printResult(value) {
				app.lookup("optRslt").value = value;
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsList");
			dataSet_1.parseData({
				"columns": [
					{"name": "col1"},
					{"name": "col2"},
					{"name": "col3"},
					{"name": "col4"}
				],
				"rows": [
					{"col1": "ID0001", "col2": "박보검", "col3": "010-1234-5678", "col4": "서울시 여의도"},
					{"col1": "ID0002", "col2": "홍길동", "col3": "010-1234-5678", "col4": "서울시 동작구 123"},
					{"col1": "ID0003", "col2": "이순신", "col3": "010-1234-5678", "col4": "경기도 의정부시 111"},
					{"col1": "ID0004", "col2": "송혜교", "col3": "010-1234-5678", "col4": "서울시 노원구 중계동"},
					{"col1": "ID0004", "col2": "이보영", "col3": "010-1234-5678", "col4": "서울시 강북구"},
					{"col1": "ID0005", "col2": "임장군", "col3": "010-1234-5678", "col4": "서울시 여의도 영등포동"},
					{"col1": "ID0005", "col2": "김토마토", "col3": "010-1234-5678", "col4": "서울시 여의도 영등포동"},
					{"col1": "ID0005", "col2": "김퇴직", "col3": "010-1234-5678", "col4": "서울시 여의도 영등포동"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsListOrg");
			dataSet_2.parseData({
				"columns": [
					{"name": "col1"},
					{"name": "col2"},
					{"name": "col3"},
					{"name": "col4"}
				],
				"rows": [
					{"col1": "ID0001", "col2": "박보검", "col3": "010-1234-5678", "col4": "서울시 여의도"},
					{"col1": "ID0002", "col2": "홍길동", "col3": "010-1234-5678", "col4": "서울시 동작구 123"},
					{"col1": "ID0003", "col2": "이순신", "col3": "010-1234-5678", "col4": "경기도 의정부시 111"},
					{"col1": "ID0004", "col2": "송혜교", "col3": "010-1234-5678", "col4": "서울시 노원구 중계동"},
					{"col1": "ID0004", "col2": "이보영", "col3": "010-1234-5678", "col4": "서울시 강북구"},
					{"col1": "ID0005", "col2": "임장군", "col3": "010-1234-5678", "col4": "서울시 여의도 영등포동"},
					{"col1": "ID0005", "col2": "김토마토", "col3": "010-1234-5678", "col4": "서울시 여의도 영등포동"},
					{"col1": "ID0005", "col2": "김퇴직", "col3": "010-1234-5678", "col4": "서울시 여의도 영등포동"}
				]
			});
			app.register(dataSet_2);
			
			app.supportMedia("all and (min-width: 1320px)", "eXFrame");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1319px)", "default");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpHeader");
			// Layout
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			group_1.setLayout(verticalLayout_2);
			(function(container){
				var userDefinedControl_1 = new udc.com.appHeader("appheader1");
				container.addChild(userDefinedControl_1, {
					"width": "500px",
					"height": "30px"
				});
			})(group_1);
			container.addChild(group_1, {
				"autoSize": "height",
				"width": "400px",
				"height": "30px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var verticalLayout_3 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_3.leftMargin = 20;
			verticalLayout_3.rightMargin = 30;
			verticalLayout_3.topMargin = 30;
			verticalLayout_3.bottomMargin = 20;
			group_2.setLayout(verticalLayout_3);
			(function(container){
				var group_3 = new cpr.controls.Container();
				// Layout
				var verticalLayout_4 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_4.spacing = 20;
				verticalLayout_4.topMargin = 20;
				verticalLayout_4.bottomMargin = 40;
				group_3.setLayout(verticalLayout_4);
				(function(container){
					var group_4 = new cpr.controls.Container("grp1");
					// Layout
					var formLayout_1 = new cpr.controls.layouts.FormLayout();
					formLayout_1.scrollable = false;
					formLayout_1.rightMargin = "50px";
					formLayout_1.horizontalSpacing = "5px";
					formLayout_1.verticalSpacing = "5px";
					formLayout_1.setColumns(["150px", "100px"]);
					formLayout_1.setColumnAutoSizing(0, true);
					formLayout_1.setColumnAutoSizing(1, true);
					formLayout_1.setRows(["1fr"]);
					group_4.setLayout(formLayout_1);
					(function(container){
						var output_1 = new cpr.controls.Output();
						output_1.value = "컨트롤 속성제어";
						output_1.style.css({
							"font-weight" : "bold",
							"padding-left" : "1rem",
							"font-size" : "2.5rem"
						});
						container.addChild(output_1, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var output_2 = new cpr.controls.Output();
						output_2.value = "util.Control";
						output_2.style.setClasses(["text-primary"]);
						output_2.style.css({
							"font-weight" : "bold",
							"padding-left" : "3rem",
							"font-size" : "1.25rem",
							"text-align" : "left"
						});
						container.addChild(output_2, {
							"colIndex": 1,
							"rowIndex": 0,
							"verticalAlign": "bottom",
							"height": 35
						});
					})(group_4);
					container.addChild(group_4, {
						"autoSize": "height",
						"width": "1270px",
						"height": "40px"
					});
					var output_3 = new cpr.controls.Output();
					output_3.value = "이 페이지에서는 컨트롤의 속성을 제어하는 공통모듈에 대해 설명합니다.";
					output_3.style.setClasses(["opt-tmpl"]);
					output_3.style.css({
						"padding-left" : "1rem",
						"font-size" : "1rem"
					});
					container.addChild(output_3, {
						"autoSize": "height",
						"width": "1210px",
						"height": "46px"
					});
				})(group_3);
				container.addChild(group_3, {
					"autoSize": "height",
					"width": "1270px",
					"height": "120px"
				});
				var group_5 = new cpr.controls.Container();
				// Layout
				var verticalLayout_5 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_5.spacing = 20;
				verticalLayout_5.topMargin = 20;
				verticalLayout_5.bottomMargin = 40;
				group_5.setLayout(verticalLayout_5);
				(function(container){
					var output_4 = new cpr.controls.Output();
					output_4.value = "시나리오";
					output_4.style.setClasses(["h1", "pl-3", "bg-primary", "text-white"]);
					output_4.style.css({
						"font-weight" : "bold",
						"padding-left" : "1rem",
						"font-size" : "1.75rem"
					});
					container.addChild(output_4, {
						"width": "100px",
						"height": "40px"
					});
					var output_5 = new cpr.controls.Output("ipbScenario");
					output_5.value = "1. 기준 컨트롤과 입력값을 입력한 뒤 동작 버튼을 클릭하여 스크립트 및 결과값을 확인한다.";
					output_5.style.setClasses(["opt-tmpl"]);
					output_5.style.css({
						"padding-left" : "1rem",
						"font-size" : "1rem"
					});
					container.addChild(output_5, {
						"autoSize": "height",
						"width": "1210px",
						"height": "107px"
					});
					var group_6 = new cpr.controls.Container("grp2");
					group_6.visible = false;
					group_6.style.css({
						"background-color" : "#dff7fb"
					});
					// Layout
					var verticalLayout_6 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_6.leftMargin = 30;
					verticalLayout_6.rightMargin = 30;
					verticalLayout_6.topMargin = 20;
					verticalLayout_6.bottomMargin = 20;
					group_6.setLayout(verticalLayout_6);
					(function(container){
						var output_6 = new cpr.controls.Output();
						output_6.value = "추가설명";
						output_6.style.setClasses(["text-info", "opt-tmpl"]);
						output_6.style.css({
							"font-weight" : "bold"
						});
						container.addChild(output_6, {
							"width": "100px",
							"height": "25px"
						});
						var output_7 = new cpr.controls.Output();
						output_7.value = "추가적으로 설명할 정보가 있다면 작성해주세요.";
						output_7.style.setClasses(["text-info", "opt-tmpl"]);
						container.addChild(output_7, {
							"autoSize": "height",
							"width": "100px",
							"height": "25px"
						});
					})(group_6);
					container.addChild(group_6, {
						"autoSize": "height",
						"width": "1100px",
						"height": "100px"
					});
				})(group_5);
				container.addChild(group_5, {
					"autoSize": "height",
					"width": "1270px",
					"height": "345px"
				});
				var group_7 = new cpr.controls.Container();
				group_7.userAttr({"floating-header": "true"});
				// Layout
				var verticalLayout_7 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_7.spacing = 15;
				verticalLayout_7.topMargin = 20;
				verticalLayout_7.bottomMargin = 0;
				group_7.setLayout(verticalLayout_7);
				(function(container){
					var output_8 = new cpr.controls.Output();
					output_8.value = "기능 확인";
					output_8.style.setClasses(["h1", "pl-3", "bg-primary", "text-white"]);
					output_8.style.css({
						"font-weight" : "bold",
						"padding-left" : "1rem",
						"font-size" : "1.75rem"
					});
					container.addChild(output_8, {
						"autoSize": "none",
						"width": "1270px",
						"height": "40px"
					});
					var group_8 = new cpr.controls.Container("grp3");
					group_8.style.css({
						"border-right-style" : "solid",
						"border-top-width" : "1px",
						"border-bottom-color" : "#dedede",
						"border-right-width" : "1px",
						"border-left-color" : "#dedede",
						"border-right-color" : "#dedede",
						"border-left-width" : "1px",
						"border-top-style" : "solid",
						"background-color" : "#F0F0F0",
						"border-left-style" : "solid",
						"border-bottom-width" : "1px",
						"border-top-color" : "#dedede",
						"border-bottom-style" : "solid"
					});
					// Layout
					var verticalLayout_8 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_8.leftMargin = 30;
					verticalLayout_8.rightMargin = 30;
					verticalLayout_8.topMargin = 5;
					verticalLayout_8.bottomMargin = 10;
					group_8.setLayout(verticalLayout_8);
					(function(container){
						var group_9 = new cpr.controls.Container("grp5");
						// Layout
						var formLayout_2 = new cpr.controls.layouts.FormLayout();
						formLayout_2.scrollable = false;
						formLayout_2.topMargin = "0px";
						formLayout_2.rightMargin = "0px";
						formLayout_2.leftMargin = "0px";
						formLayout_2.horizontalSpacing = "10px";
						formLayout_2.verticalSpacing = "5px";
						formLayout_2.setColumns(["1fr", "1fr"]);
						formLayout_2.setRows(["25px", "1fr"]);
						group_9.setLayout(formLayout_2);
						(function(container){
							var output_9 = new cpr.controls.Output();
							output_9.value = "<기능 확인 컨트롤>";
							output_9.style.setClasses(["opt-tmpl"]);
							output_9.style.css({
								"text-align" : "center"
							});
							output_9.bind("tooltip").toExpression("#ipbScenario.value");
							container.addChild(output_9, {
								"colIndex": 0,
								"rowIndex": 0
							});
							var group_10 = new cpr.controls.Container("grp8");
							group_10.style.setClasses(["form-box"]);
							// Layout
							var formLayout_3 = new cpr.controls.layouts.FormLayout();
							formLayout_3.topMargin = "5px";
							formLayout_3.rightMargin = "5px";
							formLayout_3.bottomMargin = "5px";
							formLayout_3.leftMargin = "5px";
							formLayout_3.setColumns(["100px", "1fr"]);
							formLayout_3.setRows(["25px", "25px", "25px", "25px", "25px"]);
							group_10.setLayout(formLayout_3);
							(function(container){
								var output_10 = new cpr.controls.Output("otp23");
								output_10.value = "인풋박스";
								container.addChild(output_10, {
									"colIndex": 0,
									"rowIndex": 0
								});
								var inputBox_1 = new cpr.controls.InputBox("ipbFuncCtrl");
								container.addChild(inputBox_1, {
									"colIndex": 1,
									"rowIndex": 0,
									"horizontalAlign": "fill",
									"verticalAlign": "fill"
								});
								var output_11 = new cpr.controls.Output("otp26");
								output_11.value = "아웃풋박스";
								container.addChild(output_11, {
									"colIndex": 0,
									"rowIndex": 1
								});
								var output_12 = new cpr.controls.Output("otpFuncCtrl");
								output_12.value = "Output";
								output_12.style.css({
									"background-color" : "white",
									"font-weight" : "normal",
									"text-align" : "left"
								});
								container.addChild(output_12, {
									"colIndex": 1,
									"rowIndex": 1
								});
								var output_13 = new cpr.controls.Output("otp48");
								output_13.value = "버튼";
								container.addChild(output_13, {
									"colIndex": 0,
									"rowIndex": 2
								});
								var button_1 = new cpr.controls.Button("btnFuncCtrl");
								button_1.value = "버튼";
								container.addChild(button_1, {
									"colIndex": 1,
									"rowIndex": 2
								});
								var output_14 = new cpr.controls.Output("otp49");
								output_14.value = "콤보박스";
								container.addChild(output_14, {
									"colIndex": 0,
									"rowIndex": 3
								});
								var comboBox_1 = new cpr.controls.ComboBox("cmb2");
								(function(comboBox_1){
									comboBox_1.addItem(new cpr.controls.Item("label1", "value1"));
									comboBox_1.addItem(new cpr.controls.Item("label2", "value2"));
									comboBox_1.addItem(new cpr.controls.Item("label3", "value3"));
									comboBox_1.addItem(new cpr.controls.Item("label4", "value4"));
									comboBox_1.addItem(new cpr.controls.Item("label5", "value5"));
								})(comboBox_1);
								container.addChild(comboBox_1, {
									"colIndex": 1,
									"rowIndex": 3
								});
								var output_15 = new cpr.controls.Output("otp50");
								output_15.value = "체크박스";
								container.addChild(output_15, {
									"colIndex": 0,
									"rowIndex": 4
								});
								var checkBox_1 = new cpr.controls.CheckBox("chkFuncCtrl");
								checkBox_1.falseValue = "false";
								checkBox_1.text = "Check";
								container.addChild(checkBox_1, {
									"colIndex": 1,
									"rowIndex": 4
								});
							})(group_10);
							container.addChild(group_10, {
								"colIndex": 0,
								"rowIndex": 1,
								"horizontalAlign": "fill",
								"width": 600
							});
							var output_16 = new cpr.controls.Output();
							output_16.value = "<입력값>";
							output_16.style.setClasses(["opt-tmpl"]);
							output_16.style.css({
								"text-align" : "center"
							});
							output_16.bind("tooltip").toExpression("#ipbScenario.value");
							container.addChild(output_16, {
								"colIndex": 1,
								"rowIndex": 0
							});
							var group_11 = new cpr.controls.Container("grp11");
							group_11.style.setClasses(["form-box"]);
							// Layout
							var formLayout_4 = new cpr.controls.layouts.FormLayout();
							formLayout_4.scrollable = false;
							formLayout_4.topMargin = "5px";
							formLayout_4.rightMargin = "5px";
							formLayout_4.bottomMargin = "5px";
							formLayout_4.leftMargin = "5px";
							formLayout_4.horizontalSpacing = "5px";
							formLayout_4.verticalSpacing = "5px";
							formLayout_4.setColumns(["100px", "1fr"]);
							formLayout_4.setRows(["1fr", "1fr", "1fr"]);
							group_11.setLayout(formLayout_4);
							(function(container){
								var output_17 = new cpr.controls.Output();
								output_17.value = "기준 컨트롤";
								output_17.style.css({
									"background-color" : "#fff3e9"
								});
								container.addChild(output_17, {
									"colIndex": 0,
									"rowIndex": 0
								});
								var output_18 = new cpr.controls.Output();
								output_18.value = "입력값1";
								output_18.style.css({
									"background-color" : "#fff3e9"
								});
								container.addChild(output_18, {
									"colIndex": 0,
									"rowIndex": 1
								});
								var output_19 = new cpr.controls.Output();
								output_19.value = "입력값2";
								output_19.style.css({
									"background-color" : "#fff3e9"
								});
								container.addChild(output_19, {
									"colIndex": 0,
									"rowIndex": 2
								});
								var comboBox_2 = new cpr.controls.ComboBox("cmb1");
								comboBox_2.fieldLabel = "기준 컨트롤";
								comboBox_2.tooltip = "기준 컨트롤";
								comboBox_2.placeholder = "기준 컨트롤";
								comboBox_2.userAttr({"required": "Y"});
								(function(comboBox_2){
									comboBox_2.addItem(new cpr.controls.Item("인풋박스", "ipbFuncCtrl"));
									comboBox_2.addItem(new cpr.controls.Item("아웃풋박스", "otpFuncCtrl"));
									comboBox_2.addItem(new cpr.controls.Item("버튼", "btnFuncCtrl"));
									comboBox_2.addItem(new cpr.controls.Item("콤보박스", "cmb2"));
									comboBox_2.addItem(new cpr.controls.Item("체크박스", "chkFuncCtrl"));
								})(comboBox_2);
								container.addChild(comboBox_2, {
									"colIndex": 1,
									"rowIndex": 0
								});
								var inputBox_2 = new cpr.controls.InputBox("ipbInput");
								inputBox_2.fieldLabel = "입력값";
								inputBox_2.placeholder = "입력값";
								inputBox_2.userAttr({"required": "Y"});
								container.addChild(inputBox_2, {
									"colIndex": 1,
									"rowIndex": 1
								});
								var radioButton_1 = new cpr.controls.RadioButton("rdb1");
								radioButton_1.fieldLabel = "true/false";
								(function(radioButton_1){
									radioButton_1.addItem(new cpr.controls.Item("true", "true"));
									radioButton_1.addItem(new cpr.controls.Item("false", "false"));
								})(radioButton_1);
								container.addChild(radioButton_1, {
									"colIndex": 1,
									"rowIndex": 2
								});
							})(group_11);
							container.addChild(group_11, {
								"colIndex": 1,
								"rowIndex": 1,
								"horizontalAlign": "center",
								"verticalAlign": "bottom",
								"width": 500,
								"height": 100
							});
						})(group_9);
						container.addChild(group_9, {
							"autoSize": "height",
							"width": "860px",
							"height": "250px"
						});
					})(group_8);
					if(typeof onGrp11Click == "function") {
						group_8.addEventListener("click", onGrp11Click);
					}
					container.addChild(group_8, {
						"autoSize": "height",
						"width": "1210px",
						"height": "300px"
					});
					var group_12 = new cpr.controls.Container("grp4");
					// Layout
					var formLayout_5 = new cpr.controls.layouts.FormLayout();
					formLayout_5.userResizingMode = "standard";
					formLayout_5.topMargin = "0px";
					formLayout_5.rightMargin = "0px";
					formLayout_5.bottomMargin = "0px";
					formLayout_5.leftMargin = "0px";
					formLayout_5.horizontalSpacing = "5px";
					formLayout_5.verticalSpacing = "5px";
					formLayout_5.setColumns(["1fr", "470px"]);
					formLayout_5.setRows(["1fr"]);
					group_12.setLayout(formLayout_5);
					(function(container){
						var group_13 = new cpr.controls.Container("grp7");
						group_13.style.setClasses(["form-box"]);
						// Layout
						var verticalLayout_9 = new cpr.controls.layouts.VerticalLayout();
						group_13.setLayout(verticalLayout_9);
						(function(container){
							var userDefinedControl_2 = new udc.tmp.Ace("ace1");
							container.addChild(userDefinedControl_2, {
								"autoSize": "height",
								"width": "418px",
								"height": "295px"
							});
						})(group_13);
						container.addChild(group_13, {
							"colIndex": 1,
							"rowIndex": 0
						});
						var group_14 = new cpr.controls.Container("grp6");
						// Layout
						var formLayout_6 = new cpr.controls.layouts.FormLayout();
						formLayout_6.horizontalSpacing = "5px";
						formLayout_6.verticalSpacing = "10px";
						formLayout_6.setColumns(["1fr", "10px"]);
						formLayout_6.setColumnAutoSizing(1, true);
						formLayout_6.setRows(["1fr"]);
						group_14.setLayout(formLayout_6);
						(function(container){
							var userDefinedControl_3 = new udc.com.udcSplit("udcsplit1");
							userDefinedControl_3.leftGrpId = "grp6";
							userDefinedControl_3.rightGrpId = "grp7";
							container.addChild(userDefinedControl_3, {
								"colIndex": 1,
								"rowIndex": 0,
								"colSpan": 1,
								"rowSpan": 1,
								"horizontalAlign": "right",
								"width": 9
							});
							var group_15 = new cpr.controls.Container("grp9");
							// Layout
							var formLayout_7 = new cpr.controls.layouts.FormLayout();
							formLayout_7.scrollable = false;
							formLayout_7.topMargin = "0px";
							formLayout_7.rightMargin = "0px";
							formLayout_7.bottomMargin = "0px";
							formLayout_7.leftMargin = "0px";
							formLayout_7.horizontalSpacing = "10px";
							formLayout_7.verticalSpacing = "10px";
							formLayout_7.setColumns(["1fr"]);
							formLayout_7.setRows(["40px", "1fr"]);
							formLayout_7.setRowAutoSizing(0, true);
							group_15.setLayout(formLayout_7);
							(function(container){
								var group_16 = new cpr.controls.Container("grp10");
								group_16.style.setClasses(["form-box"]);
								// Layout
								var formLayout_8 = new cpr.controls.layouts.FormLayout();
								formLayout_8.scrollable = false;
								formLayout_8.topMargin = "5px";
								formLayout_8.rightMargin = "30px";
								formLayout_8.bottomMargin = "5px";
								formLayout_8.leftMargin = "5px";
								formLayout_8.horizontalSpacing = "5px";
								formLayout_8.verticalSpacing = "5px";
								formLayout_8.setColumns(["100px", "1fr"]);
								formLayout_8.setRows(["1fr"]);
								group_16.setLayout(formLayout_8);
								(function(container){
									var output_20 = new cpr.controls.Output();
									output_20.value = "결과값";
									output_20.style.css({
										"background-color" : "#e1edfe",
										"background-image" : "none",
										"padding-right" : "1rem"
									});
									container.addChild(output_20, {
										"colIndex": 0,
										"rowIndex": 0
									});
									var output_21 = new cpr.controls.Output("optRslt");
									output_21.value = "";
									output_21.style.css({
										"background-color" : "white",
										"border-right-style" : "none",
										"border-left-style" : "none",
										"padding-left" : "1rem",
										"border-bottom-style" : "none",
										"border-top-style" : "none",
										"text-align" : "left"
									});
									container.addChild(output_21, {
										"colIndex": 1,
										"rowIndex": 0
									});
								})(group_16);
								container.addChild(group_16, {
									"colIndex": 0,
									"rowIndex": 0
								});
								var group_17 = new cpr.controls.Container("grpFormFunc");
								group_17.style.setClasses(["form-box"]);
								// Layout
								var formLayout_9 = new cpr.controls.layouts.FormLayout();
								formLayout_9.topMargin = "5px";
								formLayout_9.rightMargin = "5px";
								formLayout_9.bottomMargin = "5px";
								formLayout_9.leftMargin = "5px";
								formLayout_9.horizontalSpacing = "5px";
								formLayout_9.verticalSpacing = "5px";
								formLayout_9.setColumns(["24px", "200px", "1fr", "130px", "150px"]);
								formLayout_9.setColumnAutoSizing(1, true);
								formLayout_9.setRows(["25px", "25px", "25px", "25px", "25px", "25px", "25px", "25px", "25px", "25px", "25px", "25px", "25px"]);
								formLayout_9.setRowAutoSizing(1, true);
								formLayout_9.setRowAutoSizing(2, true);
								formLayout_9.setRowAutoSizing(3, true);
								formLayout_9.setRowAutoSizing(4, true);
								formLayout_9.setRowAutoSizing(5, true);
								formLayout_9.setRowAutoSizing(6, true);
								formLayout_9.setRowAutoSizing(7, true);
								formLayout_9.setRowAutoSizing(8, true);
								formLayout_9.setRowAutoSizing(9, true);
								formLayout_9.setRowAutoSizing(10, true);
								formLayout_9.setRowAutoSizing(11, true);
								formLayout_9.setRowAutoSizing(12, true);
								group_17.setLayout(formLayout_9);
								(function(container){
									var output_22 = new cpr.controls.Output();
									output_22.value = "No";
									output_22.style.css({
										"background-color" : "#e1edfe",
										"background-image" : "none",
										"text-align" : "center"
									});
									container.addChild(output_22, {
										"colIndex": 0,
										"rowIndex": 0
									});
									var output_23 = new cpr.controls.Output();
									output_23.value = "함수";
									output_23.style.css({
										"background-color" : "#e1edfe",
										"background-image" : "none",
										"text-align" : "center"
									});
									container.addChild(output_23, {
										"colIndex": 1,
										"rowIndex": 0
									});
									var output_24 = new cpr.controls.Output();
									output_24.value = "설명";
									output_24.style.css({
										"background-color" : "#e1edfe",
										"background-image" : "none",
										"text-align" : "center"
									});
									container.addChild(output_24, {
										"colIndex": 2,
										"rowIndex": 0
									});
									var output_25 = new cpr.controls.Output();
									output_25.value = "동작";
									output_25.style.css({
										"background-color" : "#e1edfe",
										"background-image" : "none",
										"text-align" : "center"
									});
									container.addChild(output_25, {
										"colIndex": 4,
										"rowIndex": 0
									});
									var output_26 = new cpr.controls.Output();
									output_26.value = "1";
									output_26.style.css({
										"background-color" : "#e1edfe",
										"border-right-style" : "none",
										"border-left-style" : "none",
										"border-bottom-style" : "none",
										"background-image" : "none",
										"border-top-style" : "none",
										"text-align" : "center"
									});
									container.addChild(output_26, {
										"colIndex": 0,
										"rowIndex": 1
									});
									var output_27 = new cpr.controls.Output();
									output_27.value = "2";
									output_27.style.css({
										"background-color" : "#e1edfe",
										"border-right-style" : "none",
										"border-left-style" : "none",
										"border-bottom-style" : "none",
										"background-image" : "none",
										"border-top-style" : "none",
										"text-align" : "center"
									});
									container.addChild(output_27, {
										"colIndex": 0,
										"rowIndex": 2
									});
									var button_2 = new cpr.controls.Button();
									button_2.value = "redraw";
									button_2.style.setClasses(["btn-primary"]);
									if(typeof onButtonClick == "function") {
										button_2.addEventListener("click", onButtonClick);
									}
									container.addChild(button_2, {
										"colIndex": 4,
										"rowIndex": 1
									});
									var button_3 = new cpr.controls.Button();
									button_3.value = "setFocus";
									button_3.style.setClasses(["btn-primary"]);
									if(typeof onButtonClick2 == "function") {
										button_3.addEventListener("click", onButtonClick2);
									}
									container.addChild(button_3, {
										"colIndex": 4,
										"rowIndex": 2
									});
									var inputBox_3 = new cpr.controls.InputBox("ipb1");
									inputBox_3.readOnly = true;
									inputBox_3.value = "redraw";
									container.addChild(inputBox_3, {
										"colIndex": 1,
										"rowIndex": 1
									});
									var inputBox_4 = new cpr.controls.InputBox("ipb2");
									inputBox_4.readOnly = true;
									inputBox_4.value = "컨트롤을 다시 그린다.";
									container.addChild(inputBox_4, {
										"colIndex": 2,
										"rowIndex": 1
									});
									var inputBox_5 = new cpr.controls.InputBox("ipb3");
									inputBox_5.readOnly = true;
									inputBox_5.value = "컨트롤에 포커스를 준다.";
									container.addChild(inputBox_5, {
										"colIndex": 2,
										"rowIndex": 2
									});
									var inputBox_6 = new cpr.controls.InputBox("ipb4");
									inputBox_6.readOnly = true;
									inputBox_6.value = "setFocus";
									container.addChild(inputBox_6, {
										"colIndex": 1,
										"rowIndex": 2
									});
									var output_28 = new cpr.controls.Output();
									output_28.value = "3";
									output_28.style.css({
										"background-color" : "#e1edfe",
										"border-right-style" : "none",
										"border-left-style" : "none",
										"border-bottom-style" : "none",
										"background-image" : "none",
										"border-top-style" : "none",
										"text-align" : "center"
									});
									container.addChild(output_28, {
										"colIndex": 0,
										"rowIndex": 3
									});
									var output_29 = new cpr.controls.Output();
									output_29.value = "4";
									output_29.style.css({
										"background-color" : "#e1edfe",
										"border-right-style" : "none",
										"border-left-style" : "none",
										"border-bottom-style" : "none",
										"background-image" : "none",
										"border-top-style" : "none",
										"text-align" : "center"
									});
									container.addChild(output_29, {
										"colIndex": 0,
										"rowIndex": 4
									});
									var output_30 = new cpr.controls.Output();
									output_30.value = "5";
									output_30.style.css({
										"background-color" : "#e1edfe",
										"border-right-style" : "none",
										"border-left-style" : "none",
										"border-bottom-style" : "none",
										"background-image" : "none",
										"border-top-style" : "none",
										"text-align" : "center"
									});
									container.addChild(output_30, {
										"colIndex": 0,
										"rowIndex": 5
									});
									var output_31 = new cpr.controls.Output();
									output_31.value = "6";
									output_31.style.css({
										"background-color" : "#e1edfe",
										"border-right-style" : "none",
										"border-left-style" : "none",
										"border-bottom-style" : "none",
										"background-image" : "none",
										"border-top-style" : "none",
										"text-align" : "center"
									});
									container.addChild(output_31, {
										"colIndex": 0,
										"rowIndex": 6
									});
									var output_32 = new cpr.controls.Output();
									output_32.value = "7";
									output_32.style.css({
										"background-color" : "#e1edfe",
										"border-right-style" : "none",
										"border-left-style" : "none",
										"border-bottom-style" : "none",
										"background-image" : "none",
										"border-top-style" : "none",
										"text-align" : "center"
									});
									container.addChild(output_32, {
										"colIndex": 0,
										"rowIndex": 7
									});
									var output_33 = new cpr.controls.Output();
									output_33.value = "8";
									output_33.style.css({
										"background-color" : "#e1edfe",
										"border-right-style" : "none",
										"border-left-style" : "none",
										"border-bottom-style" : "none",
										"background-image" : "none",
										"border-top-style" : "none",
										"text-align" : "center"
									});
									container.addChild(output_33, {
										"colIndex": 0,
										"rowIndex": 8
									});
									var output_34 = new cpr.controls.Output();
									output_34.value = "9";
									output_34.style.css({
										"background-color" : "#e1edfe",
										"border-right-style" : "none",
										"border-left-style" : "none",
										"border-bottom-style" : "none",
										"background-image" : "none",
										"border-top-style" : "none",
										"text-align" : "center"
									});
									container.addChild(output_34, {
										"colIndex": 0,
										"rowIndex": 9
									});
									var output_35 = new cpr.controls.Output();
									output_35.value = "10";
									output_35.style.css({
										"background-color" : "#e1edfe",
										"border-right-style" : "none",
										"border-left-style" : "none",
										"border-bottom-style" : "none",
										"background-image" : "none",
										"border-top-style" : "none",
										"text-align" : "center"
									});
									container.addChild(output_35, {
										"colIndex": 0,
										"rowIndex": 10
									});
									var output_36 = new cpr.controls.Output();
									output_36.value = "11";
									output_36.style.css({
										"background-color" : "#e1edfe",
										"border-right-style" : "none",
										"border-left-style" : "none",
										"border-bottom-style" : "none",
										"background-image" : "none",
										"border-top-style" : "none",
										"text-align" : "center"
									});
									container.addChild(output_36, {
										"colIndex": 0,
										"rowIndex": 11
									});
									var output_37 = new cpr.controls.Output();
									output_37.value = "12";
									output_37.style.css({
										"background-color" : "#e1edfe",
										"border-right-style" : "none",
										"border-left-style" : "none",
										"border-bottom-style" : "none",
										"background-image" : "none",
										"border-top-style" : "none",
										"text-align" : "center"
									});
									container.addChild(output_37, {
										"colIndex": 0,
										"rowIndex": 12
									});
									var inputBox_7 = new cpr.controls.InputBox("ipb6");
									inputBox_7.readOnly = true;
									inputBox_7.value = "setValue";
									container.addChild(inputBox_7, {
										"colIndex": 1,
										"rowIndex": 3
									});
									var inputBox_8 = new cpr.controls.InputBox("ipb7");
									inputBox_8.readOnly = true;
									inputBox_8.value = "getValue";
									container.addChild(inputBox_8, {
										"colIndex": 1,
										"rowIndex": 4
									});
									var inputBox_9 = new cpr.controls.InputBox("ipb8");
									inputBox_9.readOnly = true;
									inputBox_9.value = "reset";
									container.addChild(inputBox_9, {
										"colIndex": 1,
										"rowIndex": 5
									});
									var inputBox_10 = new cpr.controls.InputBox("ipb9");
									inputBox_10.readOnly = true;
									inputBox_10.value = "getConstraint";
									container.addChild(inputBox_10, {
										"colIndex": 1,
										"rowIndex": 6
									});
									var inputBox_11 = new cpr.controls.InputBox("ipb10");
									inputBox_11.readOnly = true;
									inputBox_11.value = "getActualRectPosition";
									container.addChild(inputBox_11, {
										"colIndex": 1,
										"rowIndex": 7
									});
									var inputBox_12 = new cpr.controls.InputBox("ipb11");
									inputBox_12.readOnly = true;
									inputBox_12.value = "updateConstraint";
									container.addChild(inputBox_12, {
										"colIndex": 1,
										"rowIndex": 8
									});
									var inputBox_13 = new cpr.controls.InputBox("ipb12");
									inputBox_13.readOnly = true;
									inputBox_13.value = "setReadOnly";
									container.addChild(inputBox_13, {
										"colIndex": 1,
										"rowIndex": 9
									});
									var inputBox_14 = new cpr.controls.InputBox("ipb13");
									inputBox_14.readOnly = true;
									inputBox_14.value = "setVisible";
									container.addChild(inputBox_14, {
										"colIndex": 1,
										"rowIndex": 10
									});
									var inputBox_15 = new cpr.controls.InputBox("ipb14");
									inputBox_15.readOnly = true;
									inputBox_15.value = "dispatchEvent";
									container.addChild(inputBox_15, {
										"colIndex": 1,
										"rowIndex": 12
									});
									var inputBox_16 = new cpr.controls.InputBox("ipb15");
									inputBox_16.readOnly = true;
									inputBox_16.value = "setEnable";
									container.addChild(inputBox_16, {
										"colIndex": 1,
										"rowIndex": 11
									});
									var inputBox_17 = new cpr.controls.InputBox("ipb16");
									inputBox_17.readOnly = true;
									inputBox_17.value = "컨트롤에 값을 입력한다.";
									container.addChild(inputBox_17, {
										"colIndex": 2,
										"rowIndex": 3
									});
									var inputBox_18 = new cpr.controls.InputBox("ipb17");
									inputBox_18.readOnly = true;
									inputBox_18.value = "컨트롤에 입력된 값을 가져온다.";
									container.addChild(inputBox_18, {
										"colIndex": 2,
										"rowIndex": 4
									});
									var inputBox_19 = new cpr.controls.InputBox("ipb18");
									inputBox_19.readOnly = true;
									inputBox_19.value = "컨트롤의 값을 초기화 한다.";
									container.addChild(inputBox_19, {
										"colIndex": 2,
										"rowIndex": 5
									});
									var inputBox_20 = new cpr.controls.InputBox("ipb19");
									inputBox_20.readOnly = true;
									inputBox_20.value = "컨트롤의 제약조건을 반환한다.";
									container.addChild(inputBox_20, {
										"colIndex": 2,
										"rowIndex": 6
									});
									var inputBox_21 = new cpr.controls.InputBox("ipb20");
									inputBox_21.readOnly = true;
									inputBox_21.value = "컨트롤이 실제로 그려진 사이즈를 반환한다.";
									container.addChild(inputBox_21, {
										"colIndex": 2,
										"rowIndex": 7
									});
									var inputBox_22 = new cpr.controls.InputBox("ipb21");
									inputBox_22.readOnly = true;
									inputBox_22.value = "컨트롤의 제약조건을 변경한다.";
									container.addChild(inputBox_22, {
										"colIndex": 2,
										"rowIndex": 8
									});
									var inputBox_23 = new cpr.controls.InputBox("ipb22");
									inputBox_23.readOnly = true;
									inputBox_23.value = "컨트롤의 readOnly 속성을 제어한다.";
									container.addChild(inputBox_23, {
										"colIndex": 2,
										"rowIndex": 9
									});
									var inputBox_24 = new cpr.controls.InputBox("ipb23");
									inputBox_24.readOnly = true;
									inputBox_24.value = "컨트롤의 visible 속성을 제어한다.";
									container.addChild(inputBox_24, {
										"colIndex": 2,
										"rowIndex": 10
									});
									var inputBox_25 = new cpr.controls.InputBox("ipb24");
									inputBox_25.readOnly = true;
									inputBox_25.value = "컨트롤의 enable 속성을 제어한다.";
									container.addChild(inputBox_25, {
										"colIndex": 2,
										"rowIndex": 11
									});
									var inputBox_26 = new cpr.controls.InputBox("ipb25");
									inputBox_26.readOnly = true;
									inputBox_26.value = "컨트롤의 이벤트를 발생시킨다.";
									container.addChild(inputBox_26, {
										"colIndex": 2,
										"rowIndex": 12
									});
									var button_4 = new cpr.controls.Button("btn2");
									button_4.value = "setValue";
									button_4.style.setClasses(["btn-primary"]);
									if(typeof onBtn2Click == "function") {
										button_4.addEventListener("click", onBtn2Click);
									}
									container.addChild(button_4, {
										"colIndex": 4,
										"rowIndex": 3
									});
									var button_5 = new cpr.controls.Button("btn3");
									button_5.value = "getValue";
									button_5.style.setClasses(["btn-primary"]);
									if(typeof onBtn3Click == "function") {
										button_5.addEventListener("click", onBtn3Click);
									}
									container.addChild(button_5, {
										"colIndex": 4,
										"rowIndex": 4
									});
									var button_6 = new cpr.controls.Button("btn4");
									button_6.value = "reset";
									button_6.style.setClasses(["btn-primary"]);
									if(typeof onBtn4Click == "function") {
										button_6.addEventListener("click", onBtn4Click);
									}
									container.addChild(button_6, {
										"colIndex": 4,
										"rowIndex": 5
									});
									var button_7 = new cpr.controls.Button("btn5");
									button_7.value = "getConstraint";
									button_7.style.setClasses(["btn-primary"]);
									if(typeof onBtn5Click == "function") {
										button_7.addEventListener("click", onBtn5Click);
									}
									container.addChild(button_7, {
										"colIndex": 4,
										"rowIndex": 6
									});
									var button_8 = new cpr.controls.Button("btn6");
									button_8.value = "getActualRectPosition";
									button_8.style.setClasses(["btn-primary"]);
									if(typeof onBtn6Click == "function") {
										button_8.addEventListener("click", onBtn6Click);
									}
									container.addChild(button_8, {
										"colIndex": 4,
										"rowIndex": 7
									});
									var button_9 = new cpr.controls.Button("btn7");
									button_9.value = "updateConstraint";
									button_9.style.setClasses(["btn-primary"]);
									if(typeof onBtn7Click == "function") {
										button_9.addEventListener("click", onBtn7Click);
									}
									container.addChild(button_9, {
										"colIndex": 4,
										"rowIndex": 8
									});
									var button_10 = new cpr.controls.Button("btn8");
									button_10.value = "setReadOnly";
									button_10.style.setClasses(["btn-primary"]);
									if(typeof onBtn8Click == "function") {
										button_10.addEventListener("click", onBtn8Click);
									}
									container.addChild(button_10, {
										"colIndex": 4,
										"rowIndex": 9
									});
									var button_11 = new cpr.controls.Button("btn9");
									button_11.value = "setVisible";
									button_11.style.setClasses(["btn-primary"]);
									if(typeof onBtn9Click == "function") {
										button_11.addEventListener("click", onBtn9Click);
									}
									container.addChild(button_11, {
										"colIndex": 4,
										"rowIndex": 10
									});
									var button_12 = new cpr.controls.Button("btn10");
									button_12.value = "setEnable";
									button_12.style.setClasses(["btn-primary"]);
									if(typeof onBtn10Click == "function") {
										button_12.addEventListener("click", onBtn10Click);
									}
									container.addChild(button_12, {
										"colIndex": 4,
										"rowIndex": 11
									});
									var button_13 = new cpr.controls.Button("btn11");
									button_13.value = "dispatchEvent";
									button_13.style.setClasses(["btn-primary"]);
									if(typeof onBtn11Click == "function") {
										button_13.addEventListener("click", onBtn11Click);
									}
									container.addChild(button_13, {
										"colIndex": 4,
										"rowIndex": 12
									});
									var output_38 = new cpr.controls.Output();
									output_38.value = "입력값";
									output_38.style.css({
										"background-color" : "#e1edfe",
										"background-image" : "none",
										"text-align" : "center"
									});
									container.addChild(output_38, {
										"colIndex": 3,
										"rowIndex": 0
									});
									var comboBox_3 = new cpr.controls.ComboBox("cmb3");
									comboBox_3.placeholder = "속성";
									(function(comboBox_3){
										comboBox_3.addItem(new cpr.controls.Item("width", "width"));
										comboBox_3.addItem(new cpr.controls.Item("height", "height"));
										comboBox_3.addItem(new cpr.controls.Item("top", "top"));
										comboBox_3.addItem(new cpr.controls.Item("bottom", "bottom"));
										comboBox_3.addItem(new cpr.controls.Item("left", "left"));
										comboBox_3.addItem(new cpr.controls.Item("right", "right"));
									})(comboBox_3);
									container.addChild(comboBox_3, {
										"colIndex": 3,
										"rowIndex": 7
									});
								})(group_17);
								if(typeof onGrpFormFuncClick == "function") {
									group_17.addEventListener("click", onGrpFormFuncClick);
								}
								container.addChild(group_17, {
									"colIndex": 0,
									"rowIndex": 1
								});
							})(group_15);
							container.addChild(group_15, {
								"colIndex": 0,
								"rowIndex": 0,
								"colSpan": 1,
								"rowSpan": 1
							});
						})(group_14);
						container.addChild(group_14, {
							"colIndex": 0,
							"rowIndex": 0,
							"colSpan": 1,
							"rowSpan": 1
						});
					})(group_12);
					container.addChild(group_12, {
						"autoSize": "none",
						"width": "1210px",
						"height": "295px"
					});
				})(group_7);
				container.addChild(group_7, {
					"autoSize": "height",
					"width": "1270px",
					"height": "1000px"
				});
			})(group_2);
			container.addChild(group_2, {
				"autoSize": "height",
				"width": "400px",
				"height": "1800px"
			});
			if(typeof onBodyInit == "function"){
				app.addEventListener("init", onBodyInit);
			}
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "컨트롤 속성제어";
	cpr.core.Platform.INSTANCE.register(app);
})();
