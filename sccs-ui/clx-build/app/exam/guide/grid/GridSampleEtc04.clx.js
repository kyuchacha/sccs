/*
 * App URI: app/exam/guide/grid/GridSampleEtc04
 * Source Location: app/exam/guide/grid/GridSampleEtc04.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/exam/guide/grid/GridSampleEtc04", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * GridSampleEtc04.js
			 * Created at 2022. 3. 18. 오후 4:21:05.
			 *
			 * @author 1amthomas
			 ************************************************/
			
			
			/*
			 * 그리드에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onGrd1Click( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Grid
				 */
				var grd1 = e.control;
				var ds = app.lookup("dsList");
				
				if (e.targetObject.cellIndex == 0) {
					var rowIndex = grd1.getSelectedRowIndex(); //그리드에서 선택된 행의 index
					if (ds.getValue(rowIndex, "condition") == "N") {
						grd1.setCheckRowIndex(rowIndex, false);
					}
				}
			}
			
			var _true = true;
			/*
			 * 그리드에서 header-check 이벤트 발생 시 호출.
			 * Grid의 Header Checkbox가 체크 되었을 때 발생하는 이벤트. (columnType=checkbox)
			 */
			function onGrdListHeaderCheck( /* cpr.events.CGridEvent */ e) {
				/** 
				 * @type cpr.controls.Grid
				 */
				var grdList = e.control;
				
				var ds = app.lookup("dsList");
				var dsCnt = ds.getRowCount();
				
				if (_true) {
					for (var i = 0; i < dsCnt; i++) {
						if (ds.getValue(i, "condition") == "N") {
							grdList.setCheckRowIndex(i, false);
						}
					}
				} else {
					for (var i = 0; i < dsCnt; i++) {
						grdList.setCheckRowIndex(i, false);
					}
				}
				
				_true = !_true;
			}
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsList");
			dataSet_1.parseData({
				"columns": [
					{"name": "col1"},
					{"name": "col2"},
					{"name": "col3"},
					{"name": "condition"}
				],
				"rows": [
					{"col1": "col11", "col2": "col21", "col3": "col31", "condition": "Y"},
					{"col1": "col12", "col2": "col22", "col3": "col32", "condition": "Y"},
					{"col1": "col13", "col2": "col23", "col3": "col33", "condition": "N"},
					{"col1": "col14", "col2": "col24", "col3": "col34", "condition": "Y"},
					{"col1": "col15", "col2": "col25", "col3": "col35", "condition": "N"},
					{"col1": "col16", "col2": "col26", "col3": "col36", "condition": "N"},
					{"col1": "col17", "col2": "col27", "col3": "col37", "condition": "Y"},
					{"col1": "col18", "col2": "col28", "col3": "col38", "condition": "Y"},
					{"col1": "col19", "col2": "col29", "col3": "col39", "condition": "Y"},
					{"col1": "col110", "col2": "col210", "col3": "col310", "condition": "N"}
				]
			});
			app.register(dataSet_1);
			
			app.supportMedia("all and (min-width: 1320px)", "eXFrame");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1319px)", "default");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpHeader");
			// Layout
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			group_1.setLayout(verticalLayout_2);
			(function(container){
				var userDefinedControl_1 = new udc.com.appHeader("appheader1");
				container.addChild(userDefinedControl_1, {
					"width": "500px",
					"height": "30px"
				});
			})(group_1);
			container.addChild(group_1, {
				"autoSize": "height",
				"width": "400px",
				"height": "30px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var verticalLayout_3 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_3.leftMargin = 20;
			verticalLayout_3.rightMargin = 30;
			verticalLayout_3.topMargin = 30;
			verticalLayout_3.bottomMargin = 20;
			group_2.setLayout(verticalLayout_3);
			(function(container){
				var group_3 = new cpr.controls.Container();
				// Layout
				var verticalLayout_4 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_4.spacing = 20;
				verticalLayout_4.topMargin = 20;
				verticalLayout_4.bottomMargin = 40;
				group_3.setLayout(verticalLayout_4);
				(function(container){
					var group_4 = new cpr.controls.Container("grp1");
					// Layout
					var formLayout_1 = new cpr.controls.layouts.FormLayout();
					formLayout_1.scrollable = false;
					formLayout_1.rightMargin = "50px";
					formLayout_1.horizontalSpacing = "5px";
					formLayout_1.verticalSpacing = "5px";
					formLayout_1.setColumns(["150px", "100px"]);
					formLayout_1.setColumnAutoSizing(0, true);
					formLayout_1.setColumnAutoSizing(1, true);
					formLayout_1.setRows(["1fr"]);
					group_4.setLayout(formLayout_1);
					(function(container){
						var output_1 = new cpr.controls.Output();
						output_1.value = "그리드 체크박스 조건";
						output_1.style.css({
							"font-weight" : "bold",
							"padding-left" : "1rem",
							"font-size" : "2.5rem"
						});
						container.addChild(output_1, {
							"colIndex": 0,
							"rowIndex": 0
						});
					})(group_4);
					container.addChild(group_4, {
						"autoSize": "height",
						"width": "1270px",
						"height": "40px"
					});
					var output_2 = new cpr.controls.Output();
					output_2.value = "이 페이지에서는 그리드의 체크박스 조건에 대해 설명합니다.";
					output_2.style.setClasses(["opt-tmpl"]);
					output_2.style.css({
						"padding-left" : "1rem",
						"font-size" : "1rem"
					});
					container.addChild(output_2, {
						"autoSize": "height",
						"width": "1210px",
						"height": "46px"
					});
				})(group_3);
				container.addChild(group_3, {
					"autoSize": "height",
					"width": "1270px",
					"height": "120px"
				});
				var group_5 = new cpr.controls.Container();
				// Layout
				var verticalLayout_5 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_5.spacing = 20;
				verticalLayout_5.topMargin = 20;
				verticalLayout_5.bottomMargin = 40;
				group_5.setLayout(verticalLayout_5);
				(function(container){
					var output_3 = new cpr.controls.Output();
					output_3.value = "시나리오";
					output_3.style.setClasses(["h1", "pl-3", "bg-primary", "text-white"]);
					output_3.style.css({
						"font-weight" : "bold",
						"padding-left" : "1rem",
						"font-size" : "1.75rem"
					});
					container.addChild(output_3, {
						"width": "100px",
						"height": "40px"
					});
					var output_4 = new cpr.controls.Output("ipbScenario");
					output_4.value = "그리드의 condition 항목값이 N 인 경우에 체크박스를 클릭할 수 없는지 확인합니다.";
					output_4.style.setClasses(["opt-tmpl"]);
					output_4.style.css({
						"padding-left" : "1rem",
						"font-size" : "1rem"
					});
					container.addChild(output_4, {
						"autoSize": "height",
						"width": "1210px",
						"height": "107px"
					});
				})(group_5);
				container.addChild(group_5, {
					"autoSize": "height",
					"width": "1270px",
					"height": "345px"
				});
				var group_6 = new cpr.controls.Container();
				group_6.userAttr({"floating-header": "true"});
				// Layout
				var verticalLayout_6 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_6.spacing = 15;
				verticalLayout_6.topMargin = 20;
				verticalLayout_6.bottomMargin = 0;
				group_6.setLayout(verticalLayout_6);
				(function(container){
					var output_5 = new cpr.controls.Output();
					output_5.value = "기능 확인";
					output_5.style.setClasses(["h1", "pl-3", "bg-primary", "text-white"]);
					output_5.style.css({
						"font-weight" : "bold",
						"padding-left" : "1rem",
						"font-size" : "1.75rem"
					});
					container.addChild(output_5, {
						"autoSize": "none",
						"width": "1270px",
						"height": "40px"
					});
					var group_7 = new cpr.controls.Container("grp3");
					group_7.style.css({
						"border-right-style" : "solid",
						"border-top-width" : "1px",
						"border-bottom-color" : "#dedede",
						"border-right-width" : "1px",
						"border-left-color" : "#dedede",
						"border-right-color" : "#dedede",
						"border-left-width" : "1px",
						"border-top-style" : "solid",
						"background-color" : "#F0F0F0",
						"border-left-style" : "solid",
						"border-bottom-width" : "1px",
						"border-top-color" : "#dedede",
						"border-bottom-style" : "solid"
					});
					// Layout
					var verticalLayout_7 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_7.leftMargin = 30;
					verticalLayout_7.rightMargin = 30;
					verticalLayout_7.topMargin = 5;
					verticalLayout_7.bottomMargin = 10;
					group_7.setLayout(verticalLayout_7);
					(function(container){
						var group_8 = new cpr.controls.Container("grp5");
						// Layout
						var formLayout_2 = new cpr.controls.layouts.FormLayout();
						formLayout_2.scrollable = false;
						formLayout_2.topMargin = "0px";
						formLayout_2.rightMargin = "0px";
						formLayout_2.leftMargin = "0px";
						formLayout_2.horizontalSpacing = "5px";
						formLayout_2.verticalSpacing = "5px";
						formLayout_2.setColumns(["1fr"]);
						formLayout_2.setRows(["25px", "1fr"]);
						group_8.setLayout(formLayout_2);
						(function(container){
							var output_6 = new cpr.controls.Output();
							output_6.value = "<기능 확인 컨트롤>";
							output_6.style.setClasses(["opt-tmpl"]);
							output_6.style.css({
								"text-align" : "center"
							});
							output_6.bind("tooltip").toExpression("#ipbScenario.value");
							container.addChild(output_6, {
								"colIndex": 0,
								"rowIndex": 0
							});
							var grid_1 = new cpr.controls.Grid("grdList");
							grid_1.readOnly = true;
							grid_1.init({
								"dataSet": app.lookup("dsList"),
								"autoFit": "3, 4, 5, 2",
								"columns": [
									{"width": "28px"},
									{"width": "40px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"}
								],
								"header": {
									"rows": [{"height": "27px"}],
									"cells": [
										{
											"constraint": {"rowIndex": 0, "colIndex": 0},
											"configurator": function(cell){
												cell.filterable = false;
												cell.sortable = false;
												cell.columnType = "checkbox";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 1},
											"configurator": function(cell){
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "No";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 2},
											"configurator": function(cell){
												cell.targetColumnName = "condition";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "condition";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 3},
											"configurator": function(cell){
												cell.targetColumnName = "col1";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "col1";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 4},
											"configurator": function(cell){
												cell.targetColumnName = "col2";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "col2";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 5},
											"configurator": function(cell){
												cell.targetColumnName = "col3";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "col3";
											}
										}
									]
								},
								"detail": {
									"rows": [{"height": "24px"}],
									"cells": [
										{
											"constraint": {"rowIndex": 0, "colIndex": 0},
											"configurator": function(cell){
												cell.columnType = "checkbox";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 1},
											"configurator": function(cell){
												cell.columnType = "rowindex";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 2},
											"configurator": function(cell){
												cell.columnName = "condition";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 3},
											"configurator": function(cell){
												cell.columnName = "col1";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 4},
											"configurator": function(cell){
												cell.columnName = "col2";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 5},
											"configurator": function(cell){
												cell.columnName = "col3";
											}
										}
									]
								}
							});
							if(typeof onGrdListHeaderCheck == "function") {
								grid_1.addEventListener("header-check", onGrdListHeaderCheck);
							}
							if(typeof onGrd1Click == "function") {
								grid_1.addEventListener("click", onGrd1Click);
							}
							container.addChild(grid_1, {
								"colIndex": 0,
								"rowIndex": 1
							});
						})(group_8);
						container.addChild(group_8, {
							"autoSize": "height",
							"width": "860px",
							"height": "250px"
						});
					})(group_7);
					container.addChild(group_7, {
						"autoSize": "height",
						"width": "1210px",
						"height": "300px"
					});
				})(group_6);
				container.addChild(group_6, {
					"autoSize": "height",
					"width": "1270px",
					"height": "1000px"
				});
			})(group_2);
			container.addChild(group_2, {
				"autoSize": "height",
				"width": "400px",
				"height": "1800px"
			});
		}
	});
	app.title = "그리드 체크박스 선택조건 예제";
	cpr.core.Platform.INSTANCE.register(app);
})();
