/*
 * App URI: app/exam/guide/grid/GridSampleEtc01
 * Source Location: app/exam/guide/grid/GridSampleEtc01.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/exam/guide/grid/GridSampleEtc01", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * GridSampleEtc01.js
			 * Created at 2022. 3. 8. 오후 5:38:37.
			 *
			 * @author jiyeon
			 ************************************************/
			
			var util = createCommonUtil();
			
			
			/*
			 * 루트 컨테이너에서 init 이벤트 발생 시 호출.
			 * 앱이 최초 구성될 때 발생하는 이벤트 입니다.
			 */
			function onBodyInit(e){
				util.Grid.init(app, "grdList");
			//	util.FreeForm.init(app, ["grpFormFunc"]);
			}
			
			
			/*
			 * "필수값체크" 버튼(btn2)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn2Click(e){
				var btn2 = e.control;
				
				printSource(validate)
				
				validate();
			}
			
			function validate() {
				if(!util.validate(app, ["grdList"], "modify")) return false;
			}
			
			
			
			//== 스크립트 출력 ==//
			function printSource(value) {
				/* 에디터에 소스 표시 */
				var vcAceEditor = app.lookup("ace1");
				vcAceEditor.value = value;	
			}
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsList");
			dataSet_1.parseData({
				"columns": [
					{"name": "gbn"},
					{"name": "col1"},
					{"name": "col2"},
					{"name": "col3"},
					{"name": "col4"}
				],
				"rows": [
					{"gbn": "토마토", "col1": "A123456", "col2": "홍길동1", "col3": "520000", "col4": "2018-09-01"},
					{"gbn": "토마토", "col1": "A1234567", "col2": "홍길동2", "col3": "30000", "col4": "2018-09-01"},
					{"gbn": "토마토", "col1": "A1234567", "col2": "홍길동3", "col3": "1500000", "col4": "2018-09-01"},
					{"gbn": "토마토", "col1": "A1234567", "col2": "홍길동4", "col3": "900000", "col4": "2018-09-01"},
					{"gbn": "퇴직연금", "col1": "A1234567", "col2": "홍길동5", "col3": "2000000", "col4": "2018-09-01"},
					{"gbn": "퇴직연금", "col1": "A1234567", "col2": "홍길동6", "col3": "25000", "col4": "2018-09-01"},
					{"gbn": "퇴직연금", "col1": "A1234567", "col2": "홍길동7", "col3": "300000", "col4": "2018-09-01"},
					{"gbn": "퇴직연금", "col1": "A1234567", "col2": "홍길동8", "col3": "1000000", "col4": "2018-09-01"},
					{"gbn": "리버사이드", "col1": "A1234567", "col2": "홍길동9", "col3": "850000", "col4": "2018-09-01"},
					{"gbn": "리버사이드", "col1": "A1234567", "col2": "홍길동10", "col3": "150000", "col4": "2018-09-01"},
					{"gbn": "리버사이드", "col1": "A1234567", "col2": "홍길동11", "col3": "370000", "col4": "2018-09-01"}
				]
			});
			app.register(dataSet_1);
			
			app.supportMedia("all and (min-width: 1320px)", "eXFrame");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1319px)", "default");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpHeader");
			// Layout
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			group_1.setLayout(verticalLayout_2);
			(function(container){
				var userDefinedControl_1 = new udc.com.appHeader("appheader1");
				container.addChild(userDefinedControl_1, {
					"width": "500px",
					"height": "30px"
				});
			})(group_1);
			container.addChild(group_1, {
				"autoSize": "height",
				"width": "400px",
				"height": "30px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var verticalLayout_3 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_3.leftMargin = 20;
			verticalLayout_3.rightMargin = 30;
			verticalLayout_3.topMargin = 30;
			verticalLayout_3.bottomMargin = 20;
			group_2.setLayout(verticalLayout_3);
			(function(container){
				var group_3 = new cpr.controls.Container();
				// Layout
				var verticalLayout_4 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_4.spacing = 20;
				verticalLayout_4.topMargin = 20;
				verticalLayout_4.bottomMargin = 40;
				group_3.setLayout(verticalLayout_4);
				(function(container){
					var group_4 = new cpr.controls.Container("grp1");
					// Layout
					var formLayout_1 = new cpr.controls.layouts.FormLayout();
					formLayout_1.scrollable = false;
					formLayout_1.rightMargin = "50px";
					formLayout_1.horizontalSpacing = "5px";
					formLayout_1.verticalSpacing = "5px";
					formLayout_1.setColumns(["150px", "100px"]);
					formLayout_1.setColumnAutoSizing(0, true);
					formLayout_1.setColumnAutoSizing(1, true);
					formLayout_1.setRows(["1fr"]);
					group_4.setLayout(formLayout_1);
					(function(container){
						var output_1 = new cpr.controls.Output();
						output_1.value = "그리드 필수값 체크";
						output_1.style.css({
							"font-weight" : "bold",
							"padding-left" : "1rem",
							"font-size" : "2.5rem"
						});
						container.addChild(output_1, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var output_2 = new cpr.controls.Output();
						output_2.value = "util.Grid";
						output_2.style.setClasses(["text-primary"]);
						output_2.style.css({
							"font-weight" : "bold",
							"padding-left" : "3rem",
							"font-size" : "1.25rem",
							"text-align" : "left"
						});
						container.addChild(output_2, {
							"colIndex": 1,
							"rowIndex": 0,
							"verticalAlign": "bottom",
							"height": 35
						});
					})(group_4);
					container.addChild(group_4, {
						"autoSize": "height",
						"width": "1270px",
						"height": "40px"
					});
					var output_3 = new cpr.controls.Output();
					output_3.value = "이 페이지에서는 공통모듈 내 그리드 필수값 체크 기능에 대해 설명합니다.";
					output_3.style.setClasses(["opt-tmpl"]);
					output_3.style.css({
						"padding-left" : "1rem",
						"font-size" : "1rem"
					});
					container.addChild(output_3, {
						"autoSize": "height",
						"width": "1210px",
						"height": "46px"
					});
				})(group_3);
				container.addChild(group_3, {
					"autoSize": "height",
					"width": "1270px",
					"height": "120px"
				});
				var group_5 = new cpr.controls.Container();
				// Layout
				var verticalLayout_5 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_5.spacing = 20;
				verticalLayout_5.topMargin = 20;
				verticalLayout_5.bottomMargin = 40;
				group_5.setLayout(verticalLayout_5);
				(function(container){
					var output_4 = new cpr.controls.Output();
					output_4.value = "시나리오";
					output_4.style.setClasses(["h1", "pl-3", "bg-primary", "text-white"]);
					output_4.style.css({
						"font-weight" : "bold",
						"padding-left" : "1rem",
						"font-size" : "1.75rem"
					});
					container.addChild(output_4, {
						"width": "100px",
						"height": "40px"
					});
					var output_5 = new cpr.controls.Output("ipbScenario");
					output_5.value = "1. 행 추가 버튼을 클릭한다. (또는 필수입력 항목의 값을 제거한다)\r\n2. 필수값 체크 버튼을 클릭한다.\r\n3. 그리드의 필수값 체크 방법을 확인한다.";
					output_5.style.setClasses(["opt-tmpl"]);
					output_5.style.css({
						"padding-left" : "1rem",
						"font-size" : "1rem"
					});
					container.addChild(output_5, {
						"autoSize": "height",
						"width": "1210px",
						"height": "107px"
					});
					var group_6 = new cpr.controls.Container("grp2");
					group_6.style.css({
						"background-color" : "#dff7fb"
					});
					// Layout
					var verticalLayout_6 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_6.leftMargin = 30;
					verticalLayout_6.rightMargin = 30;
					verticalLayout_6.topMargin = 20;
					verticalLayout_6.bottomMargin = 20;
					group_6.setLayout(verticalLayout_6);
					(function(container){
						var output_6 = new cpr.controls.Output();
						output_6.value = "추가설명";
						output_6.style.setClasses(["text-info", "opt-tmpl"]);
						output_6.style.css({
							"font-weight" : "bold"
						});
						container.addChild(output_6, {
							"width": "100px",
							"height": "25px"
						});
						var output_7 = new cpr.controls.Output();
						output_7.value = "1. 필수값 지정 방법은 그리드의 디테일 셀의 각 컨트롤 선택 후\r\nproperties > 사용자 속성 > required 속성을 Y로 세팅한다.\r\nproperties > 일반 > fieldLabel 을 필수로 입력한다.\r\n2. 필수입력 항목의 헤더는\r\nproperties > 스타일 > class 를 require로 입력한다.";
						output_7.style.setClasses(["text-info", "opt-tmpl"]);
						container.addChild(output_7, {
							"autoSize": "height",
							"width": "100px",
							"height": "25px"
						});
					})(group_6);
					container.addChild(group_6, {
						"autoSize": "height",
						"width": "1100px",
						"height": "100px"
					});
				})(group_5);
				container.addChild(group_5, {
					"autoSize": "height",
					"width": "1270px",
					"height": "345px"
				});
				var group_7 = new cpr.controls.Container();
				group_7.userAttr({"floating-header": "true"});
				// Layout
				var verticalLayout_7 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_7.spacing = 15;
				verticalLayout_7.topMargin = 20;
				verticalLayout_7.bottomMargin = 0;
				group_7.setLayout(verticalLayout_7);
				(function(container){
					var output_8 = new cpr.controls.Output();
					output_8.value = "기능 확인";
					output_8.style.setClasses(["h1", "pl-3", "bg-primary", "text-white"]);
					output_8.style.css({
						"font-weight" : "bold",
						"padding-left" : "1rem",
						"font-size" : "1.75rem"
					});
					container.addChild(output_8, {
						"autoSize": "none",
						"width": "1270px",
						"height": "40px"
					});
					var group_8 = new cpr.controls.Container("grp3");
					group_8.style.css({
						"border-right-style" : "solid",
						"border-top-width" : "1px",
						"border-bottom-color" : "#dedede",
						"border-right-width" : "1px",
						"border-left-color" : "#dedede",
						"border-right-color" : "#dedede",
						"border-left-width" : "1px",
						"border-top-style" : "solid",
						"background-color" : "#F0F0F0",
						"border-left-style" : "solid",
						"border-bottom-width" : "1px",
						"border-top-color" : "#dedede",
						"border-bottom-style" : "solid"
					});
					// Layout
					var verticalLayout_8 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_8.leftMargin = 30;
					verticalLayout_8.rightMargin = 30;
					verticalLayout_8.topMargin = 5;
					verticalLayout_8.bottomMargin = 15;
					group_8.setLayout(verticalLayout_8);
					(function(container){
						var group_9 = new cpr.controls.Container("grp5");
						// Layout
						var formLayout_2 = new cpr.controls.layouts.FormLayout();
						formLayout_2.scrollable = false;
						formLayout_2.topMargin = "0px";
						formLayout_2.rightMargin = "0px";
						formLayout_2.leftMargin = "0px";
						formLayout_2.horizontalSpacing = "5px";
						formLayout_2.verticalSpacing = "5px";
						formLayout_2.setColumns(["1fr"]);
						formLayout_2.setRows(["25px", "25px", "1fr"]);
						group_9.setLayout(formLayout_2);
						(function(container){
							var group_10 = new cpr.controls.Container("grp8");
							// Layout
							var verticalLayout_9 = new cpr.controls.layouts.VerticalLayout();
							group_10.setLayout(verticalLayout_9);
							(function(container){
								var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdList");
								grid_1.init({
									"dataSet": app.lookup("dsList"),
									"resizableColumns": "all",
									"columns": [
										{"width": "25px"},
										{"width": "25px"},
										{"width": "100px"},
										{"width": "100px"},
										{"width": "100px"},
										{"width": "100px"},
										{"width": "100px"}
									],
									"header": {
										"rows": [{"height": "24px"}],
										"cells": [
											{
												"constraint": {"rowIndex": 0, "colIndex": 0},
												"configurator": function(cell){
													cell.filterable = false;
													cell.sortable = false;
													cell.columnType = "checkbox";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 1},
												"configurator": function(cell){
													cell.filterable = false;
													cell.sortable = false;
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 2},
												"configurator": function(cell){
													cell.targetColumnName = "gbn";
													cell.filterable = false;
													cell.sortable = false;
													cell.text = "단체";
													cell.style.setClasses(["require"]);
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 3},
												"configurator": function(cell){
													cell.targetColumnName = "col1";
													cell.filterable = false;
													cell.sortable = false;
													cell.text = "가입자증번";
													cell.style.setClasses(["require"]);
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 4},
												"configurator": function(cell){
													cell.targetColumnName = "col2";
													cell.filterable = false;
													cell.sortable = false;
													cell.text = "성명";
													cell.style.setClasses(["require"]);
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 5},
												"configurator": function(cell){
													cell.targetColumnName = "col3";
													cell.filterable = false;
													cell.sortable = false;
													cell.text = "부담금";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 6},
												"configurator": function(cell){
													cell.targetColumnName = "col4";
													cell.filterable = false;
													cell.sortable = false;
													cell.text = "지급일자";
												}
											}
										]
									},
									"detail": {
										"rows": [{"height": "24px"}],
										"cells": [
											{
												"constraint": {"rowIndex": 0, "colIndex": 0},
												"configurator": function(cell){
													cell.columnType = "checkbox";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 1},
												"configurator": function(cell){
													cell.columnType = "rowindex";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 2},
												"configurator": function(cell){
													cell.columnName = "gbn";
													cell.control = (function(){
														var inputBox_1 = new cpr.controls.InputBox("ipb8");
														inputBox_1.fieldLabel = "단체";
														inputBox_1.userAttr({"required": "Y"});
														inputBox_1.bind("value").toDataColumn("gbn");
														return inputBox_1;
													})();
													cell.controlConstraint = {};
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 3},
												"configurator": function(cell){
													cell.columnName = "col1";
													cell.control = (function(){
														var inputBox_2 = new cpr.controls.InputBox("ipb7");
														inputBox_2.fieldLabel = "가입자증번";
														inputBox_2.userAttr({"required": "Y"});
														inputBox_2.bind("value").toDataColumn("col1");
														return inputBox_2;
													})();
													cell.controlConstraint = {};
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 4},
												"configurator": function(cell){
													cell.columnName = "col2";
													cell.control = (function(){
														var inputBox_3 = new cpr.controls.InputBox("ipb6");
														inputBox_3.fieldLabel = "성명";
														inputBox_3.userAttr({"required": "Y"});
														inputBox_3.bind("value").toDataColumn("col2");
														return inputBox_3;
													})();
													cell.controlConstraint = {};
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 5},
												"configurator": function(cell){
													cell.columnName = "col3";
													cell.control = (function(){
														var numberEditor_1 = new cpr.controls.NumberEditor("nbe1");
														numberEditor_1.spinButton = false;
														numberEditor_1.bind("value").toDataColumn("col3");
														return numberEditor_1;
													})();
													cell.controlConstraint = {};
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 6},
												"configurator": function(cell){
													cell.columnName = "col4";
													cell.control = (function(){
														var inputBox_4 = new cpr.controls.InputBox("ipb5");
														inputBox_4.bind("value").toDataColumn("col4");
														return inputBox_4;
													})();
													cell.controlConstraint = {};
												}
											}
										]
									}
								});
								container.addChild(grid_1, {
									"autoSize": "none",
									"width": "633px",
									"height": "290px"
								});
							})(group_10);
							container.addChild(group_10, {
								"colIndex": 0,
								"rowIndex": 2,
								"colSpan": 1,
								"rowSpan": 1
							});
							var output_9 = new cpr.controls.Output();
							output_9.value = "<기능 확인 그리드>";
							output_9.style.setClasses(["opt-tmpl"]);
							output_9.style.css({
								"text-align" : "center"
							});
							output_9.bind("tooltip").toExpression("#ipbScenario.value");
							container.addChild(output_9, {
								"colIndex": 0,
								"rowIndex": 0
							});
							var group_11 = new cpr.controls.Container("grp11");
							// Layout
							var formLayout_3 = new cpr.controls.layouts.FormLayout();
							formLayout_3.scrollable = false;
							formLayout_3.topMargin = "0px";
							formLayout_3.rightMargin = "0px";
							formLayout_3.bottomMargin = "0px";
							formLayout_3.leftMargin = "0px";
							formLayout_3.horizontalSpacing = "5px";
							formLayout_3.verticalSpacing = "5px";
							formLayout_3.setColumns(["100px", "260px"]);
							formLayout_3.setRows(["1fr"]);
							group_11.setLayout(formLayout_3);
							(function(container){
								var button_1 = new cpr.controls.Button("btn2");
								button_1.value = "필수값체크";
								button_1.style.setClasses(["btn-blue"]);
								if(typeof onBtn2Click == "function") {
									button_1.addEventListener("click", onBtn2Click);
								}
								container.addChild(button_1, {
									"colIndex": 0,
									"rowIndex": 0
								});
								var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comButton("combutton1");
								container.addChild(userDefinedControl_2, {
									"colIndex": 1,
									"rowIndex": 0
								});
							})(group_11);
							container.addChild(group_11, {
								"colIndex": 0,
								"rowIndex": 1,
								"horizontalAlign": "right",
								"width": 365
							});
						})(group_9);
						container.addChild(group_9, {
							"autoSize": "height",
							"width": "860px",
							"height": "320px"
						});
					})(group_8);
					if(typeof onGrp11Click == "function") {
						group_8.addEventListener("click", onGrp11Click);
					}
					container.addChild(group_8, {
						"autoSize": "height",
						"width": "1210px",
						"height": "380px"
					});
					var group_12 = new cpr.controls.Container("grp7");
					group_12.style.setClasses(["form-box"]);
					// Layout
					var verticalLayout_10 = new cpr.controls.layouts.VerticalLayout();
					group_12.setLayout(verticalLayout_10);
					(function(container){
						var userDefinedControl_3 = new udc.tmp.Ace("ace1");
						container.addChild(userDefinedControl_3, {
							"autoSize": "height",
							"width": "418px",
							"height": "200px"
						});
					})(group_12);
					container.addChild(group_12, {
						"autoSize": "height",
						"width": "470px",
						"height": "200px"
					});
				})(group_7);
				container.addChild(group_7, {
					"autoSize": "height",
					"width": "1270px",
					"height": "1000px"
				});
			})(group_2);
			container.addChild(group_2, {
				"autoSize": "height",
				"width": "400px",
				"height": "1800px"
			});
			if(typeof onBodyInit == "function"){
				app.addEventListener("init", onBodyInit);
			}
			// Linking
			linker.userDefinedControl_2.grid = linker.grid_1;
		}
	});
	app.title = "그리드 필수값 체크";
	cpr.core.Platform.INSTANCE.register(app);
})();
