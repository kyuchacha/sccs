/*
 * App URI: app/exam/guide/grid/prev/GridSample02Prev
 * Source Location: app/exam/guide/grid/prev/GridSample02Prev.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/exam/guide/grid/prev/GridSample02Prev", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * GridSample02.js
			 * Created at 2020. 6. 1. 오후 1:43:18.
			 *
			 * @author 1073727
			 ************************************************/
			
			var util = createCommonUtil();
			
			/*
			 * Body에서 init 이벤트 발생 시 호출.
			 * 앱이 최초 구성될 때 발생하는 이벤트 입니다.
			 */
			function onBodyInit( /* cpr.events.CEvent */ e) {
				//그리드 초기화
				util.Grid.init(app, "grdList");
				
				//폼 초기화
				util.FreeForm.init(app, ["grpFormFunc", "grpFormCont"]);
				
			}
			
			/*
			 * "선택" 버튼(btnHideColumn)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnHideColumnClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnHideColumn = e.control;
				
				var result = f_onBtnHideColumnClick();
				if (!result) return;
				
				//결과표시
				app.lookup("otpRslt").value = util.Control.getValue(app, "cmbHideColumn") + "컬럼 숨기기";
				//스크립트 내용 표시
				app.lookup("txaScript").value = "" + f_onBtnHideColumnClick;
				
			}
			
			function f_onBtnHideColumnClick() {
				//콤보박스에서 선택된 값
				var vsSelHideCol = util.Control.getValue(app, "cmbHideColumn");
				if (ValueUtil.isNull(vsSelHideCol)) {
					util.Msg.alert( "숨길 컬럼명을 선택 후 진행해주시기 바랍니다.");
					return false;
				};
				
				//컬럼 숨기기
				util.Grid.hideColumn(app, "grdList", vsSelHideCol);
				
				return true;
			}
			
			/*
			 * "확인" 버튼(btnShowColumn)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnShowColumnClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnShowColumn = e.control;
				
				var result = f_onBtnShowColumnClick();
				if (!result) return;
				
				//결과표시
				app.lookup("otpRslt").value = util.Control.getValue(app, "cmbShowColumn") + "숨김 컬럼 보이기";
				//스크립트 내용 표시
				app.lookup("txaScript").value = "" + f_onBtnShowColumnClick;
				
			}
			
			function f_onBtnShowColumnClick() {
				//콤보박스에서 선택된 값
				var vsSelCol = util.Control.getValue(app, "cmbShowColumn");
				if (ValueUtil.isNull(vsSelCol)) {
					util.Msg.alert( "숨김 취소할 컬럼명을 선택 후 진행해주시기 바랍니다.");
					return false;
				};
				
				//숨김 컬럼 보이기
				util.Grid.showColumn(app, "grdList", vsSelCol);
				
				return true;
			}
			
			/*
			 * "확인" 버튼(btnSort)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnSortClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnSort = e.control;
				
				var result = f_onBtnSortClick();
				if (!result) return;
				
				//결과표시
				app.lookup("otpRslt").value = "현재 연결된 데이터 구조체에 sort 조건을 변경하고 sort 적용";
				//스크립트 내용 표시
				app.lookup("txaScript").value = "" + f_onBtnSortClick;
				
			}
			
			function f_onBtnSortClick() {
				var vsSelVal = util.Control.getValue(app, "cmbSort");
				var vsSelAsc = util.Control.getValue(app, "cmbSortAsc");
				
				if (vsSelVal == null || vsSelAsc == null) {
					util.Msg.alert( "sort 조건을 변경하고 클릭하시기 바랍니다.");
					return;
				}
				
				util.Grid.sort(app, "grdList", vsSelVal + " " + vsSelAsc);
				
				return true;
			}
			
			/*
			 * "변경" 버튼(btnFilter)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnFilterClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnFilter = e.control;
				
				var result = f_onBtnFilterClick();
				if (!result) return;
				
				//결과표시
				app.lookup("otpRslt").value = "현재 연결된 데이터 구조체에 filter 조건을 변경하고 filter 적용";
				//스크립트 내용 표시
				app.lookup("txaScript").value = "" + f_onBtnFilterClick;
				
			}
			
			function f_onBtnFilterClick() {
				var vsCondVal = util.Control.getValue(app, "ipbFilterCondition");
				
				if (vsCondVal == null) {
					util.Msg.alert( "filter 조건을 입력하고 클릭하시기 바랍니다.");
					return;
				}
				
				// * Grid.filter(app, "grd1", "age >= 20")<br/>
				// * 	=> "age"컬럼의 값이 20이상인 값만 필터링합니다.<br/>
				// * Grid.filter(app, "grd1", "name ^= '김'")<br/>
				// * 	=> "name"컬럼의 값이 '김'으로 시작하는 값만 필터링합니다.
				util.Grid.filter(app, "grdList", vsCondVal);
				
				return true;
				
			}
			
			/*
			 * "확인" 버튼(btnGetHeaderColumn)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnGetHeaderColumnClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnGetHeaderColumn = e.control;
				
				var result = f_onBtnGetHeaderColumnClick();
				if (!result) return;
				
				//결과표시
				app.lookup("otpRslt").value = "취득 한 Header의 Index [" + result + "]";
				//스크립트 내용 표시
				app.lookup("txaScript").value = "" + f_onBtnGetHeaderColumnClick;
				
			}
			
			function f_onBtnGetHeaderColumnClick() {
				var vsSelVal = util.Control.getValue(app, "cmbGetHeaderColumn");
				if (vsSelVal == null) {
					util.Msg.alert( "header정보를 취득할 컬럼을 선택 후 진행하시기 바랍니다.");
					return;
				}
				
				var resultId = util.Grid.getHeaderColumn(app, "grdList", vsSelVal)[0].colIndex;
				
				return resultId;
			}
			
			/*
			 * "확인" 버튼(btnGetHeaderColumnText)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnGetHeaderColumnTextClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnGetHeaderColumnText = e.control;
				
				var result = f_onBtnGetHeaderColumnTextClick();
				if (!result) return;
				
				//결과표시
				app.lookup("otpRslt").value = "취득 한 Header의 TEXT [ " + result + "]";
				//스크립트 내용 표시
				app.lookup("txaScript").value = "" + f_onBtnGetHeaderColumnTextClick;
			}
			
			function f_onBtnGetHeaderColumnTextClick() {
				var vsSelVal = util.Control.getValue(app, "cmbGetHeaderColumnText");
				if (vsSelVal == null) {
					util.Msg.alert( "header정보를 취득할 컬럼을 선택 후 진행하시기 바랍니다.");
					return;
				}
				
				var resultText = util.Grid.getHeaderColumnText(app, "grdList", vsSelVal);
				
				return resultText;
				
			}
			
			/*
			 * "그리드 원상태로 되돌리기" 버튼(btnOrgInit)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnOrgInitClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnOrgInit = e.control;
				app.lookup("grdList").resetGrid();
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsList");
			dataSet_1.parseData({
				"columns": [
					{"name": "id"},
					{"name": "name"},
					{"name": "tel"},
					{"name": "addr"}
				],
				"rows": [
					{"id": "ID0001", "name": "박보검", "tel": "010-1234-5678", "addr": "서울시 여의도"},
					{"id": "ID0002", "name": "홍길동", "tel": "02-3414-5678", "addr": "서울시 동작구 123"},
					{"id": "ID0003", "name": "이순신", "tel": "010-1234-5678", "addr": "경기도 의정부시 111"},
					{"id": "ID0004", "name": "송혜교", "tel": "010-1234-5678", "addr": "서울시 노원구 중계동"},
					{"id": "ID0004", "name": "이보영", "tel": "010-1234-5678", "addr": "서울시 강북구"},
					{"id": "ID0005", "name": "임장군", "tel": "010-1234-5678", "addr": "서울시 여의도 영등포동"},
					{"id": "ID0005", "name": "김토마토", "tel": "010-1234-5678", "addr": "서울시 여의도 영등포동"},
					{"id": "ID0005", "name": "김퇴직", "tel": "010-1234-5678", "addr": "서울시 여의도 영등포동"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsListOrg");
			dataSet_2.parseData({
				"columns": [
					{"name": "id"},
					{"name": "name"},
					{"name": "tel"},
					{"name": "addr"}
				],
				"rows": [
					{"id": "ID0001", "name": "박보검", "tel": "010-1234-5678", "addr": "서울시 여의도"},
					{"id": "ID0002", "name": "홍길동", "tel": "02-3414-5678", "addr": "서울시 동작구 123"},
					{"id": "ID0003", "name": "이순신", "tel": "010-1234-5678", "addr": "경기도 의정부시 111"},
					{"id": "ID0004", "name": "송혜교", "tel": "010-1234-5678", "addr": "서울시 노원구 중계동"},
					{"id": "ID0004", "name": "이보영", "tel": "010-1234-5678", "addr": "서울시 강북구"},
					{"id": "ID0005", "name": "임장군", "tel": "010-1234-5678", "addr": "서울시 여의도 영등포동"},
					{"id": "ID0005", "name": "김토마토", "tel": "010-1234-5678", "addr": "서울시 여의도 영등포동"},
					{"id": "ID0005", "name": "김퇴직", "tel": "010-1234-5678", "addr": "서울시 여의도 영등포동"}
				]
			});
			app.register(dataSet_2);
			
			app.supportMedia("all and (min-width: 1320px)", "eXFrame");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1319px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader");
			userDefinedControl_1.initializeYn = "N";
			userDefinedControl_1.groupBoxIds = "grpContent";
			container.addChild(userDefinedControl_1, {
				"autoSize": "none",
				"width": "998px",
				"height": "30px"
			});
			
			var group_1 = new cpr.controls.Container("grpContent");
			group_1.userAttr({"fillLayout": "Y"});
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.setColumns(["1fr", "1fr"]);
			formLayout_1.setRows(["25px", "200px", "25px", "130px", "25px", "1fr"]);
			formLayout_1.setRowAutoSizing(1, true);
			group_1.setLayout(formLayout_1);
			(function(container){
				var userDefinedControl_2 = new udc.com.comFormTitle("comformtitle2");
				userDefinedControl_2.title = "기능(함수)";
				container.addChild(userDefinedControl_2, {
					"colIndex": 1,
					"rowIndex": 0
				});
				var group_2 = new cpr.controls.Container("grpFormFunc");
				group_2.style.setClasses(["form-box"]);
				// Layout
				var formLayout_2 = new cpr.controls.layouts.FormLayout();
				formLayout_2.topMargin = "5px";
				formLayout_2.rightMargin = "5px";
				formLayout_2.bottomMargin = "5px";
				formLayout_2.leftMargin = "5px";
				formLayout_2.setColumns(["24px", "170px", "1fr", "200px", "80px"]);
				formLayout_2.setRows(["25px", "25px", "25px", "25px", "25px", "25px", "25px"]);
				formLayout_2.setRowMinHeight(1, 1);
				formLayout_2.setRowMinHeight(2, 1);
				formLayout_2.setRowMinHeight(3, 1);
				formLayout_2.setRowMinHeight(4, 1);
				formLayout_2.setRowMinHeight(5, 1);
				formLayout_2.setRowMinHeight(6, 1);
				group_2.setLayout(formLayout_2);
				(function(container){
					var output_1 = new cpr.controls.Output("otp1");
					output_1.value = "No";
					output_1.style.css({
						"text-align" : "center"
					});
					container.addChild(output_1, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var output_2 = new cpr.controls.Output("otp6");
					output_2.value = "1";
					output_2.style.css({
						"text-align" : "center"
					});
					container.addChild(output_2, {
						"colIndex": 0,
						"rowIndex": 1
					});
					var output_3 = new cpr.controls.Output("otp8");
					output_3.value = "3";
					output_3.style.css({
						"text-align" : "center"
					});
					container.addChild(output_3, {
						"colIndex": 0,
						"rowIndex": 3
					});
					var output_4 = new cpr.controls.Output("otp12");
					output_4.value = "2";
					output_4.style.css({
						"text-align" : "center"
					});
					container.addChild(output_4, {
						"colIndex": 0,
						"rowIndex": 2
					});
					var output_5 = new cpr.controls.Output("otp2");
					output_5.value = "5";
					output_5.style.css({
						"text-align" : "center"
					});
					container.addChild(output_5, {
						"colIndex": 0,
						"rowIndex": 5
					});
					var output_6 = new cpr.controls.Output("otp17");
					output_6.value = "4";
					output_6.style.css({
						"text-align" : "center"
					});
					container.addChild(output_6, {
						"colIndex": 0,
						"rowIndex": 4
					});
					var output_7 = new cpr.controls.Output("otp4");
					output_7.value = "함수";
					output_7.style.css({
						"text-align" : "center"
					});
					container.addChild(output_7, {
						"colIndex": 1,
						"rowIndex": 0
					});
					var output_8 = new cpr.controls.Output("otp42");
					output_8.value = "설명";
					output_8.style.css({
						"text-align" : "center"
					});
					container.addChild(output_8, {
						"colIndex": 2,
						"rowIndex": 0
					});
					var output_9 = new cpr.controls.Output("otp44");
					output_9.value = "동작";
					output_9.style.css({
						"text-align" : "center"
					});
					container.addChild(output_9, {
						"colIndex": 4,
						"rowIndex": 0
					});
					var output_10 = new cpr.controls.Output("otp45");
					output_10.value = "6";
					output_10.style.css({
						"text-align" : "center"
					});
					container.addChild(output_10, {
						"colIndex": 0,
						"rowIndex": 6
					});
					var button_1 = new cpr.controls.Button("btnFilter");
					button_1.value = "필터";
					if(typeof onBtnFilterClick == "function") {
						button_1.addEventListener("click", onBtnFilterClick);
					}
					container.addChild(button_1, {
						"colIndex": 4,
						"rowIndex": 4,
						"horizontalAlign": "fill",
						"verticalAlign": "fill",
						"width": 80
					});
					var output_11 = new cpr.controls.Output("otp63");
					output_11.value = "입력값";
					output_11.style.css({
						"text-align" : "center"
					});
					container.addChild(output_11, {
						"colIndex": 3,
						"rowIndex": 0
					});
					var button_2 = new cpr.controls.Button("btnGetHeaderColumn");
					button_2.value = "확인";
					if(typeof onBtnGetHeaderColumnClick == "function") {
						button_2.addEventListener("click", onBtnGetHeaderColumnClick);
					}
					container.addChild(button_2, {
						"colIndex": 4,
						"rowIndex": 5,
						"horizontalAlign": "fill",
						"verticalAlign": "fill",
						"width": 80
					});
					var group_3 = new cpr.controls.Container("grp3");
					// Layout
					var formLayout_3 = new cpr.controls.layouts.FormLayout();
					formLayout_3.setColumns(["1fr", "60px"]);
					formLayout_3.setRows(["1fr"]);
					group_3.setLayout(formLayout_3);
					(function(container){
						var inputBox_1 = new cpr.controls.InputBox("ipbFilterCondition");
						inputBox_1.placeholder = "조건식 ex: name^= '김'";
						container.addChild(inputBox_1, {
							"colIndex": 0,
							"rowIndex": 0,
							"colSpan": 2,
							"rowSpan": 1
						});
					})(group_3);
					container.addChild(group_3, {
						"colIndex": 3,
						"rowIndex": 4
					});
					var button_3 = new cpr.controls.Button("btnSort");
					button_3.value = "정렬";
					if(typeof onBtnSortClick == "function") {
						button_3.addEventListener("click", onBtnSortClick);
					}
					container.addChild(button_3, {
						"colIndex": 4,
						"rowIndex": 3,
						"horizontalAlign": "fill",
						"verticalAlign": "fill",
						"width": 80
					});
					var button_4 = new cpr.controls.Button("btnHideColumn");
					button_4.value = "숨기기";
					if(typeof onBtnHideColumnClick == "function") {
						button_4.addEventListener("click", onBtnHideColumnClick);
					}
					container.addChild(button_4, {
						"colIndex": 4,
						"rowIndex": 1,
						"horizontalAlign": "fill",
						"verticalAlign": "fill",
						"width": 80
					});
					var button_5 = new cpr.controls.Button("btnShowColumn");
					button_5.value = "보이기";
					if(typeof onBtnShowColumnClick == "function") {
						button_5.addEventListener("click", onBtnShowColumnClick);
					}
					container.addChild(button_5, {
						"colIndex": 4,
						"rowIndex": 2,
						"horizontalAlign": "fill",
						"verticalAlign": "fill",
						"width": 80
					});
					var button_6 = new cpr.controls.Button("btnGetHeaderColumnText");
					button_6.value = "확인";
					if(typeof onBtnGetHeaderColumnTextClick == "function") {
						button_6.addEventListener("click", onBtnGetHeaderColumnTextClick);
					}
					container.addChild(button_6, {
						"colIndex": 4,
						"rowIndex": 6,
						"horizontalAlign": "fill",
						"verticalAlign": "fill",
						"width": 80
					});
					var comboBox_1 = new cpr.controls.ComboBox("cmbHideColumn");
					comboBox_1.placeholder = "숨길컬럼";
					(function(comboBox_1){
						comboBox_1.addItem(new cpr.controls.Item("ID", "id"));
						comboBox_1.addItem(new cpr.controls.Item("성명", "name"));
						comboBox_1.addItem(new cpr.controls.Item("전화번호", "tel"));
						comboBox_1.addItem(new cpr.controls.Item("주소", "addr"));
					})(comboBox_1);
					container.addChild(comboBox_1, {
						"colIndex": 3,
						"rowIndex": 1
					});
					var comboBox_2 = new cpr.controls.ComboBox("cmbShowColumn");
					comboBox_2.placeholder = "숨김 취소컬럼";
					(function(comboBox_2){
						comboBox_2.addItem(new cpr.controls.Item("ID", "id"));
						comboBox_2.addItem(new cpr.controls.Item("성명", "name"));
						comboBox_2.addItem(new cpr.controls.Item("전화번호", "tel"));
						comboBox_2.addItem(new cpr.controls.Item("주소", "addr"));
					})(comboBox_2);
					container.addChild(comboBox_2, {
						"colIndex": 3,
						"rowIndex": 2
					});
					var group_4 = new cpr.controls.Container("grp5");
					// Layout
					var formLayout_4 = new cpr.controls.layouts.FormLayout();
					formLayout_4.setColumns(["1fr", "1fr"]);
					formLayout_4.setRows(["1fr"]);
					group_4.setLayout(formLayout_4);
					(function(container){
						var comboBox_3 = new cpr.controls.ComboBox("cmbSort");
						comboBox_3.placeholder = "기준컬럼";
						(function(comboBox_3){
							comboBox_3.addItem(new cpr.controls.Item("ID", "id"));
							comboBox_3.addItem(new cpr.controls.Item("성명", "name"));
							comboBox_3.addItem(new cpr.controls.Item("전화번호", "tel"));
							comboBox_3.addItem(new cpr.controls.Item("주소", "addr"));
						})(comboBox_3);
						container.addChild(comboBox_3, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var comboBox_4 = new cpr.controls.ComboBox("cmbSortAsc");
						comboBox_4.placeholder = "정렬";
						(function(comboBox_4){
							comboBox_4.addItem(new cpr.controls.Item("asc", "asc"));
							comboBox_4.addItem(new cpr.controls.Item("desc", "desc"));
						})(comboBox_4);
						container.addChild(comboBox_4, {
							"colIndex": 1,
							"rowIndex": 0
						});
					})(group_4);
					container.addChild(group_4, {
						"colIndex": 3,
						"rowIndex": 3
					});
					var comboBox_5 = new cpr.controls.ComboBox("cmbGetHeaderColumn");
					comboBox_5.placeholder = "header정보 취득할 컬럼";
					(function(comboBox_5){
						comboBox_5.addItem(new cpr.controls.Item("ID", "id"));
						comboBox_5.addItem(new cpr.controls.Item("성명", "name"));
						comboBox_5.addItem(new cpr.controls.Item("전화번호", "tel"));
						comboBox_5.addItem(new cpr.controls.Item("주소", "addr"));
					})(comboBox_5);
					container.addChild(comboBox_5, {
						"colIndex": 3,
						"rowIndex": 5
					});
					var comboBox_6 = new cpr.controls.ComboBox("cmbGetHeaderColumnText");
					comboBox_6.placeholder = "header정보 취득할 컬럼";
					(function(comboBox_6){
						comboBox_6.addItem(new cpr.controls.Item("ID", "id"));
						comboBox_6.addItem(new cpr.controls.Item("성명", "name"));
						comboBox_6.addItem(new cpr.controls.Item("전화번호", "tel"));
						comboBox_6.addItem(new cpr.controls.Item("주소", "addr"));
					})(comboBox_6);
					container.addChild(comboBox_6, {
						"colIndex": 3,
						"rowIndex": 6
					});
					var inputBox_2 = new cpr.controls.InputBox("ipb5");
					inputBox_2.readOnly = true;
					inputBox_2.value = "hideColumn";
					container.addChild(inputBox_2, {
						"colIndex": 1,
						"rowIndex": 1
					});
					var inputBox_3 = new cpr.controls.InputBox("ipb6");
					inputBox_3.readOnly = true;
					inputBox_3.value = "showColumn";
					container.addChild(inputBox_3, {
						"colIndex": 1,
						"rowIndex": 2
					});
					var inputBox_4 = new cpr.controls.InputBox("ipb7");
					inputBox_4.readOnly = true;
					inputBox_4.value = "sort";
					container.addChild(inputBox_4, {
						"colIndex": 1,
						"rowIndex": 3
					});
					var inputBox_5 = new cpr.controls.InputBox("ipb8");
					inputBox_5.readOnly = true;
					inputBox_5.value = "filter";
					container.addChild(inputBox_5, {
						"colIndex": 1,
						"rowIndex": 4
					});
					var inputBox_6 = new cpr.controls.InputBox("ipb9");
					inputBox_6.readOnly = true;
					inputBox_6.value = "getHeaderColumn";
					container.addChild(inputBox_6, {
						"colIndex": 1,
						"rowIndex": 5
					});
					var inputBox_7 = new cpr.controls.InputBox("ipb10");
					inputBox_7.readOnly = true;
					inputBox_7.value = "getHeaderColumnText";
					container.addChild(inputBox_7, {
						"colIndex": 1,
						"rowIndex": 6
					});
					var inputBox_8 = new cpr.controls.InputBox("ipb11");
					inputBox_8.readOnly = true;
					inputBox_8.value = "그리드내 컬럼 숨김";
					container.addChild(inputBox_8, {
						"colIndex": 2,
						"rowIndex": 1
					});
					var inputBox_9 = new cpr.controls.InputBox("ipb12");
					inputBox_9.readOnly = true;
					inputBox_9.value = "숨김 컬럼을 보이도록 변경";
					container.addChild(inputBox_9, {
						"colIndex": 2,
						"rowIndex": 2
					});
					var inputBox_10 = new cpr.controls.InputBox("ipb13");
					inputBox_10.readOnly = true;
					inputBox_10.value = "그리드의 데이터를 정렬";
					container.addChild(inputBox_10, {
						"colIndex": 2,
						"rowIndex": 3
					});
					var inputBox_11 = new cpr.controls.InputBox("ipb14");
					inputBox_11.readOnly = true;
					inputBox_11.value = "그리드의 데이터를 필터";
					container.addChild(inputBox_11, {
						"colIndex": 2,
						"rowIndex": 4
					});
					var inputBox_12 = new cpr.controls.InputBox("ipb15");
					inputBox_12.readOnly = true;
					inputBox_12.value = "그리드 columnname으로 헤더컬럼 Index취득";
					container.addChild(inputBox_12, {
						"colIndex": 2,
						"rowIndex": 5
					});
					var inputBox_13 = new cpr.controls.InputBox("ipb16");
					inputBox_13.readOnly = true;
					inputBox_13.value = "그리드 헤더컬럼의 TEXT 반환";
					container.addChild(inputBox_13, {
						"colIndex": 2,
						"rowIndex": 6
					});
				})(group_2);
				container.addChild(group_2, {
					"colIndex": 1,
					"rowIndex": 1,
					"colSpan": 1,
					"rowSpan": 1
				});
				var userDefinedControl_3 = new udc.com.comFormTitle("comformtitle4");
				userDefinedControl_3.title = "시나리오";
				container.addChild(userDefinedControl_3, {
					"colIndex": 0,
					"rowIndex": 2
				});
				var userDefinedControl_4 = new udc.com.comFormTitle("comformtitle5");
				userDefinedControl_4.title = "결과값";
				container.addChild(userDefinedControl_4, {
					"colIndex": 1,
					"rowIndex": 2
				});
				var group_5 = new cpr.controls.Container("grpFormCont");
				group_5.style.setClasses(["form-box"]);
				// Layout
				var formLayout_5 = new cpr.controls.layouts.FormLayout();
				formLayout_5.topMargin = "5px";
				formLayout_5.rightMargin = "5px";
				formLayout_5.bottomMargin = "5px";
				formLayout_5.leftMargin = "5px";
				formLayout_5.setColumns(["100px", "1fr"]);
				formLayout_5.setRows(["1fr"]);
				group_5.setLayout(formLayout_5);
				(function(container){
					var output_12 = new cpr.controls.Output("otp25");
					output_12.value = "시나리오";
					container.addChild(output_12, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var textArea_1 = new cpr.controls.TextArea("txa1");
					textArea_1.readOnly = true;
					textArea_1.value = "1. 예시그리드를 확인하고 동작 버튼을 클릭한다. (필요시 입력값 선택)\r\n2. 그리드의 기능동작 및 결과값을 확인한다. \r\n3. 하단의 스크립트내용을 확인한다.\r\n4. 스크립트내용을 복사하여 코딩에 활용한다.";
					container.addChild(textArea_1, {
						"colIndex": 1,
						"rowIndex": 0
					});
				})(group_5);
				container.addChild(group_5, {
					"colIndex": 0,
					"rowIndex": 3
				});
				var userDefinedControl_5 = new udc.com.comFormTitle("comformtitle6");
				userDefinedControl_5.title = "스크립트 내용";
				container.addChild(userDefinedControl_5, {
					"colIndex": 0,
					"rowIndex": 4,
					"colSpan": 2,
					"rowSpan": 1
				});
				var textArea_2 = new cpr.controls.TextArea("txaScript");
				textArea_2.style.setClasses(["form-box"]);
				container.addChild(textArea_2, {
					"colIndex": 0,
					"rowIndex": 5,
					"colSpan": 2,
					"rowSpan": 1
				});
				var inputBox_14 = new cpr.controls.InputBox("otpRslt");
				inputBox_14.readOnly = true;
				container.addChild(inputBox_14, {
					"colIndex": 1,
					"rowIndex": 3
				});
				var group_6 = new cpr.controls.Container("grp1");
				// Layout
				var formLayout_6 = new cpr.controls.layouts.FormLayout();
				formLayout_6.setColumns(["1fr", "190px"]);
				formLayout_6.setRows(["25px", "200px"]);
				formLayout_6.setRowAutoSizing(1, true);
				group_6.setLayout(formLayout_6);
				(function(container){
					var grid_1 = new cpr.controls.Grid("grdList");
					grid_1.init({
						"dataSet": app.lookup("dsList"),
						"columnMovable": true,
						"resizableColumns": "all",
						"columns": [
							{"width": "25px"},
							{"width": "26px"},
							{"width": "54px"},
							{"width": "60px"},
							{"width": "100px"},
							{"width": "175px"}
						],
						"header": {
							"rows": [{"height": "27px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.filterable = false;
										cell.sortable = false;
										cell.columnType = "checkbox";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "No";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.targetColumnName = "id";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "ID";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3},
									"configurator": function(cell){
										cell.targetColumnName = "name";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "성명";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 4},
									"configurator": function(cell){
										cell.targetColumnName = "tel";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "전화번호";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 5},
									"configurator": function(cell){
										cell.targetColumnName = "addr";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "주소";
									}
								}
							]
						},
						"detail": {
							"rows": [{"height": "24px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.columnType = "checkbox";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.columnType = "rowindex";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.columnName = "id";
										cell.control = (function(){
											var inputBox_15 = new cpr.controls.InputBox("ipb1");
											inputBox_15.bind("value").toDataColumn("id");
											return inputBox_15;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3},
									"configurator": function(cell){
										cell.columnName = "name";
										cell.control = (function(){
											var inputBox_16 = new cpr.controls.InputBox("ipb2");
											inputBox_16.bind("value").toDataColumn("name");
											return inputBox_16;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 4},
									"configurator": function(cell){
										cell.columnName = "tel";
										cell.control = (function(){
											var inputBox_17 = new cpr.controls.InputBox("ipb3");
											inputBox_17.bind("value").toDataColumn("tel");
											return inputBox_17;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 5},
									"configurator": function(cell){
										cell.columnName = "addr";
										cell.style.css({
											"text-align" : "left"
										});
										cell.control = (function(){
											var inputBox_18 = new cpr.controls.InputBox("ipb4");
											inputBox_18.bind("value").toDataColumn("addr");
											return inputBox_18;
										})();
									}
								}
							]
						}
					});
					container.addChild(grid_1, {
						"colIndex": 0,
						"rowIndex": 1,
						"colSpan": 2,
						"rowSpan": 1
					});
					var userDefinedControl_6 = new udc.com.comFormTitle("comformtitle3");
					userDefinedControl_6.title = "예시 그리드";
					container.addChild(userDefinedControl_6, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var button_7 = new cpr.controls.Button("btnOrgInit");
					button_7.value = "그리드 원상태로 되돌리기";
					button_7.style.setClasses(["btn-blue"]);
					if(typeof onBtnOrgInitClick == "function") {
						button_7.addEventListener("click", onBtnOrgInitClick);
					}
					container.addChild(button_7, {
						"colIndex": 1,
						"rowIndex": 0
					});
				})(group_6);
				container.addChild(group_6, {
					"colIndex": 0,
					"rowIndex": 0,
					"colSpan": 1,
					"rowSpan": 2
				});
			})(group_1);
			container.addChild(group_1, {
				"width": "972px",
				"height": "645px"
			});
			if(typeof onBodyInit == "function"){
				app.addEventListener("init", onBodyInit);
			}
		}
	});
	app.title = "그리드 행/컬럼 기능";
	cpr.core.Platform.INSTANCE.register(app);
})();
