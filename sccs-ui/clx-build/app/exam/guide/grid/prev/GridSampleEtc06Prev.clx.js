/*
 * App URI: app/exam/guide/grid/prev/GridSampleEtc06Prev
 * Source Location: app/exam/guide/grid/prev/GridSampleEtc06Prev.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/exam/guide/grid/prev/GridSampleEtc06Prev", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * GridSampleEtc06.js
			 * Created at 2020. 6. 3. 오전 9:43:30.
			 *
			 * @author 1073727
			 ************************************************/
			
			var util = createCommonUtil();
			
			/*
			 * Body에서 init 이벤트 발생 시 호출.
			 * 앱이 최초 구성될 때 발생하는 이벤트 입니다.
			 */
			function onBodyInit( /* cpr.events.CEvent */ e) {
				util.Grid.init(app, "grdList");
				util.FreeForm.init(app, ["grpFormCont"]);
				
			}
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsList");
			dataSet_1.parseData({
				"columns": [
					{
						"name": "gbn",
						"dataType": "string"
					},
					{
						"name": "col1",
						"dataType": "number"
					},
					{
						"name": "col2",
						"dataType": "number"
					},
					{
						"name": "col3",
						"dataType": "number"
					}
				],
				"rows": [
					{"gbn": "A항목", "col1": "101", "col2": "102", "col3": "103"},
					{"gbn": "A항목", "col1": "5", "col2": "15", "col3": "25"},
					{"gbn": "A항목", "col1": "101", "col2": "102", "col3": "103"},
					{"gbn": "A항목", "col1": "1", "col2": "2", "col3": "3"},
					{"gbn": "B항목", "col1": "1", "col2": "1", "col3": "1"},
					{"gbn": "A항목", "col1": "11", "col2": "12", "col3": "13"},
					{"gbn": "A항목", "col1": "20", "col2": "30", "col3": "40"},
					{"gbn": "B항목", "col1": "5", "col2": "1", "col3": "30"},
					{"gbn": "C항목", "col1": "15", "col2": "5", "col3": "31"},
					{"gbn": "A항목", "col1": "15", "col2": "10", "col3": "32"},
					{"gbn": "A항목", "col1": "10", "col2": "100", "col3": "33"},
					{"gbn": "C항목", "col1": "10", "col2": "200", "col3": "34"},
					{"gbn": "C항목", "col1": "10", "col2": "30", "col3": "15"},
					{"gbn": "C항목", "col1": "10", "col2": "30", "col3": "15"},
					{"gbn": "C항목", "col1": "10", "col2": "30", "col3": "15"},
					{"gbn": "C항목", "col1": "10", "col2": "30", "col3": "15"},
					{"gbn": "C항목", "col1": "10", "col2": "30", "col3": "15"},
					{"gbn": "C항목", "col1": "10", "col2": "30", "col3": "15"},
					{"gbn": "C항목", "col1": "10", "col2": "30", "col3": "15"},
					{"gbn": "C항목", "col1": "10", "col2": "30", "col3": "15"},
					{"gbn": "C항목", "col1": "10", "col2": "30", "col3": "15"},
					{"gbn": "C항목", "col1": "10", "col2": "30", "col3": "15"},
					{"gbn": "C항목", "col1": "10", "col2": "30", "col3": "15"}
				]
			});
			app.register(dataSet_1);
			
			app.supportMedia("all and (min-width: 1320px)", "eXFrame");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1319px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader");
			userDefinedControl_1.initializeYn = "N";
			userDefinedControl_1.groupBoxIds = "grp1";
			container.addChild(userDefinedControl_1, {
				"autoSize": "none",
				"width": "998px",
				"height": "30px"
			});
			
			var group_1 = new cpr.controls.Container("grp1");
			group_1.userAttr({"fillLayout": "Y"});
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.verticalSpacing = "5px";
			formLayout_1.setColumns(["1fr"]);
			formLayout_1.setRows(["25px", "2fr", "25px", "1fr"]);
			group_1.setLayout(formLayout_1);
			(function(container){
				var group_2 = new cpr.controls.Container("grpFormCont");
				group_2.style.setClasses(["form-box"]);
				// Layout
				var formLayout_2 = new cpr.controls.layouts.FormLayout();
				formLayout_2.topMargin = "5px";
				formLayout_2.rightMargin = "5px";
				formLayout_2.bottomMargin = "5px";
				formLayout_2.leftMargin = "5px";
				formLayout_2.setColumns(["100px", "1fr"]);
				formLayout_2.setRows(["1fr", "1fr"]);
				group_2.setLayout(formLayout_2);
				(function(container){
					var output_1 = new cpr.controls.Output("otp25");
					output_1.value = "시나리오";
					container.addChild(output_1, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var output_2 = new cpr.controls.Output("otp26");
					output_2.value = "추가설명";
					container.addChild(output_2, {
						"colIndex": 0,
						"rowIndex": 1
					});
					var inputBox_1 = new cpr.controls.InputBox("ipb1");
					inputBox_1.readOnly = true;
					inputBox_1.value = "1. 그리드의 구분항목별 합계가 계산되어 그리드 푸터영역에 표시되는것을 확인한다.";
					container.addChild(inputBox_1, {
						"colIndex": 1,
						"rowIndex": 0
					});
					var inputBox_2 = new cpr.controls.InputBox("ipb2");
					inputBox_2.readOnly = true;
					inputBox_2.value = "익스프레션 함수를 이용하여서 해당 행의 그룹별 합계값을 계산하여 출력하는 화면 예제";
					container.addChild(inputBox_2, {
						"colIndex": 1,
						"rowIndex": 1
					});
				})(group_2);
				container.addChild(group_2, {
					"colIndex": 0,
					"rowIndex": 3
				});
				var grid_1 = new cpr.controls.Grid("grdList");
				grid_1.readOnly = true;
				grid_1.init({
					"dataSet": app.lookup("dsList"),
					"autoFit": "1, 2, 3, 4",
					"columns": [
						{"width": "40px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "100px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.targetColumnName = "gbn";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "구분항목";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.targetColumnName = "col1";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "항목1";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.targetColumnName = "col2";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "항목2";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.targetColumnName = "col3";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "항목3";
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "24px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "rowindex";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "gbn";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "col1";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "col2";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "col3";
								}
							}
						]
					},
					"footer": {
						"rows": [
							{"height": "24px"},
							{"height": "24px"},
							{"height": "24px"},
							{"height": "24px"}
						],
						"cells": [
							{
								"constraint": {"rowIndex": 3, "colIndex": 0, "rowSpan": 1, "colSpan": 2},
								"configurator": function(cell){
									cell.expr = "\"합계\"";
								}
							},
							{
								"constraint": {"rowIndex": 3, "colIndex": 2},
								"configurator": function(cell){
									cell.expr = "getSum(\"col1\")";
								}
							},
							{
								"constraint": {"rowIndex": 3, "colIndex": 3},
								"configurator": function(cell){
									cell.expr = "getSum(\"col2\")";
								}
							},
							{
								"constraint": {"rowIndex": 3, "colIndex": 4},
								"configurator": function(cell){
									cell.expr = "getSum(\"col3\")";
								}
							},
							{
								"constraint": {"rowIndex": 2, "colIndex": 0, "rowSpan": 1, "colSpan": 2},
								"configurator": function(cell){
									cell.expr = "\"C항목 소계\"";
								}
							},
							{
								"constraint": {"rowIndex": 2, "colIndex": 2},
								"configurator": function(cell){
									cell.expr = "getConditionalSum(\"gbn=='C항목'\", \"col1\")";
								}
							},
							{
								"constraint": {"rowIndex": 2, "colIndex": 3},
								"configurator": function(cell){
									cell.expr = "getConditionalSum(\"gbn=='C항목'\", \"col2\")";
								}
							},
							{
								"constraint": {"rowIndex": 2, "colIndex": 4},
								"configurator": function(cell){
									cell.expr = "getConditionalSum(\"gbn=='C항목'\", \"col3\")";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 0, "rowSpan": 1, "colSpan": 2},
								"configurator": function(cell){
									cell.expr = "\"A항목 소계\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.expr = "getConditionalSum(\"gbn=='A항목'\", \"col1\")";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.expr = "getConditionalSum(\"gbn=='A항목'\", \"col2\")";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.expr = "getConditionalSum(\"gbn=='A항목'\", \"col3\")";
								}
							},
							{
								"constraint": {"rowIndex": 1, "colIndex": 0, "rowSpan": 1, "colSpan": 2},
								"configurator": function(cell){
									cell.expr = "\"B항목 소계\"";
								}
							},
							{
								"constraint": {"rowIndex": 1, "colIndex": 2},
								"configurator": function(cell){
									cell.expr = "getConditionalSum(\"gbn=='B항목'\", \"col1\")";
								}
							},
							{
								"constraint": {"rowIndex": 1, "colIndex": 3},
								"configurator": function(cell){
									cell.expr = "getConditionalSum(\"gbn=='B항목'\", \"col2\")";
								}
							},
							{
								"constraint": {"rowIndex": 1, "colIndex": 4},
								"configurator": function(cell){
									cell.expr = "getConditionalSum(\"gbn=='B항목'\", \"col3\")";
								}
							}
						]
					}
				});
				container.addChild(grid_1, {
					"colIndex": 0,
					"rowIndex": 1
				});
				var userDefinedControl_2 = new udc.com.comFormTitle("comformtitle3");
				userDefinedControl_2.title = "그리드의 소계를 푸터에 표현하는 예제";
				container.addChild(userDefinedControl_2, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var userDefinedControl_3 = new udc.com.comFormTitle("comformtitle2");
				userDefinedControl_3.title = "시나리오";
				container.addChild(userDefinedControl_3, {
					"colIndex": 0,
					"rowIndex": 2
				});
			})(group_1);
			container.addChild(group_1, {
				"width": "972px",
				"height": "645px"
			});
			if(typeof onBodyInit == "function"){
				app.addEventListener("init", onBodyInit);
			}
		}
	});
	app.title = "그리드 소계 푸터";
	cpr.core.Platform.INSTANCE.register(app);
})();
