/*
 * App URI: app/exam/guide/grid/prev/GridSampleEtc08Prev
 * Source Location: app/exam/guide/grid/prev/GridSampleEtc08Prev.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/exam/guide/grid/prev/GridSampleEtc08Prev", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * GridSampleEtc08.js
			 * Created at 2020. 6. 3. 오후 1:15:16.
			 *
			 * @author 1073727
			 ************************************************/
			
			var util = createCommonUtil();
			
			/*
			 * Body에서 init 이벤트 발생 시 호출.
			 * 앱이 최초 구성될 때 발생하는 이벤트 입니다.
			 */
			function onBodyInit( /* cpr.events.CEvent */ e) {
				util.Grid.init(app, "grdList");
				util.FreeForm.init(app, ["grpFormCont"]);
				
			}
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns": [
					{"name": "bankName"},
					{"name": "accountNo"},
					{"name": "accountName"},
					{
						"name": "balance",
						"dataType": "number"
					},
					{"name": "modifiedDate"},
					{"name": "field"},
					{
						"name": "level",
						"dataType": "number"
					},
					{
						"name": "value",
						"dataType": "number"
					},
					{
						"name": "parentValue",
						"dataType": "number"
					},
					{"name": "grp"}
				],
				"rows": [
					{"bankName": "연금계리", "accountNo": "000001", "accountName": "accountName1", "balance": "1", "modifiedDate": "2020-04-29", "field": "field1", "level": "1", "value": "1", "parentValue": "", "grp": "1"},
					{"bankName": "부담금", "accountNo": "000002", "accountName": "accountName2", "balance": "2", "modifiedDate": "2020-04-29", "field": "field2", "level": "2", "value": "2", "parentValue": "1", "grp": "1"},
					{"bankName": "지급", "accountNo": "000003", "accountName": "accountName3", "balance": "3", "modifiedDate": "2020-04-29", "field": "field3", "level": "2", "value": "3", "parentValue": "1", "grp": "1"},
					{"bankName": "공통", "accountNo": "000004", "accountName": "accountName4", "balance": "4", "modifiedDate": "2020-04-29", "field": "field4", "level": "1", "value": "4", "parentValue": "", "grp": "2"},
					{"bankName": "계약관리", "accountNo": "000005", "accountName": "accountName5", "balance": "5", "modifiedDate": "2020-04-29", "field": "field5", "level": "2", "value": "5", "parentValue": "4", "grp": "2"},
					{"bankName": "정정변경", "accountNo": "000006", "accountName": "accountName6", "balance": "6", "modifiedDate": "2020-04-29", "field": "field6", "level": "2", "value": "6", "parentValue": "4", "grp": "2"},
					{"bankName": "수수료", "accountNo": "000007", "accountName": "accountName7", "balance": "7", "modifiedDate": "2020-04-29", "field": "field7", "level": "2", "value": "7", "parentValue": "4", "grp": "2"},
					{"bankName": "수수료납입안내", "accountNo": "000008", "accountName": "accountName8", "balance": "8", "modifiedDate": "2020-04-29", "field": "field8", "level": "3", "value": "8", "parentValue": "7", "grp": "2"},
					{"bankName": "수수료영수증", "accountNo": "000009", "accountName": "accountName9", "balance": "9", "modifiedDate": "2020-04-29", "field": "field9", "level": "3", "value": "9", "parentValue": "7", "grp": "2"},
					{"bankName": "상품관리", "accountNo": "000010", "accountName": "accountName10", "balance": "10", "modifiedDate": "2020-04-29", "field": "field10", "level": "1", "value": "10", "parentValue": "", "grp": "3"},
					{"bankName": "상품조회", "accountNo": "000011", "accountName": "accountName11", "balance": "11", "modifiedDate": "2020-04-29", "field": "field11", "level": "2", "value": "11", "parentValue": "10", "grp": "3"},
					{"bankName": "수수료납입안내", "accountNo": "000012", "accountName": "accountName12", "balance": "12", "modifiedDate": "2020-04-29", "field": "field12", "level": "3", "value": "12", "parentValue": "11", "grp": "3"},
					{"bankName": "적립비율", "accountNo": "000013", "accountName": "accountName13", "balance": "13", "modifiedDate": "2020-04-29", "field": "field13", "level": "2", "value": "13", "parentValue": "10", "grp": "3"},
					{"bankName": "지급제한", "accountNo": "000014", "accountName": "accountName14", "balance": "14", "modifiedDate": "2020-04-29", "field": "field14", "level": "2", "value": "14", "parentValue": "10", "grp": "3"},
					{"bankName": "상품조회", "accountNo": "000015", "accountName": "accountName15", "balance": "15", "modifiedDate": "2020-04-29", "field": "field15", "level": "2", "value": "15", "parentValue": "10", "grp": "3"},
					{"bankName": "수수료납입안내", "accountNo": "000016", "accountName": "accountName16", "balance": "16", "modifiedDate": "2020-04-29", "field": "field16", "level": "3", "value": "16", "parentValue": "15", "grp": "3"},
					{"bankName": "수수료입금", "accountNo": "000017", "accountName": "accountName17", "balance": "17", "modifiedDate": "2020-04-29", "field": "field17", "level": "3", "value": "17", "parentValue": "15", "grp": "3"},
					{"bankName": "영수증조회", "accountNo": "000018", "accountName": "accountName18", "balance": "18", "modifiedDate": "2020-04-29", "field": "field18", "level": "4", "value": "18", "parentValue": "17", "grp": "3"},
					{"bankName": "영수증발행", "accountNo": "000019", "accountName": "accountName19", "balance": "19", "modifiedDate": "2020-04-29", "field": "field19", "level": "4", "value": "19", "parentValue": "17", "grp": "3"},
					{"bankName": "영수증관리", "accountNo": "000020", "accountName": "accountName20", "balance": "20", "modifiedDate": "2020-04-29", "field": "field20", "level": "4", "value": "20", "parentValue": "17", "grp": "3"},
					{"bankName": "발행권한설정", "accountNo": "000021", "accountName": "accountName21", "balance": "21", "modifiedDate": "2020-04-29", "field": "field21", "level": "5", "value": "21", "parentValue": "20", "grp": "3"},
					{"bankName": "상품제공수수료영수증관리", "accountNo": "000022", "accountName": "accountName22", "balance": "22", "modifiedDate": "2020-04-29", "field": "field22", "level": "5", "value": "22", "parentValue": "20", "grp": "3"}
				]
			});
			app.register(dataSet_1);
			
			app.supportMedia("all and (min-width: 1320px)", "eXFrame");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1319px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader");
			userDefinedControl_1.initializeYn = "N";
			userDefinedControl_1.groupBoxIds = "grp1";
			container.addChild(userDefinedControl_1, {
				"autoSize": "none",
				"width": "998px",
				"height": "30px"
			});
			
			var group_1 = new cpr.controls.Container("grp1");
			group_1.userAttr({"fillLayout": "Y"});
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.verticalSpacing = "5px";
			formLayout_1.setColumns(["1fr"]);
			formLayout_1.setRows(["25px", "2fr", "25px", "1fr"]);
			group_1.setLayout(formLayout_1);
			(function(container){
				var group_2 = new cpr.controls.Container("grpFormCont");
				group_2.style.setClasses(["form-box"]);
				// Layout
				var formLayout_2 = new cpr.controls.layouts.FormLayout();
				formLayout_2.topMargin = "5px";
				formLayout_2.rightMargin = "5px";
				formLayout_2.bottomMargin = "5px";
				formLayout_2.leftMargin = "5px";
				formLayout_2.setColumns(["100px", "1fr"]);
				formLayout_2.setRows(["1fr", "1fr"]);
				group_2.setLayout(formLayout_2);
				(function(container){
					var output_1 = new cpr.controls.Output("otp25");
					output_1.value = "시나리오";
					container.addChild(output_1, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var output_2 = new cpr.controls.Output("otp26");
					output_2.value = "추가설명";
					container.addChild(output_2, {
						"colIndex": 0,
						"rowIndex": 1
					});
					var textArea_1 = new cpr.controls.TextArea("txa1");
					textArea_1.readOnly = true;
					textArea_1.value = "1. 그리드의 구분 항목으로 트리구조가 표시되는것을 확인한다.\r\n2. 로딩시 트리의 펼쳐짐이 입력된 레벨까지 펼쳐졌는지 확인한다. (예제화면은 3레벨로 설정됨)\r\n3. 트리셀의 접기/펼치기의 동작을 확인한다.";
					container.addChild(textArea_1, {
						"colIndex": 1,
						"rowIndex": 0
					});
					var textArea_2 = new cpr.controls.TextArea("txa2");
					textArea_2.readOnly = true;
					textArea_2.value = "1. 트리구조를 위한 데이터셋은 위에서부터 level을 기준으로 데이터를 구조화하여 표시한다. (level이 depth )  - number로 구성 \r\n2. 트리셀 컨트롤을 트리로 표시해야하는 구간에 배치한 후 level을 데이터로 명시한다. \r\n3. 로딩시 접는 옵션은 Properties - startCollapseLevel 속성을 숫자로 기입한다.  (-1입력시 모두 펼쳐짐) ";
					container.addChild(textArea_2, {
						"colIndex": 1,
						"rowIndex": 1
					});
				})(group_2);
				container.addChild(group_2, {
					"colIndex": 0,
					"rowIndex": 3
				});
				var grid_1 = new cpr.controls.Grid("grdList");
				grid_1.readOnly = true;
				grid_1.init({
					"dataSet": app.lookup("ds1"),
					"columnMovable": false,
					"resizableColumns": "none",
					"collapsible": true,
					"columns": [
						{"width": "100px"},
						{"width": "70px"},
						{"width": "70px"},
						{"width": "70px"},
						{"width": "70px"},
						{"width": "70px"},
						{
							"width": "46px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.targetColumnName = "bankName";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "은행명";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.targetColumnName = "accountNo";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "계좌번호";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.targetColumnName = "accountName";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "계좌별명";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.targetColumnName = "balance";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "잔고";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.targetColumnName = "modifiedDate";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "수정일";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "구분";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "24px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "bankName";
									cell.suppressible = true;
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "accountNo";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "accountName";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "balance";
									cell.control = (function(){
										var numberEditor_1 = new cpr.controls.NumberEditor("nbe1");
										numberEditor_1.style.css({
											"text-align" : "right"
										});
										numberEditor_1.bind("value").toDataColumn("balance");
										return numberEditor_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "modifiedDate";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnName = "bankName";
									cell.suppressible = true;
									cell.control = (function(){
										var treeCell_1 = new cpr.controls.gridpart.renderer.TreeCell();
										treeCell_1.startCollapseLevel = 3;
										treeCell_1.bind("level").toDataColumn("level");
										treeCell_1.style.bindClass().toExpression([
											"switch(level) {",
											"\tcase 1 : \"oneDepth\"",
											"\tcase 2 : \"twoDepth\"",
											"\tcase 3 : \"threeDepth\"",
											"\tcase 4 : \"fourDepth\"",
											"\tcase 5 : \"fiveDepth\"",
											"}"
										].join("\n"));
										treeCell_1.bind("indent").toExpression([
											"switch (level) {",
											"\tcase 1 : 7",
											"\tcase 2 : 18",
											"\tcase 3 : 28",
											"\tcase 4 : 23",
											"\tcase 5 : 20",
											"}"
										].join("\n"));
										treeCell_1.bind("value").toDataColumn("bankName");
										return treeCell_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "grp";
								}
							}
						]
					},
					"footer": {
						"rows": [{"height": "24px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0, "rowSpan": 1, "colSpan": 4},
								"configurator": function(cell){
									cell.expr = "\"총계\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.expr = "getSum(\"balance\")";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							}
						]
					},
					"rowGroup": [{
						"groupCondition": "grp",
						"gfooter": {
							"rows": [{"height": "24px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 1, "rowSpan": 1, "colSpan": 3},
									"configurator": function(cell){
										cell.expr = "\"소계\"";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 4},
									"configurator": function(cell){
										cell.expr = "getSum(\"balance\")";
										cell.style.css({
											"text-align" : "right"
										});
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 5},
									"configurator": function(cell){
										cell.expr = "\"\"";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 6},
									"configurator": function(cell){
										cell.expr = "\"\"";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.expr = "\"\"";
									}
								}
							]
						}
					}]
				});
				container.addChild(grid_1, {
					"colIndex": 0,
					"rowIndex": 1
				});
				var userDefinedControl_2 = new udc.com.comFormTitle("comformtitle3");
				userDefinedControl_2.title = "그리드 트리구조(트리셀) 예제";
				container.addChild(userDefinedControl_2, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var userDefinedControl_3 = new udc.com.comFormTitle("comformtitle2");
				userDefinedControl_3.title = "시나리오";
				container.addChild(userDefinedControl_3, {
					"colIndex": 0,
					"rowIndex": 2
				});
			})(group_1);
			container.addChild(group_1, {
				"width": "972px",
				"height": "645px"
			});
			if(typeof onBodyInit == "function"){
				app.addEventListener("init", onBodyInit);
			}
		}
	});
	app.title = "그리드 트리구조(트리셀)";
	cpr.core.Platform.INSTANCE.register(app);
})();
