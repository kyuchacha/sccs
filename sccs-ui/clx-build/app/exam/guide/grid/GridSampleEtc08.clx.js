/*
 * App URI: app/exam/guide/grid/GridSampleEtc08
 * Source Location: app/exam/guide/grid/GridSampleEtc08.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/exam/guide/grid/GridSampleEtc08", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			* GridSampleEtc08.js
			 * Created at 2022. 3. 18. 오후 5:19:25.
			 *
			 * @author 1amthomas
			 ************************************************/
			
			
			/*
			 * "https://techdom.tomatosystem.co.kr/p/00001" 버튼(btn5)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn5Click2(e){
				//질의문자열 중 ps의 value 값에 해당 qna 요청번호 입력
				//faq인 경우, 질의문자열 중 tn의 value 값을 faq로 수정
				window.open('https://techdom.tomatosystem.co.kr/p/00019/?bn=eXBuilder6&tn=qna&ps=12461');
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns": [
					{"name": "bankName"},
					{"name": "accountNo"},
					{"name": "accountName"},
					{
						"name": "balance",
						"dataType": "number"
					},
					{"name": "modifiedDate"},
					{"name": "field"},
					{
						"name": "level",
						"dataType": "number"
					},
					{
						"name": "value",
						"dataType": "number"
					},
					{
						"name": "parentValue",
						"dataType": "number"
					},
					{"name": "grp"}
				],
				"rows": [
					{"bankName": "연금계리", "accountNo": "000001", "accountName": "accountName1", "balance": "1", "modifiedDate": "2020-04-29", "field": "field1", "level": "1", "value": "1", "parentValue": "", "grp": "1"},
					{"bankName": "부담금", "accountNo": "000002", "accountName": "accountName2", "balance": "2", "modifiedDate": "2020-04-29", "field": "field2", "level": "2", "value": "2", "parentValue": "1", "grp": "1"},
					{"bankName": "지급", "accountNo": "000003", "accountName": "accountName3", "balance": "3", "modifiedDate": "2020-04-29", "field": "field3", "level": "2", "value": "3", "parentValue": "1", "grp": "1"},
					{"bankName": "공통", "accountNo": "000004", "accountName": "accountName4", "balance": "4", "modifiedDate": "2020-04-29", "field": "field4", "level": "1", "value": "4", "parentValue": "", "grp": "2"},
					{"bankName": "계약관리", "accountNo": "000005", "accountName": "accountName5", "balance": "5", "modifiedDate": "2020-04-29", "field": "field5", "level": "2", "value": "5", "parentValue": "4", "grp": "2"},
					{"bankName": "정정변경", "accountNo": "000006", "accountName": "accountName6", "balance": "6", "modifiedDate": "2020-04-29", "field": "field6", "level": "2", "value": "6", "parentValue": "4", "grp": "2"},
					{"bankName": "수수료", "accountNo": "000007", "accountName": "accountName7", "balance": "7", "modifiedDate": "2020-04-29", "field": "field7", "level": "2", "value": "7", "parentValue": "4", "grp": "2"},
					{"bankName": "수수료납입안내", "accountNo": "000008", "accountName": "accountName8", "balance": "8", "modifiedDate": "2020-04-29", "field": "field8", "level": "3", "value": "8", "parentValue": "7", "grp": "2"},
					{"bankName": "수수료영수증", "accountNo": "000009", "accountName": "accountName9", "balance": "9", "modifiedDate": "2020-04-29", "field": "field9", "level": "3", "value": "9", "parentValue": "7", "grp": "2"},
					{"bankName": "상품관리", "accountNo": "000010", "accountName": "accountName10", "balance": "10", "modifiedDate": "2020-04-29", "field": "field10", "level": "1", "value": "10", "parentValue": "", "grp": "3"},
					{"bankName": "상품조회", "accountNo": "000011", "accountName": "accountName11", "balance": "11", "modifiedDate": "2020-04-29", "field": "field11", "level": "2", "value": "11", "parentValue": "10", "grp": "3"},
					{"bankName": "수수료납입안내", "accountNo": "000012", "accountName": "accountName12", "balance": "12", "modifiedDate": "2020-04-29", "field": "field12", "level": "3", "value": "12", "parentValue": "11", "grp": "3"},
					{"bankName": "적립비율", "accountNo": "000013", "accountName": "accountName13", "balance": "13", "modifiedDate": "2020-04-29", "field": "field13", "level": "2", "value": "13", "parentValue": "10", "grp": "3"},
					{"bankName": "지급제한", "accountNo": "000014", "accountName": "accountName14", "balance": "14", "modifiedDate": "2020-04-29", "field": "field14", "level": "2", "value": "14", "parentValue": "10", "grp": "3"},
					{"bankName": "상품조회", "accountNo": "000015", "accountName": "accountName15", "balance": "15", "modifiedDate": "2020-04-29", "field": "field15", "level": "2", "value": "15", "parentValue": "10", "grp": "3"},
					{"bankName": "수수료납입안내", "accountNo": "000016", "accountName": "accountName16", "balance": "16", "modifiedDate": "2020-04-29", "field": "field16", "level": "3", "value": "16", "parentValue": "15", "grp": "3"},
					{"bankName": "수수료입금", "accountNo": "000017", "accountName": "accountName17", "balance": "17", "modifiedDate": "2020-04-29", "field": "field17", "level": "3", "value": "17", "parentValue": "15", "grp": "3"},
					{"bankName": "영수증조회", "accountNo": "000018", "accountName": "accountName18", "balance": "18", "modifiedDate": "2020-04-29", "field": "field18", "level": "4", "value": "18", "parentValue": "17", "grp": "3"},
					{"bankName": "영수증발행", "accountNo": "000019", "accountName": "accountName19", "balance": "19", "modifiedDate": "2020-04-29", "field": "field19", "level": "4", "value": "19", "parentValue": "17", "grp": "3"},
					{"bankName": "영수증관리", "accountNo": "000020", "accountName": "accountName20", "balance": "20", "modifiedDate": "2020-04-29", "field": "field20", "level": "4", "value": "20", "parentValue": "17", "grp": "3"},
					{"bankName": "발행권한설정", "accountNo": "000021", "accountName": "accountName21", "balance": "21", "modifiedDate": "2020-04-29", "field": "field21", "level": "5", "value": "21", "parentValue": "20", "grp": "3"},
					{"bankName": "상품제공수수료영수증관리", "accountNo": "000022", "accountName": "accountName22", "balance": "22", "modifiedDate": "2020-04-29", "field": "field22", "level": "5", "value": "22", "parentValue": "20", "grp": "3"}
				]
			});
			app.register(dataSet_1);
			
			app.supportMedia("all and (min-width: 1320px)", "eXFrame");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1319px)", "default");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpHeader");
			// Layout
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			group_1.setLayout(verticalLayout_2);
			(function(container){
				var userDefinedControl_1 = new udc.com.appHeader("appheader1");
				container.addChild(userDefinedControl_1, {
					"width": "500px",
					"height": "30px"
				});
			})(group_1);
			container.addChild(group_1, {
				"autoSize": "height",
				"width": "1320px",
				"height": "30px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var verticalLayout_3 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_3.leftMargin = 20;
			verticalLayout_3.rightMargin = 30;
			verticalLayout_3.topMargin = 30;
			verticalLayout_3.bottomMargin = 30;
			group_2.setLayout(verticalLayout_3);
			(function(container){
				var group_3 = new cpr.controls.Container("grp1");
				// Layout
				var verticalLayout_4 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_4.spacing = 30;
				verticalLayout_4.topMargin = 20;
				verticalLayout_4.bottomMargin = 40;
				group_3.setLayout(verticalLayout_4);
				(function(container){
					var group_4 = new cpr.controls.Container("grp3");
					// Layout
					var formLayout_1 = new cpr.controls.layouts.FormLayout();
					formLayout_1.scrollable = false;
					formLayout_1.rightMargin = "50px";
					formLayout_1.horizontalSpacing = "5px";
					formLayout_1.verticalSpacing = "5px";
					formLayout_1.setColumns(["300px", "100px"]);
					formLayout_1.setColumnAutoSizing(0, true);
					formLayout_1.setColumnAutoSizing(1, true);
					formLayout_1.setRows(["1fr"]);
					group_4.setLayout(formLayout_1);
					(function(container){
						var output_1 = new cpr.controls.Output();
						output_1.value = "그리드 트리구조(트리셀)";
						output_1.style.css({
							"font-weight" : "bold",
							"padding-left" : "1rem",
							"font-size" : "2.5rem"
						});
						container.addChild(output_1, {
							"colIndex": 0,
							"rowIndex": 0
						});
					})(group_4);
					container.addChild(group_4, {
						"autoSize": "height",
						"width": "1270px",
						"height": "40px"
					});
					var output_2 = new cpr.controls.Output();
					output_2.value = "이 페이지는 그리드내의 트리구조에 대해 설명합니다.";
					output_2.style.setClasses(["opt-tmpl"]);
					output_2.style.css({
						"padding-left" : "1rem",
						"font-size" : "1rem"
					});
					container.addChild(output_2, {
						"autoSize": "height",
						"width": "1210px",
						"height": "46px"
					});
				})(group_3);
				container.addChild(group_3, {
					"autoSize": "height",
					"width": "1270px",
					"height": "150px"
				});
				var group_5 = new cpr.controls.Container("grp2");
				// Layout
				var verticalLayout_5 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_5.spacing = 30;
				verticalLayout_5.topMargin = 10;
				verticalLayout_5.bottomMargin = 30;
				group_5.setLayout(verticalLayout_5);
				(function(container){
					var output_3 = new cpr.controls.Output();
					output_3.value = "시나리오";
					output_3.style.setClasses(["h1", "pl-3", "bg-primary", "text-white"]);
					output_3.style.css({
						"font-weight" : "bold",
						"padding-left" : "1rem",
						"font-size" : "1.75rem"
					});
					container.addChild(output_3, {
						"width": "100px",
						"height": "40px"
					});
					var output_4 = new cpr.controls.Output("ipbScenario");
					output_4.value = "1. 그리드의 구분 항목으로 트리구조가 표시되는것을 확인합니다.\r\n2. 로딩시 트리의 펼쳐짐이 입력된 레벨까지 펼쳐졌는지 확인합니다. (예제화면은 3레벨로 설정)\r\n3. 트리셀의 접기/펼치기의 동작을 확인합니다.";
					output_4.style.setClasses(["opt-tmpl"]);
					output_4.style.css({
						"padding-left" : "1rem",
						"font-size" : "1rem"
					});
					container.addChild(output_4, {
						"autoSize": "height",
						"width": "1210px",
						"height": "107px"
					});
					var group_6 = new cpr.controls.Container("grp4");
					group_6.style.css({
						"background-color" : "#dff7fb"
					});
					// Layout
					var verticalLayout_6 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_6.spacing = 10;
					verticalLayout_6.leftMargin = 30;
					verticalLayout_6.rightMargin = 30;
					verticalLayout_6.topMargin = 20;
					verticalLayout_6.bottomMargin = 20;
					group_6.setLayout(verticalLayout_6);
					(function(container){
						var output_5 = new cpr.controls.Output();
						output_5.value = "추가설명";
						output_5.style.setClasses(["ref-title"]);
						output_5.style.css({
							"color" : "#09c2de",
							"font-weight" : "bold"
						});
						container.addChild(output_5, {
							"width": "100px",
							"height": "25px"
						});
						var output_6 = new cpr.controls.Output();
						output_6.value = "1. 트리구조를 위한 데이터셋은 위에서부터 level을 기준으로 데이터를 구조화하여 표시합니다. (level이 depth )  - number로 구성 \r\n2. 트리셀 컨트롤을 트리로 표시해야하는 구간에 배치한 후 level을 데이터로 명시합니다. \r\n3. 로딩시 접는 옵션은 Properties - startCollapseLevel 속성을 숫자로 기입합니다.  (-1입력시 모두 펼쳐짐) ";
						output_6.style.css({
							"color" : "#09c2de"
						});
						container.addChild(output_6, {
							"autoSize": "height",
							"width": "100px",
							"height": "25px"
						});
					})(group_6);
					container.addChild(group_6, {
						"autoSize": "height",
						"width": "1100px",
						"height": "150px"
					});
				})(group_5);
				container.addChild(group_5, {
					"autoSize": "height",
					"width": "1270px",
					"height": "370px"
				});
				var group_7 = new cpr.controls.Container("grpFunction");
				// Layout
				var verticalLayout_7 = new cpr.controls.layouts.VerticalLayout();
				group_7.setLayout(verticalLayout_7);
				(function(container){
					var group_8 = new cpr.controls.Container("grpFuncFloating");
					group_8.userAttr({"floating-header": "true"});
					// Layout
					var verticalLayout_8 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_8.bottomMargin = 30;
					group_8.setLayout(verticalLayout_8);
					(function(container){
						var output_7 = new cpr.controls.Output();
						output_7.value = "기능확인";
						output_7.style.setClasses(["h1", "pl-3", "bg-primary", "text-white"]);
						output_7.style.css({
							"font-weight" : "bold",
							"padding-left" : "1rem",
							"font-size" : "1.75rem"
						});
						container.addChild(output_7, {
							"autoSize": "none",
							"width": "1270px",
							"height": "40px"
						});
						var group_9 = new cpr.controls.Container("grp11");
						group_9.style.css({
							"border-right-style" : "solid",
							"border-top-width" : "1px",
							"border-bottom-color" : "#dedede",
							"border-right-width" : "1px",
							"border-left-color" : "#dedede",
							"border-right-color" : "#dedede",
							"border-left-width" : "1px",
							"border-top-style" : "solid",
							"background-color" : "#F0F0F0",
							"border-left-style" : "solid",
							"border-bottom-width" : "1px",
							"border-top-color" : "#dedede",
							"border-bottom-style" : "solid"
						});
						// Layout
						var verticalLayout_9 = new cpr.controls.layouts.VerticalLayout();
						verticalLayout_9.leftMargin = 30;
						verticalLayout_9.rightMargin = 30;
						verticalLayout_9.topMargin = 5;
						verticalLayout_9.bottomMargin = 10;
						group_9.setLayout(verticalLayout_9);
						(function(container){
							var group_10 = new cpr.controls.Container("grp9");
							// Layout
							var formLayout_2 = new cpr.controls.layouts.FormLayout();
							formLayout_2.topMargin = "0px";
							formLayout_2.rightMargin = "0px";
							formLayout_2.bottomMargin = "0px";
							formLayout_2.leftMargin = "0px";
							formLayout_2.horizontalSpacing = "5px";
							formLayout_2.verticalSpacing = "5px";
							formLayout_2.setColumns(["1fr"]);
							formLayout_2.setRows(["1fr", "20px"]);
							group_10.setLayout(formLayout_2);
							(function(container){
								var output_8 = new cpr.controls.Output();
								output_8.value = "<기능 확인 컨트롤>";
								output_8.style.setClasses(["text-center"]);
								container.addChild(output_8, {
									"colIndex": 0,
									"rowIndex": 1
								});
								var grid_1 = new cpr.controls.Grid("grdList");
								grid_1.readOnly = true;
								grid_1.init({
									"dataSet": app.lookup("ds1"),
									"columnMovable": false,
									"resizableColumns": "none",
									"collapsible": true,
									"columns": [
										{"width": "100px"},
										{"width": "70px"},
										{"width": "70px"},
										{"width": "70px"},
										{"width": "70px"},
										{"width": "70px"},
										{
											"width": "46px",
											"visible": false
										}
									],
									"header": {
										"rows": [{"height": "27px"}],
										"cells": [
											{
												"constraint": {"rowIndex": 0, "colIndex": 1},
												"configurator": function(cell){
													cell.targetColumnName = "bankName";
													cell.filterable = false;
													cell.sortable = false;
													cell.text = "은행명";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 2},
												"configurator": function(cell){
													cell.targetColumnName = "accountNo";
													cell.filterable = false;
													cell.sortable = false;
													cell.text = "계좌번호";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 3},
												"configurator": function(cell){
													cell.targetColumnName = "accountName";
													cell.filterable = false;
													cell.sortable = false;
													cell.text = "계좌별명";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 4},
												"configurator": function(cell){
													cell.targetColumnName = "balance";
													cell.filterable = false;
													cell.sortable = false;
													cell.text = "잔고";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 5},
												"configurator": function(cell){
													cell.targetColumnName = "modifiedDate";
													cell.filterable = false;
													cell.sortable = false;
													cell.text = "수정일";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 0},
												"configurator": function(cell){
													cell.text = "구분";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 6},
												"configurator": function(cell){
												}
											}
										]
									},
									"detail": {
										"rows": [{"height": "24px"}],
										"cells": [
											{
												"constraint": {"rowIndex": 0, "colIndex": 1},
												"configurator": function(cell){
													cell.columnName = "bankName";
													cell.suppressible = true;
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 2},
												"configurator": function(cell){
													cell.columnName = "accountNo";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 3},
												"configurator": function(cell){
													cell.columnName = "accountName";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 4},
												"configurator": function(cell){
													cell.columnName = "balance";
													cell.control = (function(){
														var numberEditor_1 = new cpr.controls.NumberEditor("nbe1");
														numberEditor_1.style.css({
															"text-align" : "right"
														});
														numberEditor_1.bind("value").toDataColumn("balance");
														return numberEditor_1;
													})();
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 5},
												"configurator": function(cell){
													cell.columnName = "modifiedDate";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 0},
												"configurator": function(cell){
													cell.columnName = "bankName";
													cell.suppressible = true;
													cell.control = (function(){
														var treeCell_1 = new cpr.controls.gridpart.renderer.TreeCell();
														treeCell_1.startCollapseLevel = 3;
														treeCell_1.bind("level").toDataColumn("level");
														treeCell_1.style.bindClass().toExpression([
															"switch(level) {",
															"\tcase 1 : \"oneDepth\"",
															"\tcase 2 : \"twoDepth\"",
															"\tcase 3 : \"threeDepth\"",
															"\tcase 4 : \"fourDepth\"",
															"\tcase 5 : \"fiveDepth\"",
															"}"
														].join("\n"));
														treeCell_1.bind("indent").toExpression([
															"switch (level) {",
															"\tcase 1 : 7",
															"\tcase 2 : 18",
															"\tcase 3 : 28",
															"\tcase 4 : 23",
															"\tcase 5 : 20",
															"}"
														].join("\n"));
														treeCell_1.bind("value").toDataColumn("bankName");
														return treeCell_1;
													})();
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 6},
												"configurator": function(cell){
													cell.columnName = "grp";
												}
											}
										]
									},
									"footer": {
										"rows": [{"height": "24px"}],
										"cells": [
											{
												"constraint": {"rowIndex": 0, "colIndex": 0, "rowSpan": 1, "colSpan": 4},
												"configurator": function(cell){
													cell.expr = "\"총계\"";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 4},
												"configurator": function(cell){
													cell.expr = "getSum(\"balance\")";
													cell.style.css({
														"text-align" : "right"
													});
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 5},
												"configurator": function(cell){
													cell.expr = "\"\"";
												}
											},
											{
												"constraint": {"rowIndex": 0, "colIndex": 6},
												"configurator": function(cell){
													cell.expr = "\"\"";
												}
											}
										]
									},
									"rowGroup": [{
										"groupCondition": "grp",
										"gfooter": {
											"rows": [{"height": "24px"}],
											"cells": [
												{
													"constraint": {"rowIndex": 0, "colIndex": 1, "rowSpan": 1, "colSpan": 3},
													"configurator": function(cell){
														cell.expr = "\"소계\"";
													}
												},
												{
													"constraint": {"rowIndex": 0, "colIndex": 4},
													"configurator": function(cell){
														cell.expr = "getSum(\"balance\")";
														cell.style.css({
															"text-align" : "right"
														});
													}
												},
												{
													"constraint": {"rowIndex": 0, "colIndex": 5},
													"configurator": function(cell){
														cell.expr = "\"\"";
													}
												},
												{
													"constraint": {"rowIndex": 0, "colIndex": 6},
													"configurator": function(cell){
														cell.expr = "\"\"";
													}
												},
												{
													"constraint": {"rowIndex": 0, "colIndex": 0},
													"configurator": function(cell){
														cell.expr = "\"\"";
													}
												}
											]
										}
									}]
								});
								container.addChild(grid_1, {
									"colIndex": 0,
									"rowIndex": 0
								});
							})(group_10);
							container.addChild(group_10, {
								"autoSize": "height",
								"width": "200px",
								"height": "300px"
							});
						})(group_9);
						container.addChild(group_9, {
							"autoSize": "none",
							"width": "1210px",
							"height": "600px"
						});
					})(group_8);
					container.addChild(group_8, {
						"autoSize": "height",
						"width": "1270px",
						"height": "450px"
					});
				})(group_7);
				container.addChild(group_7, {
					"autoSize": "height",
					"width": "1270px",
					"height": "450px"
				});
			})(group_2);
			container.addChild(group_2, {
				"autoSize": "height",
				"width": "1320px",
				"height": "2800px"
			});
		}
	});
	app.title = "그리드 트리구조(트리셀)";
	cpr.core.Platform.INSTANCE.register(app);
})();
