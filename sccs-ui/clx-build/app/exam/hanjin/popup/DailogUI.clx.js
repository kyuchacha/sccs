/*
 * App URI: app/exam/hanjin/popup/DailogUI
 * Source Location: app/exam/hanjin/popup/DailogUI.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/exam/hanjin/popup/DailogUI", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * DailogUI.js
			 * Created at 2021. 01. 13. 오후 8:53:22.
			 *
			 * @author MK
			 ************************************************/
			
			
			/*
			 * 인풋 박스에서 keydown 이벤트 발생 시 호출.
			 * 사용자가 키를 누를 때 발생하는 이벤트.
			 */
			function onIpb1Keydown(/* cpr.events.CKeyboardEvent */ e){
				/** 
				 * @type cpr.controls.InputBox
				 */
				var ipb1 = e.control;
				
				var ds1 = app.lookup("ds1");
				
				if(e.keyCode === cpr.events.KeyCode.ENTER){
					ds1.addRowData({who : "me", content : ipb1.value});
					ipb1.clear();
				}
			}
			
			
			/*
			 * 데이터셋에서 load 이벤트 발생 시 호출.
			 * build 메소드에 의해 데이터 구조가 재구성될 때 발생하는 이벤트. 초기 생성시에도 발생합니다.
			 */
			function onDs1Load(/* cpr.events.CDataEvent */ e){
				/** 
				 * @type cpr.data.DataSet
				 */
				var ds1 = e.control;
				
			}
			
			
			/*
			 * 데이터셋에서 insert 이벤트 발생 시 호출.
			 * row가 추가되는 경우 발생하는 이벤트. 발생 메소드 : addRow, addRowData, insertRow, insertRowData
			 */
			function onDs1Insert(/* cpr.events.CDataEvent */ e){
				/** 
				 * @type cpr.data.DataSet
				 */
				var ds1 = e.control;
				
				if(e.row.getValue("who") == "bot")	return;
				
				addContent(e.row);
				
				setTimeout(function(){
					var content = e.row.getValue("content");
					addContent(ds1.addRowData({who:"bot", content:content + " 안내"}));
					addContent(ds1.addRowData({who:"bot", content:"<p>업무상 필요한 " + content + " 는 아래\n메뉴에서 신청해주세요<\/p>"}));	
				}, 500);
				
			}
			
			/**
			 * 
			 * @param {cpr.data.Row} row
			 */
			function addContent(row){
				
				var grpContent = app.lookup("grpContent");
				
				var vsWho = row.getValue("who");
				var vsContent = row.getValue("content");
				
				var now = new Date();
				var nowHour = now.getHours();
				var nowMt = now.getMinutes();
				
				var vsNow = (nowHour <= 12 ? "오전 " + nowHour : "오후 " + (nowHour -12)) + ":" + (nowMt <= 9 ? "0" + nowMt : "" + nowMt);
				row.setValue("time", vsNow);
				
				var contentGroup = new cpr.controls.Container();
				// Layout
				var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
				var flowLayout_2 = new cpr.controls.layouts.FlowLayout();
				flowLayout_2.horizontalAlign = (vsWho == "me" ? "right" : "left");
				flowLayout_2.verticalAlign = "bottom";
				
				contentGroup.setLayout(flowLayout_2);
				(function(container){
					var hTMLSnippet_1 = new cpr.controls.HTMLSnippet();
					console.log("vsContent : ",vsContent);
					hTMLSnippet_1.value = vsContent;
					hTMLSnippet_1.style.css({
						"border" : "1px solid #dddddd",
						"border-radius" : "20px",
						"padding" : "10px",
						"max-width" : "350px"
					});
					container.addChild(hTMLSnippet_1, {
						"autoSize": "both",
						"width": "100px",
						"height": "151px",
					});
					
					var timeOutput = new cpr.controls.Output();
					timeOutput.value = vsNow;
					var outputIndex = (vsWho == "me" ? 0 : 1);
					container.insertChild(outputIndex, timeOutput, {
						"width" : "30px",
						"autoSize" : "both"
					});
					
				})(contentGroup);
				
				grpContent.addChild(contentGroup, {
					"autoSize": "height",
					"width": "100px",
					"height": "30px",
					"horizontalAlign": "right"
				});
				
				cpr.core.DeferredUpdateManager.INSTANCE.asyncExec(function(){
					grpContent.scrollTo(0, grpContent.getContentPaneRect().bottom);
				});
			}
			
			/*
			 * 버튼 클릭시에 발생하는 이벤트
			 */
			function onButtonClick(/* cpr.events.CUIEvent */ e){
				/** 
				 * @type cpr.controls.InputBox
				 */
				var button = e.control;
				var vbIsExpand = button.userAttr("isExpand") == "Y";
				var container = app.getContainer();
				var layout = container.getLayout();
				
				if(vbIsExpand){
					layout.setRowVisible(1, false);
					layout.setRowAutoSizing(1, false);
					layout.setRows(["1fr","1px","40px"]);
					button.userAttr("isExpand","N");
				}else{
					layout.setRowVisible(1, true);
					layout.setRows(["1fr","40px","40px"]);
					layout.setRowAutoSizing(1, true);
					button.userAttr("isExpand","Y");
				}
				
				e.preventDefault();
			}
			
			
			/*
			 * 루트 컨테이너에서 init 이벤트 발생 시 호출.
			 * 앱이 최초 구성될 때 발생하는 이벤트 입니다.
			 */
			function onBodyInit(/* cpr.events.CEvent */ e){
				var ipbChat = app.lookup("ipbChat");
				ipbChat.style.css("padding-right","40px");
			}
			
			function autoCompleteButtonClick(e){
				var button = e.control;
				
				var ds1 = app.lookup("ds1");
				ds1.addRowData({who : "me", content : button.value});
				
				var btn1 = app.lookup("btn1");
				btn1.click();
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns": [
					{
						"name": "who",
						"dataType": "string"
					},
					{"name": "content"},
					{"name": "time"}
				],
				"rows": [{"who": "who1", "content": "content1", "time": "time1"}]
			});
			if(typeof onDs1Load == "function") {
				dataSet_1.addEventListener("load", onDs1Load);
			}
			if(typeof onDs1Insert == "function") {
				dataSet_1.addEventListener("insert", onDs1Insert);
			}
			app.register(dataSet_1);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.scrollable = false;
			formLayout_1.topMargin = "10px";
			formLayout_1.rightMargin = "10px";
			formLayout_1.bottomMargin = "10px";
			formLayout_1.leftMargin = "10px";
			formLayout_1.horizontalSpacing = "5px";
			formLayout_1.verticalSpacing = "5px";
			formLayout_1.setColumns(["1fr", "1fr"]);
			formLayout_1.setRows(["1fr", "1px", "40px"]);
			formLayout_1.setRowAutoSizing(1, true);
			formLayout_1.setRowVisible(1, false);
			container.setLayout(formLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grp1");
			// Layout
			var flowLayout_1 = new cpr.controls.layouts.FlowLayout();
			flowLayout_1.animationDuration = 1.0;
			group_1.setLayout(flowLayout_1);
			(function(container){
				var button_1 = new cpr.controls.Button("btn3");
				button_1.value = "조직도";
				button_1.style.setClasses(["pink"]);
				if(typeof autoCompleteButtonClick == "function") {
					button_1.addEventListener("click", autoCompleteButtonClick);
				}
				container.addChild(button_1, {
					"autoSize": "width",
					"width": "100px",
					"height": "30px"
				});
				var button_2 = new cpr.controls.Button("btn4");
				button_2.value = "이모";
				button_2.style.setClasses(["pink"]);
				if(typeof autoCompleteButtonClick == "function") {
					button_2.addEventListener("click", autoCompleteButtonClick);
				}
				container.addChild(button_2, {
					"autoSize": "width",
					"width": "100px",
					"height": "30px"
				});
				var button_3 = new cpr.controls.Button("btn5");
				button_3.value = "새창";
				button_3.style.setClasses(["pink"]);
				if(typeof autoCompleteButtonClick == "function") {
					button_3.addEventListener("click", autoCompleteButtonClick);
				}
				container.addChild(button_3, {
					"autoSize": "width",
					"width": "100px",
					"height": "30px"
				});
				var button_4 = new cpr.controls.Button("btn6");
				button_4.value = "타일일정";
				button_4.style.setClasses(["pink"]);
				if(typeof autoCompleteButtonClick == "function") {
					button_4.addEventListener("click", autoCompleteButtonClick);
				}
				container.addChild(button_4, {
					"autoSize": "width",
					"width": "100px",
					"height": "30px"
				});
				var button_5 = new cpr.controls.Button("btn7");
				button_5.value = "근로시간";
				button_5.style.setClasses(["green"]);
				if(typeof autoCompleteButtonClick == "function") {
					button_5.addEventListener("click", autoCompleteButtonClick);
				}
				container.addChild(button_5, {
					"autoSize": "width",
					"width": "100px",
					"height": "30px"
				});
				var button_6 = new cpr.controls.Button("btn8");
				button_6.value = "코로나19 검사";
				button_6.style.setClasses(["green"]);
				if(typeof autoCompleteButtonClick == "function") {
					button_6.addEventListener("click", autoCompleteButtonClick);
				}
				container.addChild(button_6, {
					"autoSize": "width",
					"width": "100px",
					"height": "30px"
				});
				var button_7 = new cpr.controls.Button("btn9");
				button_7.value = "번역";
				button_7.style.setClasses(["green"]);
				if(typeof autoCompleteButtonClick == "function") {
					button_7.addEventListener("click", autoCompleteButtonClick);
				}
				container.addChild(button_7, {
					"autoSize": "width",
					"width": "100px",
					"height": "30px"
				});
				var button_8 = new cpr.controls.Button("btn10");
				button_8.value = "통역";
				button_8.style.setClasses(["blue"]);
				if(typeof autoCompleteButtonClick == "function") {
					button_8.addEventListener("click", autoCompleteButtonClick);
				}
				container.addChild(button_8, {
					"autoSize": "width",
					"width": "100px",
					"height": "30px"
				});
				var button_9 = new cpr.controls.Button("btn11");
				button_9.value = "내 일정";
				button_9.style.setClasses(["blue"]);
				if(typeof autoCompleteButtonClick == "function") {
					button_9.addEventListener("click", autoCompleteButtonClick);
				}
				container.addChild(button_9, {
					"autoSize": "width",
					"width": "100px",
					"height": "30px"
				});
				var button_10 = new cpr.controls.Button("btn12");
				button_10.value = "식단";
				button_10.style.setClasses(["gray"]);
				if(typeof autoCompleteButtonClick == "function") {
					button_10.addEventListener("click", autoCompleteButtonClick);
				}
				container.addChild(button_10, {
					"autoSize": "width",
					"width": "100px",
					"height": "30px"
				});
				var button_11 = new cpr.controls.Button("btn2");
				button_11.value = "날씨";
				button_11.style.setClasses(["gray"]);
				if(typeof autoCompleteButtonClick == "function") {
					button_11.addEventListener("click", autoCompleteButtonClick);
				}
				container.addChild(button_11, {
					"autoSize": "width",
					"width": "100px",
					"height": "30px"
				});
			})(group_1);
			container.addChild(group_1, {
				"colIndex": 0,
				"rowIndex": 1,
				"colSpan": 2,
				"rowSpan": 1
			});
			
			var group_2 = new cpr.controls.Container("grpContent");
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			group_2.setLayout(verticalLayout_1);
			(function(container){
			})(group_2);
			container.addChild(group_2, {
				"colIndex": 0,
				"rowIndex": 0,
				"colSpan": 2,
				"rowSpan": 1
			});
			
			var group_3 = new cpr.controls.Container("grp2");
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			group_3.setLayout(xYLayout_1);
			(function(container){
				var inputBox_1 = new cpr.controls.InputBox("ipbChat");
				inputBox_1.placeholder = "챗봇과 대화해 보세요.";
				inputBox_1.userAttr({"isExpand": "N"});
				if(typeof onIpb1Keydown == "function") {
					inputBox_1.addEventListener("keydown", onIpb1Keydown);
				}
				if(typeof onIpb1Clear == "function") {
					inputBox_1.addEventListener("clear", onIpb1Clear);
				}
				container.addChild(inputBox_1, {
					"top": "0px",
					"right": "0px",
					"bottom": "0px",
					"left": "0px"
				});
				var button_12 = new cpr.controls.Button("btn1");
				button_12.value = "#";
				button_12.userAttr({"isExpand": "N"});
				button_12.style.css({
					"background-color" : "transparent",
					"border-right-style" : "none",
					"border-left-style" : "none",
					"border-bottom-style" : "none",
					"border-top-style" : "none"
				});
				if(typeof onButtonClick == "function") {
					button_12.addEventListener("click", onButtonClick);
				}
				container.addChild(button_12, {
					"top": "0px",
					"right": "20px",
					"bottom": "0px",
					"width": "40px"
				});
			})(group_3);
			container.addChild(group_3, {
				"colIndex": 0,
				"rowIndex": 2,
				"colSpan": 2,
				"rowSpan": 1
			});
			if(typeof onBodyInit == "function"){
				app.addEventListener("init", onBodyInit);
			}
		}
	});
	app.title = "다이얼로그 UI";
	cpr.core.Platform.INSTANCE.register(app);
})();
