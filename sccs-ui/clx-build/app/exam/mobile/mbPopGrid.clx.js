/*
 * App URI: app/exam/mobile/mbPopGrid
 * Source Location: app/exam/mobile/mbPopGrid.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/exam/mobile/mbPopGrid", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * mbPopGrid.js
			 * Created at 2021. 7. 11. 오전 5:09:15.
			 *
			 * @author minhye
			 ************************************************/
			
			
			/************************************************
			 * 전역변수
			 ************************************************/
			/**
			 * 컨트롤 복사 공통모듈
			 */
			var ctrlCopyModule = createCtrlCopyModule();
			
			/**
			 * 복사한 컨트롤
			 */
			var mcCopyGrd = null;
			
			
			/************************************************
			 * 사용자 함수
			 ************************************************/
			/**
			 * 화면의 크기가 모바일 사이즈일 때, 
			 * 그리드를 폼형태로 변환합니다.
			 */
			function changeGridToForm () {
			
				if(mcCopyGrd != null) return;
				
				var container = app.getContainer();
				var vcGrid = app.lookup("grdList");
				
				vcGrid.visible = false;
				
				mcCopyGrd = ctrlCopyModule.convertGridToForm(vcGrid, "page", null, {
					groupClass: "card",
					titleClass: "grid-title",
					countClass: "h5 text-blue",
				});
				
				container.addChild(mcCopyGrd, {
					autoSize : "height"
				});
			}
			
			
			
			
			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				app.lookup("subList").send().then(function(input){
					changeGridToForm();
				});
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsList");
			dataSet_1.parseData({
				"columns" : [
					{"name": "id"},
					{"name": "first_name"},
					{"name": "last_name"},
					{"name": "email"},
					{"name": "gender"},
					{"name": "ip_address"},
					{"name": "join_date"}
				]
			});
			app.register(dataSet_1);
			var submission_1 = new cpr.protocols.Submission("subList");
			submission_1.action = "app/exam/data/temp/default-data.json";
			submission_1.addResponseData(dataSet_1, false);
			app.register(submission_1);
			
			app.supportMedia("all", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.setClasses(["content-card"]);
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_1.spacing = 10;
			verticalLayout_1.leftMargin = 20;
			verticalLayout_1.rightMargin = 20;
			verticalLayout_1.topMargin = 20;
			verticalLayout_1.bottomMargin = 20;
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var output_1 = new cpr.controls.Output();
			output_1.value = "모바일 그리드";
			output_1.style.setClasses(["h3"]);
			container.addChild(output_1, {
				"autoSize": "none",
				"width": "288px",
				"height": "43px"
			});
			
			var output_2 = new cpr.controls.Output();
			output_2.value = "convertGridToForm API 를 통해 모바일 형태의 그리드를 생성 할 수 있습니다.\r\n아래의 모바일 형태 그리드를 확인 하십시오.";
			container.addChild(output_2, {
				"autoSize": "height",
				"width": "288px",
				"height": "71px"
			});
			
			var grid_1 = new cpr.controls.Grid("grdList");
			grid_1.fieldLabel = "모바일 그리드";
			grid_1.init({
				"dataSet": app.lookup("dsList"),
				"columnMovable": true,
				"resizableColumns": "all",
				"columns": [
					{"width": "50px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"}
				],
				"header": {
					"rows": [{"height": "35px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "순번";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.targetColumnName = "first_name";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "이름";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.targetColumnName = "last_name";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "성";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.targetColumnName = "email";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "이메일";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
								cell.targetColumnName = "gender";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "성별";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 5},
							"configurator": function(cell){
								cell.targetColumnName = "ip_address";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "IP 주소";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 6},
							"configurator": function(cell){
								cell.targetColumnName = "join_date";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "등록일자";
							}
						}
					]
				},
				"detail": {
					"rows": [{"height": "35px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.columnType = "rowindex";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.columnName = "first_name";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.columnName = "last_name";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.columnName = "email";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
								cell.columnName = "gender";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 5},
							"configurator": function(cell){
								cell.columnName = "ip_address";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 6},
							"configurator": function(cell){
								cell.columnName = "join_date";
							}
						}
					]
				}
			});
			container.addChild(grid_1, {
				"autoSize": "none",
				"width": "300px",
				"height": "219px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			if(typeof onBodyScreenChange == "function"){
				app.addEventListener("screen-change", onBodyScreenChange);
			}
		}
	});
	app.title = "모바일 팝업 그리드";
	cpr.core.Platform.INSTANCE.register(app);
})();
