/*
 * App URI: app/exam/design/guide/cmn/Grid
 * Source Location: app/exam/design/guide/cmn/Grid.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/exam/design/guide/cmn/Grid", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * Grid.js
			 * Created at 2020. 5. 11. 오후 3:54:05.
			 *
			 * @author ryu
			 ************************************************/
			 
			 /************************************************
			 * 공통 모듈 선언
			 ************************************************/
			 
			 /************************************************
			 * 전역 변수 선언
			 ************************************************/
			 
			 /************************************************
			 * 사용자 정의 함수
			 ************************************************/
			  
			  
			 /************************************************
			 * 컨트롤 이벤트
			 ************************************************/
			
			
			
			/*
			 * Body에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				app.lookup("grd2").setRowState(1, cpr.data.tabledata.RowState.INSERTED);
				app.lookup("grd2").setRowState(2, cpr.data.tabledata.RowState.UPDATED);
				app.lookup("grd2").setRowState(3, cpr.data.tabledata.RowState.DELETED);
				app.lookup("grd2").selectRows(4);
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsMst");
			dataSet_1.parseData({
				"columns": [
					{"name": "name"},
					{"name": "position"},
					{"name": "office"},
					{"name": "age"},
					{"name": "startDate"},
					{"name": "salary"}
				],
				"rows": [
					{"name": "Airi Satou", "position": "Accountant", "office": "Tokyo", "age": "33", "startDate": "20081128", "salary": "162700"},
					{"name": "Angelica Ramos", "position": "Chief Executive Officer (CEO)", "office": "London", "age": "47", "startDate": "20091009", "salary": "1200000"},
					{"name": "Ashton Cox", "position": "Junior Technical Author", "office": "San Francisco", "age": "66", "startDate": "20090112", "salary": "86000"},
					{"name": "Bradley Greer", "position": "Software Engineer", "office": "London", "age": "41", "startDate": "20121013", "salary": "132000"},
					{"name": "Brenden Wagner", "position": "Software Engineer", "office": "San Francisco", "age": "28", "startDate": "20110607", "salary": "206850"},
					{"name": "Brielle Williamson", "position": "Integration Specialist", "office": "New York", "age": "61", "startDate": "20121202", "salary": "372000"},
					{"name": "Bruno Nash", "position": "Software Engineer", "office": "London", "age": "38", "startDate": "20110503", "salary": "163500"},
					{"name": "Caesar Vance", "position": "Pre-Sales Support", "office": "New York", "age": "21", "startDate": "20111212", "salary": "106450"},
					{"name": "Cara Stevens", "position": "Sales Assistant", "office": "New York", "age": "46", "startDate": "20111206", "salary": "145600"},
					{"name": "Cara Stevens", "position": "Sales Assistant", "office": "New York", "age": "46", "startDate": "20111206", "salary": "145600"},
					{"name": "Cara Stevens", "position": "Sales Assistant", "office": "New York", "age": "46", "startDate": "20111206", "salary": "145600"},
					{"name": "Cara Stevens", "position": "Sales Assistant", "office": "New York", "age": "46", "startDate": "20111206", "salary": "145600"},
					{"name": "Cara Stevens", "position": "Sales Assistant", "office": "New York", "age": "46", "startDate": "20111206", "salary": "145600"},
					{"name": "Cara Stevens", "position": "Sales Assistant", "office": "New York", "age": "46", "startDate": "20111206", "salary": "145600"},
					{"name": "Cara Stevens", "position": "Sales Assistant", "office": "New York", "age": "46", "startDate": "20111206", "salary": "145600"},
					{"name": "Cara Stevens", "position": "Sales Assistant", "office": "New York", "age": "46", "startDate": "20111206", "salary": "145600"},
					{"name": "Cedric Kelly", "position": "Senior Javascript Developer", "office": "Edinburgh", "age": "22", "startDate": "20120329", "salary": "433060"},
					{"name": "Charde Marshall", "position": "Regional Director", "office": "San Francisco", "age": "36", "startDate": "20081016", "salary": "470600"},
					{"name": "Colleen Hurst", "position": "Javascript Developer", "office": "San Francisco", "age": "39", "startDate": "20090915", "salary": "205500"},
					{"name": "Dai Rios", "position": "Personnel Lead", "office": "Edinburgh", "age": "35", "startDate": "20120926", "salary": "217500"},
					{"name": "Donna Snider", "position": "Customer Support", "office": "New York", "age": "27", "startDate": "20110125", "salary": "112000"},
					{"name": "Donna Snider", "position": "Customer Support", "office": "New York", "age": "27", "startDate": "20110125", "salary": "112000"},
					{"name": "Donna Snider", "position": "Customer Support", "office": "New York", "age": "27", "startDate": "20110125", "salary": "112000"},
					{"name": "Donna Snider", "position": "Customer Support", "office": "New York", "age": "27", "startDate": "20110125", "salary": "112000"},
					{"name": "Donna Snider", "position": "Customer Support", "office": "New York", "age": "27", "startDate": "20110125", "salary": "112000"},
					{"name": "Donna Snider", "position": "Customer Support", "office": "New York", "age": "27", "startDate": "20110125", "salary": "112000"},
					{"name": "Donna Snider", "position": "Customer Support", "office": "New York", "age": "27", "startDate": "20110125", "salary": "112000"},
					{"name": "Donna Snider", "position": "Customer Support", "office": "New York", "age": "27", "startDate": "20110125", "salary": "112000"},
					{"name": "Doris Wilder", "position": "Sales Assistant", "office": "Sydney", "age": "23", "startDate": "20100920", "salary": "85600"},
					{"name": "Finn Camacho", "position": "Support Engineer", "office": "San Francisco", "age": "47", "startDate": "20090707", "salary": "87500"},
					{"name": "Fiona Green", "position": "Chief Operating Officer (COO)", "office": "San Francisco", "age": "48", "startDate": "20100311", "salary": "850000"},
					{"name": "Garrett Winters", "position": "Accountant", "office": "Tokyo", "age": "63", "startDate": "20110725", "salary": "170750"},
					{"name": "Gavin Cortez", "position": "Team Leader", "office": "San Francisco", "age": "22", "startDate": "20081026", "salary": "235500"},
					{"name": "Gavin Joyce", "position": "Developer", "office": "Edinburgh", "age": "42", "startDate": "20101222", "salary": "92575"},
					{"name": "Gloria Little", "position": "Systems Administrator", "office": "New York", "age": "59", "startDate": "20090410", "salary": "237500"},
					{"name": "Haley Kennedy", "position": "Senior Marketing Designer", "office": "London", "age": "43", "startDate": "20121218", "salary": "313500"},
					{"name": "Hermione Butler", "position": "Regional Director", "office": "London", "age": "47", "startDate": "20110321", "salary": "356250"},
					{"name": "Hermione Butler", "position": "Regional Director", "office": "London", "age": "47", "startDate": "20110321", "salary": "356250"},
					{"name": "Hermione Butler", "position": "Regional Director", "office": "London", "age": "47", "startDate": "20110321", "salary": "356250"},
					{"name": "Hermione Butler", "position": "Regional Director", "office": "London", "age": "47", "startDate": "20110321", "salary": "356250"},
					{"name": "Hermione Butler", "position": "Regional Director", "office": "London", "age": "47", "startDate": "20110321", "salary": "356250"},
					{"name": "Hermione Butler", "position": "Regional Director", "office": "London", "age": "47", "startDate": "20110321", "salary": "356250"},
					{"name": "Hermione Butler", "position": "Regional Director", "office": "London", "age": "47", "startDate": "20110321", "salary": "356250"},
					{"name": "Hermione Butler", "position": "Regional Director", "office": "London", "age": "47", "startDate": "20110321", "salary": "356250"},
					{"name": "Herrod Chandler", "position": "Sales Assistant", "office": "San Francisco", "age": "59", "startDate": "20120806", "salary": "137500"},
					{"name": "Hope Fuentes", "position": "Secretary", "office": "San Francisco", "age": "41", "startDate": "20100212", "salary": "109850"},
					{"name": "Howard Hatfield", "position": "Office Manager", "office": "San Francisco", "age": "51", "startDate": "20081216", "salary": "164500"},
					{"name": "Jackson Bradshaw", "position": "Director", "office": "New York", "age": "65", "startDate": "20080926", "salary": "645750"},
					{"name": "Jena Gaines", "position": "Office Manager", "office": "London", "age": "30", "startDate": "20081219", "salary": "90560"},
					{"name": "Jenette Caldwell", "position": "Development Lead", "office": "New York", "age": "30", "startDate": "20110903", "salary": "345000"},
					{"name": "Jennifer Acosta", "position": "Junior Javascript Developer", "office": "Edinburgh", "age": "43", "startDate": "20130201", "salary": "75650"},
					{"name": "Jennifer Acosta", "position": "Junior Javascript Developer", "office": "Edinburgh", "age": "43", "startDate": "20130201", "salary": "75650"},
					{"name": "Jennifer Acosta", "position": "Junior Javascript Developer", "office": "Edinburgh", "age": "43", "startDate": "20130201", "salary": "75650"},
					{"name": "Jennifer Acosta", "position": "Junior Javascript Developer", "office": "Edinburgh", "age": "43", "startDate": "20130201", "salary": "75650"},
					{"name": "Jennifer Acosta", "position": "Junior Javascript Developer", "office": "Edinburgh", "age": "43", "startDate": "20130201", "salary": "75650"},
					{"name": "Jennifer Acosta", "position": "Junior Javascript Developer", "office": "Edinburgh", "age": "43", "startDate": "20130201", "salary": "75650"},
					{"name": "Jennifer Acosta", "position": "Junior Javascript Developer", "office": "Edinburgh", "age": "43", "startDate": "20130201", "salary": "75650"},
					{"name": "Jennifer Acosta", "position": "Junior Javascript Developer", "office": "Edinburgh", "age": "43", "startDate": "20130201", "salary": "75650"},
					{"name": "Jennifer Chang", "position": "Regional Director", "office": "Singapore", "age": "28", "startDate": "20101114", "salary": "357650"},
					{"name": "Jonas Alexander", "position": "Developer", "office": "San Francisco", "age": "30", "startDate": "20100714", "salary": "86500"},
					{"name": "Jonas Alexander", "position": "Developer", "office": "San Francisco", "age": "30", "startDate": "20100714", "salary": "86500"},
					{"name": "Jonas Alexander", "position": "Developer", "office": "San Francisco", "age": "30", "startDate": "20100714", "salary": "86500"},
					{"name": "Jonas Alexander", "position": "Developer", "office": "San Francisco", "age": "30", "startDate": "20100714", "salary": "86500"},
					{"name": "Jonas Alexander", "position": "Developer", "office": "San Francisco", "age": "30", "startDate": "20100714", "salary": "86500"},
					{"name": "Jonas Alexander", "position": "Developer", "office": "San Francisco", "age": "30", "startDate": "20100714", "salary": "86500"},
					{"name": "Jonas Alexander", "position": "Developer", "office": "San Francisco", "age": "30", "startDate": "20100714", "salary": "86500"},
					{"name": "Jonas Alexander", "position": "Developer", "office": "San Francisco", "age": "30", "startDate": "20100714", "salary": "86500"},
					{"name": "Lael Greer", "position": "Systems Administrator", "office": "London", "age": "21", "startDate": "20090227", "salary": "103500"},
					{"name": "Lael Greer", "position": "Systems Administrator", "office": "London", "age": "21", "startDate": "20090227", "salary": "103500"},
					{"name": "Lael Greer", "position": "Systems Administrator", "office": "London", "age": "21", "startDate": "20090227", "salary": "103500"},
					{"name": "Lael Greer", "position": "Systems Administrator", "office": "London", "age": "21", "startDate": "20090227", "salary": "103500"},
					{"name": "Lael Greer", "position": "Systems Administrator", "office": "London", "age": "21", "startDate": "20090227", "salary": "103500"},
					{"name": "Lael Greer", "position": "Systems Administrator", "office": "London", "age": "21", "startDate": "20090227", "salary": "103500"},
					{"name": "Lael Greer", "position": "Systems Administrator", "office": "London", "age": "21", "startDate": "20090227", "salary": "103500"},
					{"name": "Lael Greer", "position": "Systems Administrator", "office": "London", "age": "21", "startDate": "20090227", "salary": "103500"},
					{"name": "Martena Mccray", "position": "PostSales support", "office": "Edinburgh", "age": "46", "startDate": "20110309", "salary": "324050"},
					{"name": "Michael Bruce", "position": "Javascript Developer", "office": "Singapore", "age": "29", "startDate": "20110627", "salary": "183000"},
					{"name": "Michael Bruce", "position": "Javascript Developer", "office": "Singapore", "age": "29", "startDate": "20110627", "salary": "183000"},
					{"name": "Michael Bruce", "position": "Javascript Developer", "office": "Singapore", "age": "29", "startDate": "20110627", "salary": "183000"},
					{"name": "Michael Bruce", "position": "Javascript Developer", "office": "Singapore", "age": "29", "startDate": "20110627", "salary": "183000"},
					{"name": "Michael Bruce", "position": "Javascript Developer", "office": "Singapore", "age": "29", "startDate": "20110627", "salary": "183000"},
					{"name": "Michael Bruce", "position": "Javascript Developer", "office": "Singapore", "age": "29", "startDate": "20110627", "salary": "183000"},
					{"name": "Michael Bruce", "position": "Javascript Developer", "office": "Singapore", "age": "29", "startDate": "20110627", "salary": "183000"},
					{"name": "Michael Bruce", "position": "Javascript Developer", "office": "Singapore", "age": "29", "startDate": "20110627", "salary": "183000"},
					{"name": "Michael Silva", "position": "Marketing Designer", "office": "London", "age": "66", "startDate": "20121127", "salary": "198500"},
					{"name": "Michelle House", "position": "Integration Specialist", "office": "Sydney", "age": "37", "startDate": "20110602", "salary": "95400"},
					{"name": "Olivia Liang", "position": "Support Engineer", "office": "Singapore", "age": "64", "startDate": "20110203", "salary": "234500"},
					{"name": "Paul Byrd", "position": "Chief Financial Officer (CFO)", "office": "New York", "age": "64", "startDate": "20100609", "salary": "725000"},
					{"name": "Prescott Bartlett", "position": "Technical Author", "office": "London", "age": "27", "startDate": "20110507", "salary": "145000"},
					{"name": "Quinn Flynn", "position": "Support Lead", "office": "Edinburgh", "age": "22", "startDate": "20130303", "salary": "342000"},
					{"name": "Rhona Davidson", "position": "Integration Specialist", "office": "Tokyo", "age": "55", "startDate": "20101014", "salary": "327900"},
					{"name": "Sakura Yamamoto", "position": "Support Engineer", "office": "Tokyo", "age": "37", "startDate": "20090819", "salary": "139575"},
					{"name": "Serge Baldwin", "position": "Data Coordinator", "office": "Singapore", "age": "64", "startDate": "20120409", "salary": "138575"},
					{"name": "Shad Decker", "position": "Regional Director", "office": "Edinburgh", "age": "51", "startDate": "20081113", "salary": "183000"},
					{"name": "Shad Decker", "position": "Regional Director", "office": "Edinburgh", "age": "51", "startDate": "20081113", "salary": "183000"},
					{"name": "Shad Decker", "position": "Regional Director", "office": "Edinburgh", "age": "51", "startDate": "20081113", "salary": "183000"},
					{"name": "Shad Decker", "position": "Regional Director", "office": "Edinburgh", "age": "51", "startDate": "20081113", "salary": "183000"},
					{"name": "Shad Decker", "position": "Regional Director", "office": "Edinburgh", "age": "51", "startDate": "20081113", "salary": "183000"},
					{"name": "Shad Decker", "position": "Regional Director", "office": "Edinburgh", "age": "51", "startDate": "20081113", "salary": "183000"},
					{"name": "Shad Decker", "position": "Regional Director", "office": "Edinburgh", "age": "51", "startDate": "20081113", "salary": "183000"}
				]
			});
			(function(dataSet){
				var dataView_1 = new cpr.data.DataView("dvData", dataSet);
				dataView_1.parseData({});
				app.register(dataView_1);
			})(dataSet_1);
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsState");
			dataSet_2.parseData({
				"columns": [
					{"name": "name"},
					{"name": "position"},
					{"name": "office"},
					{"name": "age"},
					{"name": "startDate"},
					{"name": "salary"}
				],
				"rows": [
					{"name": "Airi Satou", "position": "Accountant", "office": "Tokyo", "age": "33", "startDate": "20081128", "salary": "162700"},
					{"name": "Angelica Ramos", "position": "Chief Executive Officer (CEO)", "office": "London", "age": "47", "startDate": "20091009", "salary": "1200000"},
					{"name": "Ashton Cox", "position": "Junior Technical Author", "office": "San Francisco", "age": "66", "startDate": "20090112", "salary": "86000"},
					{"name": "Bradley Greer", "position": "Software Engineer", "office": "London", "age": "41", "startDate": "20121013", "salary": "132000"},
					{"name": "Brenden Wagner", "position": "Software Engineer", "office": "San Francisco", "age": "28", "startDate": "20110607", "salary": "206850"},
					{"name": "Brielle Williamson", "position": "Integration Specialist", "office": "New York", "age": "61", "startDate": "20121202", "salary": "372000"},
					{"name": "Bruno Nash", "position": "Software Engineer", "office": "London", "age": "38", "startDate": "20110503", "salary": "163500"},
					{"name": "Caesar Vance", "position": "Pre-Sales Support", "office": "New York", "age": "21", "startDate": "20111212", "salary": "106450"},
					{"name": "Cara Stevens", "position": "Sales Assistant", "office": "New York", "age": "46", "startDate": "20111206", "salary": "145600"},
					{"name": "Cara Stevens", "position": "Sales Assistant", "office": "New York", "age": "46", "startDate": "20111206", "salary": "145600"},
					{"name": "Cara Stevens", "position": "Sales Assistant", "office": "New York", "age": "46", "startDate": "20111206", "salary": "145600"},
					{"name": "Cara Stevens", "position": "Sales Assistant", "office": "New York", "age": "46", "startDate": "20111206", "salary": "145600"},
					{"name": "Cara Stevens", "position": "Sales Assistant", "office": "New York", "age": "46", "startDate": "20111206", "salary": "145600"},
					{"name": "Cara Stevens", "position": "Sales Assistant", "office": "New York", "age": "46", "startDate": "20111206", "salary": "145600"},
					{"name": "Cara Stevens", "position": "Sales Assistant", "office": "New York", "age": "46", "startDate": "20111206", "salary": "145600"},
					{"name": "Cara Stevens", "position": "Sales Assistant", "office": "New York", "age": "46", "startDate": "20111206", "salary": "145600"},
					{"name": "Cedric Kelly", "position": "Senior Javascript Developer", "office": "Edinburgh", "age": "22", "startDate": "20120329", "salary": "433060"},
					{"name": "Charde Marshall", "position": "Regional Director", "office": "San Francisco", "age": "36", "startDate": "20081016", "salary": "470600"},
					{"name": "Colleen Hurst", "position": "Javascript Developer", "office": "San Francisco", "age": "39", "startDate": "20090915", "salary": "205500"},
					{"name": "Dai Rios", "position": "Personnel Lead", "office": "Edinburgh", "age": "35", "startDate": "20120926", "salary": "217500"},
					{"name": "Donna Snider", "position": "Customer Support", "office": "New York", "age": "27", "startDate": "20110125", "salary": "112000"},
					{"name": "Donna Snider", "position": "Customer Support", "office": "New York", "age": "27", "startDate": "20110125", "salary": "112000"},
					{"name": "Donna Snider", "position": "Customer Support", "office": "New York", "age": "27", "startDate": "20110125", "salary": "112000"},
					{"name": "Donna Snider", "position": "Customer Support", "office": "New York", "age": "27", "startDate": "20110125", "salary": "112000"},
					{"name": "Donna Snider", "position": "Customer Support", "office": "New York", "age": "27", "startDate": "20110125", "salary": "112000"},
					{"name": "Donna Snider", "position": "Customer Support", "office": "New York", "age": "27", "startDate": "20110125", "salary": "112000"},
					{"name": "Donna Snider", "position": "Customer Support", "office": "New York", "age": "27", "startDate": "20110125", "salary": "112000"},
					{"name": "Donna Snider", "position": "Customer Support", "office": "New York", "age": "27", "startDate": "20110125", "salary": "112000"},
					{"name": "Doris Wilder", "position": "Sales Assistant", "office": "Sydney", "age": "23", "startDate": "20100920", "salary": "85600"},
					{"name": "Finn Camacho", "position": "Support Engineer", "office": "San Francisco", "age": "47", "startDate": "20090707", "salary": "87500"},
					{"name": "Fiona Green", "position": "Chief Operating Officer (COO)", "office": "San Francisco", "age": "48", "startDate": "20100311", "salary": "850000"},
					{"name": "Garrett Winters", "position": "Accountant", "office": "Tokyo", "age": "63", "startDate": "20110725", "salary": "170750"},
					{"name": "Gavin Cortez", "position": "Team Leader", "office": "San Francisco", "age": "22", "startDate": "20081026", "salary": "235500"},
					{"name": "Gavin Joyce", "position": "Developer", "office": "Edinburgh", "age": "42", "startDate": "20101222", "salary": "92575"},
					{"name": "Gloria Little", "position": "Systems Administrator", "office": "New York", "age": "59", "startDate": "20090410", "salary": "237500"},
					{"name": "Haley Kennedy", "position": "Senior Marketing Designer", "office": "London", "age": "43", "startDate": "20121218", "salary": "313500"},
					{"name": "Hermione Butler", "position": "Regional Director", "office": "London", "age": "47", "startDate": "20110321", "salary": "356250"},
					{"name": "Hermione Butler", "position": "Regional Director", "office": "London", "age": "47", "startDate": "20110321", "salary": "356250"},
					{"name": "Hermione Butler", "position": "Regional Director", "office": "London", "age": "47", "startDate": "20110321", "salary": "356250"},
					{"name": "Hermione Butler", "position": "Regional Director", "office": "London", "age": "47", "startDate": "20110321", "salary": "356250"},
					{"name": "Hermione Butler", "position": "Regional Director", "office": "London", "age": "47", "startDate": "20110321", "salary": "356250"},
					{"name": "Hermione Butler", "position": "Regional Director", "office": "London", "age": "47", "startDate": "20110321", "salary": "356250"},
					{"name": "Hermione Butler", "position": "Regional Director", "office": "London", "age": "47", "startDate": "20110321", "salary": "356250"},
					{"name": "Hermione Butler", "position": "Regional Director", "office": "London", "age": "47", "startDate": "20110321", "salary": "356250"},
					{"name": "Herrod Chandler", "position": "Sales Assistant", "office": "San Francisco", "age": "59", "startDate": "20120806", "salary": "137500"},
					{"name": "Hope Fuentes", "position": "Secretary", "office": "San Francisco", "age": "41", "startDate": "20100212", "salary": "109850"},
					{"name": "Howard Hatfield", "position": "Office Manager", "office": "San Francisco", "age": "51", "startDate": "20081216", "salary": "164500"},
					{"name": "Jackson Bradshaw", "position": "Director", "office": "New York", "age": "65", "startDate": "20080926", "salary": "645750"},
					{"name": "Jena Gaines", "position": "Office Manager", "office": "London", "age": "30", "startDate": "20081219", "salary": "90560"},
					{"name": "Jenette Caldwell", "position": "Development Lead", "office": "New York", "age": "30", "startDate": "20110903", "salary": "345000"},
					{"name": "Jennifer Acosta", "position": "Junior Javascript Developer", "office": "Edinburgh", "age": "43", "startDate": "20130201", "salary": "75650"},
					{"name": "Jennifer Acosta", "position": "Junior Javascript Developer", "office": "Edinburgh", "age": "43", "startDate": "20130201", "salary": "75650"},
					{"name": "Jennifer Acosta", "position": "Junior Javascript Developer", "office": "Edinburgh", "age": "43", "startDate": "20130201", "salary": "75650"},
					{"name": "Jennifer Acosta", "position": "Junior Javascript Developer", "office": "Edinburgh", "age": "43", "startDate": "20130201", "salary": "75650"},
					{"name": "Jennifer Acosta", "position": "Junior Javascript Developer", "office": "Edinburgh", "age": "43", "startDate": "20130201", "salary": "75650"},
					{"name": "Jennifer Acosta", "position": "Junior Javascript Developer", "office": "Edinburgh", "age": "43", "startDate": "20130201", "salary": "75650"},
					{"name": "Jennifer Acosta", "position": "Junior Javascript Developer", "office": "Edinburgh", "age": "43", "startDate": "20130201", "salary": "75650"},
					{"name": "Jennifer Acosta", "position": "Junior Javascript Developer", "office": "Edinburgh", "age": "43", "startDate": "20130201", "salary": "75650"},
					{"name": "Jennifer Chang", "position": "Regional Director", "office": "Singapore", "age": "28", "startDate": "20101114", "salary": "357650"},
					{"name": "Jonas Alexander", "position": "Developer", "office": "San Francisco", "age": "30", "startDate": "20100714", "salary": "86500"},
					{"name": "Jonas Alexander", "position": "Developer", "office": "San Francisco", "age": "30", "startDate": "20100714", "salary": "86500"},
					{"name": "Jonas Alexander", "position": "Developer", "office": "San Francisco", "age": "30", "startDate": "20100714", "salary": "86500"},
					{"name": "Jonas Alexander", "position": "Developer", "office": "San Francisco", "age": "30", "startDate": "20100714", "salary": "86500"},
					{"name": "Jonas Alexander", "position": "Developer", "office": "San Francisco", "age": "30", "startDate": "20100714", "salary": "86500"},
					{"name": "Jonas Alexander", "position": "Developer", "office": "San Francisco", "age": "30", "startDate": "20100714", "salary": "86500"},
					{"name": "Jonas Alexander", "position": "Developer", "office": "San Francisco", "age": "30", "startDate": "20100714", "salary": "86500"},
					{"name": "Jonas Alexander", "position": "Developer", "office": "San Francisco", "age": "30", "startDate": "20100714", "salary": "86500"},
					{"name": "Lael Greer", "position": "Systems Administrator", "office": "London", "age": "21", "startDate": "20090227", "salary": "103500"},
					{"name": "Lael Greer", "position": "Systems Administrator", "office": "London", "age": "21", "startDate": "20090227", "salary": "103500"},
					{"name": "Lael Greer", "position": "Systems Administrator", "office": "London", "age": "21", "startDate": "20090227", "salary": "103500"},
					{"name": "Lael Greer", "position": "Systems Administrator", "office": "London", "age": "21", "startDate": "20090227", "salary": "103500"},
					{"name": "Lael Greer", "position": "Systems Administrator", "office": "London", "age": "21", "startDate": "20090227", "salary": "103500"},
					{"name": "Lael Greer", "position": "Systems Administrator", "office": "London", "age": "21", "startDate": "20090227", "salary": "103500"},
					{"name": "Lael Greer", "position": "Systems Administrator", "office": "London", "age": "21", "startDate": "20090227", "salary": "103500"},
					{"name": "Lael Greer", "position": "Systems Administrator", "office": "London", "age": "21", "startDate": "20090227", "salary": "103500"},
					{"name": "Martena Mccray", "position": "PostSales support", "office": "Edinburgh", "age": "46", "startDate": "20110309", "salary": "324050"},
					{"name": "Michael Bruce", "position": "Javascript Developer", "office": "Singapore", "age": "29", "startDate": "20110627", "salary": "183000"},
					{"name": "Michael Bruce", "position": "Javascript Developer", "office": "Singapore", "age": "29", "startDate": "20110627", "salary": "183000"},
					{"name": "Michael Bruce", "position": "Javascript Developer", "office": "Singapore", "age": "29", "startDate": "20110627", "salary": "183000"},
					{"name": "Michael Bruce", "position": "Javascript Developer", "office": "Singapore", "age": "29", "startDate": "20110627", "salary": "183000"},
					{"name": "Michael Bruce", "position": "Javascript Developer", "office": "Singapore", "age": "29", "startDate": "20110627", "salary": "183000"},
					{"name": "Michael Bruce", "position": "Javascript Developer", "office": "Singapore", "age": "29", "startDate": "20110627", "salary": "183000"},
					{"name": "Michael Bruce", "position": "Javascript Developer", "office": "Singapore", "age": "29", "startDate": "20110627", "salary": "183000"},
					{"name": "Michael Bruce", "position": "Javascript Developer", "office": "Singapore", "age": "29", "startDate": "20110627", "salary": "183000"},
					{"name": "Michael Silva", "position": "Marketing Designer", "office": "London", "age": "66", "startDate": "20121127", "salary": "198500"},
					{"name": "Michelle House", "position": "Integration Specialist", "office": "Sydney", "age": "37", "startDate": "20110602", "salary": "95400"},
					{"name": "Olivia Liang", "position": "Support Engineer", "office": "Singapore", "age": "64", "startDate": "20110203", "salary": "234500"},
					{"name": "Paul Byrd", "position": "Chief Financial Officer (CFO)", "office": "New York", "age": "64", "startDate": "20100609", "salary": "725000"},
					{"name": "Prescott Bartlett", "position": "Technical Author", "office": "London", "age": "27", "startDate": "20110507", "salary": "145000"},
					{"name": "Quinn Flynn", "position": "Support Lead", "office": "Edinburgh", "age": "22", "startDate": "20130303", "salary": "342000"},
					{"name": "Rhona Davidson", "position": "Integration Specialist", "office": "Tokyo", "age": "55", "startDate": "20101014", "salary": "327900"},
					{"name": "Sakura Yamamoto", "position": "Support Engineer", "office": "Tokyo", "age": "37", "startDate": "20090819", "salary": "139575"},
					{"name": "Serge Baldwin", "position": "Data Coordinator", "office": "Singapore", "age": "64", "startDate": "20120409", "salary": "138575"},
					{"name": "Shad Decker", "position": "Regional Director", "office": "Edinburgh", "age": "51", "startDate": "20081113", "salary": "183000"},
					{"name": "Shad Decker", "position": "Regional Director", "office": "Edinburgh", "age": "51", "startDate": "20081113", "salary": "183000"},
					{"name": "Shad Decker", "position": "Regional Director", "office": "Edinburgh", "age": "51", "startDate": "20081113", "salary": "183000"},
					{"name": "Shad Decker", "position": "Regional Director", "office": "Edinburgh", "age": "51", "startDate": "20081113", "salary": "183000"},
					{"name": "Shad Decker", "position": "Regional Director", "office": "Edinburgh", "age": "51", "startDate": "20081113", "salary": "183000"},
					{"name": "Shad Decker", "position": "Regional Director", "office": "Edinburgh", "age": "51", "startDate": "20081113", "salary": "183000"},
					{"name": "Shad Decker", "position": "Regional Director", "office": "Edinburgh", "age": "51", "startDate": "20081113", "salary": "183000"}
				]
			});
			app.register(dataSet_2);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 850px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 849px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_1.spacing = 20;
			verticalLayout_1.leftMargin = 20;
			verticalLayout_1.rightMargin = 20;
			verticalLayout_1.topMargin = 20;
			verticalLayout_1.bottomMargin = 20;
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container();
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.setColumns(["1fr", "30px"]);
			formLayout_1.setColumnAutoSizing(1, true);
			formLayout_1.setRows(["1fr"]);
			group_1.setLayout(formLayout_1);
			(function(container){
				var output_1 = new cpr.controls.Output();
				output_1.value = "Grids";
				output_1.style.setClasses(["h3"]);
				container.addChild(output_1, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var userDefinedControl_1 = new udc.template.Breadcrumb("breadcrumb1");
				userDefinedControl_1.values = "DESIGN GUIDE,GRIDS";
				container.addChild(userDefinedControl_1, {
					"colIndex": 1,
					"rowIndex": 0
				});
			})(group_1);
			container.addChild(group_1, {
				"autoSize": "none",
				"width": "984px",
				"height": "26px"
			});
			
			var output_2 = new cpr.controls.Output();
			output_2.value = "Table Default";
			output_2.style.setClasses(["h6"]);
			container.addChild(output_2, {
				"autoSize": "none",
				"width": "984px",
				"height": "25px"
			});
			
			var group_2 = new cpr.controls.Container();
			group_2.style.setClasses(["card", "card-bordered"]);
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_1);
			(function(container){
				var grid_1 = new cpr.controls.Grid("grd1");
				grid_1.readOnly = true;
				grid_1.init({
					"dataSet": app.lookup("dsMst"),
					"autoFit": "2, 3, 4, 5, 6, 7",
					"columns": [
						{"width": "35px"},
						{"width": "50px"},
						{"width": "120px"},
						{"width": "120px"},
						{"width": "120px"},
						{"width": "80px"},
						{"width": "110px"},
						{"width": "100px"}
					],
					"header": {
						"rows": [{"height": "35px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.filterable = false;
									cell.sortable = false;
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "#";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.targetColumnName = "name";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Name";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.targetColumnName = "position";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Position";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.targetColumnName = "office";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Office";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.targetColumnName = "age";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Age";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.targetColumnName = "startDate";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Start date";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.targetColumnName = "salary";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Salary";
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "32px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnType = "rowindex";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "name";
									cell.control = (function(){
										var inputBox_1 = new cpr.controls.InputBox();
										inputBox_1.bind("value").toDataColumn("name");
										return inputBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "position";
									cell.control = (function(){
										var inputBox_2 = new cpr.controls.InputBox();
										inputBox_2.bind("value").toDataColumn("position");
										return inputBox_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "office";
									cell.control = (function(){
										var inputBox_3 = new cpr.controls.InputBox();
										inputBox_3.bind("value").toDataColumn("office");
										return inputBox_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "age";
									cell.control = (function(){
										var numberEditor_1 = new cpr.controls.NumberEditor();
										numberEditor_1.bind("value").toDataColumn("age");
										return numberEditor_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "startDate";
									cell.control = (function(){
										var dateInput_1 = new cpr.controls.DateInput();
										dateInput_1.bind("value").toDataColumn("startDate");
										return dateInput_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "salary";
									cell.control = (function(){
										var numberEditor_2 = new cpr.controls.NumberEditor();
										numberEditor_2.bind("value").toDataColumn("salary");
										return numberEditor_2;
									})();
								}
							}
						]
					}
				});
				container.addChild(grid_1, {
					"top": "20px",
					"right": "20px",
					"bottom": "20px",
					"left": "20px"
				});
			})(group_2);
			container.addChild(group_2, {
				"autoSize": "none",
				"width": "984px",
				"height": "350px"
			});
			
			var output_3 = new cpr.controls.Output();
			output_3.value = "Table Default";
			output_3.style.setClasses(["h6"]);
			container.addChild(output_3, {
				"autoSize": "none",
				"width": "984px",
				"height": "25px"
			});
			
			var group_3 = new cpr.controls.Container();
			group_3.style.setClasses(["card", "card-bordered"]);
			// Layout
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_2.spacing = 10;
			verticalLayout_2.leftMargin = 20;
			verticalLayout_2.rightMargin = 20;
			verticalLayout_2.topMargin = 20;
			verticalLayout_2.bottomMargin = 20;
			group_3.setLayout(verticalLayout_2);
			(function(container){
				var output_4 = new cpr.controls.Output();
				output_4.value = "Table Striped Rows";
				output_4.style.setClasses(["card-subtitle", "fw-bold"]);
				container.addChild(output_4, {
					"width": "100px",
					"height": "25px"
				});
				var grid_2 = new cpr.controls.Grid("grd10");
				grid_2.readOnly = true;
				grid_2.init({
					"dataSet": app.lookup("dsMst"),
					"autoFit": "2, 3, 4, 5, 6, 7",
					"columns": [
						{"width": "35px"},
						{"width": "50px"},
						{"width": "120px"},
						{"width": "120px"},
						{"width": "120px"},
						{"width": "80px"},
						{"width": "110px"},
						{"width": "100px"}
					],
					"header": {
						"rows": [{"height": "35px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.filterable = false;
									cell.sortable = false;
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "#";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.targetColumnName = "name";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Name";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.targetColumnName = "position";
									cell.filterable = true;
									cell.sortable = false;
									cell.text = "Position";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.targetColumnName = "office";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Office";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.targetColumnName = "age";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Age";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.targetColumnName = "startDate";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Start date";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.targetColumnName = "salary";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Salary";
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "32px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnType = "rowindex";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "name";
									cell.control = (function(){
										var inputBox_4 = new cpr.controls.InputBox("ipb25");
										inputBox_4.bind("value").toDataColumn("name");
										return inputBox_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "position";
									cell.control = (function(){
										var inputBox_5 = new cpr.controls.InputBox("ipb26");
										inputBox_5.bind("value").toDataColumn("position");
										return inputBox_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "office";
									cell.control = (function(){
										var inputBox_6 = new cpr.controls.InputBox("ipb27");
										inputBox_6.bind("value").toDataColumn("office");
										return inputBox_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "age";
									cell.control = (function(){
										var numberEditor_3 = new cpr.controls.NumberEditor("nbe17");
										numberEditor_3.bind("value").toDataColumn("age");
										return numberEditor_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "startDate";
									cell.control = (function(){
										var dateInput_2 = new cpr.controls.DateInput("dti9");
										dateInput_2.bind("value").toDataColumn("startDate");
										return dateInput_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "salary";
									cell.control = (function(){
										var numberEditor_4 = new cpr.controls.NumberEditor("nbe18");
										numberEditor_4.bind("value").toDataColumn("salary");
										return numberEditor_4;
									})();
								}
							}
						]
					}
				});
				grid_2.style.setClasses(["thead-dark"]);
				container.addChild(grid_2, {
					"width": "942px",
					"height": "308px"
				});
				var output_5 = new cpr.controls.Output();
				output_5.value = "Table Striped Rows";
				output_5.style.setClasses(["card-subtitle", "fw-bold"]);
				container.addChild(output_5, {
					"width": "100px",
					"height": "25px"
				});
				var grid_3 = new cpr.controls.Grid("grd7");
				grid_3.readOnly = true;
				grid_3.init({
					"dataSet": app.lookup("dsMst"),
					"autoFit": "2, 3, 4, 5, 6, 7",
					"columns": [
						{"width": "35px"},
						{"width": "50px"},
						{"width": "120px"},
						{"width": "120px"},
						{"width": "120px"},
						{"width": "80px"},
						{"width": "110px"},
						{"width": "100px"}
					],
					"header": {
						"rows": [{"height": "35px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.filterable = false;
									cell.sortable = false;
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "#";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.targetColumnName = "name";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Name";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.targetColumnName = "position";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Position";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.targetColumnName = "office";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Office";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.targetColumnName = "age";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Age";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.targetColumnName = "startDate";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Start date";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.targetColumnName = "salary";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Salary";
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "32px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnType = "rowindex";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "name";
									cell.control = (function(){
										var inputBox_7 = new cpr.controls.InputBox("ipb16");
										inputBox_7.bind("value").toDataColumn("name");
										return inputBox_7;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "position";
									cell.control = (function(){
										var inputBox_8 = new cpr.controls.InputBox("ipb17");
										inputBox_8.bind("value").toDataColumn("position");
										return inputBox_8;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "office";
									cell.control = (function(){
										var inputBox_9 = new cpr.controls.InputBox("ipb18");
										inputBox_9.bind("value").toDataColumn("office");
										return inputBox_9;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "age";
									cell.control = (function(){
										var numberEditor_5 = new cpr.controls.NumberEditor("nbe11");
										numberEditor_5.bind("value").toDataColumn("age");
										return numberEditor_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "startDate";
									cell.control = (function(){
										var dateInput_3 = new cpr.controls.DateInput("dti6");
										dateInput_3.bind("value").toDataColumn("startDate");
										return dateInput_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "salary";
									cell.control = (function(){
										var numberEditor_6 = new cpr.controls.NumberEditor("nbe12");
										numberEditor_6.bind("value").toDataColumn("salary");
										return numberEditor_6;
									})();
								}
							}
						]
					}
				});
				grid_3.style.setClasses(["table-striped"]);
				container.addChild(grid_3, {
					"width": "942px",
					"height": "308px"
				});
				var output_6 = new cpr.controls.Output();
				output_6.value = "Borderless Table";
				output_6.style.setClasses(["card-subtitle", "fw-bold"]);
				container.addChild(output_6, {
					"width": "100px",
					"height": "25px"
				});
				var grid_4 = new cpr.controls.Grid("grd8");
				grid_4.readOnly = true;
				grid_4.init({
					"dataSet": app.lookup("dsMst"),
					"autoFit": "2, 3, 4, 5, 6, 7",
					"columns": [
						{"width": "35px"},
						{"width": "50px"},
						{"width": "120px"},
						{"width": "120px"},
						{"width": "120px"},
						{"width": "80px"},
						{"width": "110px"},
						{"width": "100px"}
					],
					"header": {
						"rows": [{"height": "35px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.filterable = false;
									cell.sortable = false;
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "#";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.targetColumnName = "name";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Name";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.targetColumnName = "position";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Position";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.targetColumnName = "office";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Office";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.targetColumnName = "age";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Age";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.targetColumnName = "startDate";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Start date";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.targetColumnName = "salary";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Salary";
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "32px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnType = "rowindex";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "name";
									cell.control = (function(){
										var inputBox_10 = new cpr.controls.InputBox("ipb19");
										inputBox_10.bind("value").toDataColumn("name");
										return inputBox_10;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "position";
									cell.control = (function(){
										var inputBox_11 = new cpr.controls.InputBox("ipb20");
										inputBox_11.bind("value").toDataColumn("position");
										return inputBox_11;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "office";
									cell.control = (function(){
										var inputBox_12 = new cpr.controls.InputBox("ipb21");
										inputBox_12.bind("value").toDataColumn("office");
										return inputBox_12;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "age";
									cell.control = (function(){
										var numberEditor_7 = new cpr.controls.NumberEditor("nbe13");
										numberEditor_7.bind("value").toDataColumn("age");
										return numberEditor_7;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "startDate";
									cell.control = (function(){
										var dateInput_4 = new cpr.controls.DateInput("dti7");
										dateInput_4.bind("value").toDataColumn("startDate");
										return dateInput_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "salary";
									cell.control = (function(){
										var numberEditor_8 = new cpr.controls.NumberEditor("nbe14");
										numberEditor_8.bind("value").toDataColumn("salary");
										return numberEditor_8;
									})();
								}
							}
						]
					}
				});
				grid_4.style.setClasses(["table-borderless"]);
				container.addChild(grid_4, {
					"width": "942px",
					"height": "308px"
				});
				var output_7 = new cpr.controls.Output();
				output_7.value = "Hoverable Row";
				output_7.style.setClasses(["card-subtitle", "fw-bold"]);
				container.addChild(output_7, {
					"width": "100px",
					"height": "25px"
				});
				var grid_5 = new cpr.controls.Grid("grd9");
				grid_5.readOnly = true;
				grid_5.init({
					"dataSet": app.lookup("dsMst"),
					"autoFit": "2, 3, 4, 5, 6, 7",
					"columns": [
						{"width": "35px"},
						{"width": "50px"},
						{"width": "120px"},
						{"width": "120px"},
						{"width": "120px"},
						{"width": "80px"},
						{"width": "110px"},
						{"width": "100px"}
					],
					"header": {
						"rows": [{"height": "35px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.filterable = false;
									cell.sortable = false;
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "#";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.targetColumnName = "name";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Name";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.targetColumnName = "position";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Position";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.targetColumnName = "office";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Office";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.targetColumnName = "age";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Age";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.targetColumnName = "startDate";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Start date";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.targetColumnName = "salary";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Salary";
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "32px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnType = "rowindex";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "name";
									cell.control = (function(){
										var inputBox_13 = new cpr.controls.InputBox("ipb22");
										inputBox_13.bind("value").toDataColumn("name");
										return inputBox_13;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "position";
									cell.control = (function(){
										var inputBox_14 = new cpr.controls.InputBox("ipb23");
										inputBox_14.bind("value").toDataColumn("position");
										return inputBox_14;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "office";
									cell.control = (function(){
										var inputBox_15 = new cpr.controls.InputBox("ipb24");
										inputBox_15.bind("value").toDataColumn("office");
										return inputBox_15;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "age";
									cell.control = (function(){
										var numberEditor_9 = new cpr.controls.NumberEditor("nbe15");
										numberEditor_9.bind("value").toDataColumn("age");
										return numberEditor_9;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "startDate";
									cell.control = (function(){
										var dateInput_5 = new cpr.controls.DateInput("dti8");
										dateInput_5.bind("value").toDataColumn("startDate");
										return dateInput_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "salary";
									cell.control = (function(){
										var numberEditor_10 = new cpr.controls.NumberEditor("nbe16");
										numberEditor_10.bind("value").toDataColumn("salary");
										return numberEditor_10;
									})();
								}
							}
						]
					}
				});
				grid_5.style.setClasses(["table-hoverable"]);
				container.addChild(grid_5, {
					"width": "942px",
					"height": "308px"
				});
			})(group_3);
			container.addChild(group_3, {
				"autoSize": "height",
				"width": "984px",
				"height": "1091px"
			});
			
			var output_8 = new cpr.controls.Output();
			output_8.value = "Table Selection Type - Column";
			output_8.style.setClasses(["h6"]);
			container.addChild(output_8, {
				"autoSize": "none",
				"width": "984px",
				"height": "25px"
			});
			
			var group_4 = new cpr.controls.Container();
			group_4.style.setClasses(["card", "card-bordered"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_4.setLayout(xYLayout_2);
			(function(container){
				var grid_6 = new cpr.controls.Grid("grd3");
				grid_6.readOnly = true;
				grid_6.init({
					"dataSet": app.lookup("dsMst"),
					"selectionUnit": "column",
					"autoFit": "2, 3, 4, 5, 6, 7",
					"columns": [
						{"width": "35px"},
						{"width": "50px"},
						{"width": "120px"},
						{"width": "120px"},
						{"width": "120px"},
						{"width": "80px"},
						{"width": "110px"},
						{"width": "100px"}
					],
					"header": {
						"rows": [{"height": "35px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.filterable = false;
									cell.sortable = false;
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "#";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.targetColumnName = "name";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Name";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.targetColumnName = "position";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Position";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.targetColumnName = "office";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Office";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.targetColumnName = "age";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Age";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.targetColumnName = "startDate";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Start date";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.targetColumnName = "salary";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Salary";
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "32px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnType = "rowindex";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "name";
									cell.control = (function(){
										var inputBox_16 = new cpr.controls.InputBox("ipb4");
										inputBox_16.bind("value").toDataColumn("name");
										return inputBox_16;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "position";
									cell.control = (function(){
										var inputBox_17 = new cpr.controls.InputBox("ipb5");
										inputBox_17.bind("value").toDataColumn("position");
										return inputBox_17;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "office";
									cell.control = (function(){
										var inputBox_18 = new cpr.controls.InputBox("ipb6");
										inputBox_18.bind("value").toDataColumn("office");
										return inputBox_18;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "age";
									cell.control = (function(){
										var numberEditor_11 = new cpr.controls.NumberEditor("nbe3");
										numberEditor_11.bind("value").toDataColumn("age");
										return numberEditor_11;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "startDate";
									cell.control = (function(){
										var dateInput_6 = new cpr.controls.DateInput("dti2");
										dateInput_6.bind("value").toDataColumn("startDate");
										return dateInput_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "salary";
									cell.control = (function(){
										var numberEditor_12 = new cpr.controls.NumberEditor("nbe4");
										numberEditor_12.bind("value").toDataColumn("salary");
										return numberEditor_12;
									})();
								}
							}
						]
					}
				});
				container.addChild(grid_6, {
					"top": "20px",
					"right": "20px",
					"bottom": "20px",
					"left": "20px"
				});
			})(group_4);
			container.addChild(group_4, {
				"autoSize": "none",
				"width": "984px",
				"height": "350px"
			});
			
			var output_9 = new cpr.controls.Output();
			output_9.value = "Table Selection Type - Cell";
			output_9.style.setClasses(["h6"]);
			container.addChild(output_9, {
				"autoSize": "none",
				"width": "984px",
				"height": "25px"
			});
			
			var group_5 = new cpr.controls.Container();
			group_5.style.setClasses(["card", "card-bordered"]);
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_5.setLayout(xYLayout_3);
			(function(container){
				var grid_7 = new cpr.controls.Grid("grd4");
				grid_7.readOnly = true;
				grid_7.init({
					"dataSet": app.lookup("dsMst"),
					"selectionUnit": "cell",
					"autoFit": "2, 3, 4, 5, 6, 7",
					"columns": [
						{"width": "35px"},
						{"width": "50px"},
						{"width": "120px"},
						{"width": "120px"},
						{"width": "120px"},
						{"width": "80px"},
						{"width": "110px"},
						{"width": "100px"}
					],
					"header": {
						"rows": [{"height": "35px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.filterable = false;
									cell.sortable = false;
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "#";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.targetColumnName = "name";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Name";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.targetColumnName = "position";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Position";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.targetColumnName = "office";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Office";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.targetColumnName = "age";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Age";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.targetColumnName = "startDate";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Start date";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.targetColumnName = "salary";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Salary";
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "32px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnType = "rowindex";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "name";
									cell.control = (function(){
										var inputBox_19 = new cpr.controls.InputBox("ipb7");
										inputBox_19.bind("value").toDataColumn("name");
										return inputBox_19;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "position";
									cell.control = (function(){
										var inputBox_20 = new cpr.controls.InputBox("ipb8");
										inputBox_20.bind("value").toDataColumn("position");
										return inputBox_20;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "office";
									cell.control = (function(){
										var inputBox_21 = new cpr.controls.InputBox("ipb9");
										inputBox_21.bind("value").toDataColumn("office");
										return inputBox_21;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "age";
									cell.control = (function(){
										var numberEditor_13 = new cpr.controls.NumberEditor("nbe5");
										numberEditor_13.bind("value").toDataColumn("age");
										return numberEditor_13;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "startDate";
									cell.control = (function(){
										var dateInput_7 = new cpr.controls.DateInput("dti3");
										dateInput_7.bind("value").toDataColumn("startDate");
										return dateInput_7;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "salary";
									cell.control = (function(){
										var numberEditor_14 = new cpr.controls.NumberEditor("nbe6");
										numberEditor_14.bind("value").toDataColumn("salary");
										return numberEditor_14;
									})();
								}
							}
						]
					}
				});
				container.addChild(grid_7, {
					"top": "20px",
					"right": "20px",
					"bottom": "20px",
					"left": "20px"
				});
			})(group_5);
			container.addChild(group_5, {
				"autoSize": "none",
				"width": "984px",
				"height": "350px"
			});
			
			var output_10 = new cpr.controls.Output();
			output_10.value = "Table Row States";
			output_10.style.setClasses(["h6"]);
			container.addChild(output_10, {
				"autoSize": "none",
				"width": "984px",
				"height": "25px"
			});
			
			var group_6 = new cpr.controls.Container();
			group_6.style.setClasses(["card", "card-bordered"]);
			// Layout
			var xYLayout_4 = new cpr.controls.layouts.XYLayout();
			group_6.setLayout(xYLayout_4);
			(function(container){
				var grid_8 = new cpr.controls.Grid("grd2");
				grid_8.init({
					"dataSet": app.lookup("dsState"),
					"autoFit": "3, 4, 5, 6, 7, 8",
					"columns": [
						{"width": "35px"},
						{"width": "50px"},
						{"width": "100px"},
						{"width": "120px"},
						{"width": "120px"},
						{"width": "120px"},
						{"width": "80px"},
						{"width": "110px"},
						{"width": "100px"}
					],
					"header": {
						"rows": [{"height": "35px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.filterable = false;
									cell.sortable = false;
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "#";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.targetColumnName = "name";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Name";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.targetColumnName = "position";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Position";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.targetColumnName = "office";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Office";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.targetColumnName = "age";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Age";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.targetColumnName = "startDate";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Start date";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.targetColumnName = "salary";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Salary";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.text = "State";
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "32px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnType = "rowindex";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "name";
									cell.control = (function(){
										var inputBox_22 = new cpr.controls.InputBox("ipb1");
										inputBox_22.bind("value").toDataColumn("name");
										return inputBox_22;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "position";
									cell.control = (function(){
										var inputBox_23 = new cpr.controls.InputBox("ipb2");
										inputBox_23.bind("value").toDataColumn("position");
										return inputBox_23;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "office";
									cell.control = (function(){
										var inputBox_24 = new cpr.controls.InputBox("ipb3");
										inputBox_24.bind("value").toDataColumn("office");
										return inputBox_24;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "age";
									cell.control = (function(){
										var numberEditor_15 = new cpr.controls.NumberEditor("nbe1");
										numberEditor_15.bind("value").toDataColumn("age");
										return numberEditor_15;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "startDate";
									cell.control = (function(){
										var dateInput_8 = new cpr.controls.DateInput("dti1");
										dateInput_8.bind("value").toDataColumn("startDate");
										return dateInput_8;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "salary";
									cell.control = (function(){
										var numberEditor_16 = new cpr.controls.NumberEditor("nbe2");
										numberEditor_16.bind("value").toDataColumn("salary");
										return numberEditor_16;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.control = (function(){
										var output_11 = new cpr.controls.Output();
										output_11.style.setClasses(["text-center"]);
										output_11.bind("value").toExpression([
											"switch(getStateString()){",
											"\tcase \"I\" : \"Inserted\"",
											"\tcase \"U\" : \"Upated\"",
											"\tcase \"D\" : \"Deleted\"",
											"\tdefault : \"Unchanaged\"",
											"}"
										].join("\n"));
										return output_11;
									})();
								}
							}
						]
					}
				});
				container.addChild(grid_8, {
					"top": "20px",
					"right": "20px",
					"bottom": "20px",
					"left": "20px"
				});
			})(group_6);
			container.addChild(group_6, {
				"autoSize": "none",
				"width": "984px",
				"height": "350px"
			});
			
			var output_12 = new cpr.controls.Output();
			output_12.value = "Table Column Resizable & Column Movable";
			output_12.style.setClasses(["h6"]);
			container.addChild(output_12, {
				"autoSize": "none",
				"width": "984px",
				"height": "25px"
			});
			
			var group_7 = new cpr.controls.Container();
			group_7.style.setClasses(["card", "card-bordered"]);
			// Layout
			var xYLayout_5 = new cpr.controls.layouts.XYLayout();
			group_7.setLayout(xYLayout_5);
			(function(container){
				var grid_9 = new cpr.controls.Grid("grd5");
				grid_9.readOnly = true;
				grid_9.init({
					"dataSet": app.lookup("dsMst"),
					"columnMovable": true,
					"autoFit": "2, 3, 4, 5, 6, 7",
					"resizableColumns": "all",
					"columns": [
						{"width": "35px"},
						{"width": "50px"},
						{"width": "120px"},
						{"width": "120px"},
						{"width": "120px"},
						{"width": "80px"},
						{"width": "110px"},
						{"width": "100px"}
					],
					"header": {
						"rows": [{"height": "35px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.filterable = false;
									cell.sortable = false;
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "#";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.targetColumnName = "name";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Name";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.targetColumnName = "position";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Position";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.targetColumnName = "office";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Office";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.targetColumnName = "age";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Age";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.targetColumnName = "startDate";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Start date";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.targetColumnName = "salary";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Salary";
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "32px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnType = "rowindex";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "name";
									cell.control = (function(){
										var inputBox_25 = new cpr.controls.InputBox("ipb10");
										inputBox_25.bind("value").toDataColumn("name");
										return inputBox_25;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "position";
									cell.control = (function(){
										var inputBox_26 = new cpr.controls.InputBox("ipb11");
										inputBox_26.bind("value").toDataColumn("position");
										return inputBox_26;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "office";
									cell.control = (function(){
										var inputBox_27 = new cpr.controls.InputBox("ipb12");
										inputBox_27.bind("value").toDataColumn("office");
										return inputBox_27;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "age";
									cell.control = (function(){
										var numberEditor_17 = new cpr.controls.NumberEditor("nbe7");
										numberEditor_17.bind("value").toDataColumn("age");
										return numberEditor_17;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "startDate";
									cell.control = (function(){
										var dateInput_9 = new cpr.controls.DateInput("dti4");
										dateInput_9.bind("value").toDataColumn("startDate");
										return dateInput_9;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "salary";
									cell.control = (function(){
										var numberEditor_18 = new cpr.controls.NumberEditor("nbe8");
										numberEditor_18.bind("value").toDataColumn("salary");
										return numberEditor_18;
									})();
								}
							}
						]
					}
				});
				container.addChild(grid_9, {
					"top": "20px",
					"right": "20px",
					"bottom": "20px",
					"left": "20px"
				});
			})(group_7);
			container.addChild(group_7, {
				"autoSize": "none",
				"width": "984px",
				"height": "350px"
			});
			
			var output_13 = new cpr.controls.Output();
			output_13.value = "Table Sort & Filter";
			output_13.style.setClasses(["h6"]);
			container.addChild(output_13, {
				"autoSize": "none",
				"width": "984px",
				"height": "25px"
			});
			
			var group_8 = new cpr.controls.Container();
			group_8.style.setClasses(["card", "card-bordered"]);
			// Layout
			var xYLayout_6 = new cpr.controls.layouts.XYLayout();
			group_8.setLayout(xYLayout_6);
			(function(container){
				var grid_10 = new cpr.controls.Grid("grd6");
				grid_10.readOnly = true;
				grid_10.init({
					"dataSet": app.lookup("dvData"),
					"columnMovable": true,
					"autoFit": "2, 3, 4, 5, 6, 7",
					"resizableColumns": "all",
					"columns": [
						{"width": "35px"},
						{"width": "50px"},
						{"width": "120px"},
						{"width": "120px"},
						{"width": "120px"},
						{"width": "80px"},
						{"width": "110px"},
						{"width": "100px"}
					],
					"header": {
						"rows": [{"height": "35px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.filterable = false;
									cell.sortable = false;
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "#";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.targetColumnName = "name";
									cell.filterable = false;
									cell.sortColumnName = "name";
									cell.text = "Name";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.targetColumnName = "position";
									cell.filterable = false;
									cell.sortable = true;
									cell.text = "Position";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.targetColumnName = "office";
									cell.filterable = true;
									cell.sortable = false;
									cell.text = "Office";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.targetColumnName = "age";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Age";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.targetColumnName = "startDate";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Start date";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.targetColumnName = "salary";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Salary";
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "32px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnType = "rowindex";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "name";
									cell.control = (function(){
										var inputBox_28 = new cpr.controls.InputBox("ipb13");
										inputBox_28.bind("value").toDataColumn("name");
										return inputBox_28;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "position";
									cell.control = (function(){
										var inputBox_29 = new cpr.controls.InputBox("ipb14");
										inputBox_29.bind("value").toDataColumn("position");
										return inputBox_29;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "office";
									cell.control = (function(){
										var inputBox_30 = new cpr.controls.InputBox("ipb15");
										inputBox_30.bind("value").toDataColumn("office");
										return inputBox_30;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "age";
									cell.control = (function(){
										var numberEditor_19 = new cpr.controls.NumberEditor("nbe9");
										numberEditor_19.bind("value").toDataColumn("age");
										return numberEditor_19;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "startDate";
									cell.control = (function(){
										var dateInput_10 = new cpr.controls.DateInput("dti5");
										dateInput_10.bind("value").toDataColumn("startDate");
										return dateInput_10;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "salary";
									cell.control = (function(){
										var numberEditor_20 = new cpr.controls.NumberEditor("nbe10");
										numberEditor_20.bind("value").toDataColumn("salary");
										return numberEditor_20;
									})();
								}
							}
						]
					}
				});
				container.addChild(grid_10, {
					"top": "20px",
					"right": "20px",
					"bottom": "20px",
					"left": "20px"
				});
			})(group_8);
			container.addChild(group_8, {
				"autoSize": "none",
				"width": "984px",
				"height": "350px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "Grid";
	cpr.core.Platform.INSTANCE.register(app);
})();
