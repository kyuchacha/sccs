/*
 * App URI: app/exam/layout/pattern/tamplateTabs
 * Source Location: app/exam/layout/pattern/tamplateTabs.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/exam/layout/pattern/tamplateTabs", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			//공통 모듈 사용
			var util = createCommonUtil();
			
			
			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				util.Submit.send(app, "subOnLoad", function(pbSuccess) {
					if (pbSuccess) {
						util.ComUdcBtn.dispatchEvent(app, "btnSearch", "click");
						util.ComUdcBtn.dispatchEvent(app, "btnSearch2", "click");
						util.ComUdcBtn.dispatchEvent(app, "btnSearch3", "click");
					}
				});
			}
			
			
			/*
			 * 사용자 정의 컨트롤에서 search 이벤트 발생 시 호출.
			 * 조회버튼 클릭시 이벤트
			 */
			function onBtnSearch3Search(/* cpr.events.CUIEvent */ e){
				/** 
				 * @type udc.com.comBtnSearch
				 */
				var btnSearch3 = e.control;
				// 1. 데이터 변경사항 체크
				if (util.Grid.isModified(app, "grdMain", "CRM")) {
					return false;
				}
				
				// 2. 조회조건 유효성 체크
				if(!util.validate(app, "grpSearch")) return false;
				
				// 3. 데이터 조회
				doList();
			}
			
			
			/*
			 * 사용자 정의 컨트롤에서 search 이벤트 발생 시 호출.
			 * 조회버튼 클릭시 이벤트
			 */
			function onBtnSearch2Search(/* cpr.events.CUIEvent */ e){
				/** 
				 * @type udc.com.comBtnSearch
				 */
				var btnSearch2 = e.control;
				// 1. 데이터 변경사항 체크
				if (util.Grid.isModified(app, "grdMain2", "CRM")) {
					return false;
				}
				
				// 2. 조회조건 유효성 체크
				if(!util.validate(app, "grpSearch2")) return false;
				
				// 3. 데이터 조회
				doList();
			}
			
			
			/*
			 * 그리드에서 selection-change 이벤트 발생 시 호출.
			 * detail의 cell 클릭하여 설정된 selectionunit에 해당되는 단위가 선택될 때 발생하는 이벤트.
			 */
			function onGrdMain3SelectionChange(/* cpr.events.CSelectionEvent */ e){
				/** 
				 * @type cpr.controls.Grid
				 */
				var grdMain3 = e.control;
				if(util.Grid.getRowState(app, "grdMain") == cpr.data.tabledata.RowState.INSERTED){
					util.Grid.reset(app, "grdSub");
					return false;
				}
				
				doListDtl();	
			}
			
			
			/**
			 * @param psStatus - 조회 상태(저장 후 조회인 경우에는 'save' 구분값 넘김)
			 */
			function doListDtl(psStatus){
			     var vsDeptNo = util.Grid.getCellValue(app, "grdMain", "DEPTNO");
			     util.DataMap.setValue(app, "dmParamDtl", "strDeptNo", vsDeptNo);
			     
				//조회 서브미션 호출
				util.Submit.send(app, "subListDtl", function(pbSuccess){
					if(pbSuccess) {
						if(psStatus == "save"){
							//갱신된 데이터가 조회되었습니다.
							util.Msg.notify(app, "INF-M005");
						}else{
							//조회되었습니다.
							util.Msg.notify(app, "INF-M001");
						}
						
					}
				});
			}
			
			
			/**
			 * 그리드 데이터를 조회
			 * @param psStatus - 조회 상태(저장 후 조회인 경우에는 'save' 구분값 넘김)
			 * 
			 */
			function doList(psStatus) {
				util.Submit.send(app, "subList", function(pbSuccess) {
					if(pbSuccess) {
						if(psStatus == "save"){
							//갱신된 데이터가 조회되었습니다.
							util.Msg.notify(app, "INF-M005");
						}else{
							//조회되었습니다.
							util.Msg.notify(app, "INF-M001");
							util.Grid.selectRow(app, "grdMain", 0);
						}
					}
				});
			}
			
			/*
			 * 사용자 정의 컨트롤에서 save 이벤트 발생 시 호출.
			 * 저장 클릭 이벤트
			 */
			function onCombutton1Save(/* cpr.events.CUIEvent */ e){
				/** 
				 * @type udc.com.comButton
				 */
				var combutton1 = e.control;
				// 1. 데이터 변경사항 체크
				if (!util.Grid.isModified(app, "grdMain", "MSG")) return false;
				
				// 2. 유효성 체크
				if (!util.validate(app, "grdMain")) return false;
				
				// 3. 데이터 저장
				util.Submit.send(app, "subSave", function(pbSuccess){
					if(pbSuccess){
						doList("save");
					}
				});
			}
			
			
			/*
			 * 사용자 정의 컨트롤에서 save 이벤트 발생 시 호출.
			 * 저장 클릭 이벤트
			 */
			function onCombutton2Save(/* cpr.events.CUIEvent */ e){
				/** 
				 * @type udc.com.comButton
				 */
				var combutton2 = e.control;
				// 1. 데이터 변경사항 체크
				if (!util.Grid.isModified(app, "grdMain2", "MSG")) return false;
				
				// 2. 유효성 체크
				if (!util.validate(app, "grdMain2")) return false;
				
				// 3. 데이터 저장
				util.Submit.send(app, "subSave", function(pbSuccess){
					if(pbSuccess){
						doList("save");
					}
				});
			}
			
			
			/*
			 * 사용자 정의 컨트롤에서 save 이벤트 발생 시 호출.
			 * 저장 클릭 이벤트
			 */
			function onCombutton3Save(/* cpr.events.CUIEvent */ e){
				/** 
				 * @type udc.com.comButton
				 */
				var combutton3 = e.control;
				// 1. 데이터 변경사항 체크
				if (!util.Grid.isModified(app, "grdMain3", "MSG")) return false;
				
				// 2. 유효성 체크
				if (!util.validate(app, "grdMain3")) return false;
				
				// 3. 데이터 저장
				util.Submit.send(app, "subSave", function(pbSuccess){
					if(pbSuccess){
						doList("save");
					}
				});
			}
			
			
			/*
			 * 사용자 정의 컨트롤에서 save 이벤트 발생 시 호출.
			 * 저장 클릭 이벤트
			 */
			function onCombutton4Save(/* cpr.events.CUIEvent */ e){
				/** 
				 * @type udc.com.comButton
				 */
				var combutton4 = e.control;
				// 1. 데이터 변경사항 체크
				if (!util.Grid.isModified(app, "grdSub", "MSG")) return false;
				
				// 2. 유효성 체크
				if (!util.validate(app, "grdSub")) return false;
				
				// 3. 데이터 저장
				util.Submit.send(app, "subSaveDtl", function(pbSuccess){
					if(pbSuccess){
						doListDtl("save");
					}
				});
			}
			
			
			/*
			 * 사용자 정의 컨트롤에서 search 이벤트 발생 시 호출.
			 * 조회버튼 클릭시 이벤트
			 */
			function onBtnSearchSearch(/* cpr.events.CUIEvent */ e){
				/** 
				 * @type udc.com.comBtnSearch
				 */
				var btnSearch = e.control;
				// 1. 데이터 변경사항 체크
				if (util.Grid.isModified(app, "grdMain", "CRM")) {
					return false;
				}
				
				// 2. 조회조건 유효성 체크
				if(!util.validate(app, "grpSearch")) return false;
				
				// 3. 데이터 조회
				doList();
			}
			
			
			/*
			 * 탭 폴더에서 before-selection-change 이벤트 발생 시 호출.
			 * Tab Item을 선택하기 전 발생하는 이벤트. 다음 이벤트로 select 이벤트를 발생합니다.
			 */
			function onTab2BeforeSelectionChange(/* cpr.events.CSelectionEvent */ e){
				/** 
				 * @type cpr.controls.TabFolder
				 */
				var tab2 = e.control;
				// 임베디드 앱 변경 사항 체크
				if (util.isAppModified(app, "CRM",app.getContainer())){
					return false;
				}
			}
			
			
			/*
			 * 탭 폴더에서 selection-change 이벤트 발생 시 호출.
			 * Tab Item을 선택한 후에 발생하는 이벤트.
			 */
			function onTab2SelectionChange(/* cpr.events.CSelectionEvent */ e){
				/** 
				 * @type cpr.controls.TabFolder
				 */
				var tab2 = e.control;
				if (util.Grid.isModified(app, "grdMain")) {
					doList();
				}
				
				if (util.Grid.isModified(app, "grdMain2")) {
					doList();
				}
				
				if (util.Grid.isModified(app, ["grdMain3","grdSub"])) {
					doList();
				}
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsJob");
			dataSet_1.parseData({
				"columns" : [
					{"name": "CD_NM"},
					{"name": "CD"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsEmp");
			dataSet_2.parseData({
				"info": "EMPNO",
				"columns": [
					{
						"name": "EMPNO",
						"dataType": "number"
					},
					{"name": "ENAME"},
					{"name": "JOB"},
					{
						"name": "MGR",
						"dataType": "number"
					},
					{"name": "HIREDATE"},
					{
						"name": "SAL",
						"dataType": "decimal"
					},
					{
						"name": "COMM",
						"dataType": "decimal"
					},
					{
						"name": "DEPTNO",
						"dataType": "number"
					},
					{
						"name": "AGE",
						"dataType": "number"
					},
					{"name": "GENDER"},
					{"name": "BRTDY"},
					{"name": "NATION"},
					{"name": "LOGINID"},
					{"name": "PWD"},
					{"name": "EMAIL"},
					{"name": "PHONENUM"},
					{"name": "ADDRESS"}
				],
				"rows": []
			});
			(function(dataSet){
				var dataView_1 = new cpr.data.DataView("dv1", dataSet);
				dataView_1.parseData({});
				app.register(dataView_1);
				var dataView_2 = new cpr.data.DataView("dv2", dataSet);
				dataView_2.parseData({});
				app.register(dataView_2);
			})(dataSet_2);
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsGender");
			dataSet_3.parseData({
				"columns" : [
					{"name": "CD_NM"},
					{"name": "CD"}
				]
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsNat");
			dataSet_4.parseData({
				"columns" : [
					{"name": "CD_NM"},
					{"name": "CD"}
				]
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsDept");
			dataSet_5.parseData({
				"info": "DEPTNO",
				"columns": [
					{
						"name": "DEPTNO",
						"dataType": "number"
					},
					{"name": "DNAME"},
					{"name": "LOC"}
				]
			});
			app.register(dataSet_5);
			var dataMap_1 = new cpr.data.DataMap("dmParam");
			dataMap_1.parseData({
				"columns" : [
					{"name": "strEName"},
					{"name": "strJob"}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmParamDtl");
			dataMap_2.parseData({
				"columns" : [{"name": "strDeptNo"}]
			});
			app.register(dataMap_2);
			var submission_1 = new cpr.protocols.Submission("subList");
			submission_1.action = "app/exam/data/temp/template.json";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addRequestData(dataMap_1);
			submission_1.addResponseData(dataSet_2, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subSave");
			submission_2.action = "app/exam/data/temp/template.json";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataSet_2);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subOnLoad");
			submission_3.action = "app/exam/data/temp/template.json";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addResponseData(dataSet_1, false);
			submission_3.addResponseData(dataSet_4, false);
			submission_3.addResponseData(dataSet_3, false);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subListDtl");
			submission_4.action = "app/exam/data/temp/template.json";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataMap_2);
			submission_4.addResponseData(dataSet_5, false);
			app.register(submission_4);
			
			var submission_5 = new cpr.protocols.Submission("subSaveDtl");
			submission_5.action = "app/exam/data/temp/template.json";
			submission_5.mediaType = "application/x-www-form-urlencoded";
			submission_5.addRequestData(dataSet_5);
			app.register(submission_5);
			
			app.supportMedia("all and (min-width: 1320px)", "eXFrame");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1319px)", "default");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpHeader");
			group_1.style.setClasses(["header-box"]);
			// Layout
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_2.spacing = 0;
			group_1.setLayout(verticalLayout_2);
			(function(container){
				var userDefinedControl_1 = new udc.com.appHeader("appheader");
				userDefinedControl_1.initializeYn = "N";
				container.addChild(userDefinedControl_1, {
					"width": "1320px",
					"height": "30px"
				});
			})(group_1);
			container.addChild(group_1, {
				"autoSize": "height",
				"width": "1320px",
				"height": "25px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.userResizingMode = "standard";
			formLayout_1.setColumns(["1fr"]);
			formLayout_1.setRows(["1fr"]);
			group_2.setLayout(formLayout_1);
			(function(container){
				var tabFolder_1 = new cpr.controls.TabFolder("tab1");
				
				var tabItem_1 = (function(tabFolder){
					var tabItem_1 = new cpr.controls.TabItem();
					tabItem_1.text = "tab1";
					var group_3 = new cpr.controls.Container("grp1");
					// Layout
					var xYLayout_1 = new cpr.controls.layouts.XYLayout();
					group_3.setLayout(xYLayout_1);
					(function(container){
						var tabFolder_2 = new cpr.controls.TabFolder("tab2");
						
						var tabItem_2 = (function(tabFolder){
							var tabItem_2 = new cpr.controls.TabItem();
							tabItem_2.text = "그리드";
							var group_4 = new cpr.controls.Container("grp2");
							// Layout
							var formLayout_2 = new cpr.controls.layouts.FormLayout();
							formLayout_2.topMargin = "5px";
							formLayout_2.rightMargin = "5px";
							formLayout_2.bottomMargin = "5px";
							formLayout_2.leftMargin = "5px";
							formLayout_2.setColumns(["1fr"]);
							formLayout_2.setRows(["37px", "1fr"]);
							formLayout_2.setRowAutoSizing(0, true);
							group_4.setLayout(formLayout_2);
							(function(container){
								var group_5 = new cpr.controls.Container("grpSearch");
								group_5.userAttr({
									"mobile-column-count": "2",
									"tablet-column-count": "2"
								});
								group_5.style.setClasses(["search-box"]);
								// Layout
								var formLayout_3 = new cpr.controls.layouts.FormLayout();
								formLayout_3.topMargin = "5px";
								formLayout_3.rightMargin = "5px";
								formLayout_3.bottomMargin = "5px";
								formLayout_3.leftMargin = "5px";
								formLayout_3.setColumns(["120px", "120px", "120px", "200px", "1fr", "60px"]);
								formLayout_3.setRows(["25px"]);
								formLayout_3.setRowAutoSizing(0, true);
								group_5.setLayout(formLayout_3);
								(function(container){
									var output_1 = new cpr.controls.Output();
									output_1.value = "사원명";
									container.addChild(output_1, {
										"colIndex": 0,
										"rowIndex": 0
									});
									var inputBox_1 = new cpr.controls.InputBox("ipbEName");
									inputBox_1.fieldLabel = "사원명";
									inputBox_1.userAttr({"autoKeydownSearch": "Y"});
									inputBox_1.bind("value").toDataMap(app.lookup("dmParam"), "strEName");
									container.addChild(inputBox_1, {
										"colIndex": 1,
										"rowIndex": 0
									});
									var output_2 = new cpr.controls.Output();
									output_2.value = "직급";
									container.addChild(output_2, {
										"colIndex": 2,
										"rowIndex": 0
									});
									var comboBox_1 = new cpr.controls.ComboBox("cmbJob");
									comboBox_1.fieldLabel = "직급";
									comboBox_1.bind("value").toDataMap(app.lookup("dmParam"), "strJob");
									(function(comboBox_1){
										comboBox_1.addItem(new cpr.controls.Item("전체", ""));
										comboBox_1.setItemSet(app.lookup("dsJob"), {
											"label": "CD_NM",
											"value": "CD"
										});
									})(comboBox_1);
									container.addChild(comboBox_1, {
										"colIndex": 3,
										"rowIndex": 0
									});
									var group_6 = new cpr.controls.Container("grp4");
									// Layout
									var formLayout_4 = new cpr.controls.layouts.FormLayout();
									formLayout_4.setColumns(["3fr", "60px"]);
									formLayout_4.setRows(["25px"]);
									formLayout_4.setRowAutoSizing(0, true);
									group_6.setLayout(formLayout_4);
									(function(container){
										var userDefinedControl_2 = new udc.com.comBtnSearch("btnSearch");
										if(typeof onBtnSearchSearch == "function") {
											userDefinedControl_2.addEventListener("search", onBtnSearchSearch);
										}
										container.addChild(userDefinedControl_2, {
											"colIndex": 1,
											"rowIndex": 0,
											"horizontalAlign": "right",
											"verticalAlign": "fill",
											"width": 60
										});
									})(group_6);
									container.addChild(group_6, {
										"colIndex": 4,
										"rowIndex": 0,
										"colSpan": 2,
										"rowSpan": 1
									});
								})(group_5);
								container.addChild(group_5, {
									"colIndex": 0,
									"rowIndex": 0
								});
								var group_7 = new cpr.controls.Container("grpData2");
								// Layout
								var formLayout_5 = new cpr.controls.layouts.FormLayout();
								formLayout_5.setColumns(["1fr"]);
								formLayout_5.setRows(["25px", "1fr"]);
								group_7.setLayout(formLayout_5);
								(function(container){
									var group_8 = new cpr.controls.Container("grp5");
									// Layout
									var formLayout_6 = new cpr.controls.layouts.FormLayout();
									formLayout_6.topMargin = "0px";
									formLayout_6.rightMargin = "0px";
									formLayout_6.bottomMargin = "0px";
									formLayout_6.leftMargin = "0px";
									formLayout_6.horizontalSpacing = "5px";
									formLayout_6.verticalSpacing = "5px";
									formLayout_6.setColumns(["1fr", "260px"]);
									formLayout_6.setRows(["1fr"]);
									group_8.setLayout(formLayout_6);
									(function(container){
										var userDefinedControl_3 = linker.userDefinedControl_3 = new udc.com.comTitle("comtitle1");
										container.addChild(userDefinedControl_3, {
											"colIndex": 0,
											"rowIndex": 0
										});
										var userDefinedControl_4 = linker.userDefinedControl_4 = new udc.com.comButton("combutton1");
										userDefinedControl_4.focusColumnName = "EMPNO";
										if(typeof onCombutton1Save == "function") {
											userDefinedControl_4.addEventListener("save", onCombutton1Save);
										}
										container.addChild(userDefinedControl_4, {
											"colIndex": 1,
											"rowIndex": 0
										});
									})(group_8);
									container.addChild(group_8, {
										"colIndex": 0,
										"rowIndex": 0
									});
									var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdMain");
									grid_1.fieldLabel = "직원 정보";
									grid_1.init({
										"dataSet": app.lookup("dsEmp"),
										"autoFit": "3, 4, 5, 6, 7, 8, 9, 10",
										"resizableColumns": "5, 6, 7, 8, 9, 10",
										"columns": [
											{"width": "25px"},
											{"width": "25px"},
											{"width": "40px"},
											{"width": "100px"},
											{"width": "100px"},
											{"width": "100px"},
											{"width": "120px"},
											{"width": "100px"},
											{"width": "100px"},
											{"width": "100px"},
											{"width": "100px"}
										],
										"header": {
											"rows": [{"height": "27px"}],
											"cells": [
												{
													"constraint": {"rowIndex": 0, "colIndex": 0},
													"configurator": function(cell){
														cell.columnType = "checkbox";
													}
												},
												{
													"constraint": {"rowIndex": 0, "colIndex": 1},
													"configurator": function(cell){
														cell.text = "F";
													}
												},
												{
													"constraint": {"rowIndex": 0, "colIndex": 2},
													"configurator": function(cell){
														cell.text = "No";
													}
												},
												{
													"constraint": {"rowIndex": 0, "colIndex": 3},
													"configurator": function(cell){
														cell.targetColumnName = "EMPNO";
														cell.text = "사원번호";
														cell.style.setClasses(["require"]);
													}
												},
												{
													"constraint": {"rowIndex": 0, "colIndex": 4},
													"configurator": function(cell){
														cell.targetColumnName = "ENAME";
														cell.text = "사원명";
													}
												},
												{
													"constraint": {"rowIndex": 0, "colIndex": 10},
													"configurator": function(cell){
														cell.targetColumnName = "DEPTNO";
														cell.text = "부서코드";
													}
												},
												{
													"constraint": {"rowIndex": 0, "colIndex": 9},
													"configurator": function(cell){
														cell.targetColumnName = "COMM";
														cell.text = "성과금";
													}
												},
												{
													"constraint": {"rowIndex": 0, "colIndex": 8},
													"configurator": function(cell){
														cell.targetColumnName = "SAL";
														cell.text = "급여";
													}
												},
												{
													"constraint": {"rowIndex": 0, "colIndex": 7},
													"configurator": function(cell){
														cell.targetColumnName = "HIREDATE";
														cell.text = "입사일";
													}
												},
												{
													"constraint": {"rowIndex": 0, "colIndex": 6},
													"configurator": function(cell){
														cell.targetColumnName = "MGR";
														cell.text = "관리자 사원번호";
													}
												},
												{
													"constraint": {"rowIndex": 0, "colIndex": 5},
													"configurator": function(cell){
														cell.targetColumnName = "JOB";
														cell.text = "직급";
													}
												}
											]
										},
										"detail": {
											"rows": [{"height": "25px"}],
											"cells": [
												{
													"constraint": {"rowIndex": 0, "colIndex": 0},
													"configurator": function(cell){
														cell.columnType = "checkbox";
														cell.style.css({
															"text-align" : "center"
														});
													}
												},
												{
													"constraint": {"rowIndex": 0, "colIndex": 1},
													"configurator": function(cell){
														cell.control = (function(){
															var output_3 = new cpr.controls.Output();
															output_3.style.css({
																"text-align" : "center"
															});
															return output_3;
														})();
													}
												},
												{
													"constraint": {"rowIndex": 0, "colIndex": 2},
													"configurator": function(cell){
														cell.columnType = "rowindex";
														cell.style.css({
															"text-align" : "center"
														});
													}
												},
												{
													"constraint": {"rowIndex": 0, "colIndex": 3},
													"configurator": function(cell){
														cell.columnName = "EMPNO";
														cell.control = (function(){
															var inputBox_2 = new cpr.controls.InputBox("ipb1");
															inputBox_2.style.css({
																"text-align" : "center"
															});
															inputBox_2.bind("value").toDataColumn("EMPNO");
															return inputBox_2;
														})();
													}
												},
												{
													"constraint": {"rowIndex": 0, "colIndex": 4},
													"configurator": function(cell){
														cell.columnName = "ENAME";
														cell.control = (function(){
															var inputBox_3 = new cpr.controls.InputBox("ipb2");
															inputBox_3.style.css({
																"text-align" : "center"
															});
															inputBox_3.bind("value").toDataColumn("ENAME");
															return inputBox_3;
														})();
													}
												},
												{
													"constraint": {"rowIndex": 0, "colIndex": 10},
													"configurator": function(cell){
														cell.columnName = "DEPTNO";
														cell.control = (function(){
															var inputBox_4 = new cpr.controls.InputBox("ipb4");
															inputBox_4.style.css({
																"text-align" : "center"
															});
															inputBox_4.bind("value").toDataColumn("DEPTNO");
															return inputBox_4;
														})();
													}
												},
												{
													"constraint": {"rowIndex": 0, "colIndex": 9},
													"configurator": function(cell){
														cell.columnName = "COMM";
														cell.control = (function(){
															var numberEditor_1 = new cpr.controls.NumberEditor("nbe2");
															numberEditor_1.bind("value").toDataColumn("COMM");
															return numberEditor_1;
														})();
													}
												},
												{
													"constraint": {"rowIndex": 0, "colIndex": 8},
													"configurator": function(cell){
														cell.columnName = "SAL";
														cell.control = (function(){
															var numberEditor_2 = new cpr.controls.NumberEditor("nbe1");
															numberEditor_2.bind("value").toDataColumn("SAL");
															return numberEditor_2;
														})();
													}
												},
												{
													"constraint": {"rowIndex": 0, "colIndex": 7},
													"configurator": function(cell){
														cell.columnName = "HIREDATE";
														cell.control = (function(){
															var dateInput_1 = new cpr.controls.DateInput("dti1");
															dateInput_1.format = "YYYY-MM-DD";
															dateInput_1.bind("value").toDataColumn("HIREDATE");
															return dateInput_1;
														})();
													}
												},
												{
													"constraint": {"rowIndex": 0, "colIndex": 6},
													"configurator": function(cell){
														cell.columnName = "MGR";
														cell.control = (function(){
															var inputBox_5 = new cpr.controls.InputBox("ipb3");
															inputBox_5.style.css({
																"text-align" : "center"
															});
															inputBox_5.bind("value").toDataColumn("MGR");
															return inputBox_5;
														})();
													}
												},
												{
													"constraint": {"rowIndex": 0, "colIndex": 5},
													"configurator": function(cell){
														cell.columnName = "JOB";
														cell.control = (function(){
															var comboBox_2 = new cpr.controls.ComboBox("cmb1");
															comboBox_2.style.css({
																"text-align" : "center"
															});
															(function(comboBox_2){
																comboBox_2.setItemSet(app.lookup("dsJob"), {
																	"label": "CD_NM",
																	"value": "CD"
																});
															})(comboBox_2);
															comboBox_2.bind("value").toDataColumn("JOB");
															return comboBox_2;
														})();
													}
												}
											]
										}
									});
									container.addChild(grid_1, {
										"colIndex": 0,
										"rowIndex": 1,
										"colSpan": 1,
										"rowSpan": 1
									});
								})(group_7);
								container.addChild(group_7, {
									"colIndex": 0,
									"rowIndex": 1
								});
							})(group_4);
							tabItem_2.content = group_4;
							return tabItem_2;
						})(tabFolder_2);
						tabFolder_2.addTabItem(tabItem_2);
						
						var tabItem_3 = (function(tabFolder){
							var tabItem_3 = new cpr.controls.TabItem();
							tabItem_3.text = "그리드+폼";
							var group_9 = new cpr.controls.Container("grp3");
							// Layout
							var formLayout_7 = new cpr.controls.layouts.FormLayout();
							formLayout_7.scrollable = false;
							formLayout_7.topMargin = "5px";
							formLayout_7.rightMargin = "5px";
							formLayout_7.bottomMargin = "5px";
							formLayout_7.leftMargin = "5px";
							formLayout_7.horizontalSpacing = "5px";
							formLayout_7.verticalSpacing = "5px";
							formLayout_7.setColumns(["1fr"]);
							formLayout_7.setRows(["37px", "1fr"]);
							formLayout_7.setRowAutoSizing(0, true);
							group_9.setLayout(formLayout_7);
							(function(container){
								var group_10 = new cpr.controls.Container("grpSearch2");
								group_10.userAttr({
									"mobile-column-count": "2",
									"tablet-column-count": "2"
								});
								group_10.style.setClasses(["search-box"]);
								// Layout
								var formLayout_8 = new cpr.controls.layouts.FormLayout();
								formLayout_8.topMargin = "5px";
								formLayout_8.rightMargin = "5px";
								formLayout_8.bottomMargin = "5px";
								formLayout_8.leftMargin = "5px";
								formLayout_8.setColumns(["120px", "200px", "120px", "200px", "1fr", "60px"]);
								formLayout_8.setRows(["25px"]);
								formLayout_8.setRowAutoSizing(0, true);
								group_10.setLayout(formLayout_8);
								(function(container){
									var output_4 = new cpr.controls.Output();
									output_4.value = "사원명";
									container.addChild(output_4, {
										"colIndex": 0,
										"rowIndex": 0
									});
									var inputBox_6 = new cpr.controls.InputBox("ipb5");
									inputBox_6.fieldLabel = "사원명";
									inputBox_6.userAttr({"autoKeydownSearch": "Y"});
									inputBox_6.bind("value").toDataMap(app.lookup("dmParam"), "strEName");
									container.addChild(inputBox_6, {
										"colIndex": 1,
										"rowIndex": 0
									});
									var output_5 = new cpr.controls.Output();
									output_5.value = "직급";
									container.addChild(output_5, {
										"colIndex": 2,
										"rowIndex": 0
									});
									var comboBox_3 = new cpr.controls.ComboBox("cmbJob2");
									comboBox_3.fieldLabel = "직급";
									comboBox_3.bind("value").toDataMap(app.lookup("dmParam"), "strJob");
									(function(comboBox_3){
										comboBox_3.addItem(new cpr.controls.Item("전체", ""));
										comboBox_3.setItemSet(app.lookup("dsJob"), {
											"label": "CD_NM",
											"value": "CD"
										});
									})(comboBox_3);
									container.addChild(comboBox_3, {
										"colIndex": 3,
										"rowIndex": 0
									});
									var group_11 = new cpr.controls.Container("grp6");
									// Layout
									var formLayout_9 = new cpr.controls.layouts.FormLayout();
									formLayout_9.setColumns(["3fr", "60px"]);
									formLayout_9.setRows(["25px"]);
									group_11.setLayout(formLayout_9);
									(function(container){
										var userDefinedControl_5 = new udc.com.comBtnSearch("btnSearch2");
										if(typeof onBtnSearch2Search == "function") {
											userDefinedControl_5.addEventListener("search", onBtnSearch2Search);
										}
										container.addChild(userDefinedControl_5, {
											"colIndex": 1,
											"rowIndex": 0,
											"horizontalAlign": "right",
											"verticalAlign": "fill",
											"width": 60
										});
									})(group_11);
									container.addChild(group_11, {
										"colIndex": 4,
										"rowIndex": 0,
										"colSpan": 2,
										"rowSpan": 1
									});
								})(group_10);
								container.addChild(group_10, {
									"colIndex": 0,
									"rowIndex": 0
								});
								var group_12 = new cpr.controls.Container("grpData3");
								group_12.userAttr({
									"mobile-column-count": "1",
									"tablet-column-count": "1",
									"tablet-min-height": "800",
									"mobile-min-height": "1000"
								});
								// Layout
								var formLayout_10 = new cpr.controls.layouts.FormLayout();
								formLayout_10.userResizingMode = "standard";
								formLayout_10.setColumns(["1fr", "600px"]);
								formLayout_10.setRows(["1fr"]);
								group_12.setLayout(formLayout_10);
								(function(container){
									var group_13 = new cpr.controls.Container("grp7");
									// Layout
									var formLayout_11 = new cpr.controls.layouts.FormLayout();
									formLayout_11.setColumns(["1fr"]);
									formLayout_11.setRows(["25px", "1fr"]);
									group_13.setLayout(formLayout_11);
									(function(container){
										var userDefinedControl_6 = linker.userDefinedControl_6 = new udc.com.comTitle("comtitle2");
										container.addChild(userDefinedControl_6, {
											"colIndex": 0,
											"rowIndex": 0
										});
										var grid_2 = linker.grid_2 = new cpr.controls.Grid("grdMain2");
										grid_2.fieldLabel = "직원 정보";
										grid_2.userAttr({"bindDataFormId": "frfMain"});
										grid_2.init({
											"dataSet": app.lookup("dv1"),
											"autoFit": "3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19",
											"columns": [
												{"width": "25px"},
												{"width": "25px"},
												{"width": "40px"},
												{"width": "100px"},
												{"width": "100px"},
												{"width": "70px"},
												{"width": "100px"},
												{"width": "120px"},
												{"width": "100px"},
												{"width": "100px"},
												{"width": "100px"},
												{"width": "150px"},
												{"width": "150px"},
												{"width": "200px"},
												{"width": "100px"},
												{"width": "120px"},
												{"width": "100px"},
												{"width": "100px"},
												{"width": "100px"},
												{"width": "100px"}
											],
											"header": {
												"rows": [{"height": "27px"}],
												"cells": [
													{
														"constraint": {"rowIndex": 0, "colIndex": 0},
														"configurator": function(cell){
															cell.columnType = "checkbox";
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 1},
														"configurator": function(cell){
															cell.text = "F";
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 2},
														"configurator": function(cell){
															cell.text = "No";
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 3},
														"configurator": function(cell){
															cell.targetColumnName = "EMPNO";
															cell.text = "사원번호";
															cell.style.setClasses(["require"]);
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 4},
														"configurator": function(cell){
															cell.targetColumnName = "ENAME";
															cell.text = "사원명";
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 19},
														"configurator": function(cell){
															cell.targetColumnName = "DEPTNO";
															cell.text = "부서코드";
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 18},
														"configurator": function(cell){
															cell.targetColumnName = "COMM";
															cell.text = "성과금";
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 17},
														"configurator": function(cell){
															cell.targetColumnName = "SAL";
															cell.text = "급여";
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 16},
														"configurator": function(cell){
															cell.targetColumnName = "HIREDATE";
															cell.text = "입사일";
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 15},
														"configurator": function(cell){
															cell.targetColumnName = "MGR";
															cell.text = "관리자 사원번호";
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 14},
														"configurator": function(cell){
															cell.targetColumnName = "JOB";
															cell.text = "직급";
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 13},
														"configurator": function(cell){
															cell.targetColumnName = "ADDRESS";
															cell.text = "주소";
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 12},
														"configurator": function(cell){
															cell.targetColumnName = "PHONENUM";
															cell.text = "전화번호";
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 11},
														"configurator": function(cell){
															cell.targetColumnName = "EMAIL";
															cell.text = "이메일";
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 10},
														"configurator": function(cell){
															cell.targetColumnName = "PWD";
															cell.text = "비밀번호";
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 9},
														"configurator": function(cell){
															cell.targetColumnName = "LOGINID";
															cell.text = "로그인ID";
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 8},
														"configurator": function(cell){
															cell.targetColumnName = "NATION";
															cell.text = "국가";
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 7},
														"configurator": function(cell){
															cell.targetColumnName = "BRTDY";
															cell.text = "출생년도";
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 6},
														"configurator": function(cell){
															cell.targetColumnName = "GENDER";
															cell.text = "성별";
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 5},
														"configurator": function(cell){
															cell.targetColumnName = "AGE";
															cell.text = "나이";
														}
													}
												]
											},
											"detail": {
												"rows": [{"height": "25px"}],
												"cells": [
													{
														"constraint": {"rowIndex": 0, "colIndex": 0},
														"configurator": function(cell){
															cell.columnType = "checkbox";
															cell.style.css({
																"text-align" : "center"
															});
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 1},
														"configurator": function(cell){
															cell.control = (function(){
																var output_6 = new cpr.controls.Output();
																output_6.style.css({
																	"text-align" : "center"
																});
																return output_6;
															})();
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 2},
														"configurator": function(cell){
															cell.columnType = "rowindex";
															cell.style.css({
																"text-align" : "center"
															});
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 3},
														"configurator": function(cell){
															cell.columnName = "EMPNO";
															cell.control = (function(){
																var inputBox_7 = new cpr.controls.InputBox("ipb7");
																inputBox_7.inputFilter = "[0-9]";
																inputBox_7.style.css({
																	"text-align" : "center"
																});
																inputBox_7.bind("value").toDataColumn("EMPNO");
																return inputBox_7;
															})();
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 4},
														"configurator": function(cell){
															cell.columnName = "ENAME";
															cell.control = (function(){
																var inputBox_8 = new cpr.controls.InputBox("ipb8");
																inputBox_8.style.css({
																	"text-align" : "center"
																});
																inputBox_8.bind("value").toDataColumn("ENAME");
																return inputBox_8;
															})();
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 19},
														"configurator": function(cell){
															cell.columnName = "DEPTNO";
															cell.control = (function(){
																var inputBox_9 = new cpr.controls.InputBox("ipb9");
																inputBox_9.style.css({
																	"text-align" : "center"
																});
																inputBox_9.bind("value").toDataColumn("DEPTNO");
																return inputBox_9;
															})();
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 18},
														"configurator": function(cell){
															cell.columnName = "COMM";
															cell.control = (function(){
																var numberEditor_3 = new cpr.controls.NumberEditor("nbe3");
																numberEditor_3.bind("value").toDataColumn("COMM");
																return numberEditor_3;
															})();
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 17},
														"configurator": function(cell){
															cell.columnName = "SAL";
															cell.control = (function(){
																var numberEditor_4 = new cpr.controls.NumberEditor("nbe4");
																numberEditor_4.bind("value").toDataColumn("SAL");
																return numberEditor_4;
															})();
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 16},
														"configurator": function(cell){
															cell.columnName = "HIREDATE";
															cell.control = (function(){
																var dateInput_2 = new cpr.controls.DateInput("dti2");
																dateInput_2.format = "YYYY-MM-DD";
																dateInput_2.bind("value").toDataColumn("HIREDATE");
																return dateInput_2;
															})();
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 15},
														"configurator": function(cell){
															cell.columnName = "MGR";
															cell.control = (function(){
																var inputBox_10 = new cpr.controls.InputBox("ipb10");
																inputBox_10.style.css({
																	"text-align" : "center"
																});
																inputBox_10.bind("value").toDataColumn("MGR");
																return inputBox_10;
															})();
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 14},
														"configurator": function(cell){
															cell.columnName = "JOB";
															cell.control = (function(){
																var comboBox_4 = new cpr.controls.ComboBox("cmb2");
																comboBox_4.style.css({
																	"text-align" : "center"
																});
																(function(comboBox_4){
																	comboBox_4.setItemSet(app.lookup("dsJob"), {
																		"label": "CD_NM",
																		"value": "CD"
																	});
																})(comboBox_4);
																comboBox_4.bind("value").toDataColumn("JOB");
																return comboBox_4;
															})();
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 13},
														"configurator": function(cell){
															cell.columnName = "ADDRESS";
															cell.control = (function(){
																var inputBox_11 = new cpr.controls.InputBox("ipb17");
																inputBox_11.bind("value").toDataColumn("ADDRESS");
																return inputBox_11;
															})();
															cell.controlConstraint = {};
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 12},
														"configurator": function(cell){
															cell.columnName = "PHONENUM";
															cell.control = (function(){
																var maskEditor_1 = new cpr.controls.MaskEditor("mse1");
																maskEditor_1.mask = "000-0000-0000";
																maskEditor_1.bind("value").toDataColumn("PHONENUM");
																return maskEditor_1;
															})();
															cell.controlConstraint = {};
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 11},
														"configurator": function(cell){
															cell.columnName = "EMAIL";
															cell.control = (function(){
																var inputBox_12 = new cpr.controls.InputBox("ipb16");
																inputBox_12.bind("value").toDataColumn("EMAIL");
																return inputBox_12;
															})();
															cell.controlConstraint = {};
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 10},
														"configurator": function(cell){
															cell.columnName = "PWD";
															cell.control = (function(){
																var inputBox_13 = new cpr.controls.InputBox("ipb15");
																inputBox_13.secret = true;
																inputBox_13.bind("value").toDataColumn("PWD");
																return inputBox_13;
															})();
															cell.controlConstraint = {};
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 9},
														"configurator": function(cell){
															cell.columnName = "LOGINID";
															cell.control = (function(){
																var inputBox_14 = new cpr.controls.InputBox("ipb14");
																inputBox_14.bind("value").toDataColumn("LOGINID");
																return inputBox_14;
															})();
															cell.controlConstraint = {};
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 8},
														"configurator": function(cell){
															cell.columnName = "NATION";
															cell.control = (function(){
																var comboBox_5 = new cpr.controls.ComboBox("cmb6");
																(function(comboBox_5){
																	comboBox_5.setItemSet(app.lookup("dsNat"), {
																		"label": "CD_NM",
																		"value": "CD"
																	});
																})(comboBox_5);
																comboBox_5.bind("value").toDataColumn("NATION");
																return comboBox_5;
															})();
															cell.controlConstraint = {};
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 7},
														"configurator": function(cell){
															cell.columnName = "BRTDY";
															cell.control = (function(){
																var dateInput_3 = new cpr.controls.DateInput("dti4");
																dateInput_3.format = "YYYY-MM-DD";
																dateInput_3.bind("value").toDataColumn("BRTDY");
																return dateInput_3;
															})();
															cell.controlConstraint = {};
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 6},
														"configurator": function(cell){
															cell.columnName = "GENDER";
															cell.control = (function(){
																var comboBox_6 = new cpr.controls.ComboBox("cmb5");
																(function(comboBox_6){
																	comboBox_6.setItemSet(app.lookup("dsGender"), {
																		"label": "CD_NM",
																		"value": "CD"
																	});
																})(comboBox_6);
																comboBox_6.bind("value").toDataColumn("GENDER");
																return comboBox_6;
															})();
															cell.controlConstraint = {};
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 5},
														"configurator": function(cell){
															cell.columnName = "AGE";
															cell.control = (function(){
																var numberEditor_5 = new cpr.controls.NumberEditor("nbe6");
																numberEditor_5.bind("value").toDataColumn("AGE");
																return numberEditor_5;
															})();
															cell.controlConstraint = {};
														}
													}
												]
											}
										});
										container.addChild(grid_2, {
											"colIndex": 0,
											"rowIndex": 1
										});
									})(group_13);
									container.addChild(group_13, {
										"colIndex": 0,
										"rowIndex": 0
									});
									var group_14 = new cpr.controls.Container("grp8");
									// Layout
									var formLayout_12 = new cpr.controls.layouts.FormLayout();
									formLayout_12.setColumns(["1fr"]);
									formLayout_12.setRows(["25px", "1fr"]);
									formLayout_12.setRowAutoSizing(0, true);
									group_14.setLayout(formLayout_12);
									(function(container){
										var group_15 = new cpr.controls.Container("grp9");
										// Layout
										var formLayout_13 = new cpr.controls.layouts.FormLayout();
										formLayout_13.horizontalSpacing = "5px";
										formLayout_13.verticalSpacing = "5px";
										formLayout_13.setColumns(["1fr", "260px"]);
										formLayout_13.setRows(["25px"]);
										group_15.setLayout(formLayout_13);
										(function(container){
											var userDefinedControl_7 = linker.userDefinedControl_7 = new udc.com.comButton("combutton2");
											userDefinedControl_7.focusColumnName = "EMPNO";
											if(typeof onCombutton2Save == "function") {
												userDefinedControl_7.addEventListener("save", onCombutton2Save);
											}
											container.addChild(userDefinedControl_7, {
												"colIndex": 1,
												"rowIndex": 0
											});
											var userDefinedControl_8 = linker.userDefinedControl_8 = new udc.com.comFormTitle("comformtitle1");
											container.addChild(userDefinedControl_8, {
												"colIndex": 0,
												"rowIndex": 0
											});
										})(group_15);
										container.addChild(group_15, {
											"colIndex": 0,
											"rowIndex": 0
										});
										var group_16 = linker.group_16 = new cpr.controls.Container("frfMain");
										group_16.fieldLabel = "사원정보";
										group_16.userAttr({
											"mobile-column-count": "2",
											"tablet-column-count": "2"
										});
										group_16.style.setClasses(["form-box"]);
										// Layout
										var formLayout_14 = new cpr.controls.layouts.FormLayout();
										formLayout_14.topMargin = "5px";
										formLayout_14.rightMargin = "5px";
										formLayout_14.bottomMargin = "5px";
										formLayout_14.leftMargin = "5px";
										formLayout_14.setColumns(["120px", "1fr", "120px", "1fr"]);
										formLayout_14.setRows(["25px", "25px", "25px", "25px", "25px", "25px", "25px", "25px", "25px", "1fr"]);
										group_16.setLayout(formLayout_14);
										(function(container){
											var output_7 = new cpr.controls.Output("opt2");
											output_7.value = "사원번호";
											container.addChild(output_7, {
												"colIndex": 0,
												"rowIndex": 0
											});
											var inputBox_15 = linker.inputBox_15 = new cpr.controls.InputBox("ipb6");
											inputBox_15.bind("value").toDataColumn("EMPNO");
											container.addChild(inputBox_15, {
												"colIndex": 1,
												"rowIndex": 0
											});
											var output_8 = new cpr.controls.Output("opt3");
											output_8.value = "사원명";
											container.addChild(output_8, {
												"colIndex": 2,
												"rowIndex": 0
											});
											var inputBox_16 = linker.inputBox_16 = new cpr.controls.InputBox("ipb11");
											inputBox_16.bind("value").toDataColumn("ENAME");
											container.addChild(inputBox_16, {
												"colIndex": 3,
												"rowIndex": 0
											});
											var output_9 = new cpr.controls.Output("opt4");
											output_9.value = "직급";
											container.addChild(output_9, {
												"colIndex": 0,
												"rowIndex": 6
											});
											var comboBox_7 = new cpr.controls.ComboBox("cmb3");
											comboBox_7.bind("value").toDataColumn("JOB");
											(function(comboBox_7){
												comboBox_7.setItemSet(app.lookup("dsJob"), {
													"label": "CD_NM",
													"value": "CD"
												});
											})(comboBox_7);
											container.addChild(comboBox_7, {
												"colIndex": 1,
												"rowIndex": 6
											});
											var output_10 = new cpr.controls.Output("opt5");
											output_10.value = "관리자 사원번호";
											container.addChild(output_10, {
												"colIndex": 2,
												"rowIndex": 6
											});
											var inputBox_17 = new cpr.controls.InputBox("ipb12");
											inputBox_17.bind("value").toDataColumn("MGR");
											container.addChild(inputBox_17, {
												"colIndex": 3,
												"rowIndex": 6
											});
											var output_11 = new cpr.controls.Output();
											output_11.value = "입사일";
											container.addChild(output_11, {
												"colIndex": 0,
												"rowIndex": 7
											});
											var dateInput_4 = new cpr.controls.DateInput("dti3");
											dateInput_4.format = "YYYY-MM-DD";
											dateInput_4.bind("value").toDataColumn("HIREDATE");
											container.addChild(dateInput_4, {
												"colIndex": 1,
												"rowIndex": 7
											});
											var output_12 = new cpr.controls.Output();
											output_12.value = "급여";
											container.addChild(output_12, {
												"colIndex": 2,
												"rowIndex": 7
											});
											var numberEditor_6 = new cpr.controls.NumberEditor("nbe5");
											numberEditor_6.style.css({
												"text-align" : "left"
											});
											numberEditor_6.bind("value").toDataColumn("SAL");
											container.addChild(numberEditor_6, {
												"colIndex": 3,
												"rowIndex": 7
											});
											var output_13 = new cpr.controls.Output();
											output_13.value = "성과금";
											container.addChild(output_13, {
												"colIndex": 0,
												"rowIndex": 8
											});
											var numberEditor_7 = new cpr.controls.NumberEditor("nbe7");
											numberEditor_7.style.css({
												"text-align" : "left"
											});
											numberEditor_7.bind("value").toDataColumn("COMM");
											container.addChild(numberEditor_7, {
												"colIndex": 1,
												"rowIndex": 8
											});
											var output_14 = new cpr.controls.Output();
											output_14.value = "부서코드";
											container.addChild(output_14, {
												"colIndex": 2,
												"rowIndex": 8
											});
											var inputBox_18 = new cpr.controls.InputBox("ipb13");
											inputBox_18.bind("value").toDataColumn("DEPTNO");
											container.addChild(inputBox_18, {
												"colIndex": 3,
												"rowIndex": 8
											});
											var output_15 = new cpr.controls.Output();
											output_15.value = "출생년도";
											container.addChild(output_15, {
												"colIndex": 0,
												"rowIndex": 2
											});
											var output_16 = new cpr.controls.Output();
											output_16.value = "전화번호";
											container.addChild(output_16, {
												"colIndex": 0,
												"rowIndex": 4
											});
											var output_17 = new cpr.controls.Output();
											output_17.value = "로그인ID";
											container.addChild(output_17, {
												"colIndex": 0,
												"rowIndex": 3
											});
											var output_18 = new cpr.controls.Output();
											output_18.value = "국가";
											container.addChild(output_18, {
												"colIndex": 2,
												"rowIndex": 2
											});
											var output_19 = new cpr.controls.Output();
											output_19.value = "비밀번호";
											container.addChild(output_19, {
												"colIndex": 2,
												"rowIndex": 3
											});
											var output_20 = new cpr.controls.Output();
											output_20.value = "이메일";
											container.addChild(output_20, {
												"colIndex": 2,
												"rowIndex": 4
											});
											var output_21 = new cpr.controls.Output();
											output_21.value = "성별";
											container.addChild(output_21, {
												"colIndex": 2,
												"rowIndex": 1
											});
											var output_22 = new cpr.controls.Output();
											output_22.value = "나이";
											container.addChild(output_22, {
												"colIndex": 0,
												"rowIndex": 1
											});
											var dateInput_5 = new cpr.controls.DateInput("dti5");
											dateInput_5.format = "YYYY-MM-DD";
											dateInput_5.bind("value").toDataColumn("BRTDY");
											container.addChild(dateInput_5, {
												"colIndex": 1,
												"rowIndex": 2
											});
											var comboBox_8 = new cpr.controls.ComboBox("cmb4");
											comboBox_8.bind("value").toDataColumn("NATION");
											(function(comboBox_8){
												comboBox_8.setItemSet(app.lookup("dsNat"), {
													"label": "CD_NM",
													"value": "CD"
												});
											})(comboBox_8);
											container.addChild(comboBox_8, {
												"colIndex": 3,
												"rowIndex": 2
											});
											var inputBox_19 = new cpr.controls.InputBox("ipb18");
											inputBox_19.secret = true;
											inputBox_19.bind("value").toDataColumn("PWD");
											container.addChild(inputBox_19, {
												"colIndex": 3,
												"rowIndex": 3
											});
											var inputBox_20 = new cpr.controls.InputBox("ipb19");
											inputBox_20.style.css({
												"text-align" : "left"
											});
											inputBox_20.bind("value").toDataColumn("LOGINID");
											container.addChild(inputBox_20, {
												"colIndex": 1,
												"rowIndex": 3
											});
											var maskEditor_2 = new cpr.controls.MaskEditor("mse2");
											maskEditor_2.mask = "000-0000-0000";
											maskEditor_2.style.css({
												"text-align" : "left"
											});
											maskEditor_2.bind("value").toDataColumn("PHONENUM");
											container.addChild(maskEditor_2, {
												"colIndex": 1,
												"rowIndex": 4
											});
											var comboBox_9 = new cpr.controls.ComboBox("cmb7");
											comboBox_9.bind("value").toDataColumn("GENDER");
											(function(comboBox_9){
												comboBox_9.setItemSet(app.lookup("dsGender"), {
													"label": "CD_NM",
													"value": "CD"
												});
											})(comboBox_9);
											container.addChild(comboBox_9, {
												"colIndex": 3,
												"rowIndex": 1
											});
											var numberEditor_8 = new cpr.controls.NumberEditor("nbe8");
											numberEditor_8.style.css({
												"text-align" : "left"
											});
											numberEditor_8.bind("value").toDataColumn("AGE");
											container.addChild(numberEditor_8, {
												"colIndex": 1,
												"rowIndex": 1
											});
											var inputBox_21 = new cpr.controls.InputBox("ipb20");
											inputBox_21.bind("value").toDataColumn("EMAIL");
											container.addChild(inputBox_21, {
												"colIndex": 3,
												"rowIndex": 4
											});
											var output_23 = new cpr.controls.Output();
											output_23.value = "주소";
											container.addChild(output_23, {
												"colIndex": 0,
												"rowIndex": 5
											});
											var inputBox_22 = new cpr.controls.InputBox("ipb21");
											inputBox_22.bind("value").toDataColumn("ADDRESS");
											container.addChild(inputBox_22, {
												"colIndex": 1,
												"rowIndex": 5,
												"colSpan": 3,
												"rowSpan": 1
											});
											var output_24 = new cpr.controls.Output();
											output_24.value = "비고";
											container.addChild(output_24, {
												"colIndex": 0,
												"rowIndex": 9
											});
											var textArea_1 = new cpr.controls.TextArea("txa1");
											container.addChild(textArea_1, {
												"colIndex": 1,
												"rowIndex": 9,
												"colSpan": 3,
												"rowSpan": 1
											});
										})(group_16);
										container.addChild(group_16, {
											"colIndex": 0,
											"rowIndex": 1
										});
									})(group_14);
									container.addChild(group_14, {
										"colIndex": 1,
										"rowIndex": 0
									});
								})(group_12);
								container.addChild(group_12, {
									"colIndex": 0,
									"rowIndex": 1
								});
							})(group_9);
							tabItem_3.content = group_9;
							return tabItem_3;
						})(tabFolder_2);
						tabFolder_2.addTabItem(tabItem_3);
						
						var tabItem_4 = (function(tabFolder){
							var tabItem_4 = new cpr.controls.TabItem();
							tabItem_4.text = "그리드+그리드";
							var group_17 = new cpr.controls.Container("grp10");
							// Layout
							var formLayout_15 = new cpr.controls.layouts.FormLayout();
							formLayout_15.scrollable = false;
							formLayout_15.topMargin = "5px";
							formLayout_15.rightMargin = "5px";
							formLayout_15.bottomMargin = "5px";
							formLayout_15.leftMargin = "5px";
							formLayout_15.horizontalSpacing = "5px";
							formLayout_15.verticalSpacing = "5px";
							formLayout_15.setColumns(["1fr"]);
							formLayout_15.setRows(["37px", "1fr"]);
							formLayout_15.setRowAutoSizing(0, true);
							group_17.setLayout(formLayout_15);
							(function(container){
								var group_18 = new cpr.controls.Container("grpSearch3");
								group_18.userAttr({
									"mobile-column-count": "2",
									"tablet-column-count": "2"
								});
								group_18.style.setClasses(["search-box"]);
								// Layout
								var formLayout_16 = new cpr.controls.layouts.FormLayout();
								formLayout_16.topMargin = "5px";
								formLayout_16.rightMargin = "5px";
								formLayout_16.bottomMargin = "5px";
								formLayout_16.leftMargin = "5px";
								formLayout_16.setColumns(["120px", "120px", "120px", "200px", "1fr", "60px"]);
								formLayout_16.setRows(["25px"]);
								formLayout_16.setRowAutoSizing(0, true);
								group_18.setLayout(formLayout_16);
								(function(container){
									var output_25 = new cpr.controls.Output();
									output_25.value = "사원명";
									container.addChild(output_25, {
										"colIndex": 0,
										"rowIndex": 0
									});
									var inputBox_23 = new cpr.controls.InputBox("ipbEName2");
									inputBox_23.fieldLabel = "사원명";
									inputBox_23.userAttr({"autoKeydownSearch": "Y"});
									inputBox_23.bind("value").toDataMap(app.lookup("dmParam"), "strEName");
									container.addChild(inputBox_23, {
										"colIndex": 1,
										"rowIndex": 0
									});
									var output_26 = new cpr.controls.Output();
									output_26.value = "직급";
									container.addChild(output_26, {
										"colIndex": 2,
										"rowIndex": 0
									});
									var comboBox_10 = new cpr.controls.ComboBox("cmbJob3");
									comboBox_10.fieldLabel = "직급";
									comboBox_10.bind("value").toDataMap(app.lookup("dmParam"), "strJob");
									(function(comboBox_10){
										comboBox_10.addItem(new cpr.controls.Item("전체", ""));
										comboBox_10.setItemSet(app.lookup("dsJob"), {
											"label": "CD_NM",
											"value": "CD"
										});
									})(comboBox_10);
									container.addChild(comboBox_10, {
										"colIndex": 3,
										"rowIndex": 0
									});
									var group_19 = new cpr.controls.Container("grp11");
									// Layout
									var formLayout_17 = new cpr.controls.layouts.FormLayout();
									formLayout_17.setColumns(["3fr", "60px"]);
									formLayout_17.setRows(["25px"]);
									group_19.setLayout(formLayout_17);
									(function(container){
										var userDefinedControl_9 = new udc.com.comBtnSearch("btnSearch3");
										if(typeof onBtnSearch3Search == "function") {
											userDefinedControl_9.addEventListener("search", onBtnSearch3Search);
										}
										container.addChild(userDefinedControl_9, {
											"colIndex": 1,
											"rowIndex": 0,
											"horizontalAlign": "right",
											"verticalAlign": "fill",
											"width": 60
										});
									})(group_19);
									container.addChild(group_19, {
										"colIndex": 4,
										"rowIndex": 0,
										"colSpan": 2,
										"rowSpan": 1
									});
								})(group_18);
								container.addChild(group_18, {
									"colIndex": 0,
									"rowIndex": 0
								});
								var group_20 = new cpr.controls.Container("grpData4");
								// Layout
								var formLayout_18 = new cpr.controls.layouts.FormLayout();
								formLayout_18.userResizingMode = "standard";
								formLayout_18.setColumns(["1fr"]);
								formLayout_18.setRows(["1fr", "1fr"]);
								group_20.setLayout(formLayout_18);
								(function(container){
									var group_21 = new cpr.controls.Container("grpMain");
									// Layout
									var formLayout_19 = new cpr.controls.layouts.FormLayout();
									formLayout_19.setColumns(["1fr"]);
									formLayout_19.setRows(["25px", "1fr"]);
									group_21.setLayout(formLayout_19);
									(function(container){
										var group_22 = new cpr.controls.Container("grp12");
										// Layout
										var formLayout_20 = new cpr.controls.layouts.FormLayout();
										formLayout_20.topMargin = "0px";
										formLayout_20.rightMargin = "0px";
										formLayout_20.bottomMargin = "0px";
										formLayout_20.leftMargin = "0px";
										formLayout_20.horizontalSpacing = "5px";
										formLayout_20.verticalSpacing = "5px";
										formLayout_20.setColumns(["1fr", "260px"]);
										formLayout_20.setRows(["1fr"]);
										group_22.setLayout(formLayout_20);
										(function(container){
											var userDefinedControl_10 = linker.userDefinedControl_10 = new udc.com.comTitle("comtitle3");
											container.addChild(userDefinedControl_10, {
												"colIndex": 0,
												"rowIndex": 0
											});
											var userDefinedControl_11 = linker.userDefinedControl_11 = new udc.com.comButton("combutton3");
											userDefinedControl_11.focusColumnName = "EMPNO";
											if(typeof onCombutton3Save == "function") {
												userDefinedControl_11.addEventListener("save", onCombutton3Save);
											}
											container.addChild(userDefinedControl_11, {
												"colIndex": 1,
												"rowIndex": 0
											});
										})(group_22);
										container.addChild(group_22, {
											"colIndex": 0,
											"rowIndex": 0
										});
										var grid_3 = linker.grid_3 = new cpr.controls.Grid("grdMain3");
										grid_3.fieldLabel = "사원정보";
										grid_3.init({
											"dataSet": app.lookup("dv2"),
											"autoFit": "3, 4, 5, 6, 7, 8, 9, 10",
											"resizableColumns": "5, 6, 7, 8, 9, 10",
											"columns": [
												{"width": "25px"},
												{"width": "25px"},
												{"width": "40px"},
												{"width": "100px"},
												{"width": "100px"},
												{"width": "100px"},
												{"width": "120px"},
												{"width": "100px"},
												{"width": "100px"},
												{"width": "100px"},
												{"width": "100px"}
											],
											"header": {
												"rows": [{"height": "27px"}],
												"cells": [
													{
														"constraint": {"rowIndex": 0, "colIndex": 0},
														"configurator": function(cell){
															cell.columnType = "checkbox";
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 1},
														"configurator": function(cell){
															cell.text = "F";
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 2},
														"configurator": function(cell){
															cell.text = "No";
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 3},
														"configurator": function(cell){
															cell.targetColumnName = "EMPNO";
															cell.text = "사원번호";
															cell.style.setClasses(["require"]);
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 4},
														"configurator": function(cell){
															cell.targetColumnName = "ENAME";
															cell.text = "사원명";
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 10},
														"configurator": function(cell){
															cell.targetColumnName = "DEPTNO";
															cell.text = "부서코드";
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 9},
														"configurator": function(cell){
															cell.targetColumnName = "COMM";
															cell.text = "성과금";
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 8},
														"configurator": function(cell){
															cell.targetColumnName = "SAL";
															cell.text = "급여";
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 7},
														"configurator": function(cell){
															cell.targetColumnName = "HIREDATE";
															cell.text = "입사일";
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 6},
														"configurator": function(cell){
															cell.targetColumnName = "MGR";
															cell.text = "관리자 사원번호";
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 5},
														"configurator": function(cell){
															cell.targetColumnName = "JOB";
															cell.text = "직급";
														}
													}
												]
											},
											"detail": {
												"rows": [{"height": "25px"}],
												"cells": [
													{
														"constraint": {"rowIndex": 0, "colIndex": 0},
														"configurator": function(cell){
															cell.columnType = "checkbox";
															cell.style.css({
																"text-align" : "center"
															});
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 1},
														"configurator": function(cell){
															cell.control = (function(){
																var output_27 = new cpr.controls.Output();
																output_27.style.css({
																	"text-align" : "center"
																});
																return output_27;
															})();
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 2},
														"configurator": function(cell){
															cell.columnType = "rowindex";
															cell.style.css({
																"text-align" : "center"
															});
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 3},
														"configurator": function(cell){
															cell.columnName = "EMPNO";
															cell.control = (function(){
																var inputBox_24 = new cpr.controls.InputBox("ipb22");
																inputBox_24.inputFilter = "[0-9]";
																inputBox_24.userAttr({"required": "Y"});
																inputBox_24.style.css({
																	"text-align" : "center"
																});
																inputBox_24.bind("value").toDataColumn("EMPNO");
																return inputBox_24;
															})();
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 4},
														"configurator": function(cell){
															cell.columnName = "ENAME";
															cell.control = (function(){
																var inputBox_25 = new cpr.controls.InputBox("ipb23");
																inputBox_25.style.css({
																	"text-align" : "center"
																});
																inputBox_25.bind("value").toDataColumn("ENAME");
																return inputBox_25;
															})();
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 10},
														"configurator": function(cell){
															cell.columnName = "DEPTNO";
															cell.control = (function(){
																var inputBox_26 = new cpr.controls.InputBox("ipb24");
																inputBox_26.style.css({
																	"text-align" : "center"
																});
																inputBox_26.bind("value").toDataColumn("DEPTNO");
																return inputBox_26;
															})();
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 9},
														"configurator": function(cell){
															cell.columnName = "COMM";
															cell.control = (function(){
																var numberEditor_9 = new cpr.controls.NumberEditor("nbe9");
																numberEditor_9.bind("value").toDataColumn("COMM");
																return numberEditor_9;
															})();
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 8},
														"configurator": function(cell){
															cell.columnName = "SAL";
															cell.control = (function(){
																var numberEditor_10 = new cpr.controls.NumberEditor("nbe10");
																numberEditor_10.bind("value").toDataColumn("SAL");
																return numberEditor_10;
															})();
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 7},
														"configurator": function(cell){
															cell.columnName = "HIREDATE";
															cell.control = (function(){
																var dateInput_6 = new cpr.controls.DateInput("dti6");
																dateInput_6.format = "YYYY-MM-DD";
																dateInput_6.bind("value").toDataColumn("HIREDATE");
																return dateInput_6;
															})();
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 6},
														"configurator": function(cell){
															cell.columnName = "MGR";
															cell.control = (function(){
																var inputBox_27 = new cpr.controls.InputBox("ipb25");
																inputBox_27.style.css({
																	"text-align" : "center"
																});
																inputBox_27.bind("value").toDataColumn("MGR");
																return inputBox_27;
															})();
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 5},
														"configurator": function(cell){
															cell.columnName = "JOB";
															cell.control = (function(){
																var comboBox_11 = new cpr.controls.ComboBox("cmb8");
																comboBox_11.style.css({
																	"text-align" : "center"
																});
																(function(comboBox_11){
																	comboBox_11.setItemSet(app.lookup("dsJob"), {
																		"label": "CD_NM",
																		"value": "CD"
																	});
																})(comboBox_11);
																comboBox_11.bind("value").toDataColumn("JOB");
																return comboBox_11;
															})();
														}
													}
												]
											}
										});
										if(typeof onGrdMain3SelectionChange == "function") {
											grid_3.addEventListener("selection-change", onGrdMain3SelectionChange);
										}
										container.addChild(grid_3, {
											"colIndex": 0,
											"rowIndex": 1,
											"colSpan": 1,
											"rowSpan": 1
										});
									})(group_21);
									container.addChild(group_21, {
										"colIndex": 0,
										"rowIndex": 0
									});
									var group_23 = new cpr.controls.Container("grpDataSub");
									// Layout
									var formLayout_21 = new cpr.controls.layouts.FormLayout();
									formLayout_21.horizontalSpacing = "5px";
									formLayout_21.verticalSpacing = "5px";
									formLayout_21.setColumns(["1fr"]);
									formLayout_21.setRows(["25px", "1fr"]);
									group_23.setLayout(formLayout_21);
									(function(container){
										var group_24 = new cpr.controls.Container("grp13");
										// Layout
										var formLayout_22 = new cpr.controls.layouts.FormLayout();
										formLayout_22.topMargin = "0px";
										formLayout_22.rightMargin = "0px";
										formLayout_22.bottomMargin = "0px";
										formLayout_22.leftMargin = "0px";
										formLayout_22.horizontalSpacing = "5px";
										formLayout_22.verticalSpacing = "5px";
										formLayout_22.setColumns(["1fr", "260px"]);
										formLayout_22.setRows(["1fr"]);
										group_24.setLayout(formLayout_22);
										(function(container){
											var userDefinedControl_12 = linker.userDefinedControl_12 = new udc.com.comTitle("comtitle4");
											container.addChild(userDefinedControl_12, {
												"colIndex": 0,
												"rowIndex": 0
											});
											var userDefinedControl_13 = linker.userDefinedControl_13 = new udc.com.comButton("combutton4");
											userDefinedControl_13.focusColumnName = "DEPTNO";
											if(typeof onCombutton4Save == "function") {
												userDefinedControl_13.addEventListener("save", onCombutton4Save);
											}
											container.addChild(userDefinedControl_13, {
												"colIndex": 1,
												"rowIndex": 0
											});
										})(group_24);
										container.addChild(group_24, {
											"colIndex": 0,
											"rowIndex": 0
										});
										var grid_4 = linker.grid_4 = new cpr.controls.Grid("grdSub");
										grid_4.fieldLabel = "부서정보";
										grid_4.init({
											"dataSet": app.lookup("dsDept"),
											"autoFit": "3, 4, 5",
											"columns": [
												{"width": "25px"},
												{"width": "25px"},
												{"width": "40px"},
												{"width": "100px"},
												{"width": "100px"},
												{"width": "100px"}
											],
											"header": {
												"rows": [{"height": "27px"}],
												"cells": [
													{
														"constraint": {"rowIndex": 0, "colIndex": 0},
														"configurator": function(cell){
															cell.columnType = "checkbox";
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 1},
														"configurator": function(cell){
															cell.text = "F";
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 2},
														"configurator": function(cell){
															cell.text = "번호";
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 5},
														"configurator": function(cell){
															cell.targetColumnName = "LOC";
															cell.text = "장소";
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 4},
														"configurator": function(cell){
															cell.targetColumnName = "DNAME";
															cell.text = "부서명";
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 3},
														"configurator": function(cell){
															cell.targetColumnName = "DEPTNO";
															cell.text = "부서코드";
															cell.style.setClasses(["require"]);
														}
													}
												]
											},
											"detail": {
												"rows": [{"height": "25px"}],
												"cells": [
													{
														"constraint": {"rowIndex": 0, "colIndex": 0},
														"configurator": function(cell){
															cell.columnType = "checkbox";
															cell.style.css({
																"text-align" : "center"
															});
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 1},
														"configurator": function(cell){
															cell.control = (function(){
																var output_28 = new cpr.controls.Output();
																output_28.style.css({
																	"text-align" : "center"
																});
																return output_28;
															})();
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 2},
														"configurator": function(cell){
															cell.columnType = "rowindex";
															cell.style.css({
																"text-align" : "center"
															});
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 5},
														"configurator": function(cell){
															cell.columnName = "LOC";
															cell.control = (function(){
																var inputBox_28 = new cpr.controls.InputBox("ipb26");
																inputBox_28.style.css({
																	"text-align" : "center"
																});
																inputBox_28.bind("value").toDataColumn("LOC");
																return inputBox_28;
															})();
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 4},
														"configurator": function(cell){
															cell.columnName = "DNAME";
															cell.control = (function(){
																var inputBox_29 = new cpr.controls.InputBox("ipb27");
																inputBox_29.style.css({
																	"text-align" : "center"
																});
																inputBox_29.bind("value").toDataColumn("DNAME");
																return inputBox_29;
															})();
														}
													},
													{
														"constraint": {"rowIndex": 0, "colIndex": 3},
														"configurator": function(cell){
															cell.columnName = "DEPTNO";
															cell.control = (function(){
																var inputBox_30 = new cpr.controls.InputBox("ipb28");
																inputBox_30.userAttr({"required": "Y"});
																inputBox_30.style.css({
																	"text-align" : "center"
																});
																inputBox_30.bind("value").toDataColumn("DEPTNO");
																return inputBox_30;
															})();
														}
													}
												]
											}
										});
										container.addChild(grid_4, {
											"colIndex": 0,
											"rowIndex": 1
										});
									})(group_23);
									container.addChild(group_23, {
										"colIndex": 0,
										"rowIndex": 1
									});
								})(group_20);
								container.addChild(group_20, {
									"colIndex": 0,
									"rowIndex": 1
								});
							})(group_17);
							tabItem_4.content = group_17;
							return tabItem_4;
						})(tabFolder_2);
						tabFolder_2.addTabItem(tabItem_4);
						tabFolder_2.setSelectedTabItem(tabItem_2);
						if(typeof onTab2BeforeSelectionChange == "function") {
							tabFolder_2.addEventListener("before-selection-change", onTab2BeforeSelectionChange);
						}
						if(typeof onTab2SelectionChange == "function") {
							tabFolder_2.addEventListener("selection-change", onTab2SelectionChange);
						}
						container.addChild(tabFolder_2, {
							"top": "5px",
							"right": "5px",
							"bottom": "5px",
							"left": "5px"
						});
					})(group_3);
					tabItem_1.content = group_3;
					return tabItem_1;
				})(tabFolder_1);
				tabFolder_1.addTabItem(tabItem_1);
				
				var tabItem_5 = (function(tabFolder){
					var tabItem_5 = new cpr.controls.TabItem();
					tabItem_5.text = "tab 2";
					var group_25 = new cpr.controls.Container("grp14");
					// Layout
					var xYLayout_2 = new cpr.controls.layouts.XYLayout();
					group_25.setLayout(xYLayout_2);
					(function(container){
					})(group_25);
					tabItem_5.content = group_25;
					return tabItem_5;
				})(tabFolder_1);
				tabFolder_1.addTabItem(tabItem_5);
				
				var tabItem_6 = (function(tabFolder){
					var tabItem_6 = new cpr.controls.TabItem();
					tabItem_6.text = "tab 3";
					var group_26 = new cpr.controls.Container("grp15");
					// Layout
					var xYLayout_3 = new cpr.controls.layouts.XYLayout();
					group_26.setLayout(xYLayout_3);
					(function(container){
					})(group_26);
					tabItem_6.content = group_26;
					return tabItem_6;
				})(tabFolder_1);
				tabFolder_1.addTabItem(tabItem_6);
				tabFolder_1.setSelectedTabItem(tabItem_1);
				if(typeof onTab2BeforeSelectionChange == "function") {
					tabFolder_1.addEventListener("before-selection-change", onTab2BeforeSelectionChange);
				}
				if(typeof onTab2SelectionChange == "function") {
					tabFolder_1.addEventListener("selection-change", onTab2SelectionChange);
				}
				container.addChild(tabFolder_1, {
					"colIndex": 0,
					"rowIndex": 0
				});
			})(group_2);
			container.addChild(group_2, {
				"autoSize": "none",
				"width": "1320px",
				"height": "645px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_3.ctrl = linker.grid_1;
			linker.userDefinedControl_4.grid = linker.grid_1;
			linker.userDefinedControl_6.ctrl = linker.grid_2;
			linker.userDefinedControl_7.grid = linker.grid_2;
			linker.userDefinedControl_8.ctrl = linker.group_16;
			linker.group_16.setBindContext(new cpr.bind.GridSelectionContext(linker.grid_2));
			linker.inputBox_15.setNextControl(linker.inputBox_16);
			linker.inputBox_16.setPrevControl(linker.inputBox_15);
			linker.userDefinedControl_10.ctrl = linker.grid_3;
			linker.userDefinedControl_11.grid = linker.grid_3;
			linker.userDefinedControl_12.ctrl = linker.grid_4;
			linker.userDefinedControl_13.grid = linker.grid_4;
		}
	});
	app.title = "템플릿(탭속의 탭)";
	cpr.core.Platform.INSTANCE.register(app);
})();
