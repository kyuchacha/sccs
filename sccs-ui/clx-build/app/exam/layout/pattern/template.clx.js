/*
 * App URI: app/exam/layout/pattern/template
 * Source Location: app/exam/layout/pattern/template.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/exam/layout/pattern/template", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * template.js
			 * Created at 2021. 4. 28. 오후 2:12:45.
			 *
			 * @author kjyan
			 ************************************************/
			//공통 모듈 사용
			var util = createCommonUtil();
			
			/*
			 * Body에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				
				util.Submit.send(app, "subOnLoad", function(pbSuccess) {
					if (pbSuccess) {
					}
				});
			}
			
			/*
			 * 그리드에서 selection-change 이벤트 발생 시 호출.
			 * detail의 cell 클릭하여 설정된 selectionunit에 해당되는 단위가 선택될 때 발생하는 이벤트.
			 */
			function onGrdMainSelectionChange(/* cpr.events.CSelectionEvent */ e){
			}
			
			
			
			
			
			/*
			 * 그리드에서 row-dblclick 이벤트 발생 시 호출.
			 * detail이 row를 더블클릭 한 경우 발생하는 이벤트.
			 */
			function onGrdMainRowDblclick(/* cpr.events.CGridMouseEvent */ e){
				/** 
				 * @type cpr.controls.Grid
				 */
				var grdMain = e.control;
				
					/** @type cpr.controls.MDIFolder */
				var vcMdiCn = app.getRootAppInstance().lookup("mdiCn");
				
				if (vcMdiCn == null){
					return;
				}
				
				var vsCallPage = util.Grid.getCellValue(app, "grdMain", "CALL_PAGE");
				var vsMenuId = util.Grid.getCellValue(app, "grdMain", "MENU_ID");
				var vsMenuNm= util.Grid.getCellValue(app, "grdMain", "MENU_NM");
				
				var vaCallPgm = vsCallPage.toString().split("/");
				var vsPgm = vaCallPgm[vaCallPgm.length-1];
				var vsPgmId = vsPgm.substr(0, vsPgm.length-4);
				var vsAppId = vsCallPage.replace(".clx", "");
				
				
				var voAlreadyOpenedItem = vcMdiCn.findItemWithAppID(vsAppId);
				if (voAlreadyOpenedItem != null){
					vcMdiCn.setSelectedTabItem(voAlreadyOpenedItem);
					return;
				}
				
				vcMdiCn.addItemWithApp(vsAppId, true, function(item) {
					/** @type cpr.controls.Output */
					item.text = vsMenuNm;
					item.tooltip = vsMenuNm;
					item.closable = true;
				});
				
				
				if (!ValueUtil.isNull(vsCallPage) && window.eb6Preview){
					window.eb6Preview.openAppEditor(vsCallPage.split(".clx")[0]);
				}
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsAllMenu");
			dataSet_1.parseData({
				"filterCondition": "MENU_LVL==3",
				"columns": [
					{"name": "MENU_ID"},
					{"name": "MENU_NM"},
					{"name": "CALL_PAGE"},
					{"name": "UP_MENU_ID"},
					{"name": "ICON"},
					{"name": "MENU_LVL"},
					{"name": "MENU_KEY"}
				]
			});
			app.register(dataSet_1);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "app/exam/data/main/main.json";
			submission_1.addResponseData(dataSet_1, false);
			app.register(submission_1);
			
			app.supportMedia("all and (min-width: 1320px)", "eXFrame");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1319px)", "default");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader");
			container.addChild(userDefinedControl_1, {
				"width": "1320px",
				"height": "30px"
			});
			
			var group_1 = new cpr.controls.Container("grpData");
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.topMargin = "5px";
			formLayout_1.rightMargin = "5px";
			formLayout_1.bottomMargin = "5px";
			formLayout_1.leftMargin = "5px";
			formLayout_1.horizontalSpacing = "5px";
			formLayout_1.verticalSpacing = "5px";
			formLayout_1.setColumns(["1fr"]);
			formLayout_1.setRows(["25px", "1fr"]);
			group_1.setLayout(formLayout_1);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle("comtitle1");
				container.addChild(userDefinedControl_2, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdMain");
				grid_1.fieldLabel = "샘플화면 목록";
				grid_1.readOnly = true;
				grid_1.init({
					"dataSet": app.lookup("dsAllMenu"),
					"autoFit": "2, 3, 5",
					"columns": [
						{"width": "25px"},
						{"width": "50px"},
						{
							"width": "100px",
							"visible": false
						},
						{"width": "100px"},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "24px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.filterable = false;
									cell.sortable = false;
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.filterable = false;
									cell.sortable = false;
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.targetColumnName = "MENU_ID";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "메뉴 ID";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.targetColumnName = "MENU_NM";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "메뉴명";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.targetColumnName = "CALL_PAGE";
									cell.text = "메뉴 URL";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.targetColumnName = "MENU_LVL";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "메뉴 레벨";
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "24px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnType = "rowindex";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "MENU_ID";
									cell.control = (function(){
										var output_1 = new cpr.controls.Output();
										output_1.value = "Output";
										output_1.bind("value").toDataColumn("MENU_ID");
										return output_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "MENU_NM";
									cell.control = (function(){
										var output_2 = new cpr.controls.Output();
										output_2.value = "Output";
										output_2.bind("value").toDataColumn("MENU_NM");
										return output_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "CALL_PAGE";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "MENU_LVL";
									cell.control = (function(){
										var output_3 = new cpr.controls.Output();
										output_3.value = "Output";
										output_3.bind("value").toDataColumn("MENU_LVL");
										return output_3;
									})();
								}
							}
						]
					}
				});
				if(typeof onGrdMainSelectionChange == "function") {
					grid_1.addEventListener("selection-change", onGrdMainSelectionChange);
				}
				if(typeof onGrdMainRowDblclick == "function") {
					grid_1.addEventListener("row-dblclick", onGrdMainRowDblclick);
				}
				container.addChild(grid_1, {
					"colIndex": 0,
					"rowIndex": 1
				});
			})(group_1);
			container.addChild(group_1, {
				"width": "1320px",
				"height": "645px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
		}
	});
	app.title = "template";
	cpr.core.Platform.INSTANCE.register(app);
})();
