/*
 * App URI: app/exam/layout/pattern/templateGridFormTB
 * Source Location: app/exam/layout/pattern/templateGridFormTB.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/exam/layout/pattern/templateGridFormTB", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			//공통 모듈 사용
			var util = createCommonUtil();
			/*
			 * Body에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				
				util.Submit.send(app, "subOnLoad", function(pbSuccess) {
					if (pbSuccess) {
						util.Control.redraw(app, "cmbJob");
						util.ComUdcBtn.dispatchEvent(app, "btnSearch", "click");
					}
				});
			}
			
			
			
			/*
			 * 사용자 정의 컨트롤에서 search 이벤트 발생 시 호출.
			 * 조회버튼 클릭시 이벤트
			 */
			function onCombtnsearchSearch(/* cpr.events.CUIEvent */ e){
				// 1. 데이터 변경사항 체크
				if (util.Grid.isModified(app, "grdMain", "CRM")) {
					return false;
				}
				
				// 2. 조회조건 유효성 체크
				if(!util.validate(app, "grpSearch")) return false;
				
				// 3. 데이터 조회
				doList();
			}
			
			/**
			 * 그리드 데이터를 조회
			 * @param psStatus - 조회 상태(저장 후 조회인 경우에는 'save' 구분값 넘김)
			 */
			function doList(psStatus) {
				util.Submit.send(app, "subList", function(pbSuccess) {
					if(pbSuccess) {
						if(psStatus == "save"){
							//갱신된 데이터가 조회되었습니다.
							util.Msg.notify(app, "INF-M005");
						}else{
							//조회되었습니다.
							util.Msg.notify(app, "INF-M001");
							util.Grid.selectRow(app, "grdMain", 0);
						}
					}
				});
			}
			
			/*
			 * 사용자 정의 컨트롤에서 save 이벤트 발생 시 호출.
			 * 저장 클릭 이벤트
			 */
			function onComButtonSave(/* cpr.events.CUIEvent */ e){
				// 1. 데이터 변경사항 체크
				if (!util.Grid.isModified(app, "grdMain", "MSG")) return false;
				
				// 2. 유효성 체크
				if (!util.validate(app, "grdMain")) return false;
				
				// 3. 데이터 저장
				util.Submit.send(app, "subSave", function(pbSuccess){
					if(pbSuccess){
						doList("save");
					}
				});
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsJob");
			dataSet_1.parseData({
				"columns" : [
					{"name": "CD_NM"},
					{"name": "CD"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsEmp");
			dataSet_2.parseData({
				"info": "EMPNO",
				"columns": [
					{
						"name": "EMPNO",
						"dataType": "number"
					},
					{"name": "ENAME"},
					{"name": "JOB"},
					{
						"name": "MGR",
						"dataType": "number"
					},
					{"name": "HIREDATE"},
					{
						"name": "SAL",
						"dataType": "decimal"
					},
					{
						"name": "COMM",
						"dataType": "decimal"
					},
					{
						"name": "DEPTNO",
						"dataType": "number"
					},
					{
						"name": "AGE",
						"dataType": "number"
					},
					{"name": "GENDER"},
					{"name": "BRTDY"},
					{"name": "NATION"},
					{"name": "LOGINID"},
					{"name": "PWD"},
					{"name": "EMAIL"},
					{"name": "PHONENUM"},
					{"name": "ADDRESS"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsGender");
			dataSet_3.parseData({
				"columns" : [
					{"name": "CD_NM"},
					{"name": "CD"}
				]
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsNat");
			dataSet_4.parseData({
				"columns" : [
					{"name": "CD_NM"},
					{"name": "CD"}
				]
			});
			app.register(dataSet_4);
			var dataMap_1 = new cpr.data.DataMap("dmParam");
			dataMap_1.parseData({
				"columns" : [
					{"name": "strEName"},
					{"name": "strJob"}
				]
			});
			app.register(dataMap_1);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "app/exam/data/temp/template.json";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_4, false);
			submission_1.addResponseData(dataSet_3, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "app/exam/data/temp/template.json";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataSet_2, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSave");
			submission_3.action = "app/exam/data/temp/template.json";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataSet_2);
			app.register(submission_3);
			
			app.supportMedia("all and (min-width: 1320px)", "eXFrame");
			app.supportMedia("all and (min-width: 1235px) and (max-width: 1319px)", "default");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1234px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpHeader");
			group_1.style.setClasses(["header-box"]);
			// Layout
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_2.spacing = 0;
			group_1.setLayout(verticalLayout_2);
			(function(container){
				var userDefinedControl_1 = linker.userDefinedControl_1 = new udc.com.appHeader("appheader");
				container.addChild(userDefinedControl_1, {
					"autoSize": "none",
					"width": "1320px",
					"height": "30px"
				});
				var group_2 = new cpr.controls.Container("grpSearch");
				group_2.userAttr({
					"mobile-column-count": "2",
					"tablet-column-count": "2"
				});
				group_2.style.setClasses(["search-box"]);
				// Layout
				var formLayout_1 = new cpr.controls.layouts.FormLayout();
				formLayout_1.topMargin = "5px";
				formLayout_1.rightMargin = "5px";
				formLayout_1.bottomMargin = "5px";
				formLayout_1.leftMargin = "5px";
				formLayout_1.setColumns(["120px", "200px", "120px", "200px", "1fr", "60px"]);
				formLayout_1.setRows(["25px"]);
				formLayout_1.setRowAutoSizing(0, true);
				group_2.setLayout(formLayout_1);
				(function(container){
					var output_1 = new cpr.controls.Output();
					output_1.value = "사원명";
					container.addChild(output_1, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var inputBox_1 = new cpr.controls.InputBox("ipb5");
					inputBox_1.fieldLabel = "사원명";
					inputBox_1.userAttr({"autoKeydownSearch": "Y"});
					inputBox_1.bind("value").toDataMap(app.lookup("dmParam"), "strEName");
					container.addChild(inputBox_1, {
						"colIndex": 1,
						"rowIndex": 0
					});
					var output_2 = new cpr.controls.Output();
					output_2.value = "직급";
					container.addChild(output_2, {
						"colIndex": 2,
						"rowIndex": 0
					});
					var comboBox_1 = new cpr.controls.ComboBox("cmbJob");
					comboBox_1.fieldLabel = "직급";
					comboBox_1.bind("value").toDataMap(app.lookup("dmParam"), "strJob");
					(function(comboBox_1){
						comboBox_1.addItem(new cpr.controls.Item("전체", ""));
						comboBox_1.setItemSet(app.lookup("dsJob"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_1);
					container.addChild(comboBox_1, {
						"colIndex": 3,
						"rowIndex": 0
					});
					var group_3 = new cpr.controls.Container("grp4");
					// Layout
					var formLayout_2 = new cpr.controls.layouts.FormLayout();
					formLayout_2.setColumns(["3fr", "60px"]);
					formLayout_2.setRows(["25px"]);
					group_3.setLayout(formLayout_2);
					(function(container){
						var userDefinedControl_2 = new udc.com.comBtnSearch("combtnsearch1");
						if(typeof onCombtnsearchSearch == "function") {
							userDefinedControl_2.addEventListener("search", onCombtnsearchSearch);
						}
						container.addChild(userDefinedControl_2, {
							"colIndex": 1,
							"rowIndex": 0,
							"horizontalAlign": "right",
							"verticalAlign": "fill",
							"width": 60
						});
					})(group_3);
					container.addChild(group_3, {
						"colIndex": 4,
						"rowIndex": 0,
						"colSpan": 2,
						"rowSpan": 1
					});
				})(group_2);
				container.addChild(group_2, {
					"autoSize": "height",
					"width": "1320px",
					"height": "37px"
				});
			})(group_1);
			container.addChild(group_1, {
				"autoSize": "height",
				"width": "1320px",
				"height": "67px"
			});
			
			var group_4 = new cpr.controls.Container("grpData");
			group_4.userAttr({
				"mobile-column-count": "1",
				"tablet-column-count": "1"
			});
			// Layout
			var formLayout_3 = new cpr.controls.layouts.FormLayout();
			formLayout_3.userResizingMode = "standard";
			formLayout_3.horizontalSpacing = "5px";
			formLayout_3.verticalSpacing = "5px";
			formLayout_3.setColumns(["1fr"]);
			formLayout_3.setRows(["1fr", "1fr"]);
			group_4.setLayout(formLayout_3);
			(function(container){
				var group_5 = new cpr.controls.Container("grp1");
				// Layout
				var formLayout_4 = new cpr.controls.layouts.FormLayout();
				formLayout_4.setColumns(["1fr"]);
				formLayout_4.setRows(["25px", "1fr"]);
				group_5.setLayout(formLayout_4);
				(function(container){
					var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdMain");
					grid_1.fieldLabel = "직원 정보";
					grid_1.userAttr({"bindDataFormId": "frfMain"});
					grid_1.init({
						"dataSet": app.lookup("dsEmp"),
						"autoFit": "3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19",
						"columns": [
							{"width": "25px"},
							{"width": "25px"},
							{"width": "40px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "70px"},
							{"width": "100px"},
							{"width": "120px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "150px"},
							{"width": "150px"},
							{"width": "200px"},
							{"width": "100px"},
							{"width": "120px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"}
						],
						"header": {
							"rows": [{"height": "27px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.columnType = "checkbox";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.text = "F";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.text = "No";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3},
									"configurator": function(cell){
										cell.targetColumnName = "EMPNO";
										cell.text = "사원번호";
										cell.style.setClasses(["require"]);
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 4},
									"configurator": function(cell){
										cell.targetColumnName = "ENAME";
										cell.text = "사원명";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 19},
									"configurator": function(cell){
										cell.targetColumnName = "DEPTNO";
										cell.text = "부서코드";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 18},
									"configurator": function(cell){
										cell.targetColumnName = "COMM";
										cell.text = "성과금";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 17},
									"configurator": function(cell){
										cell.targetColumnName = "SAL";
										cell.text = "급여";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 16},
									"configurator": function(cell){
										cell.targetColumnName = "HIREDATE";
										cell.text = "입사일";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 15},
									"configurator": function(cell){
										cell.targetColumnName = "MGR";
										cell.text = "관리자 사원번호";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 14},
									"configurator": function(cell){
										cell.targetColumnName = "JOB";
										cell.text = "직급";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 13},
									"configurator": function(cell){
										cell.targetColumnName = "ADDRESS";
										cell.text = "주소";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 12},
									"configurator": function(cell){
										cell.targetColumnName = "PHONENUM";
										cell.text = "전화번호";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 11},
									"configurator": function(cell){
										cell.targetColumnName = "EMAIL";
										cell.text = "이메일";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 10},
									"configurator": function(cell){
										cell.targetColumnName = "PWD";
										cell.text = "비밀번호";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 9},
									"configurator": function(cell){
										cell.targetColumnName = "LOGINID";
										cell.text = "로그인ID";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 8},
									"configurator": function(cell){
										cell.targetColumnName = "NATION";
										cell.text = "국가";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 7},
									"configurator": function(cell){
										cell.targetColumnName = "BRTDY";
										cell.text = "출생년도";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 6},
									"configurator": function(cell){
										cell.targetColumnName = "GENDER";
										cell.text = "성별";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 5},
									"configurator": function(cell){
										cell.targetColumnName = "AGE";
										cell.text = "나이";
									}
								}
							]
						},
						"detail": {
							"rows": [{"height": "25px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.columnType = "checkbox";
										cell.style.css({
											"text-align" : "center"
										});
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.control = (function(){
											var output_3 = new cpr.controls.Output();
											output_3.style.css({
												"text-align" : "center"
											});
											return output_3;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.columnType = "rowindex";
										cell.style.css({
											"text-align" : "center"
										});
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3},
									"configurator": function(cell){
										cell.columnName = "EMPNO";
										cell.control = (function(){
											var inputBox_2 = new cpr.controls.InputBox("ipb7");
											inputBox_2.inputFilter = "[0-9]";
											inputBox_2.style.css({
												"text-align" : "center"
											});
											inputBox_2.bind("value").toDataColumn("EMPNO");
											return inputBox_2;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 4},
									"configurator": function(cell){
										cell.columnName = "ENAME";
										cell.control = (function(){
											var inputBox_3 = new cpr.controls.InputBox("ipb8");
											inputBox_3.style.css({
												"text-align" : "center"
											});
											inputBox_3.bind("value").toDataColumn("ENAME");
											return inputBox_3;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 19},
									"configurator": function(cell){
										cell.columnName = "DEPTNO";
										cell.control = (function(){
											var inputBox_4 = new cpr.controls.InputBox("ipb9");
											inputBox_4.style.css({
												"text-align" : "center"
											});
											inputBox_4.bind("value").toDataColumn("DEPTNO");
											return inputBox_4;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 18},
									"configurator": function(cell){
										cell.columnName = "COMM";
										cell.control = (function(){
											var numberEditor_1 = new cpr.controls.NumberEditor("nbe2");
											numberEditor_1.bind("value").toDataColumn("COMM");
											return numberEditor_1;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 17},
									"configurator": function(cell){
										cell.columnName = "SAL";
										cell.control = (function(){
											var numberEditor_2 = new cpr.controls.NumberEditor("nbe1");
											numberEditor_2.bind("value").toDataColumn("SAL");
											return numberEditor_2;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 16},
									"configurator": function(cell){
										cell.columnName = "HIREDATE";
										cell.control = (function(){
											var dateInput_1 = new cpr.controls.DateInput("dti1");
											dateInput_1.format = "YYYY-MM-DD";
											dateInput_1.bind("value").toDataColumn("HIREDATE");
											return dateInput_1;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 15},
									"configurator": function(cell){
										cell.columnName = "MGR";
										cell.control = (function(){
											var inputBox_5 = new cpr.controls.InputBox("ipb10");
											inputBox_5.style.css({
												"text-align" : "center"
											});
											inputBox_5.bind("value").toDataColumn("MGR");
											return inputBox_5;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 14},
									"configurator": function(cell){
										cell.columnName = "JOB";
										cell.control = (function(){
											var comboBox_2 = new cpr.controls.ComboBox("cmb1");
											comboBox_2.style.css({
												"text-align" : "center"
											});
											(function(comboBox_2){
												comboBox_2.setItemSet(app.lookup("dsJob"), {
													"label": "CD_NM",
													"value": "CD"
												});
											})(comboBox_2);
											comboBox_2.bind("value").toDataColumn("JOB");
											return comboBox_2;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 13},
									"configurator": function(cell){
										cell.columnName = "ADDRESS";
										cell.control = (function(){
											var inputBox_6 = new cpr.controls.InputBox("ipb17");
											inputBox_6.bind("value").toDataColumn("ADDRESS");
											return inputBox_6;
										})();
										cell.controlConstraint = {};
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 12},
									"configurator": function(cell){
										cell.columnName = "PHONENUM";
										cell.control = (function(){
											var maskEditor_1 = new cpr.controls.MaskEditor("mse1");
											maskEditor_1.mask = "000-0000-0000";
											maskEditor_1.bind("value").toDataColumn("PHONENUM");
											return maskEditor_1;
										})();
										cell.controlConstraint = {};
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 11},
									"configurator": function(cell){
										cell.columnName = "EMAIL";
										cell.control = (function(){
											var inputBox_7 = new cpr.controls.InputBox("ipb16");
											inputBox_7.bind("value").toDataColumn("EMAIL");
											return inputBox_7;
										})();
										cell.controlConstraint = {};
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 10},
									"configurator": function(cell){
										cell.columnName = "PWD";
										cell.control = (function(){
											var inputBox_8 = new cpr.controls.InputBox("ipb15");
											inputBox_8.secret = true;
											inputBox_8.bind("value").toDataColumn("PWD");
											return inputBox_8;
										})();
										cell.controlConstraint = {};
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 9},
									"configurator": function(cell){
										cell.columnName = "LOGINID";
										cell.control = (function(){
											var inputBox_9 = new cpr.controls.InputBox("ipb14");
											inputBox_9.bind("value").toDataColumn("LOGINID");
											return inputBox_9;
										})();
										cell.controlConstraint = {};
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 8},
									"configurator": function(cell){
										cell.columnName = "NATION";
										cell.control = (function(){
											var comboBox_3 = new cpr.controls.ComboBox("cmb6");
											(function(comboBox_3){
												comboBox_3.setItemSet(app.lookup("dsNat"), {
													"label": "CD_NM",
													"value": "CD"
												});
											})(comboBox_3);
											comboBox_3.bind("value").toDataColumn("NATION");
											return comboBox_3;
										})();
										cell.controlConstraint = {};
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 7},
									"configurator": function(cell){
										cell.columnName = "BRTDY";
										cell.control = (function(){
											var dateInput_2 = new cpr.controls.DateInput("dti4");
											dateInput_2.format = "YYYY-MM-DD";
											dateInput_2.bind("value").toDataColumn("BRTDY");
											return dateInput_2;
										})();
										cell.controlConstraint = {};
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 6},
									"configurator": function(cell){
										cell.columnName = "GENDER";
										cell.control = (function(){
											var comboBox_4 = new cpr.controls.ComboBox("cmb5");
											(function(comboBox_4){
												comboBox_4.setItemSet(app.lookup("dsGender"), {
													"label": "CD_NM",
													"value": "CD"
												});
											})(comboBox_4);
											comboBox_4.bind("value").toDataColumn("GENDER");
											return comboBox_4;
										})();
										cell.controlConstraint = {};
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 5},
									"configurator": function(cell){
										cell.columnName = "AGE";
										cell.control = (function(){
											var numberEditor_3 = new cpr.controls.NumberEditor("nbe6");
											numberEditor_3.bind("value").toDataColumn("AGE");
											return numberEditor_3;
										})();
										cell.controlConstraint = {};
									}
								}
							]
						}
					});
					container.addChild(grid_1, {
						"colIndex": 0,
						"rowIndex": 1,
						"colSpan": 1,
						"rowSpan": 1
					});
					var group_6 = new cpr.controls.Container("grp5");
					// Layout
					var formLayout_5 = new cpr.controls.layouts.FormLayout();
					formLayout_5.setColumns(["1fr", "260px"]);
					formLayout_5.setRows(["25px"]);
					group_6.setLayout(formLayout_5);
					(function(container){
						var userDefinedControl_3 = linker.userDefinedControl_3 = new udc.com.comButton("combutton1");
						userDefinedControl_3.focusColumnName = "EMPNO";
						if(typeof onComButtonSave == "function") {
							userDefinedControl_3.addEventListener("save", onComButtonSave);
						}
						container.addChild(userDefinedControl_3, {
							"colIndex": 1,
							"rowIndex": 0
						});
						var userDefinedControl_4 = linker.userDefinedControl_4 = new udc.com.comTitle("comtitle1");
						container.addChild(userDefinedControl_4, {
							"colIndex": 0,
							"rowIndex": 0
						});
					})(group_6);
					container.addChild(group_6, {
						"colIndex": 0,
						"rowIndex": 0,
						"colSpan": 1,
						"rowSpan": 1
					});
				})(group_5);
				container.addChild(group_5, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var group_7 = new cpr.controls.Container("grp2");
				// Layout
				var formLayout_6 = new cpr.controls.layouts.FormLayout();
				formLayout_6.setColumns(["1fr"]);
				formLayout_6.setRows(["25px", "1fr"]);
				formLayout_6.setRowAutoSizing(0, true);
				group_7.setLayout(formLayout_6);
				(function(container){
					var group_8 = linker.group_8 = new cpr.controls.Container("frfMain");
					group_8.fieldLabel = "사원정보";
					group_8.userAttr({
						"mobile-column-count": "2",
						"tablet-column-count": "2"
					});
					group_8.style.setClasses(["form-box"]);
					// Layout
					var formLayout_7 = new cpr.controls.layouts.FormLayout();
					formLayout_7.topMargin = "5px";
					formLayout_7.rightMargin = "5px";
					formLayout_7.bottomMargin = "5px";
					formLayout_7.leftMargin = "5px";
					formLayout_7.setColumns(["120px", "1fr", "120px", "1fr"]);
					formLayout_7.setRows(["25px", "25px", "25px", "25px", "25px", "25px", "25px", "25px", "25px", "1fr"]);
					group_8.setLayout(formLayout_7);
					(function(container){
						var output_4 = new cpr.controls.Output("opt2");
						output_4.value = "사원번호";
						container.addChild(output_4, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var inputBox_10 = linker.inputBox_10 = new cpr.controls.InputBox("ipb1");
						inputBox_10.bind("value").toDataColumn("EMPNO");
						container.addChild(inputBox_10, {
							"colIndex": 1,
							"rowIndex": 0
						});
						var output_5 = new cpr.controls.Output("opt3");
						output_5.value = "사원명";
						container.addChild(output_5, {
							"colIndex": 2,
							"rowIndex": 0
						});
						var inputBox_11 = linker.inputBox_11 = new cpr.controls.InputBox("ipb2");
						inputBox_11.bind("value").toDataColumn("ENAME");
						container.addChild(inputBox_11, {
							"colIndex": 3,
							"rowIndex": 0
						});
						var output_6 = new cpr.controls.Output("opt4");
						output_6.value = "직급";
						container.addChild(output_6, {
							"colIndex": 0,
							"rowIndex": 6
						});
						var comboBox_5 = new cpr.controls.ComboBox("cmb3");
						comboBox_5.bind("value").toDataColumn("JOB");
						(function(comboBox_5){
							comboBox_5.setItemSet(app.lookup("dsJob"), {
								"label": "CD_NM",
								"value": "CD"
							});
						})(comboBox_5);
						container.addChild(comboBox_5, {
							"colIndex": 1,
							"rowIndex": 6
						});
						var output_7 = new cpr.controls.Output("opt5");
						output_7.value = "관리자 사원번호";
						container.addChild(output_7, {
							"colIndex": 2,
							"rowIndex": 6
						});
						var inputBox_12 = new cpr.controls.InputBox("ipb4");
						inputBox_12.bind("value").toDataColumn("MGR");
						container.addChild(inputBox_12, {
							"colIndex": 3,
							"rowIndex": 6
						});
						var output_8 = new cpr.controls.Output();
						output_8.value = "입사일";
						container.addChild(output_8, {
							"colIndex": 0,
							"rowIndex": 7
						});
						var dateInput_3 = new cpr.controls.DateInput("dti2");
						dateInput_3.format = "YYYY-MM-DD";
						dateInput_3.bind("value").toDataColumn("HIREDATE");
						container.addChild(dateInput_3, {
							"colIndex": 1,
							"rowIndex": 7
						});
						var output_9 = new cpr.controls.Output();
						output_9.value = "급여";
						container.addChild(output_9, {
							"colIndex": 2,
							"rowIndex": 7
						});
						var numberEditor_4 = new cpr.controls.NumberEditor("nbe3");
						numberEditor_4.style.css({
							"text-align" : "left"
						});
						numberEditor_4.bind("value").toDataColumn("SAL");
						container.addChild(numberEditor_4, {
							"colIndex": 3,
							"rowIndex": 7
						});
						var output_10 = new cpr.controls.Output();
						output_10.value = "성과금";
						container.addChild(output_10, {
							"colIndex": 0,
							"rowIndex": 8
						});
						var numberEditor_5 = new cpr.controls.NumberEditor("nbe4");
						numberEditor_5.style.css({
							"text-align" : "left"
						});
						numberEditor_5.bind("value").toDataColumn("COMM");
						container.addChild(numberEditor_5, {
							"colIndex": 1,
							"rowIndex": 8
						});
						var output_11 = new cpr.controls.Output();
						output_11.value = "부서코드";
						container.addChild(output_11, {
							"colIndex": 2,
							"rowIndex": 8
						});
						var inputBox_13 = new cpr.controls.InputBox("ipb11");
						inputBox_13.bind("value").toDataColumn("DEPTNO");
						container.addChild(inputBox_13, {
							"colIndex": 3,
							"rowIndex": 8
						});
						var output_12 = new cpr.controls.Output();
						output_12.value = "출생년도";
						container.addChild(output_12, {
							"colIndex": 0,
							"rowIndex": 2
						});
						var output_13 = new cpr.controls.Output();
						output_13.value = "전화번호";
						container.addChild(output_13, {
							"colIndex": 0,
							"rowIndex": 4
						});
						var output_14 = new cpr.controls.Output();
						output_14.value = "로그인ID";
						container.addChild(output_14, {
							"colIndex": 0,
							"rowIndex": 3
						});
						var output_15 = new cpr.controls.Output();
						output_15.value = "국가";
						container.addChild(output_15, {
							"colIndex": 2,
							"rowIndex": 2
						});
						var output_16 = new cpr.controls.Output();
						output_16.value = "비밀번호";
						container.addChild(output_16, {
							"colIndex": 2,
							"rowIndex": 3
						});
						var output_17 = new cpr.controls.Output();
						output_17.value = "이메일";
						container.addChild(output_17, {
							"colIndex": 2,
							"rowIndex": 4
						});
						var output_18 = new cpr.controls.Output();
						output_18.value = "성별";
						container.addChild(output_18, {
							"colIndex": 2,
							"rowIndex": 1
						});
						var output_19 = new cpr.controls.Output();
						output_19.value = "나이";
						container.addChild(output_19, {
							"colIndex": 0,
							"rowIndex": 1
						});
						var dateInput_4 = new cpr.controls.DateInput("dti3");
						dateInput_4.format = "YYYY-MM-DD";
						dateInput_4.bind("value").toDataColumn("BRTDY");
						container.addChild(dateInput_4, {
							"colIndex": 1,
							"rowIndex": 2
						});
						var comboBox_6 = new cpr.controls.ComboBox("cmb2");
						comboBox_6.bind("value").toDataColumn("NATION");
						(function(comboBox_6){
							comboBox_6.setItemSet(app.lookup("dsNat"), {
								"label": "CD_NM",
								"value": "CD"
							});
						})(comboBox_6);
						container.addChild(comboBox_6, {
							"colIndex": 3,
							"rowIndex": 2
						});
						var inputBox_14 = new cpr.controls.InputBox("ipb3");
						inputBox_14.secret = true;
						inputBox_14.bind("value").toDataColumn("PWD");
						container.addChild(inputBox_14, {
							"colIndex": 3,
							"rowIndex": 3
						});
						var inputBox_15 = new cpr.controls.InputBox("ipb6");
						inputBox_15.style.css({
							"text-align" : "left"
						});
						inputBox_15.bind("value").toDataColumn("LOGINID");
						container.addChild(inputBox_15, {
							"colIndex": 1,
							"rowIndex": 3
						});
						var maskEditor_2 = new cpr.controls.MaskEditor("mse2");
						maskEditor_2.mask = "000-0000-0000";
						maskEditor_2.style.css({
							"text-align" : "left"
						});
						maskEditor_2.bind("value").toDataColumn("PHONENUM");
						container.addChild(maskEditor_2, {
							"colIndex": 1,
							"rowIndex": 4
						});
						var comboBox_7 = new cpr.controls.ComboBox("cmb4");
						comboBox_7.bind("value").toDataColumn("GENDER");
						(function(comboBox_7){
							comboBox_7.setItemSet(app.lookup("dsGender"), {
								"label": "CD_NM",
								"value": "CD"
							});
						})(comboBox_7);
						container.addChild(comboBox_7, {
							"colIndex": 3,
							"rowIndex": 1
						});
						var numberEditor_6 = new cpr.controls.NumberEditor("nbe5");
						numberEditor_6.style.css({
							"text-align" : "left"
						});
						numberEditor_6.bind("value").toDataColumn("AGE");
						container.addChild(numberEditor_6, {
							"colIndex": 1,
							"rowIndex": 1
						});
						var inputBox_16 = new cpr.controls.InputBox("ipb12");
						inputBox_16.bind("value").toDataColumn("EMAIL");
						container.addChild(inputBox_16, {
							"colIndex": 3,
							"rowIndex": 4
						});
						var output_20 = new cpr.controls.Output();
						output_20.value = "주소";
						container.addChild(output_20, {
							"colIndex": 0,
							"rowIndex": 5
						});
						var inputBox_17 = new cpr.controls.InputBox("ipb13");
						inputBox_17.bind("value").toDataColumn("ADDRESS");
						container.addChild(inputBox_17, {
							"colIndex": 1,
							"rowIndex": 5,
							"colSpan": 3,
							"rowSpan": 1
						});
						var output_21 = new cpr.controls.Output();
						output_21.value = "비고";
						container.addChild(output_21, {
							"colIndex": 0,
							"rowIndex": 9
						});
						var textArea_1 = new cpr.controls.TextArea("txa1");
						container.addChild(textArea_1, {
							"colIndex": 1,
							"rowIndex": 9,
							"colSpan": 3,
							"rowSpan": 1
						});
					})(group_8);
					container.addChild(group_8, {
						"colIndex": 0,
						"rowIndex": 1
					});
					var userDefinedControl_5 = linker.userDefinedControl_5 = new udc.com.comFormTitle("comformtitle1");
					container.addChild(userDefinedControl_5, {
						"colIndex": 0,
						"rowIndex": 0
					});
				})(group_7);
				container.addChild(group_7, {
					"colIndex": 0,
					"rowIndex": 1
				});
			})(group_4);
			container.addChild(group_4, {
				"width": "1320px",
				"height": "608px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_3.grid = linker.grid_1;
			linker.userDefinedControl_4.ctrl = linker.grid_1;
			linker.group_8.setBindContext(new cpr.bind.GridSelectionContext(linker.grid_1));
			linker.inputBox_10.setNextControl(linker.inputBox_11);
			linker.inputBox_11.setPrevControl(linker.inputBox_10);
			linker.userDefinedControl_5.ctrl = linker.group_8;
		}
	});
	app.title = "템플릿(그리드(상) + 폼(하))";
	cpr.core.Platform.INSTANCE.register(app);
})();
