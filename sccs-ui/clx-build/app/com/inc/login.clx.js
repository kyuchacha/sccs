/*
 * App URI: app/com/inc/login
 * Source Location: app/com/inc/login.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/com/inc/login", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * 공통 모듈 선언
			 ************************************************/
			var util = createCommonUtil();
			
			//var mnKeySize = 128;
			//var mnIterationCount = 10000;
			//var msSalt = "0c68efe9e3c3a02b3f9f69a08987e4ab";
			//var msIv = "18b8e16db963ae9bfe9fccbe37d452e0";
			//var msPassPhrase = "exb6Frame";
			
			/**
			 * 쿠키를 설정합니다.
			 * 
			 * @param {String} psName
			 * @param {Strubg} psValue
			 * @param {Number} pnExpireDate
			 */
			function setCookie(psName, psValue, pnExpireDate) {
				var voToday = new Date();
				voToday.setDate(voToday.getDate() + parseInt(pnExpireDate));
				document.cookie = psName + "=" + escape(psValue) + ";path=/;expires=" + voToday.toUTCString() + ";";
			}
			
			
			/**
			 * 쿠키를 가져옵니다.
			 * @param {String} psName
			 */
			function getCookie(psName) {
				var vsCookie = document.cookie + ";";
				var vaItems = vsCookie.split(";");
				var vaItemInfo = null;
				var sccs_login_id = null;
				vaItems.some(function(item){
					vaItemInfo = item.split("=");
					if (psName == vaItemInfo[0].trim()){
						sccs_login_id = vaItemInfo[1].replace(/;/gi, "");
						return true;
					}
				});
				return sccs_login_id;
			}
			
			function deleteCookie(name) {
				var expireDate = new Date();
				expireDate.setDate(expireDate.getDate() - 1);
				document.cookie = name + "= " + "; expires=" + expireDate.toUTCString() + "; path=/";
			}
			
			
			/************************************************
			 * 컨트롤 이벤트
			 ************************************************/
			/*
			 * Body에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				/* 쿠키 설정 */
				var vsCookieId = getCookie("sccs-login-id");
				var dsParam = app.lookup("dsParam");
				
				if (!ValueUtil.isNull(vsCookieId)){
					//util.DataMap.setValue(app, "dsParam", "USER_ID", vsCookieId);
					app.lookup("ipbUserNm").value = vsCookieId;
					app.lookup("cbxRmbr").checked = true;
			
					app.lookup("ipbPw").focus();
				} else {
					app.lookup("ipbUserNm").focus();
				}
				util.Control.redraw(app, "grpLoginBd");
				
				//어플리케이션 로케일  조회 (다국어 및 language.json 필요시)
				//app.lookup("subLocale").send();
			}
			
			
			/*
			 * 인풋 박스에서 keydown 이벤트 발생 시 호출.
			 * 사용자가 키를 누를 때 발생하는 이벤트.
			 */
			function onIpbUserNmKeydown(/* cpr.events.CKeyboardEvent */ e){
				/** 
				 * @type cpr.controls.InputBox
				 */
				var ipbUserNm = e.control;
				
				if (e.keyCode == cpr.events.KeyCode.ENTER){
					app.lookup("ipbPw").focus();
				}
			}
			
			
			/*
			 * 인풋 박스에서 keydown 이벤트 발생 시 호출.
			 * 사용자가 키를 누를 때 발생하는 이벤트.
			 */
			function onIpbPwKeydown(/* cpr.events.CKeyboardEvent */ e){
				/** 
				 * @type cpr.controls.InputBox
				 */
				var ipbPw = e.control;
				
				if (e.keyCode == cpr.events.KeyCode.ENTER){
					app.lookup("btnLogin").click();
				}
			}
			
			
			/*
			 * "Log In" 버튼(btnLogin)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnLoginClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnLogin = e.control;
				
				//TODO 로그인 관련 Validate 처리를 작성하십시오.
				var dsParam = app.lookup("dsParam");
				var username = dsParam.getValue("USER_ID");
				var pwd = dsParam.getValue("PWD");
				
				if(!util.validate(app, ["ipbUserNm", "ipbPw"])) return false;
			
				var vcCbxRmbr = app.lookup("cbxRmbr");
				if (vcCbxRmbr.checked == true) {
					setCookie("sccs-login-id", username, 30);
				} else {
					deleteCookie("sccs-login-id");
				}
				
			//	SSL을 적용 할 수 없는 환경 일경우 파라미터로 랜덤생성된 iv 과 암호화된 값을 전달하고 
			// salt값은 사용자 id를 사용하는 방식으로 구현 필요 
			//	var iv = CryptoJS.lib.WordArray.random(128/8).toString(CryptoJS.enc.Hex);
			//  var salt = CryptoJS.lib.WordArray.random(128/8).toString(CryptoJS.enc.Hex);
			    
			//	var aesUtil = new AesUtil(mnKeySize, mnIterationCount);
			//	var encString = aesUtil.encrypt(msSalt, msIv, msPassPhrase, pwd);
			//	
			//	util.DataMap.setValue(app, "dsParam", "PWD", encString);
				
				//로그인 서브미션 호출;
				util.Submit.send(app, "subLogin", function(pbSuccess){
					if(pbSuccess){
						var sublogin = app.lookup("subLogin");
						
						var code = sublogin.getMetadata("code");
						var sttsCd = sublogin.getMetadata("sttsCd");
						var message = sublogin.getMetadata("msg");
						
						if(code == "S") {
							if(sttsCd == "10") {
								alert(message);	
								return;
							} else if(sttsCd == "20") {
								alert(message);
								return;
							} else if(sttsCd == "21") {
								alert(message);
								return;
							} else if(sttsCd == "30") {
								alert(message);
								return;
							} else if(sttsCd == "40") {
								alert(message);
								return;
							} else if(sttsCd == "50") {
								alert(message);
								return;
							} else {
								/* 메인 화면으로 전환 (SPA 전환) */
								cpr.core.App.load("app/com/main/main", function(newapp) {
									app.close();
									newapp.createNewInstance().run();
								});
								return;
							}
						} else if(code == "D") {
							util.Msg.confirmDialog(app, message, null, function(e){
								if(e.control.returnValue.closeState === "confirm") {
									var dsParam = app.lookup("dsParam");
									dsParam.setValue("forceLoginYn", "Y");
									util.Control.dispatchEvent(app, "btnLogin", "click");	
								}
							});
						} else {
							util.Msg.alertDialog(app, message);	
							return;
						}
					
			//			if(msg != null) {
			//				//util.Msg.alertDialog(app, "INF-M001");
			//				alert(msg);
			//				return;
			//			}
			//		    /* 메인 화면으로 전환 (SPA 전환) */
			//			cpr.core.App.load(appId, function(loadedApp){
			//				loadedApp.createNewInstance().run();
			//				app.dispose();
			//			});
			
					}
				});
			}
			
			/*
			 * "비밀번호 초기화" 버튼(btnRst)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnRstClick(e){
				util.Dialog.open(app, "app/system/PUI_CM_039_01-06", 500, 137, function(){
				});
			}
			
			/*
			 * "회원가입" 버튼(btnRgst)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnRgstClick(e){
				util.Dialog.open(app, "app/system/PUI_CM_039_01-05", 600, 203, function(){
				});
			}
			
			
			/*
			 * 체크 박스에서 value-change 이벤트 발생 시 호출.
			 * CheckBox의 value를 변경하여 변경된 값이 저장된 후에 발생하는 이벤트.
			 */
			function onCbxRmbrValueChange(/* cpr.events.CValueChangeEvent */ e){
				/** 
				 * @type cpr.controls.CheckBox
				 */
				var cbxRmbr = e.control;
				var vcIpbPw = app.lookup("ipbPw");
				
				if (cbxRmbr.checked){
					vcIpbPw.secret = true;
				} else {
					vcIpbPw.secret = false;
				}
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsLanDivRCd");
			dataSet_1.parseData({
				"columns" : [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_PRP1"}
				]
			});
			app.register(dataSet_1);
			var dataMap_1 = new cpr.data.DataMap("dsParam");
			dataMap_1.parseData({
				"columns" : [
					{"name": "USER_ID"},
					{"name": "PWD"},
					{"name": "default.locale"},
					{
						"name": "directLoginYn",
						"defaultValue": "N",
						"info": "직접로그인여부"
					},
					{
						"name": "forceLoginYn",
						"defaultValue": "N",
						"info": "중복 로그인 여부"
					}
				]
			});
			app.register(dataMap_1);
			var submission_1 = new cpr.protocols.Submission("subLogin");
			submission_1.action = "/com/sccs/cm/us/actionLogin.do";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addRequestData(dataMap_1);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subLocale");
			submission_2.action = "/i18n/locale.do";
			submission_2.responseType = "javascript";
			app.register(submission_2);
			
			app.supportMedia("all and (min-width: 1320px)", "eXFrame");
			app.supportMedia("all and (min-width: 1024px) and (max-width: 1319px)", "default");
			app.supportMedia("all and (min-width: 850px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 849px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.setClasses(["login-body"]);
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.topMargin = "0px";
			formLayout_1.rightMargin = "0px";
			formLayout_1.bottomMargin = "0px";
			formLayout_1.leftMargin = "0px";
			formLayout_1.horizontalSpacing = "0px";
			formLayout_1.verticalSpacing = "0px";
			formLayout_1.setColumns(["680px", "1fr"]);
			formLayout_1.setRows(["1fr"]);
			container.setLayout(formLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container();
			group_1.style.setClasses(["login-box"]);
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_1);
			(function(container){
				var group_2 = new cpr.controls.Container();
				// Layout
				var xYLayout_2 = new cpr.controls.layouts.XYLayout();
				group_2.setLayout(xYLayout_2);
				(function(container){
					var image_1 = new cpr.controls.Image();
					image_1.src = "theme/common/images/com/main/logo.png";
					(function(image_1){
					})(image_1);
					container.addChild(image_1, {
						"top": "0px",
						"left": "0px",
						"width": "135px",
						"height": "70px"
					});
					var group_3 = new cpr.controls.Container();
					group_3.style.setClasses(["tit-box"]);
					// Layout
					var flowLayout_1 = new cpr.controls.layouts.FlowLayout();
					flowLayout_1.scrollable = false;
					flowLayout_1.verticalSpacing = 0;
					flowLayout_1.verticalAlign = "bottom";
					flowLayout_1.lineWrap = false;
					group_3.setLayout(flowLayout_1);
					(function(container){
						var output_1 = new cpr.controls.Output();
						output_1.value = "새만금";
						output_1.style.setClasses(["h1"]);
						container.addChild(output_1, {
							"autoSize": "width",
							"width": "70px",
							"height": "36px"
						});
						var output_2 = new cpr.controls.Output();
						output_2.value = "종합통제시스템";
						output_2.style.setClasses(["h2"]);
						container.addChild(output_2, {
							"autoSize": "width",
							"width": "140px",
							"height": "32px"
						});
					})(group_3);
					container.addChild(group_3, {
						"top": "70px",
						"right": "0px",
						"left": "0px",
						"height": "36px"
					});
					var output_3 = new cpr.controls.Output();
					output_3.value = "오늘도\n좋은 하루 되세요!";
					output_3.style.setClasses(["welcome"]);
					container.addChild(output_3, {
						"top": "146px",
						"right": "0px",
						"left": "0px",
						"height": "90px"
					});
					var output_4 = new cpr.controls.Output();
					output_4.value = "";
					output_4.style.setClasses(["bg-light"]);
					container.addChild(output_4, {
						"top": "286px",
						"right": "0px",
						"left": "0px",
						"height": "1px"
					});
					var output_5 = new cpr.controls.Output();
					output_5.value = "로그인";
					output_5.style.setClasses(["h4", "text-dark"]);
					container.addChild(output_5, {
						"top": "326px",
						"right": "0px",
						"left": "0px",
						"height": "28px"
					});
					var inputBox_1 = new cpr.controls.InputBox("ipbUserNm");
					inputBox_1.fieldLabel = "아이디";
					inputBox_1.placeholder = "아이디";
					inputBox_1.userAttr({"required": "Y"});
					inputBox_1.style.setClasses(["form-field"]);
					inputBox_1.bind("value").toDataMap(app.lookup("dsParam"), "USER_ID");
					if(typeof onIpbUserNmKeydown == "function") {
						inputBox_1.addEventListener("keydown", onIpbUserNmKeydown);
					}
					container.addChild(inputBox_1, {
						"top": "362px",
						"right": "0px",
						"left": "0px",
						"height": "50px"
					});
					var inputBox_2 = new cpr.controls.InputBox("ipbPw");
					inputBox_2.fieldLabel = "비밀번호";
					inputBox_2.secret = true;
					inputBox_2.placeholder = "비밀번호";
					inputBox_2.userAttr({"required": "Y"});
					inputBox_2.style.setClasses(["form-field"]);
					inputBox_2.bind("value").toDataMap(app.lookup("dsParam"), "PWD");
					if(typeof onIpbPwKeydown == "function") {
						inputBox_2.addEventListener("keydown", onIpbPwKeydown);
					}
					container.addChild(inputBox_2, {
						"top": "421px",
						"right": "0px",
						"left": "0px",
						"height": "50px"
					});
					var button_1 = new cpr.controls.Button("btnLogin");
					button_1.value = "로그인";
					button_1.style.setClasses(["btn-indigo", "btn-lg"]);
					if(typeof onBtnLoginClick == "function") {
						button_1.addEventListener("click", onBtnLoginClick);
					}
					container.addChild(button_1, {
						"top": "480px",
						"right": "0px",
						"left": "0px",
						"height": "50px"
					});
					var group_4 = new cpr.controls.Container();
					// Layout
					var formLayout_2 = new cpr.controls.layouts.FormLayout();
					formLayout_2.scrollable = false;
					formLayout_2.topMargin = "0px";
					formLayout_2.rightMargin = "0px";
					formLayout_2.bottomMargin = "0px";
					formLayout_2.leftMargin = "0px";
					formLayout_2.horizontalSpacing = "0px";
					formLayout_2.verticalSpacing = "0px";
					formLayout_2.setColumns(["98px", "1fr"]);
					formLayout_2.setColumnAutoSizing(0, true);
					formLayout_2.setRows(["1fr"]);
					group_4.setLayout(formLayout_2);
					(function(container){
						var checkBox_1 = new cpr.controls.CheckBox("cbxRmbr");
						checkBox_1.value = "";
						checkBox_1.text = "아이디 저장";
						if(typeof onCbxRmbrValueChange == "function") {
							checkBox_1.addEventListener("value-change", onCbxRmbrValueChange);
						}
						container.addChild(checkBox_1, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var group_5 = new cpr.controls.Container();
						// Layout
						var flowLayout_2 = new cpr.controls.layouts.FlowLayout();
						flowLayout_2.scrollable = false;
						flowLayout_2.horizontalSpacing = 12;
						flowLayout_2.verticalSpacing = 0;
						flowLayout_2.horizontalAlign = "right";
						flowLayout_2.verticalAlign = "middle";
						group_5.setLayout(flowLayout_2);
						(function(container){
							var button_2 = new cpr.controls.Button("btnRst");
							button_2.value = "비밀번호 초기화";
							button_2.style.setClasses(["btn-transparent"]);
							if(typeof onBtnRstClick == "function") {
								button_2.addEventListener("click", onBtnRstClick);
							}
							container.addChild(button_2, {
								"autoSize": "width",
								"width": "102px",
								"height": "30px"
							});
							var output_6 = new cpr.controls.Output();
							output_6.value = "";
							output_6.style.setClasses(["bg-light"]);
							container.addChild(output_6, {
								"width": "1px",
								"height": "14px"
							});
							var button_3 = new cpr.controls.Button("btnRgst");
							button_3.value = "계정잠김 해제";
							button_3.style.setClasses(["btn-transparent"]);
							if(typeof onBtnRgstClick == "function") {
								button_3.addEventListener("click", onBtnRgstClick);
							}
							container.addChild(button_3, {
								"autoSize": "width",
								"width": "102px",
								"height": "30px"
							});
						})(group_5);
						container.addChild(group_5, {
							"colIndex": 1,
							"rowIndex": 0
						});
					})(group_4);
					container.addChild(group_4, {
						"top": "540px",
						"right": "0px",
						"left": "0px",
						"height": "30px"
					});
				})(group_2);
				container.addChild(group_2, {
					"width": "460px",
					"height": "570px",
					"left": "calc(50% - 230px)",
					"top": "calc(50% - 285px)"
				});
			})(group_1);
			container.addChild(group_1, {
				"colIndex": 0,
				"rowIndex": 0
			});
			
			var group_6 = new cpr.controls.Container();
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			xYLayout_3.scrollable = false;
			group_6.setLayout(xYLayout_3);
			(function(container){
				var image_2 = new cpr.controls.Image();
				image_2.src = "theme/common/images/com/login/login_bg.png";
				(function(image_2){
				})(image_2);
				container.addChild(image_2, {
					"right": "0px",
					"width": "1233px",
					"height": "1190px",
					"top": "calc(50% - 595px)"
				});
			})(group_6);
			container.addChild(group_6, {
				"colIndex": 1,
				"rowIndex": 0
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "로그인";
	cpr.core.Platform.INSTANCE.register(app);
})();
