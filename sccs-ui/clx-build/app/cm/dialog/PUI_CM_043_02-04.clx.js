/*
 * App URI: app/cm/dialog/PUI_CM_043_02-04
 * Source Location: app/cm/dialog/PUI_CM_043_02-04.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/cm/dialog/PUI_CM_043_02-04", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * PUI_CM_043_02-04.js
			 * Created at 2022. 3. 25. 오전 10:04:22.
			 *
			 * @author "nhyu"
			 ************************************************/
			
			/************************************************
			 * 공통 모듈 선언
			 ************************************************/
			var util = createCommonUtil();
			
			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
					
				util.Submit.send(app, "subOnLoad", function(pbSuccess) {
					console.log('11111111111');
					if (pbSuccess){
						util.SelectCtl.selectItem(app, "treMenu", 0);
					}
				});
			}
			
			/*
			 * "선택완료" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
				var dmSelectedMenu = app.lookup("dmSelectedMenu");
				
				//console.log(JSON.stringify(voSelectedRow));
				
				//if(voSelectedRow) {
					var returnValue = dmSelectedMenu.getDatas();
					app.close(returnValue);
				//}
			}
			
			
			/*
			 * 트리에서 item-click 이벤트 발생 시 호출.
			 * 아이템 클릭시 발생하는 이벤트.
			 */
			function onTreMenuItemClick(/* cpr.events.CItemEvent */ e){
				/** 
				 * @type cpr.controls.Tree
				 */
				var treMenu = e.control;
				
				var dsAllMenu = app.lookup("dsAllMenu");
				var dmSelectedMenu = app.lookup("dmSelectedMenu");
				
				var selectedValue = e.item.value;
				var selectedDatasetRowIndex = treMenu.getIndexByValue(selectedValue);
				var selectedRowData = dsAllMenu.getRowData(selectedDatasetRowIndex);
				
				dmSelectedMenu.setValue("MENU_ID", selectedRowData.MENU_ID);
				dmSelectedMenu.setValue("MENU_NM", selectedRowData.MENU_NM);
			
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsAllMenu");
			dataSet_1.parseData({
				"columns" : [
					{"name": "MENU_ID"},
					{"name": "MENU_NM"},
					{"name": "UP_MENU_ID"},
					{"name": "TOP_MENU_ID"},
					{"name": "CALL_PAGE"},
					{"name": "PGM_ID"},
					{"name": "ICON"},
					{"name": "MENU_KEY"},
					{"name": "MOBILE_YN"}
				]
			});
			app.register(dataSet_1);
			var dataMap_1 = new cpr.data.DataMap("dmSelectedMenu");
			dataMap_1.parseData({
				"columns" : [
					{"name": "MENU_ID"},
					{"name": "MENU_NM"},
					{"name": "ISLEAF"}
				]
			});
			app.register(dataMap_1);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.method = "get";
			submission_1.action = "app/exam/data/main/main.json";
			submission_1.addResponseData(dataSet_1, false);
			app.register(submission_1);
			
			app.supportMedia("all and (min-width: 1680px)", "default");
			app.supportMedia("all and (max-width: 1679px)", "tablet");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			userDefinedControl_1.visible = false;
			userDefinedControl_1.initializeYn = "N";
			container.addChild(userDefinedControl_1, {
				"width": "460px",
				"height": "30px"
			});
			
			var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comFormTitle("comformtitle1");
			userDefinedControl_2.ctrl = app.lookup("frfMain");
			userDefinedControl_2.title = "메뉴 목록";
			container.addChild(userDefinedControl_2, {
				"width": "460px",
				"height": "25px"
			});
			
			var tree_1 = new cpr.controls.Tree("treMenu");
			tree_1.showLines = true;
			tree_1.allowDrop = false;
			tree_1.autoOpen = 1;
			(function(tree_1){
				tree_1.setItemSet(app.lookup("dsAllMenu"), {
					"label": "MENU_NM",
					"value": "MENU_ID",
					"tooltip": "MENU_NM",
					"parentValue": "UP_MENU_ID"
				});
			})(tree_1);
			if(typeof onTreMenuItemClick == "function") {
				tree_1.addEventListener("item-click", onTreMenuItemClick);
			}
			container.addChild(tree_1, {
				"width": "460px",
				"height": "333px"
			});
			
			var group_1 = new cpr.controls.Container("grp2");
			// Layout
			var flowLayout_1 = new cpr.controls.layouts.FlowLayout();
			flowLayout_1.scrollable = false;
			flowLayout_1.horizontalSpacing = 4;
			flowLayout_1.verticalSpacing = 0;
			flowLayout_1.horizontalAlign = "right";
			flowLayout_1.lineWrap = false;
			group_1.setLayout(flowLayout_1);
			(function(container){
				var button_1 = new cpr.controls.Button("btn1");
				button_1.value = "선택완료";
				button_1.style.setClasses(["btn-primary"]);
				if(typeof onBtn1Click == "function") {
					button_1.addEventListener("click", onBtn1Click);
				}
				container.addChild(button_1, {
					"autoSize": "none",
					"width": "70px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"width": "460px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "메뉴 선택 팝업";
	cpr.core.Platform.INSTANCE.register(app);
})();
