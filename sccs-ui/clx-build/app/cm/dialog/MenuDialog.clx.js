/*
 * App URI: app/cm/dialog/MenuDialog
 * Source Location: app/cm/dialog/MenuDialog.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/cm/dialog/MenuDialog", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * TreeDialog.js
			 * Created at 2019. 10. 11. 오전 11:06:58.
			 *
			 * @author HANS
			 ************************************************/
			
			/************************************************
			 * 공통 모듈 선언
			 ************************************************/
			var util = createCommonUtil();
			
			
			
			/*
			 * "Search" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
				
				app.lookup("subDeptList").send();
			}
			
			
			/*
			 * "닫기" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick2(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
				
				app.close();
			}
			
			
			/*
			 * "선택닫기" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick3(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
				
				var vcGrid = app.lookup("grd1");
				
				var voSelectedRow = vcGrid.getSelectedRow();
				
				if(voSelectedRow) {
					var returnValue = voSelectedRow.getRowData();
					app.close(returnValue);
				}
			}
			
			
			
			
			
			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
					
				util.Submit.send(app, "subOnLoad", function(pbSuccess) {
					if (pbSuccess){
						util.SelectCtl.selectItem(app, "treMenu", 0);
					}
				});
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsList");
			dataSet_1.parseData({
				"columns" : [
					{"name": "DEPT_CD"},
					{"name": "DEPT_NM"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsAllMenu");
			dataSet_2.parseData({
				"columns" : [
					{"name": "MENU_ID"},
					{"name": "MENU_NM"},
					{"name": "UP_MENU_ID"},
					{"name": "TOP_MENU_ID"},
					{"name": "CALL_PAGE"},
					{"name": "PGM_ID"},
					{"name": "ICON"},
					{"name": "MENU_KEY"},
					{"name": "MOBILE_YN"}
				]
			});
			app.register(dataSet_2);
			var dataMap_1 = new cpr.data.DataMap("dmParam");
			dataMap_1.parseData({
				"columns" : [{"name": "strDept"}]
			});
			app.register(dataMap_1);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.method = "get";
			submission_1.action = "app/exam/data/main/main.json";
			submission_1.addResponseData(dataSet_2, false);
			app.register(submission_1);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var button_1 = new cpr.controls.Button();
			button_1.value = "선택닫기";
			if(typeof onButtonClick3 == "function") {
				button_1.addEventListener("click", onButtonClick3);
			}
			container.addChild(button_1, {
				"bottom": "20px",
				"left": "20px",
				"width": "100px",
				"height": "30px"
			});
			
			var button_2 = new cpr.controls.Button();
			button_2.value = "닫기";
			if(typeof onButtonClick2 == "function") {
				button_2.addEventListener("click", onButtonClick2);
			}
			container.addChild(button_2, {
				"right": "20px",
				"bottom": "20px",
				"width": "100px",
				"height": "30px"
			});
			
			var tree_1 = new cpr.controls.Tree("treMenu");
			tree_1.indent = 10;
			tree_1.ellipsis = true;
			tree_1.autoOpen = 0;
			tree_1.style.setClasses(["sidebar"]);
			tree_1.style.item.bindClass().toExpression([
				"CALL_PAGE != null && CALL_PAGE != \"\"",
				" ?  \"aria-level-3\" : \"aria-level-\" + (depth + 1)"
			].join("\n"));
			(function(tree_1){
				tree_1.setItemSet(app.lookup("dsAllMenu"), {
					"label": "MENU_NM",
					"value": "MENU_ID",
					"icon": "ICON",
					"tooltip": "MENU_NM",
					"parentValue": "UP_MENU_ID"
				});
			})(tree_1);
			container.addChild(tree_1, {
				"top": "-1px",
				"left": "0px",
				"width": "280px",
				"height": "391px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "메뉴팝업";
	cpr.core.Platform.INSTANCE.register(app);
})();
