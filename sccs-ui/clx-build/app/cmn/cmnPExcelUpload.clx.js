/*
 * App URI: app/cmn/cmnPExcelUpload
 * Source Location: app/cmn/cmnPExcelUpload.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/cmn/cmnPExcelUpload", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * cmnPCode.js
			 * Created at 2018. 8. 13. 오전 11:17:04.
			 *
			 * @author SUL
			 ************************************************/
			var util = createCommonUtil();
			
			/** @type cpr.controls.Grid */
			var moTargetGrid = null;
			
			/*
			 * Body에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				var initValue = app.getHostProperty("initValue");
				if(ValueUtil.isNull(initValue.targetGrid)) return;
				
				var dsHeaderColumns = app.lookup("dsHeaderColumns");
				var dmColumn = app.lookup("dmColumn");
				moTargetGrid = initValue.targetGrid;
				var _app = moTargetGrid.getAppInstance();
				if(moTargetGrid == null) return;
			
				var dColumn, hColumn;
				var findRows, findRows2;
				for(var i=0, len=moTargetGrid.detail.cellCount; i<len; i++){
					dColumn = moTargetGrid.detail.getColumn(i);
					if(dColumn.columnType == "rowindex" || dColumn.columnType == "checkbox") continue;
					if(dColumn.columnName == null || dColumn.columnName == "") continue;
					if(dColumn.controlType == "button") continue;
					
					//숨김컬럼 제외
					/** @type cpr.controls.gridpart.GridColumn */
					var vbShowHiddenColumns = ValueUtil.fixBoolean(initValue.showHiddenColumns);
					hColumn = util.Grid.getHeaderColumn(_app, moTargetGrid.id, dColumn.columnName);
					if(hColumn == null || hColumn.length < 1 ) continue;		
					if(vbShowHiddenColumns == false || vbShowHiddenColumns == ''){			
						if(hColumn[0].visible === false) continue;
					}
					
					//헤더 컬럼 콤보박스 아이템으로 추가
					findRows = dsHeaderColumns.findAllRow("CD=='"+dColumn.columnName+"'");
					if(findRows == null || findRows.length < 1 && hColumn[0].getText() != null){
						dsHeaderColumns.addRowData({"CD_NM":hColumn[0].getText(), "CD":dColumn.columnName});
					}
				}
				
				//디폴트 헤더컬럼 지정
				for(var i=0, len=dsHeaderColumns.getRowCount(); i<=len; i++){
					dmColumn.setValue("H_"+i, dsHeaderColumns.getValue(i, "CD"));
				}
				
				util.Control.redraw(app, "grdExl");
				
			
				//엑셀 헤더 Max-ROW의 정보를 찾아서, 요청 파라메터에 셋팅한다.
				//서버에서 엑셀 파일을 읽을 때, 데이터의 시작 ROW 위치를 찾기 위함
				var vnMaxHeaderRowIndex = 1;
				if(!ValueUtil.isNull(initValue.startRowIndex)){
					vnMaxHeaderRowIndex = initValue.startRowIndex;
				}else{
					var hColmun;
					for(var i=0, len=moTargetGrid.header.cellCount; i<len; i++){
						hColumn = moTargetGrid.header.getColumn(i);
						if(hColumn == null) continue;
				
						if(vnMaxHeaderRowIndex < (hColumn.rowIndex + hColumn.rowSpan)){
							vnMaxHeaderRowIndex = (hColumn.rowIndex + hColumn.rowSpan);
						}
					}
				}
				app.lookup("dmParam").setValue("startRowIndex", vnMaxHeaderRowIndex);
				
				//시작 컬럼 Cell 인덱스 지정
				if(!ValueUtil.isNull(initValue.startCellIndex)){
					app.lookup("dmParam").setValue("startCellIndex", initValue.startCellIndex);
				}
				
				//헤더 콤보박스 클릭시, 이미 매핑된 컬럼 아이템은 선택불가토록 막음
				var dmConfig = app.lookup("dmConfig");
				if(dmConfig.getValue("preventSelectionItem") == "Y"){
					var grdExl = app.lookup("grdExl");
					/** @type cpr.controls.ComboBox */
					var voCtrl = null;
					for(var i=0, len=grdExl.header.cellCount; i<len; i++){
						voCtrl = grdExl.header.getControl(i);
						if(voCtrl == null) continue;
						
						voCtrl.addEventListener("click", function(e){
							var cmb = e.control;
							//아이템 선택 활성화
							var vaItems = cmb.getItems();
							for(var i=0, len=vaItems.length; i<len; i++){
								cmb.setItemEnable(vaItems[i], true);
							}
							
							/** @type cpr.bind.BindInfo */
							var bindInfo = cmb.getBindInfo("value");
							var bindColumnName = bindInfo.columnName;
							//타 컬럼에 지정된 아이템은 선택 불가토록 막음
							var dmColumn = app.lookup("dmColumn");
							var vaColumnNames = dmColumn.getColumnNames();
							var vsColumnVal;
							for(var i=0, len=vaColumnNames.length; i<len; i++){
								if(vaColumnNames[i] == bindColumnName) continue;
								vsColumnVal = dmColumn.getValue(vaColumnNames[i]);
								if(vsColumnVal == null || vsColumnVal == "") continue;
								
								var item = cmb.getItemByValue(vsColumnVal);
								if(item){
									cmb.setItemEnable(item, false);
								}
							}
						});
					}
				}
			}
			
			
			/**
			 * 공통코드 목록데이터를 조회한다.
			 * @param psStatus - 조회 상태(저장 후 조회인 경우에는 'save' 구분값 넘김)
			 */
			function doList(psStatus){
				//조회조건 유효성 체크
				if(!util.validate(app, "grpSearch")) return false;
				
				util.Submit.send(app, "subList", null, function(pbSuccess){
					if(pbSuccess) {
						util.Msg.notify(app, "INF-M001");
					}
				});
			}
			
			/**
			 * 데이터를 부모창에 내려준다.(자료내려받기 버튼 클릭시 호출)
			 */
			function doCloseOk(){
				var grd = app.lookup("grdExl");
				if(grd.rowCount < 1){
					alert("내려줄 자료가 없습니다.");
					return;
				}
				
				var dmColumn = app.lookup("dmColumn");
				var vaColumNames = dmColumn.getColumnNames();
				//지정된 컬럼을 선택했는지 체크
				var vnHCnt = 0;
				vaColumNames.forEach(function(/* String */ item){
					if(dmColumn.getValue(item) != ""){
						vnHCnt++;
					}
				});
				if(vnHCnt < 1){
					alert("내려줄 자료가 없습니다. 적어도 한개 이상의 내려받을 대상 컬럼을 선택하셔야 합니다.");
					app.lookup("cmb1").focus();
					return;
				}
				
				//엑셀 그리드에 있는 데이터를 부모창 그리드에 내려준다.
				var dsExcel = app.lookup("dsExcel");
				var dmColumn = app.lookup("dmColumn");
				
				var vaColumnNames = dmColumn.getColumnNames();
				
				var initValue = app.getHostProperty("initValue");
				var vbIgnoreDuplicate = ValueUtil.fixBoolean(initValue.ignoreDuplicate);
				
				/** @type cpr.data.DataSet */
				var targetDataSet = moTargetGrid.dataSet;
				var vaTargetDataSetPkColumns = ValueUtil.split(targetDataSet.info, ",");
				var rowData = null;
				var dataColumnId = "";
				var vaTempCond = [];
				for(var i=0, len=dsExcel.getRowCount(); i<len; i++){
					rowData = {};
					//중복된 데이터 제외하는 경우
					if(vbIgnoreDuplicate){
						vaTempCond = [];
						vaTargetDataSetPkColumns.forEach(function(column){
							var colVal = "";
							for(var k=0, klen=vaColumnNames.length; k<klen; k++){
								dataColumnId = dmColumn.getValue(vaColumnNames[k]);
								if(dataColumnId == column){
									colVal = dsExcel.getValue(i, "CELL"+vaColumnNames[k].replace("H_", ""));
									break;
								}
							}
							vaTempCond.push(column + "==" + "'" + colVal + "'");
						});
						if(targetDataSet.findFirstRow(vaTempCond.join(" && "))){
							continue;
						}
					}
					
					for(var j=0, jlen=vaColumnNames.length; j<jlen; j++){
						dataColumnId = dmColumn.getValue(vaColumnNames[j]);
						if(dataColumnId == null || dataColumnId == "") continue;
						rowData[dataColumnId] = dsExcel.getValue(i, "CELL"+vaColumnNames[j].replace("H_", ""));
					}
					targetDataSet.addRowData(rowData);
				}
				
				moTargetGrid.redraw();
				
				app.close({complete:"Y"});
			}
			
			/*
			 * "선택닫기" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnSelectClick(/* cpr.events.CMouseEvent */ e){
				doCloseOk();
			}
			
			/*
			 * "화면닫기" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnCloseClick(/* cpr.events.CMouseEvent */ e){
				app.close();
			}
			
			/*
			 * "삭제" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnDeleteClick(/* cpr.events.CMouseEvent */ e){
				util.Grid.deleteRow(app, "grdExl");
				util.Control.redraw(app, "optRowCount");
			}
			
			/*
			 * "파일열기" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnOpenClick(e){
				var btnOpen = e.control;
				var grd = app.lookup("grdExl");
				if(grd.rowCount > 0){
					if(confirm("하단 업로드 목록에 자료가 존재합니다. 다시 엑셀 파일을 업로드 하시겠습니까?")){
						app.lookup("fileinput1").openFileChooser();
					}
				}else{
					app.lookup("fileinput1").openFileChooser();
				}
			}
			
			
			/*
			 * 파일 인풋에서 value-change 이벤트 발생 시 호출.
			 * FileInput의 value를 변경하여 변경된 값이 저장된 후에 발생하는 이벤트.
			 */
			function onFileinput1ValueChange(e){
				var fileinput1 = e.control;
				// 선택된 파일을 반환합니다.
				var fileObj = fileinput1.file;
				if(fileObj == null) {
					alert("선택된 파일이 없습니다.");
					return;
				}
				
				var submit = app.lookup("subUpload");
			    // 전송 시 추가로 전달되는 파라미터에 파일을 추가합니다.
			    submit.addFileParameter("F_EXCEL", fileObj);
			    util.Submit.send(app, submit.id, null, function(pbSuccess){
			    	if(pbSuccess){
			    		util.Control.redraw(app, "optRowCount");
			    	}
			    });
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsExcel");
			dataSet_1.parseData({
				"alterColumnLayout": "client",
				"columns": [
					{"name": "CELL0"},
					{"name": "CELL1"},
					{"name": "CELL2"},
					{"name": "CELL3"},
					{"name": "CELL4"},
					{"name": "CELL5"},
					{"name": "CELL6"},
					{"name": "CELL7"},
					{"name": "CELL8"},
					{"name": "CELL9"},
					{"name": "CELL10"},
					{"name": "CELL11"},
					{"name": "CELL12"},
					{"name": "CELL13"},
					{"name": "CELL14"},
					{"name": "CELL15"},
					{"name": "CELL16"},
					{"name": "CELL17"},
					{"name": "CELL18"},
					{"name": "CELL19"},
					{"name": "CELL20"},
					{"name": "CELL21"},
					{"name": "CELL22"},
					{"name": "CELL23"},
					{"name": "CELL24"},
					{"name": "CELL25"},
					{"name": "CELL26"},
					{"name": "CELL27"},
					{"name": "CELL28"},
					{"name": "CELL29"},
					{"name": "CELL30"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsHeaderColumns");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD_NM"},
					{"name": "CD"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			var dataMap_1 = new cpr.data.DataMap("dmColumn");
			dataMap_1.parseData({
				"columns" : [
					{"name": "H_0"},
					{"name": "H_1"},
					{"name": "H_2"},
					{"name": "H_3"},
					{"name": "H_4"},
					{"name": "H_5"},
					{"name": "H_6"},
					{"name": "H_7"},
					{"name": "H_8"},
					{"name": "H_9"},
					{"name": "H_10"},
					{"name": "H_11"},
					{"name": "H_12"},
					{"name": "H_13"},
					{"name": "H_14"},
					{"name": "H_15"},
					{"name": "H_16"},
					{"name": "H_17"},
					{"name": "H_18"},
					{"name": "H_19"},
					{"name": "H_20"},
					{"name": "H_21"},
					{"name": "H_22"},
					{"name": "H_23"},
					{"name": "H_24"},
					{"name": "H_25"},
					{"name": "H_26"},
					{"name": "H_27"},
					{"name": "H_28"},
					{"name": "H_29"},
					{"name": "H_30"}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmParam");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "startRowIndex",
						"defaultValue": "1"
					},
					{
						"name": "startCellIndex",
						"defaultValue": "0"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmConfig");
			dataMap_3.parseData({
				"columns" : [{
					"name": "preventSelectionItem",
					"dataType": "string",
					"defaultValue": "N"
				}]
			});
			app.register(dataMap_3);
			var submission_1 = new cpr.protocols.Submission("subUpload");
			submission_1.action = "/CmnExcelImport/import.do";
			submission_1.mediaType = "multipart/form-data";
			submission_1.addRequestData(dataMap_2);
			submission_1.addResponseData(dataSet_1, false);
			app.register(submission_1);
			
			app.supportMedia("all and (min-width: 1320px)", "eXFrame");
			app.supportMedia("all and (min-width: 1024px) and (max-width: 1319px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.visible = true;
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.setColumns(["1fr"]);
			formLayout_1.setRows(["30px", "1fr"]);
			container.setLayout(formLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grp1");
			group_1.style.setClasses(["header-box"]);
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_1.scrollable = false;
			verticalLayout_1.spacing = 0;
			group_1.setLayout(verticalLayout_1);
			(function(container){
				var userDefinedControl_1 = new udc.com.appHeader();
				container.addChild(userDefinedControl_1, {
					"autoSize": "none",
					"width": "790px",
					"height": "30px"
				});
			})(group_1);
			container.addChild(group_1, {
				"colIndex": 0,
				"rowIndex": 0
			});
			
			var group_2 = new cpr.controls.Container("grp2");
			// Layout
			var formLayout_2 = new cpr.controls.layouts.FormLayout();
			formLayout_2.topMargin = "0px";
			formLayout_2.rightMargin = "0px";
			formLayout_2.bottomMargin = "0px";
			formLayout_2.leftMargin = "0px";
			formLayout_2.setColumns(["1fr"]);
			formLayout_2.setRows(["1fr", "30px"]);
			group_2.setLayout(formLayout_2);
			(function(container){
				var group_3 = new cpr.controls.Container("grp3");
				// Layout
				var formLayout_3 = new cpr.controls.layouts.FormLayout();
				formLayout_3.topMargin = "5px";
				formLayout_3.rightMargin = "0px";
				formLayout_3.bottomMargin = "5px";
				formLayout_3.leftMargin = "0px";
				formLayout_3.setColumns(["70px", "1fr", "100px"]);
				formLayout_3.setRows(["20px"]);
				group_3.setLayout(formLayout_3);
				(function(container){
					var button_1 = new cpr.controls.Button("btnClose");
					button_1.value = "화면닫기";
					button_1.style.setClasses(["btn-pop-close"]);
					if(typeof onBtnCloseClick == "function") {
						button_1.addEventListener("click", onBtnCloseClick);
					}
					container.addChild(button_1, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var button_2 = new cpr.controls.Button("btnSelect");
					button_2.value = "자료 내려받기";
					button_2.style.setClasses(["btn-pop-close"]);
					if(typeof onBtnSelectClick == "function") {
						button_2.addEventListener("click", onBtnSelectClick);
					}
					container.addChild(button_2, {
						"colIndex": 2,
						"rowIndex": 0
					});
					var fileInput_1 = new cpr.controls.FileInput("fileinput1");
					fileInput_1.visible = false;
					fileInput_1.placeholder = "엑셀업로드용";
					fileInput_1.limitFileSizeUnit = "mb";
					fileInput_1.limitFileSize = 20;
					fileInput_1.acceptFile = ".xls,.xlsx";
					if(typeof onFileinput1ValueChange == "function") {
						fileInput_1.addEventListener("value-change", onFileinput1ValueChange);
					}
					container.addChild(fileInput_1, {
						"colIndex": 1,
						"rowIndex": 0
					});
				})(group_3);
				container.addChild(group_3, {
					"colIndex": 0,
					"rowIndex": 1
				});
				var group_4 = new cpr.controls.Container("grpData");
				// Layout
				var formLayout_4 = new cpr.controls.layouts.FormLayout();
				formLayout_4.setColumns(["1fr"]);
				formLayout_4.setRows(["20px", "1fr"]);
				group_4.setLayout(formLayout_4);
				(function(container){
					var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdExl");
					grid_1.fieldLabel = "업로드목록";
					grid_1.userAttr({"columnSortFix": "Y"});
					grid_1.init({
						"dataSet": app.lookup("dsExcel"),
						"autoFit": "none",
						"showDeletedRow": false,
						"columns": [
							{"width": "25px"},
							{"width": "150px"},
							{"width": "150px"},
							{"width": "150px"},
							{"width": "150px"},
							{"width": "150px"},
							{"width": "150px"},
							{"width": "150px"},
							{"width": "150px"},
							{"width": "150px"},
							{"width": "150px"},
							{"width": "150px"},
							{"width": "150px"},
							{"width": "150px"},
							{"width": "150px"},
							{"width": "150px"},
							{"width": "150px"},
							{"width": "150px"},
							{"width": "150px"},
							{"width": "150px"},
							{"width": "150px"},
							{"width": "150px"},
							{"width": "150px"},
							{"width": "150px"},
							{"width": "150px"},
							{"width": "150px"},
							{"width": "150px"},
							{"width": "150px"},
							{"width": "150px"},
							{"width": "150px"},
							{"width": "150px"}
						],
						"header": {
							"rows": [{"height": "24px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.sortable = false;
										cell.text = "";
										cell.control = (function(){
											var comboBox_1 = new cpr.controls.ComboBox("cmb1");
											comboBox_1.bind("value").toDataMap(app.lookup("dmColumn"), "H_0");
											(function(comboBox_1){
												comboBox_1.addItem(new cpr.controls.Item("", ""));
												comboBox_1.setItemSet(app.lookup("dsHeaderColumns"), {
													"label": "CD_NM",
													"value": "CD"
												});
											})(comboBox_1);
											return comboBox_1;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.text = "";
										cell.control = (function(){
											var comboBox_2 = new cpr.controls.ComboBox("cmb2");
											comboBox_2.bind("value").toDataMap(app.lookup("dmColumn"), "H_1");
											(function(comboBox_2){
												comboBox_2.addItem(new cpr.controls.Item("", ""));
												comboBox_2.setItemSet(app.lookup("dsHeaderColumns"), {
													"label": "CD_NM",
													"value": "CD"
												});
											})(comboBox_2);
											return comboBox_2;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3},
									"configurator": function(cell){
										cell.text = "";
										cell.control = (function(){
											var comboBox_3 = new cpr.controls.ComboBox("cmb3");
											comboBox_3.bind("value").toDataMap(app.lookup("dmColumn"), "H_2");
											(function(comboBox_3){
												comboBox_3.addItem(new cpr.controls.Item("", ""));
												comboBox_3.setItemSet(app.lookup("dsHeaderColumns"), {
													"label": "CD_NM",
													"value": "CD"
												});
											})(comboBox_3);
											return comboBox_3;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 4},
									"configurator": function(cell){
										cell.text = "";
										cell.control = (function(){
											var comboBox_4 = new cpr.controls.ComboBox("cmb4");
											comboBox_4.bind("value").toDataMap(app.lookup("dmColumn"), "H_3");
											(function(comboBox_4){
												comboBox_4.addItem(new cpr.controls.Item("", ""));
												comboBox_4.setItemSet(app.lookup("dsHeaderColumns"), {
													"label": "CD_NM",
													"value": "CD"
												});
											})(comboBox_4);
											return comboBox_4;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 5},
									"configurator": function(cell){
										cell.text = "";
										cell.control = (function(){
											var comboBox_5 = new cpr.controls.ComboBox("cmb5");
											comboBox_5.bind("value").toDataMap(app.lookup("dmColumn"), "H_4");
											(function(comboBox_5){
												comboBox_5.addItem(new cpr.controls.Item("", ""));
												comboBox_5.setItemSet(app.lookup("dsHeaderColumns"), {
													"label": "CD_NM",
													"value": "CD"
												});
											})(comboBox_5);
											return comboBox_5;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 6},
									"configurator": function(cell){
										cell.text = "";
										cell.control = (function(){
											var comboBox_6 = new cpr.controls.ComboBox("cmb6");
											comboBox_6.bind("value").toDataMap(app.lookup("dmColumn"), "H_5");
											(function(comboBox_6){
												comboBox_6.addItem(new cpr.controls.Item("", ""));
												comboBox_6.setItemSet(app.lookup("dsHeaderColumns"), {
													"label": "CD_NM",
													"value": "CD"
												});
											})(comboBox_6);
											return comboBox_6;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 7},
									"configurator": function(cell){
										cell.text = "";
										cell.control = (function(){
											var comboBox_7 = new cpr.controls.ComboBox("cmb7");
											comboBox_7.bind("value").toDataMap(app.lookup("dmColumn"), "H_6");
											(function(comboBox_7){
												comboBox_7.addItem(new cpr.controls.Item("", ""));
												comboBox_7.setItemSet(app.lookup("dsHeaderColumns"), {
													"label": "CD_NM",
													"value": "CD"
												});
											})(comboBox_7);
											return comboBox_7;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 8},
									"configurator": function(cell){
										cell.text = "";
										cell.control = (function(){
											var comboBox_8 = new cpr.controls.ComboBox("cmb8");
											comboBox_8.bind("value").toDataMap(app.lookup("dmColumn"), "H_7");
											(function(comboBox_8){
												comboBox_8.addItem(new cpr.controls.Item("", ""));
												comboBox_8.setItemSet(app.lookup("dsHeaderColumns"), {
													"label": "CD_NM",
													"value": "CD"
												});
											})(comboBox_8);
											return comboBox_8;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 9},
									"configurator": function(cell){
										cell.text = "";
										cell.control = (function(){
											var comboBox_9 = new cpr.controls.ComboBox("cmb9");
											comboBox_9.bind("value").toDataMap(app.lookup("dmColumn"), "H_8");
											(function(comboBox_9){
												comboBox_9.addItem(new cpr.controls.Item("", ""));
												comboBox_9.setItemSet(app.lookup("dsHeaderColumns"), {
													"label": "CD_NM",
													"value": "CD"
												});
											})(comboBox_9);
											return comboBox_9;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 10},
									"configurator": function(cell){
										cell.text = "";
										cell.control = (function(){
											var comboBox_10 = new cpr.controls.ComboBox("cmb10");
											comboBox_10.bind("value").toDataMap(app.lookup("dmColumn"), "H_9");
											(function(comboBox_10){
												comboBox_10.addItem(new cpr.controls.Item("", ""));
												comboBox_10.setItemSet(app.lookup("dsHeaderColumns"), {
													"label": "CD_NM",
													"value": "CD"
												});
											})(comboBox_10);
											return comboBox_10;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 11},
									"configurator": function(cell){
										cell.text = "";
										cell.control = (function(){
											var comboBox_11 = new cpr.controls.ComboBox("cmb11");
											comboBox_11.bind("value").toDataMap(app.lookup("dmColumn"), "H_10");
											(function(comboBox_11){
												comboBox_11.addItem(new cpr.controls.Item("", ""));
												comboBox_11.setItemSet(app.lookup("dsHeaderColumns"), {
													"label": "CD_NM",
													"value": "CD"
												});
											})(comboBox_11);
											return comboBox_11;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 12},
									"configurator": function(cell){
										cell.text = "";
										cell.control = (function(){
											var comboBox_12 = new cpr.controls.ComboBox("cmb12");
											comboBox_12.bind("value").toDataMap(app.lookup("dmColumn"), "H_11");
											(function(comboBox_12){
												comboBox_12.addItem(new cpr.controls.Item("", ""));
												comboBox_12.setItemSet(app.lookup("dsHeaderColumns"), {
													"label": "CD_NM",
													"value": "CD"
												});
											})(comboBox_12);
											return comboBox_12;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 13},
									"configurator": function(cell){
										cell.text = "";
										cell.control = (function(){
											var comboBox_13 = new cpr.controls.ComboBox("cmb13");
											comboBox_13.bind("value").toDataMap(app.lookup("dmColumn"), "H_12");
											(function(comboBox_13){
												comboBox_13.addItem(new cpr.controls.Item("", ""));
												comboBox_13.setItemSet(app.lookup("dsHeaderColumns"), {
													"label": "CD_NM",
													"value": "CD"
												});
											})(comboBox_13);
											return comboBox_13;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 14},
									"configurator": function(cell){
										cell.text = "";
										cell.control = (function(){
											var comboBox_14 = new cpr.controls.ComboBox("cmb14");
											comboBox_14.bind("value").toDataMap(app.lookup("dmColumn"), "H_13");
											(function(comboBox_14){
												comboBox_14.addItem(new cpr.controls.Item("", ""));
												comboBox_14.setItemSet(app.lookup("dsHeaderColumns"), {
													"label": "CD_NM",
													"value": "CD"
												});
											})(comboBox_14);
											return comboBox_14;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 15},
									"configurator": function(cell){
										cell.text = "";
										cell.control = (function(){
											var comboBox_15 = new cpr.controls.ComboBox("cmb15");
											comboBox_15.bind("value").toDataMap(app.lookup("dmColumn"), "H_14");
											(function(comboBox_15){
												comboBox_15.addItem(new cpr.controls.Item("", ""));
												comboBox_15.setItemSet(app.lookup("dsHeaderColumns"), {
													"label": "CD_NM",
													"value": "CD"
												});
											})(comboBox_15);
											return comboBox_15;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 16},
									"configurator": function(cell){
										cell.text = "";
										cell.control = (function(){
											var comboBox_16 = new cpr.controls.ComboBox("cmb16");
											comboBox_16.bind("value").toDataMap(app.lookup("dmColumn"), "H_15");
											(function(comboBox_16){
												comboBox_16.addItem(new cpr.controls.Item("", ""));
												comboBox_16.setItemSet(app.lookup("dsHeaderColumns"), {
													"label": "CD_NM",
													"value": "CD"
												});
											})(comboBox_16);
											return comboBox_16;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 17},
									"configurator": function(cell){
										cell.text = "";
										cell.control = (function(){
											var comboBox_17 = new cpr.controls.ComboBox("cmb17");
											comboBox_17.bind("value").toDataMap(app.lookup("dmColumn"), "H_16");
											(function(comboBox_17){
												comboBox_17.addItem(new cpr.controls.Item("", ""));
												comboBox_17.setItemSet(app.lookup("dsHeaderColumns"), {
													"label": "CD_NM",
													"value": "CD"
												});
											})(comboBox_17);
											return comboBox_17;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 18},
									"configurator": function(cell){
										cell.text = "";
										cell.control = (function(){
											var comboBox_18 = new cpr.controls.ComboBox("cmb18");
											comboBox_18.bind("value").toDataMap(app.lookup("dmColumn"), "H_17");
											(function(comboBox_18){
												comboBox_18.addItem(new cpr.controls.Item("", ""));
												comboBox_18.setItemSet(app.lookup("dsHeaderColumns"), {
													"label": "CD_NM",
													"value": "CD"
												});
											})(comboBox_18);
											return comboBox_18;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 19},
									"configurator": function(cell){
										cell.text = "";
										cell.control = (function(){
											var comboBox_19 = new cpr.controls.ComboBox("cmb19");
											comboBox_19.bind("value").toDataMap(app.lookup("dmColumn"), "H_18");
											(function(comboBox_19){
												comboBox_19.addItem(new cpr.controls.Item("", ""));
												comboBox_19.setItemSet(app.lookup("dsHeaderColumns"), {
													"label": "CD_NM",
													"value": "CD"
												});
											})(comboBox_19);
											return comboBox_19;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 20},
									"configurator": function(cell){
										cell.text = "";
										cell.control = (function(){
											var comboBox_20 = new cpr.controls.ComboBox("cmb20");
											comboBox_20.bind("value").toDataMap(app.lookup("dmColumn"), "H_19");
											(function(comboBox_20){
												comboBox_20.addItem(new cpr.controls.Item("", ""));
												comboBox_20.setItemSet(app.lookup("dsHeaderColumns"), {
													"label": "CD_NM",
													"value": "CD"
												});
											})(comboBox_20);
											return comboBox_20;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 21},
									"configurator": function(cell){
										cell.text = "";
										cell.control = (function(){
											var comboBox_21 = new cpr.controls.ComboBox("cmb21");
											comboBox_21.bind("value").toDataMap(app.lookup("dmColumn"), "H_20");
											(function(comboBox_21){
												comboBox_21.addItem(new cpr.controls.Item("", ""));
												comboBox_21.setItemSet(app.lookup("dsHeaderColumns"), {
													"label": "CD_NM",
													"value": "CD"
												});
											})(comboBox_21);
											return comboBox_21;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 22},
									"configurator": function(cell){
										cell.text = "";
										cell.control = (function(){
											var comboBox_22 = new cpr.controls.ComboBox("cmb22");
											comboBox_22.bind("value").toDataMap(app.lookup("dmColumn"), "H_21");
											(function(comboBox_22){
												comboBox_22.addItem(new cpr.controls.Item("", ""));
												comboBox_22.setItemSet(app.lookup("dsHeaderColumns"), {
													"label": "CD_NM",
													"value": "CD"
												});
											})(comboBox_22);
											return comboBox_22;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 23},
									"configurator": function(cell){
										cell.text = "";
										cell.control = (function(){
											var comboBox_23 = new cpr.controls.ComboBox("cmb23");
											comboBox_23.bind("value").toDataMap(app.lookup("dmColumn"), "H_22");
											(function(comboBox_23){
												comboBox_23.addItem(new cpr.controls.Item("", ""));
												comboBox_23.setItemSet(app.lookup("dsHeaderColumns"), {
													"label": "CD_NM",
													"value": "CD"
												});
											})(comboBox_23);
											return comboBox_23;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 24},
									"configurator": function(cell){
										cell.text = "";
										cell.control = (function(){
											var comboBox_24 = new cpr.controls.ComboBox("cmb24");
											comboBox_24.bind("value").toDataMap(app.lookup("dmColumn"), "H_23");
											(function(comboBox_24){
												comboBox_24.addItem(new cpr.controls.Item("", ""));
												comboBox_24.setItemSet(app.lookup("dsHeaderColumns"), {
													"label": "CD_NM",
													"value": "CD"
												});
											})(comboBox_24);
											return comboBox_24;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 25},
									"configurator": function(cell){
										cell.text = "";
										cell.control = (function(){
											var comboBox_25 = new cpr.controls.ComboBox("cmb25");
											comboBox_25.bind("value").toDataMap(app.lookup("dmColumn"), "H_24");
											(function(comboBox_25){
												comboBox_25.addItem(new cpr.controls.Item("", ""));
												comboBox_25.setItemSet(app.lookup("dsHeaderColumns"), {
													"label": "CD_NM",
													"value": "CD"
												});
											})(comboBox_25);
											return comboBox_25;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 26},
									"configurator": function(cell){
										cell.text = "";
										cell.control = (function(){
											var comboBox_26 = new cpr.controls.ComboBox("cmb26");
											comboBox_26.bind("value").toDataMap(app.lookup("dmColumn"), "H_25");
											(function(comboBox_26){
												comboBox_26.addItem(new cpr.controls.Item("", ""));
												comboBox_26.setItemSet(app.lookup("dsHeaderColumns"), {
													"label": "CD_NM",
													"value": "CD"
												});
											})(comboBox_26);
											return comboBox_26;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 27},
									"configurator": function(cell){
										cell.text = "";
										cell.control = (function(){
											var comboBox_27 = new cpr.controls.ComboBox("cmb27");
											comboBox_27.bind("value").toDataMap(app.lookup("dmColumn"), "H_26");
											(function(comboBox_27){
												comboBox_27.addItem(new cpr.controls.Item("", ""));
												comboBox_27.setItemSet(app.lookup("dsHeaderColumns"), {
													"label": "CD_NM",
													"value": "CD"
												});
											})(comboBox_27);
											return comboBox_27;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 28},
									"configurator": function(cell){
										cell.text = "";
										cell.control = (function(){
											var comboBox_28 = new cpr.controls.ComboBox("cmb28");
											comboBox_28.bind("value").toDataMap(app.lookup("dmColumn"), "H_27");
											(function(comboBox_28){
												comboBox_28.addItem(new cpr.controls.Item("", ""));
												comboBox_28.setItemSet(app.lookup("dsHeaderColumns"), {
													"label": "CD_NM",
													"value": "CD"
												});
											})(comboBox_28);
											return comboBox_28;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 29},
									"configurator": function(cell){
										cell.text = "";
										cell.control = (function(){
											var comboBox_29 = new cpr.controls.ComboBox("cmb29");
											comboBox_29.bind("value").toDataMap(app.lookup("dmColumn"), "H_28");
											(function(comboBox_29){
												comboBox_29.addItem(new cpr.controls.Item("", ""));
												comboBox_29.setItemSet(app.lookup("dsHeaderColumns"), {
													"label": "CD_NM",
													"value": "CD"
												});
											})(comboBox_29);
											return comboBox_29;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 30},
									"configurator": function(cell){
										cell.text = "";
										cell.control = (function(){
											var comboBox_30 = new cpr.controls.ComboBox("cmb30");
											comboBox_30.bind("value").toDataMap(app.lookup("dmColumn"), "H_29");
											(function(comboBox_30){
												comboBox_30.addItem(new cpr.controls.Item("", ""));
												comboBox_30.setItemSet(app.lookup("dsHeaderColumns"), {
													"label": "CD_NM",
													"value": "CD"
												});
											})(comboBox_30);
											return comboBox_30;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.columnType = "checkbox";
									}
								}
							]
						},
						"detail": {
							"rows": [{"height": "24px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.columnName = "CELL0";
										cell.control = (function(){
											var inputBox_1 = new cpr.controls.InputBox("ipb1");
											inputBox_1.bind("value").toDataColumn("CELL0");
											return inputBox_1;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.columnName = "CELL1";
										cell.control = (function(){
											var inputBox_2 = new cpr.controls.InputBox("ipb2");
											inputBox_2.bind("value").toDataColumn("CELL1");
											return inputBox_2;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3},
									"configurator": function(cell){
										cell.columnName = "CELL2";
										cell.control = (function(){
											var inputBox_3 = new cpr.controls.InputBox("ipb3");
											inputBox_3.bind("value").toDataColumn("CELL2");
											return inputBox_3;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 4},
									"configurator": function(cell){
										cell.columnName = "CELL3";
										cell.control = (function(){
											var inputBox_4 = new cpr.controls.InputBox("ipb4");
											inputBox_4.bind("value").toDataColumn("CELL3");
											return inputBox_4;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 5},
									"configurator": function(cell){
										cell.columnName = "CELL4";
										cell.control = (function(){
											var inputBox_5 = new cpr.controls.InputBox("ipb5");
											inputBox_5.bind("value").toDataColumn("CELL4");
											return inputBox_5;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 6},
									"configurator": function(cell){
										cell.columnName = "CELL5";
										cell.control = (function(){
											var inputBox_6 = new cpr.controls.InputBox("ipb6");
											inputBox_6.bind("value").toDataColumn("CELL5");
											return inputBox_6;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 7},
									"configurator": function(cell){
										cell.columnName = "CELL6";
										cell.control = (function(){
											var inputBox_7 = new cpr.controls.InputBox("ipb7");
											inputBox_7.bind("value").toDataColumn("CELL6");
											return inputBox_7;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 8},
									"configurator": function(cell){
										cell.columnName = "CELL7";
										cell.control = (function(){
											var inputBox_8 = new cpr.controls.InputBox("ipb8");
											inputBox_8.bind("value").toDataColumn("CELL7");
											return inputBox_8;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 9},
									"configurator": function(cell){
										cell.columnName = "CELL8";
										cell.control = (function(){
											var inputBox_9 = new cpr.controls.InputBox("ipb9");
											inputBox_9.bind("value").toDataColumn("CELL8");
											return inputBox_9;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 10},
									"configurator": function(cell){
										cell.columnName = "CELL9";
										cell.control = (function(){
											var inputBox_10 = new cpr.controls.InputBox("ipb10");
											inputBox_10.bind("value").toDataColumn("CELL9");
											return inputBox_10;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 11},
									"configurator": function(cell){
										cell.columnName = "CELL10";
										cell.control = (function(){
											var inputBox_11 = new cpr.controls.InputBox("ipb11");
											inputBox_11.bind("value").toDataColumn("CELL10");
											return inputBox_11;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 12},
									"configurator": function(cell){
										cell.columnName = "CELL11";
										cell.control = (function(){
											var inputBox_12 = new cpr.controls.InputBox("ipb12");
											inputBox_12.bind("value").toDataColumn("CELL11");
											return inputBox_12;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 13},
									"configurator": function(cell){
										cell.columnName = "CELL12";
										cell.control = (function(){
											var inputBox_13 = new cpr.controls.InputBox("ipb13");
											inputBox_13.bind("value").toDataColumn("CELL12");
											return inputBox_13;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 14},
									"configurator": function(cell){
										cell.columnName = "CELL13";
										cell.control = (function(){
											var inputBox_14 = new cpr.controls.InputBox("ipb14");
											inputBox_14.bind("value").toDataColumn("CELL13");
											return inputBox_14;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 15},
									"configurator": function(cell){
										cell.columnName = "CELL14";
										cell.control = (function(){
											var inputBox_15 = new cpr.controls.InputBox("ipb15");
											inputBox_15.bind("value").toDataColumn("CELL14");
											return inputBox_15;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 16},
									"configurator": function(cell){
										cell.columnName = "CELL15";
										cell.control = (function(){
											var inputBox_16 = new cpr.controls.InputBox("ipb16");
											inputBox_16.bind("value").toDataColumn("CELL15");
											return inputBox_16;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 17},
									"configurator": function(cell){
										cell.columnName = "CELL16";
										cell.control = (function(){
											var inputBox_17 = new cpr.controls.InputBox("ipb17");
											inputBox_17.bind("value").toDataColumn("CELL16");
											return inputBox_17;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 18},
									"configurator": function(cell){
										cell.columnName = "CELL17";
										cell.control = (function(){
											var inputBox_18 = new cpr.controls.InputBox("ipb18");
											inputBox_18.bind("value").toDataColumn("CELL17");
											return inputBox_18;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 19},
									"configurator": function(cell){
										cell.columnName = "CELL18";
										cell.control = (function(){
											var inputBox_19 = new cpr.controls.InputBox("ipb19");
											inputBox_19.bind("value").toDataColumn("CELL18");
											return inputBox_19;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 20},
									"configurator": function(cell){
										cell.columnName = "CELL19";
										cell.control = (function(){
											var inputBox_20 = new cpr.controls.InputBox("ipb20");
											inputBox_20.bind("value").toDataColumn("CELL19");
											return inputBox_20;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 21},
									"configurator": function(cell){
										cell.columnName = "CELL20";
										cell.control = (function(){
											var inputBox_21 = new cpr.controls.InputBox("ipb21");
											inputBox_21.bind("value").toDataColumn("CELL20");
											return inputBox_21;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 22},
									"configurator": function(cell){
										cell.columnName = "CELL21";
										cell.control = (function(){
											var inputBox_22 = new cpr.controls.InputBox("ipb22");
											inputBox_22.bind("value").toDataColumn("CELL21");
											return inputBox_22;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 23},
									"configurator": function(cell){
										cell.columnName = "CELL22";
										cell.control = (function(){
											var inputBox_23 = new cpr.controls.InputBox("ipb23");
											inputBox_23.bind("value").toDataColumn("CELL22");
											return inputBox_23;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 24},
									"configurator": function(cell){
										cell.columnName = "CELL23";
										cell.control = (function(){
											var inputBox_24 = new cpr.controls.InputBox("ipb24");
											inputBox_24.bind("value").toDataColumn("CELL23");
											return inputBox_24;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 25},
									"configurator": function(cell){
										cell.columnName = "CELL24";
										cell.control = (function(){
											var inputBox_25 = new cpr.controls.InputBox("ipb25");
											inputBox_25.bind("value").toDataColumn("CELL24");
											return inputBox_25;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 26},
									"configurator": function(cell){
										cell.columnName = "CELL25";
										cell.control = (function(){
											var inputBox_26 = new cpr.controls.InputBox("ipb26");
											inputBox_26.bind("value").toDataColumn("CELL25");
											return inputBox_26;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 27},
									"configurator": function(cell){
										cell.columnName = "CELL26";
										cell.control = (function(){
											var inputBox_27 = new cpr.controls.InputBox("ipb27");
											inputBox_27.bind("value").toDataColumn("CELL26");
											return inputBox_27;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 28},
									"configurator": function(cell){
										cell.columnName = "CELL27";
										cell.control = (function(){
											var inputBox_28 = new cpr.controls.InputBox("ipb28");
											inputBox_28.bind("value").toDataColumn("CELL27");
											return inputBox_28;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 29},
									"configurator": function(cell){
										cell.columnName = "CELL28";
										cell.control = (function(){
											var inputBox_29 = new cpr.controls.InputBox("ipb29");
											inputBox_29.bind("value").toDataColumn("CELL28");
											return inputBox_29;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 30},
									"configurator": function(cell){
										cell.columnName = "CELL29";
										cell.control = (function(){
											var inputBox_30 = new cpr.controls.InputBox("ipb30");
											inputBox_30.bind("value").toDataColumn("CELL29");
											return inputBox_30;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.columnType = "checkbox";
									}
								}
							]
						}
					});
					container.addChild(grid_1, {
						"colIndex": 0,
						"rowIndex": 1
					});
					var group_5 = new cpr.controls.Container("grp4");
					group_5.userAttr({"not_responsive_target": "true"});
					// Layout
					var formLayout_5 = new cpr.controls.layouts.FormLayout();
					formLayout_5.setColumns(["1fr", "80px", "150px"]);
					formLayout_5.setRows(["20px"]);
					group_5.setLayout(formLayout_5);
					(function(container){
						var group_6 = new cpr.controls.Container("grp5");
						// Layout
						var formLayout_6 = new cpr.controls.layouts.FormLayout();
						formLayout_6.topMargin = "0px";
						formLayout_6.rightMargin = "0px";
						formLayout_6.bottomMargin = "0px";
						formLayout_6.leftMargin = "0px";
						formLayout_6.setColumns(["80px", "60px"]);
						formLayout_6.setRows(["1fr"]);
						group_6.setLayout(formLayout_6);
						(function(container){
							var button_3 = new cpr.controls.Button("btnOpen");
							button_3.value = "파일열기";
							if(typeof onBtnOpenClick == "function") {
								button_3.addEventListener("click", onBtnOpenClick);
							}
							container.addChild(button_3, {
								"colIndex": 0,
								"rowIndex": 0
							});
							var button_4 = new cpr.controls.Button("btnDelete");
							button_4.value = "삭제";
							button_4.style.setClasses(["btn-delete"]);
							if(typeof onBtnDeleteClick == "function") {
								button_4.addEventListener("click", onBtnDeleteClick);
							}
							container.addChild(button_4, {
								"colIndex": 1,
								"rowIndex": 0
							});
						})(group_6);
						container.addChild(group_6, {
							"colIndex": 2,
							"rowIndex": 0
						});
						var group_7 = new cpr.controls.Container("grp6");
						// Layout
						var formLayout_7 = new cpr.controls.layouts.FormLayout();
						formLayout_7.topMargin = "0px";
						formLayout_7.rightMargin = "0px";
						formLayout_7.bottomMargin = "0px";
						formLayout_7.leftMargin = "0px";
						formLayout_7.setColumns(["5px", "1fr", "5px"]);
						formLayout_7.setRows(["1fr"]);
						group_7.setLayout(formLayout_7);
						(function(container){
							var output_1 = new cpr.controls.Output("opt3");
							output_1.value = "[";
							output_1.style.css({
								"font-size" : "9pt"
							});
							container.addChild(output_1, {
								"colIndex": 0,
								"rowIndex": 0
							});
							var output_2 = new cpr.controls.Output("opt4");
							output_2.value = "]";
							output_2.style.css({
								"font-size" : "9pt",
								"text-align" : "right"
							});
							container.addChild(output_2, {
								"colIndex": 2,
								"rowIndex": 0
							});
							var output_3 = new cpr.controls.Output("optRowCount");
							output_3.style.css({
								"font-size" : "9pt",
								"text-align" : "center"
							});
							output_3.bind("value").toExpression("#dsExcel.getRowCount()");
							container.addChild(output_3, {
								"colIndex": 1,
								"rowIndex": 0
							});
						})(group_7);
						container.addChild(group_7, {
							"colIndex": 1,
							"rowIndex": 0
						});
						var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle("comtitle1");
						userDefinedControl_2.showExportExcel = false;
						container.addChild(userDefinedControl_2, {
							"colIndex": 0,
							"rowIndex": 0
						});
					})(group_5);
					container.addChild(group_5, {
						"colIndex": 0,
						"rowIndex": 0
					});
				})(group_4);
				container.addChild(group_4, {
					"colIndex": 0,
					"rowIndex": 0
				});
			})(group_2);
			container.addChild(group_2, {
				"colIndex": 0,
				"rowIndex": 1
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
		}
	});
	app.title = "엑셀 업로드팝업";
	cpr.core.Platform.INSTANCE.register(app);
})();
